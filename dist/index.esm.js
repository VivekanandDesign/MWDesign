import require$$1, { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import React, { forwardRef, createElement, useState, useRef, useEffect, createContext, useContext, useCallback, useMemo, isValidElement, cloneElement } from 'react';
import { createPortal } from 'react-dom';

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol, Iterator */


function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function cn$n() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var iconSizes = {
  xs: 'w-3 h-3',
  sm: 'w-4 h-4',
  md: 'w-5 h-5',
  lg: 'w-6 h-6',
  xl: 'w-8 h-8'
};
var iconVariants = {
  "default": 'text-mw-gray-600 dark:text-mw-gray-400',
  primary: 'text-mw-blue-600 dark:text-mw-blue-400',
  secondary: 'text-mw-gray-500 dark:text-mw-gray-500',
  success: 'text-green-600 dark:text-green-400',
  warning: 'text-yellow-600 dark:text-yellow-400',
  error: 'text-red-600 dark:text-red-400'
};
function Icon$1(_a) {
  var IconComponent = _a.icon,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    className = _a.className,
    onClick = _a.onClick,
    props = __rest(_a, ["icon", "size", "variant", "className", "onClick"]);
  return jsx(IconComponent, Object.assign({
    className: cn$n(iconSizes[size], iconVariants[variant], onClick && 'cursor-pointer hover:opacity-75 transition-opacity', className),
    onClick: onClick
  }, props));
}
// Commonly used icons with pre-configured variants
function ChevronDownIcon(props) {
  var _require = require('lucide-react'),
    ChevronDown = _require.ChevronDown;
  return jsx(Icon$1, Object.assign({
    icon: ChevronDown
  }, props));
}
function ChevronUpIcon(props) {
  var _require2 = require('lucide-react'),
    ChevronUp = _require2.ChevronUp;
  return jsx(Icon$1, Object.assign({
    icon: ChevronUp
  }, props));
}
function ChevronLeftIcon(props) {
  var _require3 = require('lucide-react'),
    ChevronLeft = _require3.ChevronLeft;
  return jsx(Icon$1, Object.assign({
    icon: ChevronLeft
  }, props));
}
function ChevronRightIcon(props) {
  var _require4 = require('lucide-react'),
    ChevronRight = _require4.ChevronRight;
  return jsx(Icon$1, Object.assign({
    icon: ChevronRight
  }, props));
}
function SearchIcon(props) {
  var _require5 = require('lucide-react'),
    Search = _require5.Search;
  return jsx(Icon$1, Object.assign({
    icon: Search
  }, props));
}
function CloseIcon(props) {
  var _require6 = require('lucide-react'),
    X = _require6.X;
  return jsx(Icon$1, Object.assign({
    icon: X
  }, props));
}
function CheckIcon(props) {
  var _require7 = require('lucide-react'),
    Check = _require7.Check;
  return jsx(Icon$1, Object.assign({
    icon: Check
  }, props));
}
function PlusIcon(props) {
  var _require8 = require('lucide-react'),
    Plus = _require8.Plus;
  return jsx(Icon$1, Object.assign({
    icon: Plus
  }, props));
}
function MinusIcon(props) {
  var _require9 = require('lucide-react'),
    Minus = _require9.Minus;
  return jsx(Icon$1, Object.assign({
    icon: Minus
  }, props));
}
function InfoIcon(props) {
  var _require0 = require('lucide-react'),
    Info = _require0.Info;
  return jsx(Icon$1, Object.assign({
    icon: Info
  }, props));
}
function AlertTriangleIcon(props) {
  var _require1 = require('lucide-react'),
    AlertTriangle = _require1.AlertTriangle;
  return jsx(Icon$1, Object.assign({
    icon: AlertTriangle
  }, props));
}
function AlertCircleIcon(props) {
  var _require10 = require('lucide-react'),
    AlertCircle = _require10.AlertCircle;
  return jsx(Icon$1, Object.assign({
    icon: AlertCircle
  }, props));
}

function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f);}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}

var buttonVariants = {
  primary: 'bg-mw-primary-600 text-white hover:bg-mw-primary-700 focus:ring-mw-primary-500 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5',
  secondary: 'bg-mw-secondary-600 text-white hover:bg-mw-secondary-700 focus:ring-mw-secondary-500 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5',
  flow: 'bg-mw-flow-600 text-white hover:bg-mw-flow-700 focus:ring-mw-flow-500 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5',
  ghost: 'text-mw-gray-600 dark:text-mw-gray-300 hover:bg-mw-primary-50 hover:text-mw-primary-700 dark:hover:bg-mw-gray-800 focus:ring-mw-primary-500 transition-all duration-300',
  outline: 'border-2 border-mw-primary-300 text-mw-primary-700 hover:bg-mw-primary-50 hover:border-mw-primary-500 dark:border-mw-primary-600 dark:text-mw-primary-400 dark:hover:bg-mw-primary-900 focus:ring-mw-primary-500 transition-all duration-300',
  destructive: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5'
};
var buttonSizes = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base'
};
var Button = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'primary' : _a$variant,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    children = _a.children,
    props = __rest(_a, ["className", "variant", "size", "children"]);
  return jsx("button", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center rounded-md font-medium transition-colors duration-200', 'focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed', buttonVariants[variant], buttonSizes[size], className)
  }, props, {
    children: children
  }));
});
Button.displayName = 'Button';

var Input = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    error = _a.error,
    helpText = _a.helpText,
    props = __rest(_a, ["className", "label", "error", "helpText"]);
  return jsxs("div", {
    className: "space-y-2",
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
      children: label
    }), jsx("input", Object.assign({
      ref: ref,
      className: clsx('block w-full px-3 py-2 border rounded-md shadow-sm', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', 'disabled:opacity-50 disabled:cursor-not-allowed', error ? 'border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500' : 'border-mw-gray-300 dark:border-mw-gray-600 text-mw-gray-900 dark:text-white placeholder-mw-gray-400', 'dark:bg-mw-gray-800', className)
    }, props)), error && jsx("p", {
      className: "text-sm text-red-600 dark:text-red-400",
      children: error
    }), helpText && !error && jsx("p", {
      className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
      children: helpText
    })]
  });
});
Input.displayName = 'Input';

var Textarea = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    error = _a.error,
    helpText = _a.helpText,
    _a$resize = _a.resize,
    resize = _a$resize === void 0 ? 'vertical' : _a$resize,
    props = __rest(_a, ["className", "label", "error", "helpText", "resize"]);
  var resizeClasses = {
    none: 'resize-none',
    vertical: 'resize-y',
    horizontal: 'resize-x',
    both: 'resize'
  };
  return jsxs("div", {
    className: "space-y-2",
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
      children: label
    }), jsx("textarea", Object.assign({
      ref: ref,
      className: clsx('block w-full px-3 py-2 border rounded-md shadow-sm min-h-[80px]', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', 'disabled:opacity-50 disabled:cursor-not-allowed', error ? 'border-red-300 text-red-900 placeholder-red-300 focus:ring-red-500' : 'border-mw-gray-300 dark:border-mw-gray-600 text-mw-gray-900 dark:text-white placeholder-mw-gray-400', 'dark:bg-mw-gray-800', resizeClasses[resize], className)
    }, props)), error && jsx("p", {
      className: "text-sm text-red-600 dark:text-red-400",
      children: error
    }), helpText && !error && jsx("p", {
      className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
      children: helpText
    })]
  });
});
Textarea.displayName = 'Textarea';

var Checkbox = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    description = _a.description,
    error = _a.error,
    props = __rest(_a, ["className", "label", "description", "error"]);
  return jsxs("div", {
    className: "space-y-2",
    children: [jsxs("div", {
      className: "flex items-start space-x-3",
      children: [jsx("input", Object.assign({
        type: "checkbox",
        ref: ref,
        className: clsx('mt-0.5 h-4 w-4 rounded border-mw-gray-300 dark:border-mw-gray-600', 'text-mw-blue-600 focus:ring-mw-blue-500 focus:ring-offset-2', 'disabled:opacity-50 disabled:cursor-not-allowed', error && 'border-red-300 text-red-600 focus:ring-red-500', className)
      }, props)), (label || description) && jsxs("div", {
        className: "flex-1 min-w-0",
        children: [label && jsx("label", {
          className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
          children: label
        }), description && jsx("p", {
          className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: description
        })]
      })]
    }), error && jsx("p", {
      className: "text-sm text-red-600 dark:text-red-400",
      children: error
    })]
  });
});
Checkbox.displayName = 'Checkbox';
var Radio$1 = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    description = _a.description,
    error = _a.error,
    props = __rest(_a, ["className", "label", "description", "error"]);
  return jsxs("div", {
    className: "space-y-2",
    children: [jsxs("div", {
      className: "flex items-start space-x-3",
      children: [jsx("input", Object.assign({
        type: "radio",
        ref: ref,
        className: clsx('mt-0.5 h-4 w-4 border-mw-gray-300 dark:border-mw-gray-600', 'text-mw-blue-600 focus:ring-mw-blue-500 focus:ring-offset-2', 'disabled:opacity-50 disabled:cursor-not-allowed', error && 'border-red-300 text-red-600 focus:ring-red-500', className)
      }, props)), (label || description) && jsxs("div", {
        className: "flex-1 min-w-0",
        children: [label && jsx("label", {
          className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
          children: label
        }), description && jsx("p", {
          className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: description
        })]
      })]
    }), error && jsx("p", {
      className: "text-sm text-red-600 dark:text-red-400",
      children: error
    })]
  });
});
Radio$1.displayName = 'Radio';

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */

const toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const mergeClasses = (...classes) => classes.filter((className, index, array) => {
  return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index;
}).join(" ").trim();

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */

var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: 2,
  strokeLinecap: "round",
  strokeLinejoin: "round"
};

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Icon = forwardRef(
  ({
    color = "currentColor",
    size = 24,
    strokeWidth = 2,
    absoluteStrokeWidth,
    className = "",
    children,
    iconNode,
    ...rest
  }, ref) => {
    return createElement(
      "svg",
      {
        ref,
        ...defaultAttributes,
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        className: mergeClasses("lucide", className),
        ...rest
      },
      [
        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),
        ...Array.isArray(children) ? children : [children]
      ]
    );
  }
);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const createLucideIcon = (iconName, iconNode) => {
  const Component = forwardRef(
    ({ className, ...props }, ref) => createElement(Icon, {
      ref,
      iconNode,
      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),
      ...props
    })
  );
  Component.displayName = `${iconName}`;
  return Component;
};

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AArrowDown = createLucideIcon("AArrowDown", [
  ["path", { d: "M3.5 13h6", key: "p1my2r" }],
  ["path", { d: "m2 16 4.5-9 4.5 9", key: "ndf0b3" }],
  ["path", { d: "M18 7v9", key: "pknjwm" }],
  ["path", { d: "m14 12 4 4 4-4", key: "buelq4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AArrowUp = createLucideIcon("AArrowUp", [
  ["path", { d: "M3.5 13h6", key: "p1my2r" }],
  ["path", { d: "m2 16 4.5-9 4.5 9", key: "ndf0b3" }],
  ["path", { d: "M18 16V7", key: "ty0viw" }],
  ["path", { d: "m14 11 4-4 4 4", key: "1pu57t" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ALargeSmall = createLucideIcon("ALargeSmall", [
  ["path", { d: "M21 14h-5", key: "1vh23k" }],
  ["path", { d: "M16 16v-3.5a2.5 2.5 0 0 1 5 0V16", key: "1wh10o" }],
  ["path", { d: "M4.5 13h6", key: "dfilno" }],
  ["path", { d: "m3 16 4.5-9 4.5 9", key: "2dxa0e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Accessibility = createLucideIcon("Accessibility", [
  ["circle", { cx: "16", cy: "4", r: "1", key: "1grugj" }],
  ["path", { d: "m18 19 1-7-6 1", key: "r0i19z" }],
  ["path", { d: "m5 8 3-3 5.5 3-2.36 3.5", key: "9ptxx2" }],
  ["path", { d: "M4.24 14.5a5 5 0 0 0 6.88 6", key: "10kmtu" }],
  ["path", { d: "M13.76 17.5a5 5 0 0 0-6.88-6", key: "2qq6rc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Activity = createLucideIcon("Activity", [
  [
    "path",
    {
      d: "M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",
      key: "169zse"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AirVent = createLucideIcon("AirVent", [
  [
    "path",
    {
      d: "M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2",
      key: "larmp2"
    }
  ],
  ["path", { d: "M6 8h12", key: "6g4wlu" }],
  ["path", { d: "M18.3 17.7a2.5 2.5 0 0 1-3.16 3.83 2.53 2.53 0 0 1-1.14-2V12", key: "1bo8pg" }],
  ["path", { d: "M6.6 15.6A2 2 0 1 0 10 17v-5", key: "t9h90c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Airplay = createLucideIcon("Airplay", [
  [
    "path",
    {
      d: "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1",
      key: "ns4c3b"
    }
  ],
  ["path", { d: "m12 15 5 6H7Z", key: "14qnn2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmClockCheck = createLucideIcon("AlarmClockCheck", [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "m9 13 2 2 4-4", key: "6343dt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmClockMinus = createLucideIcon("AlarmClockMinus", [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmClockOff = createLucideIcon("AlarmClockOff", [
  ["path", { d: "M6.87 6.87a8 8 0 1 0 11.26 11.26", key: "3on8tj" }],
  ["path", { d: "M19.9 14.25a8 8 0 0 0-9.15-9.15", key: "15ghsc" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.26 18.67 4 21", key: "yzmioq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M4 4 2 6", key: "1ycko6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmClockPlus = createLucideIcon("AlarmClockPlus", [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmClock = createLucideIcon("AlarmClock", [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M12 9v4l2 2", key: "1c63tq" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlarmSmoke = createLucideIcon("AlarmSmoke", [
  ["path", { d: "M11 21c0-2.5 2-2.5 2-5", key: "1sicvv" }],
  ["path", { d: "M16 21c0-2.5 2-2.5 2-5", key: "1o3eny" }],
  ["path", { d: "m19 8-.8 3a1.25 1.25 0 0 1-1.2 1H7a1.25 1.25 0 0 1-1.2-1L5 8", key: "1bvca4" }],
  [
    "path",
    { d: "M21 3a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a1 1 0 0 1 1-1z", key: "x3qr1j" }
  ],
  ["path", { d: "M6 21c0-2.5 2-2.5 2-5", key: "i3w1gp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Album = createLucideIcon("Album", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["polyline", { points: "11 3 11 11 14 8 17 11 17 3", key: "1wcwz3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignCenterHorizontal = createLucideIcon("AlignCenterHorizontal", [
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4", key: "11f1s0" }],
  ["path", { d: "M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4", key: "t14dx9" }],
  ["path", { d: "M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1", key: "1w07xs" }],
  ["path", { d: "M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1", key: "1apec2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignCenterVertical = createLucideIcon("AlignCenterVertical", [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4", key: "14d6g8" }],
  ["path", { d: "M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4", key: "1e2lrw" }],
  ["path", { d: "M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1", key: "1fkdwx" }],
  ["path", { d: "M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1", key: "1euafb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignCenter = createLucideIcon("AlignCenter", [
  ["path", { d: "M17 12H7", key: "16if0g" }],
  ["path", { d: "M19 18H5", key: "18s9l3" }],
  ["path", { d: "M21 6H3", key: "1jwq7v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignEndHorizontal = createLucideIcon("AlignEndHorizontal", [
  ["rect", { width: "6", height: "16", x: "4", y: "2", rx: "2", key: "z5wdxg" }],
  ["rect", { width: "6", height: "9", x: "14", y: "9", rx: "2", key: "um7a8w" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignEndVertical = createLucideIcon("AlignEndVertical", [
  ["rect", { width: "16", height: "6", x: "2", y: "4", rx: "2", key: "10wcwx" }],
  ["rect", { width: "9", height: "6", x: "9", y: "14", rx: "2", key: "4p5bwg" }],
  ["path", { d: "M22 22V2", key: "12ipfv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalDistributeCenter = createLucideIcon("AlignHorizontalDistributeCenter", [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M17 22v-5", key: "4b6g73" }],
  ["path", { d: "M17 7V2", key: "hnrr36" }],
  ["path", { d: "M7 22v-3", key: "1r4jpn" }],
  ["path", { d: "M7 5V2", key: "liy1u9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalDistributeEnd = createLucideIcon("AlignHorizontalDistributeEnd", [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M10 2v20", key: "uyc634" }],
  ["path", { d: "M20 2v20", key: "1tx262" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalDistributeStart = createLucideIcon("AlignHorizontalDistributeStart", [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M4 2v20", key: "gtpd5x" }],
  ["path", { d: "M14 2v20", key: "tg6bpw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalJustifyCenter = createLucideIcon("AlignHorizontalJustifyCenter", [
  ["rect", { width: "6", height: "14", x: "2", y: "5", rx: "2", key: "dy24zr" }],
  ["rect", { width: "6", height: "10", x: "16", y: "7", rx: "2", key: "13zkjt" }],
  ["path", { d: "M12 2v20", key: "t6zp3m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalJustifyEnd = createLucideIcon("AlignHorizontalJustifyEnd", [
  ["rect", { width: "6", height: "14", x: "2", y: "5", rx: "2", key: "dy24zr" }],
  ["rect", { width: "6", height: "10", x: "12", y: "7", rx: "2", key: "1ht384" }],
  ["path", { d: "M22 2v20", key: "40qfg1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalJustifyStart = createLucideIcon("AlignHorizontalJustifyStart", [
  ["rect", { width: "6", height: "14", x: "6", y: "5", rx: "2", key: "hsirpf" }],
  ["rect", { width: "6", height: "10", x: "16", y: "7", rx: "2", key: "13zkjt" }],
  ["path", { d: "M2 2v20", key: "1ivd8o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalSpaceAround = createLucideIcon("AlignHorizontalSpaceAround", [
  ["rect", { width: "6", height: "10", x: "9", y: "7", rx: "2", key: "yn7j0q" }],
  ["path", { d: "M4 22V2", key: "tsjzd3" }],
  ["path", { d: "M20 22V2", key: "1bnhr8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignHorizontalSpaceBetween = createLucideIcon("AlignHorizontalSpaceBetween", [
  ["rect", { width: "6", height: "14", x: "3", y: "5", rx: "2", key: "j77dae" }],
  ["rect", { width: "6", height: "10", x: "15", y: "7", rx: "2", key: "bq30hj" }],
  ["path", { d: "M3 2v20", key: "1d2pfg" }],
  ["path", { d: "M21 2v20", key: "p059bm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignJustify = createLucideIcon("AlignJustify", [
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "M3 18h18", key: "1h113x" }],
  ["path", { d: "M3 6h18", key: "d0wm0j" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignLeft = createLucideIcon("AlignLeft", [
  ["path", { d: "M15 12H3", key: "6jk70r" }],
  ["path", { d: "M17 18H3", key: "1amg6g" }],
  ["path", { d: "M21 6H3", key: "1jwq7v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignRight = createLucideIcon("AlignRight", [
  ["path", { d: "M21 12H9", key: "dn1m92" }],
  ["path", { d: "M21 18H7", key: "1ygte8" }],
  ["path", { d: "M21 6H3", key: "1jwq7v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignStartHorizontal = createLucideIcon("AlignStartHorizontal", [
  ["rect", { width: "6", height: "16", x: "4", y: "6", rx: "2", key: "1n4dg1" }],
  ["rect", { width: "6", height: "9", x: "14", y: "6", rx: "2", key: "17khns" }],
  ["path", { d: "M22 2H2", key: "fhrpnj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignStartVertical = createLucideIcon("AlignStartVertical", [
  ["rect", { width: "9", height: "6", x: "6", y: "14", rx: "2", key: "lpm2y7" }],
  ["rect", { width: "16", height: "6", x: "6", y: "4", rx: "2", key: "rdj6ps" }],
  ["path", { d: "M2 2v20", key: "1ivd8o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalDistributeCenter = createLucideIcon("AlignVerticalDistributeCenter", [
  ["path", { d: "M22 17h-3", key: "1lwga1" }],
  ["path", { d: "M22 7h-5", key: "o2endc" }],
  ["path", { d: "M5 17H2", key: "1gx9xc" }],
  ["path", { d: "M7 7H2", key: "6bq26l" }],
  ["rect", { x: "5", y: "14", width: "14", height: "6", rx: "2", key: "1qrzuf" }],
  ["rect", { x: "7", y: "4", width: "10", height: "6", rx: "2", key: "we8e9z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalDistributeEnd = createLucideIcon("AlignVerticalDistributeEnd", [
  ["rect", { width: "14", height: "6", x: "5", y: "14", rx: "2", key: "jmoj9s" }],
  ["rect", { width: "10", height: "6", x: "7", y: "4", rx: "2", key: "aza5on" }],
  ["path", { d: "M2 20h20", key: "owomy5" }],
  ["path", { d: "M2 10h20", key: "1ir3d8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalDistributeStart = createLucideIcon("AlignVerticalDistributeStart", [
  ["rect", { width: "14", height: "6", x: "5", y: "14", rx: "2", key: "jmoj9s" }],
  ["rect", { width: "10", height: "6", x: "7", y: "4", rx: "2", key: "aza5on" }],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M2 4h20", key: "mda7wb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalJustifyCenter = createLucideIcon("AlignVerticalJustifyCenter", [
  ["rect", { width: "14", height: "6", x: "5", y: "16", rx: "2", key: "1i8z2d" }],
  ["rect", { width: "10", height: "6", x: "7", y: "2", rx: "2", key: "ypihtt" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalJustifyEnd = createLucideIcon("AlignVerticalJustifyEnd", [
  ["rect", { width: "14", height: "6", x: "5", y: "12", rx: "2", key: "4l4tp2" }],
  ["rect", { width: "10", height: "6", x: "7", y: "2", rx: "2", key: "ypihtt" }],
  ["path", { d: "M2 22h20", key: "272qi7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalJustifyStart = createLucideIcon("AlignVerticalJustifyStart", [
  ["rect", { width: "14", height: "6", x: "5", y: "16", rx: "2", key: "1i8z2d" }],
  ["rect", { width: "10", height: "6", x: "7", y: "6", rx: "2", key: "13squh" }],
  ["path", { d: "M2 2h20", key: "1ennik" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalSpaceAround = createLucideIcon("AlignVerticalSpaceAround", [
  ["rect", { width: "10", height: "6", x: "7", y: "9", rx: "2", key: "b1zbii" }],
  ["path", { d: "M22 20H2", key: "1p1f7z" }],
  ["path", { d: "M22 4H2", key: "1b7qnq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AlignVerticalSpaceBetween = createLucideIcon("AlignVerticalSpaceBetween", [
  ["rect", { width: "14", height: "6", x: "5", y: "15", rx: "2", key: "1w91an" }],
  ["rect", { width: "10", height: "6", x: "7", y: "3", rx: "2", key: "17wqzy" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }],
  ["path", { d: "M2 3h20", key: "91anmk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ambulance = createLucideIcon("Ambulance", [
  ["path", { d: "M10 10H6", key: "1bsnug" }],
  ["path", { d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2", key: "wrbu53" }],
  [
    "path",
    {
      d: "M19 18h2a1 1 0 0 0 1-1v-3.28a1 1 0 0 0-.684-.948l-1.923-.641a1 1 0 0 1-.578-.502l-1.539-3.076A1 1 0 0 0 16.382 8H14",
      key: "lrkjwd"
    }
  ],
  ["path", { d: "M8 8v4", key: "1fwk8c" }],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["circle", { cx: "17", cy: "18", r: "2", key: "332jqn" }],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ampersand = createLucideIcon("Ampersand", [
  [
    "path",
    {
      d: "M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13",
      key: "1o9ehi"
    }
  ],
  ["path", { d: "M16 12h3", key: "4uvgyw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ampersands = createLucideIcon("Ampersands", [
  [
    "path",
    {
      d: "M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5",
      key: "12lh1k"
    }
  ],
  [
    "path",
    {
      d: "M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5",
      key: "173c68"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Amphora = createLucideIcon("Amphora", [
  [
    "path",
    { d: "M10 2v5.632c0 .424-.272.795-.653.982A6 6 0 0 0 6 14c.006 4 3 7 5 8", key: "1h8rid" }
  ],
  ["path", { d: "M10 5H8a2 2 0 0 0 0 4h.68", key: "3ezsi6" }],
  ["path", { d: "M14 2v5.632c0 .424.272.795.652.982A6 6 0 0 1 18 14c0 4-3 7-5 8", key: "yt6q09" }],
  ["path", { d: "M14 5h2a2 2 0 0 1 0 4h-.68", key: "8f95yk" }],
  ["path", { d: "M18 22H6", key: "mg6kv4" }],
  ["path", { d: "M9 2h6", key: "1jrp98" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Anchor = createLucideIcon("Anchor", [
  ["path", { d: "M12 22V8", key: "qkxhtm" }],
  ["path", { d: "M5 12H2a10 10 0 0 0 20 0h-3", key: "1hv3nh" }],
  ["circle", { cx: "12", cy: "5", r: "3", key: "rqqgnr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Angry = createLucideIcon("Angry", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 16s-1.5-2-4-2-4 2-4 2", key: "epbg0q" }],
  ["path", { d: "M7.5 8 10 9", key: "olxxln" }],
  ["path", { d: "m14 9 2.5-1", key: "1j6cij" }],
  ["path", { d: "M9 10h.01", key: "qbtxuw" }],
  ["path", { d: "M15 10h.01", key: "1qmjsl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Annoyed = createLucideIcon("Annoyed", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 15h8", key: "45n4r" }],
  ["path", { d: "M8 9h2", key: "1g203m" }],
  ["path", { d: "M14 9h2", key: "116p9w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Antenna = createLucideIcon("Antenna", [
  ["path", { d: "M2 12 7 2", key: "117k30" }],
  ["path", { d: "m7 12 5-10", key: "1tvx22" }],
  ["path", { d: "m12 12 5-10", key: "ev1o1a" }],
  ["path", { d: "m17 12 5-10", key: "1e4ti3" }],
  ["path", { d: "M4.5 7h15", key: "vlsxkz" }],
  ["path", { d: "M12 16v6", key: "c8a4gj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Anvil = createLucideIcon("Anvil", [
  ["path", { d: "M7 10H6a4 4 0 0 1-4-4 1 1 0 0 1 1-1h4", key: "1hjpb6" }],
  [
    "path",
    { d: "M7 5a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1 7 7 0 0 1-7 7H8a1 1 0 0 1-1-1z", key: "1qn45f" }
  ],
  ["path", { d: "M9 12v5", key: "3anwtq" }],
  ["path", { d: "M15 12v5", key: "5xh3zn" }],
  [
    "path",
    { d: "M5 20a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3 1 1 0 0 1-1 1H6a1 1 0 0 1-1-1", key: "1fi4x8" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Aperture = createLucideIcon("Aperture", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m14.31 8 5.74 9.94", key: "1y6ab4" }],
  ["path", { d: "M9.69 8h11.48", key: "1wxppr" }],
  ["path", { d: "m7.38 12 5.74-9.94", key: "1grp0k" }],
  ["path", { d: "M9.69 16 3.95 6.06", key: "libnyf" }],
  ["path", { d: "M14.31 16H2.83", key: "x5fava" }],
  ["path", { d: "m16.62 12-5.74 9.94", key: "1vwawt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AppWindowMac = createLucideIcon("AppWindowMac", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M10 8h.01", key: "1r9ogq" }],
  ["path", { d: "M14 8h.01", key: "1primd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AppWindow = createLucideIcon("AppWindow", [
  ["rect", { x: "2", y: "4", width: "20", height: "16", rx: "2", key: "izxlao" }],
  ["path", { d: "M10 4v4", key: "pp8u80" }],
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["path", { d: "M6 4v4", key: "1svtjw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Apple = createLucideIcon("Apple", [
  [
    "path",
    {
      d: "M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z",
      key: "3s7exb"
    }
  ],
  ["path", { d: "M10 2c1 .5 2 2 2 5", key: "fcco2y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArchiveRestore = createLucideIcon("ArchiveRestore", [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h2", key: "tvwodi" }],
  ["path", { d: "M20 8v11a2 2 0 0 1-2 2h-2", key: "1gkqxj" }],
  ["path", { d: "m9 15 3-3 3 3", key: "1pd0qc" }],
  ["path", { d: "M12 12v9", key: "192myk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArchiveX = createLucideIcon("ArchiveX", [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8", key: "1s80jp" }],
  ["path", { d: "m9.5 17 5-5", key: "nakeu6" }],
  ["path", { d: "m9.5 12 5 5", key: "1hccrj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Archive = createLucideIcon("Archive", [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8", key: "1s80jp" }],
  ["path", { d: "M10 12h4", key: "a56b0p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Armchair = createLucideIcon("Armchair", [
  ["path", { d: "M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3", key: "irtipd" }],
  [
    "path",
    {
      d: "M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z",
      key: "1qyhux"
    }
  ],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigDownDash = createLucideIcon("ArrowBigDownDash", [
  ["path", { d: "M15 5H9", key: "1tp3ed" }],
  ["path", { d: "M15 9v3h4l-7 7-7-7h4V9z", key: "ncdc4b" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigDown = createLucideIcon("ArrowBigDown", [
  ["path", { d: "M15 6v6h4l-7 7-7-7h4V6h6z", key: "1thax2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigLeftDash = createLucideIcon("ArrowBigLeftDash", [
  ["path", { d: "M19 15V9", key: "1hci5f" }],
  ["path", { d: "M15 15h-3v4l-7-7 7-7v4h3v6z", key: "16tjna" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigLeft = createLucideIcon("ArrowBigLeft", [
  ["path", { d: "M18 15h-6v4l-7-7 7-7v4h6v6z", key: "lbrdak" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigRightDash = createLucideIcon("ArrowBigRightDash", [
  ["path", { d: "M5 9v6", key: "158jrl" }],
  ["path", { d: "M9 9h3V5l7 7-7 7v-4H9V9z", key: "1sg2xn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigRight = createLucideIcon("ArrowBigRight", [
  ["path", { d: "M6 9h6V5l7 7-7 7v-4H6V9z", key: "7fvt9c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigUpDash = createLucideIcon("ArrowBigUpDash", [
  ["path", { d: "M9 19h6", key: "456am0" }],
  ["path", { d: "M9 15v-3H5l7-7 7 7h-4v3H9z", key: "1r2uve" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowBigUp = createLucideIcon("ArrowBigUp", [
  ["path", { d: "M9 18v-6H5l7-7 7 7h-4v6H9z", key: "1x06kx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDown01 = createLucideIcon("ArrowDown01", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["rect", { x: "15", y: "4", width: "4", height: "6", ry: "2", key: "1bwicg" }],
  ["path", { d: "M17 20v-6h-2", key: "1qp1so" }],
  ["path", { d: "M15 20h4", key: "1j968p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDown10 = createLucideIcon("ArrowDown10", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M17 10V4h-2", key: "zcsr5x" }],
  ["path", { d: "M15 10h4", key: "id2lce" }],
  ["rect", { x: "15", y: "14", width: "4", height: "6", ry: "2", key: "33xykx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownAZ = createLucideIcon("ArrowDownAZ", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M20 8h-5", key: "1vsyxs" }],
  ["path", { d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10", key: "ag13bf" }],
  ["path", { d: "M15 14h5l-5 6h5", key: "ur5jdg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownFromLine = createLucideIcon("ArrowDownFromLine", [
  ["path", { d: "M19 3H5", key: "1236rx" }],
  ["path", { d: "M12 21V7", key: "gj6g52" }],
  ["path", { d: "m6 15 6 6 6-6", key: "h15q88" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownLeft = createLucideIcon("ArrowDownLeft", [
  ["path", { d: "M17 7 7 17", key: "15tmo1" }],
  ["path", { d: "M17 17H7V7", key: "1org7z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownNarrowWide = createLucideIcon("ArrowDownNarrowWide", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M11 4h4", key: "6d7r33" }],
  ["path", { d: "M11 8h7", key: "djye34" }],
  ["path", { d: "M11 12h10", key: "1438ji" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownRight = createLucideIcon("ArrowDownRight", [
  ["path", { d: "m7 7 10 10", key: "1fmybs" }],
  ["path", { d: "M17 7v10H7", key: "6fjiku" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownToDot = createLucideIcon("ArrowDownToDot", [
  ["path", { d: "M12 2v14", key: "jyx4ut" }],
  ["path", { d: "m19 9-7 7-7-7", key: "1oe3oy" }],
  ["circle", { cx: "12", cy: "21", r: "1", key: "o0uj5v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownToLine = createLucideIcon("ArrowDownToLine", [
  ["path", { d: "M12 17V3", key: "1cwfxf" }],
  ["path", { d: "m6 11 6 6 6-6", key: "12ii2o" }],
  ["path", { d: "M19 21H5", key: "150jfl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownUp = createLucideIcon("ArrowDownUp", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "m21 8-4-4-4 4", key: "1c9v7m" }],
  ["path", { d: "M17 4v16", key: "7dpous" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownWideNarrow = createLucideIcon("ArrowDownWideNarrow", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M11 4h10", key: "1w87gc" }],
  ["path", { d: "M11 8h7", key: "djye34" }],
  ["path", { d: "M11 12h4", key: "q8tih4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDownZA = createLucideIcon("ArrowDownZA", [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M15 4h5l-5 6h5", key: "8asdl1" }],
  ["path", { d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20", key: "r6l5cz" }],
  ["path", { d: "M20 18h-5", key: "18j1r2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowDown = createLucideIcon("ArrowDown", [
  ["path", { d: "M12 5v14", key: "s699le" }],
  ["path", { d: "m19 12-7 7-7-7", key: "1idqje" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowLeftFromLine = createLucideIcon("ArrowLeftFromLine", [
  ["path", { d: "m9 6-6 6 6 6", key: "7v63n9" }],
  ["path", { d: "M3 12h14", key: "13k4hi" }],
  ["path", { d: "M21 19V5", key: "b4bplr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowLeftRight = createLucideIcon("ArrowLeftRight", [
  ["path", { d: "M8 3 4 7l4 4", key: "9rb6wj" }],
  ["path", { d: "M4 7h16", key: "6tx8e3" }],
  ["path", { d: "m16 21 4-4-4-4", key: "siv7j2" }],
  ["path", { d: "M20 17H4", key: "h6l3hr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowLeftToLine = createLucideIcon("ArrowLeftToLine", [
  ["path", { d: "M3 19V5", key: "rwsyhb" }],
  ["path", { d: "m13 6-6 6 6 6", key: "1yhaz7" }],
  ["path", { d: "M7 12h14", key: "uoisry" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowLeft = createLucideIcon("ArrowLeft", [
  ["path", { d: "m12 19-7-7 7-7", key: "1l729n" }],
  ["path", { d: "M19 12H5", key: "x3x0zl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowRightFromLine = createLucideIcon("ArrowRightFromLine", [
  ["path", { d: "M3 5v14", key: "1nt18q" }],
  ["path", { d: "M21 12H7", key: "13ipq5" }],
  ["path", { d: "m15 18 6-6-6-6", key: "6tx3qv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowRightLeft = createLucideIcon("ArrowRightLeft", [
  ["path", { d: "m16 3 4 4-4 4", key: "1x1c3m" }],
  ["path", { d: "M20 7H4", key: "zbl0bi" }],
  ["path", { d: "m8 21-4-4 4-4", key: "h9nckh" }],
  ["path", { d: "M4 17h16", key: "g4d7ey" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowRightToLine = createLucideIcon("ArrowRightToLine", [
  ["path", { d: "M17 12H3", key: "8awo09" }],
  ["path", { d: "m11 18 6-6-6-6", key: "8c2y43" }],
  ["path", { d: "M21 5v14", key: "nzette" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowRight = createLucideIcon("ArrowRight", [
  ["path", { d: "M5 12h14", key: "1ays0h" }],
  ["path", { d: "m12 5 7 7-7 7", key: "xquz4c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUp01 = createLucideIcon("ArrowUp01", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["rect", { x: "15", y: "4", width: "4", height: "6", ry: "2", key: "1bwicg" }],
  ["path", { d: "M17 20v-6h-2", key: "1qp1so" }],
  ["path", { d: "M15 20h4", key: "1j968p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUp10 = createLucideIcon("ArrowUp10", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M17 10V4h-2", key: "zcsr5x" }],
  ["path", { d: "M15 10h4", key: "id2lce" }],
  ["rect", { x: "15", y: "14", width: "4", height: "6", ry: "2", key: "33xykx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpAZ = createLucideIcon("ArrowUpAZ", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M20 8h-5", key: "1vsyxs" }],
  ["path", { d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10", key: "ag13bf" }],
  ["path", { d: "M15 14h5l-5 6h5", key: "ur5jdg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpDown = createLucideIcon("ArrowUpDown", [
  ["path", { d: "m21 16-4 4-4-4", key: "f6ql7i" }],
  ["path", { d: "M17 20V4", key: "1ejh1v" }],
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpFromDot = createLucideIcon("ArrowUpFromDot", [
  ["path", { d: "m5 9 7-7 7 7", key: "1hw5ic" }],
  ["path", { d: "M12 16V2", key: "ywoabb" }],
  ["circle", { cx: "12", cy: "21", r: "1", key: "o0uj5v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpFromLine = createLucideIcon("ArrowUpFromLine", [
  ["path", { d: "m18 9-6-6-6 6", key: "kcunyi" }],
  ["path", { d: "M12 3v14", key: "7cf3v8" }],
  ["path", { d: "M5 21h14", key: "11awu3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpLeft = createLucideIcon("ArrowUpLeft", [
  ["path", { d: "M7 17V7h10", key: "11bw93" }],
  ["path", { d: "M17 17 7 7", key: "2786uv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpNarrowWide = createLucideIcon("ArrowUpNarrowWide", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M11 12h4", key: "q8tih4" }],
  ["path", { d: "M11 16h7", key: "uosisv" }],
  ["path", { d: "M11 20h10", key: "jvxblo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpRight = createLucideIcon("ArrowUpRight", [
  ["path", { d: "M7 7h10v10", key: "1tivn9" }],
  ["path", { d: "M7 17 17 7", key: "1vkiza" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpToLine = createLucideIcon("ArrowUpToLine", [
  ["path", { d: "M5 3h14", key: "7usisc" }],
  ["path", { d: "m18 13-6-6-6 6", key: "1kf1n9" }],
  ["path", { d: "M12 7v14", key: "1akyts" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpWideNarrow = createLucideIcon("ArrowUpWideNarrow", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M11 12h10", key: "1438ji" }],
  ["path", { d: "M11 16h7", key: "uosisv" }],
  ["path", { d: "M11 20h4", key: "1krc32" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUpZA = createLucideIcon("ArrowUpZA", [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M15 4h5l-5 6h5", key: "8asdl1" }],
  ["path", { d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20", key: "r6l5cz" }],
  ["path", { d: "M20 18h-5", key: "18j1r2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowUp = createLucideIcon("ArrowUp", [
  ["path", { d: "m5 12 7-7 7 7", key: "hav0vg" }],
  ["path", { d: "M12 19V5", key: "x0mq9r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ArrowsUpFromLine = createLucideIcon("ArrowsUpFromLine", [
  ["path", { d: "m4 6 3-3 3 3", key: "9aidw8" }],
  ["path", { d: "M7 17V3", key: "19qxw1" }],
  ["path", { d: "m14 6 3-3 3 3", key: "6iy689" }],
  ["path", { d: "M17 17V3", key: "o0fmgi" }],
  ["path", { d: "M4 21h16", key: "1h09gz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Asterisk = createLucideIcon("Asterisk", [
  ["path", { d: "M12 6v12", key: "1vza4d" }],
  ["path", { d: "M17.196 9 6.804 15", key: "1ah31z" }],
  ["path", { d: "m6.804 9 10.392 6", key: "1b6pxd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AtSign = createLucideIcon("AtSign", [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8", key: "7n84p3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Atom = createLucideIcon("Atom", [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z",
      key: "1l2ple"
    }
  ],
  [
    "path",
    {
      d: "M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z",
      key: "1wam0m"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AudioLines = createLucideIcon("AudioLines", [
  ["path", { d: "M2 10v3", key: "1fnikh" }],
  ["path", { d: "M6 6v11", key: "11sgs0" }],
  ["path", { d: "M10 3v18", key: "yhl04a" }],
  ["path", { d: "M14 8v7", key: "3a1oy3" }],
  ["path", { d: "M18 5v13", key: "123xd1" }],
  ["path", { d: "M22 10v3", key: "154ddg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const AudioWaveform = createLucideIcon("AudioWaveform", [
  [
    "path",
    {
      d: "M2 13a2 2 0 0 0 2-2V7a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0V4a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0v-4a2 2 0 0 1 2-2",
      key: "57tc96"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Award = createLucideIcon("Award", [
  [
    "path",
    {
      d: "m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526",
      key: "1yiouv"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "6", key: "1vp47v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Axe = createLucideIcon("Axe", [
  ["path", { d: "m14 12-8.5 8.5a2.12 2.12 0 1 1-3-3L11 9", key: "csbz4o" }],
  ["path", { d: "M15 13 9 7l4-4 6 6h3a8 8 0 0 1-7 7z", key: "113wfo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Axis3d = createLucideIcon("Axis3d", [
  ["path", { d: "M4 4v16h16", key: "1s015l" }],
  ["path", { d: "m4 20 7-7", key: "17qe9y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Baby = createLucideIcon("Baby", [
  ["path", { d: "M9 12h.01", key: "157uk2" }],
  ["path", { d: "M15 12h.01", key: "1k8ypt" }],
  ["path", { d: "M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5", key: "1u7htd" }],
  [
    "path",
    {
      d: "M19 6.3a9 9 0 0 1 1.8 3.9 2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1",
      key: "5yv0yz"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Backpack = createLucideIcon("Backpack", [
  [
    "path",
    { d: "M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z", key: "1ol0lm" }
  ],
  ["path", { d: "M8 10h8", key: "c7uz4u" }],
  ["path", { d: "M8 18h8", key: "1no2b1" }],
  ["path", { d: "M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6", key: "1fr6do" }],
  ["path", { d: "M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2", key: "donm21" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeAlert = createLucideIcon("BadgeAlert", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "12", key: "1pkeuh" }],
  ["line", { x1: "12", x2: "12.01", y1: "16", y2: "16", key: "4dfq90" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeCent = createLucideIcon("BadgeCent", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M15.4 10a4 4 0 1 0 0 4", key: "2eqtx8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeCheck = createLucideIcon("BadgeCheck", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeDollarSign = createLucideIcon("BadgeDollarSign", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeEuro = createLucideIcon("BadgeEuro", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M7 12h5", key: "gblrwe" }],
  ["path", { d: "M15 9.4a4 4 0 1 0 0 5.2", key: "1makmb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeHelp = createLucideIcon("BadgeHelp", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["line", { x1: "12", x2: "12.01", y1: "17", y2: "17", key: "io3f8k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeIndianRupee = createLucideIcon("BadgeIndianRupee", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M8 8h8", key: "1bis0t" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m13 17-5-1h1a4 4 0 0 0 0-8", key: "nu2bwa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeInfo = createLucideIcon("BadgeInfo", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "12", key: "1y1yb1" }],
  ["line", { x1: "12", x2: "12.01", y1: "8", y2: "8", key: "110wyk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeJapaneseYen = createLucideIcon("BadgeJapaneseYen", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m9 8 3 3v7", key: "17yadx" }],
  ["path", { d: "m12 11 3-3", key: "p4cfq1" }],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M9 16h6", key: "8wimt3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeMinus = createLucideIcon("BadgeMinus", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgePercent = createLucideIcon("BadgePercent", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgePlus = createLucideIcon("BadgePlus", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "16", key: "10p56q" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgePoundSterling = createLucideIcon("BadgePoundSterling", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M8 12h4", key: "qz6y1c" }],
  ["path", { d: "M10 16V9.5a2.5 2.5 0 0 1 5 0", key: "3mlbjk" }],
  ["path", { d: "M8 16h7", key: "sbedsn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeRussianRuble = createLucideIcon("BadgeRussianRuble", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M9 16h5", key: "1syiyw" }],
  ["path", { d: "M9 12h5a2 2 0 1 0 0-4h-3v9", key: "1ge9c1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeSwissFranc = createLucideIcon("BadgeSwissFranc", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M11 17V8h4", key: "1bfq6y" }],
  ["path", { d: "M11 12h3", key: "2eqnfz" }],
  ["path", { d: "M9 16h4", key: "1skf3a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BadgeX = createLucideIcon("BadgeX", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "15", x2: "9", y1: "9", y2: "15", key: "f7djnv" }],
  ["line", { x1: "9", x2: "15", y1: "9", y2: "15", key: "1shsy8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Badge$1 = createLucideIcon("Badge", [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BaggageClaim = createLucideIcon("BaggageClaim", [
  ["path", { d: "M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2", key: "4irg2o" }],
  ["path", { d: "M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10", key: "14fcyx" }],
  ["rect", { width: "13", height: "8", x: "8", y: "6", rx: "1", key: "o6oiis" }],
  ["circle", { cx: "18", cy: "20", r: "2", key: "t9985n" }],
  ["circle", { cx: "9", cy: "20", r: "2", key: "e5v82j" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ban = createLucideIcon("Ban", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m4.9 4.9 14.2 14.2", key: "1m5liu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Banana = createLucideIcon("Banana", [
  ["path", { d: "M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5", key: "1cscit" }],
  [
    "path",
    {
      d: "M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z",
      key: "1y1nbv"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bandage = createLucideIcon("Bandage", [
  ["path", { d: "M10 10.01h.01", key: "1e9xi7" }],
  ["path", { d: "M10 14.01h.01", key: "ac23bv" }],
  ["path", { d: "M14 10.01h.01", key: "2wfrvf" }],
  ["path", { d: "M14 14.01h.01", key: "8tw8yn" }],
  ["path", { d: "M18 6v11.5", key: "dkbidh" }],
  ["path", { d: "M6 6v12", key: "vkc79e" }],
  ["rect", { x: "2", y: "6", width: "20", height: "12", rx: "2", key: "1wpnh2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Banknote = createLucideIcon("Banknote", [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M6 12h.01M18 12h.01", key: "113zkx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Barcode = createLucideIcon("Barcode", [
  ["path", { d: "M3 5v14", key: "1nt18q" }],
  ["path", { d: "M8 5v14", key: "1ybrkv" }],
  ["path", { d: "M12 5v14", key: "s699le" }],
  ["path", { d: "M17 5v14", key: "ycjyhj" }],
  ["path", { d: "M21 5v14", key: "nzette" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Baseline = createLucideIcon("Baseline", [
  ["path", { d: "M4 20h16", key: "14thso" }],
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bath = createLucideIcon("Bath", [
  ["path", { d: "M10 4 8 6", key: "1rru8s" }],
  ["path", { d: "M17 19v2", key: "ts1sot" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M7 19v2", key: "12npes" }],
  [
    "path",
    {
      d: "M9 5 7.621 3.621A2.121 2.121 0 0 0 4 5v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5",
      key: "14ym8i"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BatteryCharging = createLucideIcon("BatteryCharging", [
  ["path", { d: "M15 7h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2", key: "1sdynx" }],
  ["path", { d: "M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1", key: "1gkd3k" }],
  ["path", { d: "m11 7-3 5h4l-3 5", key: "b4a64w" }],
  ["line", { x1: "22", x2: "22", y1: "11", y2: "13", key: "4dh1rd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BatteryFull = createLucideIcon("BatteryFull", [
  ["rect", { width: "16", height: "10", x: "2", y: "7", rx: "2", ry: "2", key: "1w10f2" }],
  ["line", { x1: "22", x2: "22", y1: "11", y2: "13", key: "4dh1rd" }],
  ["line", { x1: "6", x2: "6", y1: "11", y2: "13", key: "1wd6dw" }],
  ["line", { x1: "10", x2: "10", y1: "11", y2: "13", key: "haxvl5" }],
  ["line", { x1: "14", x2: "14", y1: "11", y2: "13", key: "c6fn6x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BatteryLow = createLucideIcon("BatteryLow", [
  ["rect", { width: "16", height: "10", x: "2", y: "7", rx: "2", ry: "2", key: "1w10f2" }],
  ["line", { x1: "22", x2: "22", y1: "11", y2: "13", key: "4dh1rd" }],
  ["line", { x1: "6", x2: "6", y1: "11", y2: "13", key: "1wd6dw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BatteryMedium = createLucideIcon("BatteryMedium", [
  ["rect", { width: "16", height: "10", x: "2", y: "7", rx: "2", ry: "2", key: "1w10f2" }],
  ["line", { x1: "22", x2: "22", y1: "11", y2: "13", key: "4dh1rd" }],
  ["line", { x1: "6", x2: "6", y1: "11", y2: "13", key: "1wd6dw" }],
  ["line", { x1: "10", x2: "10", y1: "11", y2: "13", key: "haxvl5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BatteryWarning = createLucideIcon("BatteryWarning", [
  ["path", { d: "M10 17h.01", key: "nbq80n" }],
  ["path", { d: "M10 7v6", key: "nne03l" }],
  ["path", { d: "M14 7h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-2", key: "1x5o8m" }],
  ["path", { d: "M22 11v2", key: "1wo06k" }],
  ["path", { d: "M6 7H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2", key: "1mdjgh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Battery = createLucideIcon("Battery", [
  ["rect", { width: "16", height: "10", x: "2", y: "7", rx: "2", ry: "2", key: "1w10f2" }],
  ["line", { x1: "22", x2: "22", y1: "11", y2: "13", key: "4dh1rd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Beaker = createLucideIcon("Beaker", [
  ["path", { d: "M4.5 3h15", key: "c7n0jr" }],
  ["path", { d: "M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3", key: "m1uhx7" }],
  ["path", { d: "M6 14h12", key: "4cwo0f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BeanOff = createLucideIcon("BeanOff", [
  [
    "path",
    {
      d: "M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1",
      key: "bq3udt"
    }
  ],
  ["path", { d: "M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66", key: "17ccse" }],
  [
    "path",
    {
      d: "M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04",
      key: "18zqgq"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bean = createLucideIcon("Bean", [
  [
    "path",
    {
      d: "M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z",
      key: "1tvzk7"
    }
  ],
  ["path", { d: "M5.341 10.62a4 4 0 1 0 5.279-5.28", key: "2cyri2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BedDouble = createLucideIcon("BedDouble", [
  ["path", { d: "M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8", key: "1k78r4" }],
  ["path", { d: "M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4", key: "fb3tl2" }],
  ["path", { d: "M12 4v6", key: "1dcgq2" }],
  ["path", { d: "M2 18h20", key: "ajqnye" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BedSingle = createLucideIcon("BedSingle", [
  ["path", { d: "M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8", key: "1wm6mi" }],
  ["path", { d: "M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4", key: "4k93s5" }],
  ["path", { d: "M3 18h18", key: "1h113x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bed = createLucideIcon("Bed", [
  ["path", { d: "M2 4v16", key: "vw9hq8" }],
  ["path", { d: "M2 8h18a2 2 0 0 1 2 2v10", key: "1dgv2r" }],
  ["path", { d: "M2 17h20", key: "18nfp3" }],
  ["path", { d: "M6 8v9", key: "1yriud" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Beef = createLucideIcon("Beef", [
  ["circle", { cx: "12.5", cy: "8.5", r: "2.5", key: "9738u8" }],
  [
    "path",
    {
      d: "M12.5 2a6.5 6.5 0 0 0-6.22 4.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3A6.5 6.5 0 0 0 12.5 2Z",
      key: "o0f6za"
    }
  ],
  [
    "path",
    {
      d: "m18.5 6 2.19 4.5a6.48 6.48 0 0 1 .31 2 6.49 6.49 0 0 1-2.6 5.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5",
      key: "k7p6i0"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BeerOff = createLucideIcon("BeerOff", [
  ["path", { d: "M13 13v5", key: "igwfh0" }],
  ["path", { d: "M17 11.47V8", key: "16yw0g" }],
  ["path", { d: "M17 11h1a3 3 0 0 1 2.745 4.211", key: "1xbt65" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3", key: "c55o3e" }],
  [
    "path",
    { d: "M7.536 7.535C6.766 7.649 6.154 8 5.5 8a2.5 2.5 0 0 1-1.768-4.268", key: "1ydug7" }
  ],
  [
    "path",
    {
      d: "M8.727 3.204C9.306 2.767 9.885 2 11 2c1.56 0 2 1.5 3 1.5s1.72-.5 2.5-.5a1 1 0 1 1 0 5c-.78 0-1.5-.5-2.5-.5a3.149 3.149 0 0 0-.842.12",
      key: "q81o7q"
    }
  ],
  ["path", { d: "M9 14.6V18", key: "20ek98" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Beer = createLucideIcon("Beer", [
  ["path", { d: "M17 11h1a3 3 0 0 1 0 6h-1", key: "1yp76v" }],
  ["path", { d: "M9 12v6", key: "1u1cab" }],
  ["path", { d: "M13 12v6", key: "1sugkk" }],
  [
    "path",
    {
      d: "M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z",
      key: "1510fo"
    }
  ],
  ["path", { d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8", key: "19jb7n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellDot = createLucideIcon("BellDot", [
  [
    "path",
    {
      d: "M19.4 14.9C20.2 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 .7 0 1.3.1 1.9.3",
      key: "xcehk"
    }
  ],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }],
  ["circle", { cx: "18", cy: "8", r: "3", key: "1g0gzu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellElectric = createLucideIcon("BellElectric", [
  ["path", { d: "M18.8 4A6.3 8.7 0 0 1 20 9", key: "xve1fh" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["circle", { cx: "9", cy: "9", r: "7", key: "p2h5vp" }],
  ["rect", { width: "10", height: "6", x: "4", y: "16", rx: "2", key: "17f3te" }],
  ["path", { d: "M14 19c3 0 4.6-1.6 4.6-1.6", key: "n7odp6" }],
  ["circle", { cx: "20", cy: "16", r: "2", key: "1v9bxh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellMinus = createLucideIcon("BellMinus", [
  [
    "path",
    { d: "M18.4 12c.8 3.8 2.6 5 2.6 5H3s3-2 3-9c0-3.3 2.7-6 6-6 1.8 0 3.4.8 4.5 2", key: "eck70s" }
  ],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }],
  ["path", { d: "M15 8h6", key: "8ybuxh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellOff = createLucideIcon("BellOff", [
  ["path", { d: "M8.7 3A6 6 0 0 1 18 8a21.3 21.3 0 0 0 .6 5", key: "o7mx20" }],
  ["path", { d: "M17 17H3s3-2 3-9a4.67 4.67 0 0 1 .3-1.7", key: "16f1lm" }],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellPlus = createLucideIcon("BellPlus", [
  [
    "path",
    {
      d: "M19.3 14.8C20.1 16.4 21 17 21 17H3s3-2 3-9c0-3.3 2.7-6 6-6 1 0 1.9.2 2.8.7",
      key: "guizqy"
    }
  ],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }],
  ["path", { d: "M15 8h6", key: "8ybuxh" }],
  ["path", { d: "M18 5v6", key: "g5ayrv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BellRing = createLucideIcon("BellRing", [
  ["path", { d: "M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9", key: "1qo2s2" }],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }],
  ["path", { d: "M4 2C2.8 3.7 2 5.7 2 8", key: "tap9e0" }],
  ["path", { d: "M22 8c0-2.3-.8-4.3-2-6", key: "5bb3ad" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bell = createLucideIcon("Bell", [
  ["path", { d: "M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9", key: "1qo2s2" }],
  ["path", { d: "M10.3 21a1.94 1.94 0 0 0 3.4 0", key: "qgo35s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BetweenHorizontalEnd = createLucideIcon("BetweenHorizontalEnd", [
  ["rect", { width: "13", height: "7", x: "3", y: "3", rx: "1", key: "11xb64" }],
  ["path", { d: "m22 15-3-3 3-3", key: "26chmm" }],
  ["rect", { width: "13", height: "7", x: "3", y: "14", rx: "1", key: "k6ky7n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BetweenHorizontalStart = createLucideIcon("BetweenHorizontalStart", [
  ["rect", { width: "13", height: "7", x: "8", y: "3", rx: "1", key: "pkso9a" }],
  ["path", { d: "m2 9 3 3-3 3", key: "1agib5" }],
  ["rect", { width: "13", height: "7", x: "8", y: "14", rx: "1", key: "1q5fc1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BetweenVerticalEnd = createLucideIcon("BetweenVerticalEnd", [
  ["rect", { width: "7", height: "13", x: "3", y: "3", rx: "1", key: "1fdu0f" }],
  ["path", { d: "m9 22 3-3 3 3", key: "17z65a" }],
  ["rect", { width: "7", height: "13", x: "14", y: "3", rx: "1", key: "1squn4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BetweenVerticalStart = createLucideIcon("BetweenVerticalStart", [
  ["rect", { width: "7", height: "13", x: "3", y: "8", rx: "1", key: "1fjrkv" }],
  ["path", { d: "m15 2-3 3-3-3", key: "1uh6eb" }],
  ["rect", { width: "7", height: "13", x: "14", y: "8", rx: "1", key: "w3fjg8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BicepsFlexed = createLucideIcon("BicepsFlexed", [
  [
    "path",
    {
      d: "M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1",
      key: "1pmlyh"
    }
  ],
  ["path", { d: "M15 14a5 5 0 0 0-7.584 2", key: "5rb254" }],
  ["path", { d: "M9.964 6.825C8.019 7.977 9.5 13 8 15", key: "kbvsx9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bike = createLucideIcon("Bike", [
  ["circle", { cx: "18.5", cy: "17.5", r: "3.5", key: "15x4ox" }],
  ["circle", { cx: "5.5", cy: "17.5", r: "3.5", key: "1noe27" }],
  ["circle", { cx: "15", cy: "5", r: "1", key: "19l28e" }],
  ["path", { d: "M12 17.5V14l-3-3 4-3 2 3h2", key: "1npguv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Binary = createLucideIcon("Binary", [
  ["rect", { x: "14", y: "14", width: "4", height: "6", rx: "2", key: "p02svl" }],
  ["rect", { x: "6", y: "4", width: "4", height: "6", rx: "2", key: "xm4xkj" }],
  ["path", { d: "M6 20h4", key: "1i6q5t" }],
  ["path", { d: "M14 10h4", key: "ru81e7" }],
  ["path", { d: "M6 14h2v6", key: "16z9wg" }],
  ["path", { d: "M14 4h2v6", key: "1idq9u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Binoculars = createLucideIcon("Binoculars", [
  ["path", { d: "M10 10h4", key: "tcdvrf" }],
  ["path", { d: "M19 7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3", key: "3apit1" }],
  [
    "path",
    {
      d: "M20 21a2 2 0 0 0 2-2v-3.851c0-1.39-2-2.962-2-4.829V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v11a2 2 0 0 0 2 2z",
      key: "rhpgnw"
    }
  ],
  ["path", { d: "M 22 16 L 2 16", key: "14lkq7" }],
  [
    "path",
    {
      d: "M4 21a2 2 0 0 1-2-2v-3.851c0-1.39 2-2.962 2-4.829V8a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v11a2 2 0 0 1-2 2z",
      key: "104b3k"
    }
  ],
  ["path", { d: "M9 7V4a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v3", key: "14fczp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Biohazard = createLucideIcon("Biohazard", [
  ["circle", { cx: "12", cy: "11.9", r: "2", key: "e8h31w" }],
  ["path", { d: "M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6", key: "17bolr" }],
  ["path", { d: "m8.9 10.1 1.4.8", key: "15ezny" }],
  ["path", { d: "M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5", key: "wtwa5u" }],
  ["path", { d: "m15.1 10.1-1.4.8", key: "1r0b28" }],
  ["path", { d: "M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2", key: "m7qszh" }],
  ["path", { d: "M12 13.9v1.6", key: "zfyyim" }],
  ["path", { d: "M13.5 5.4c-1-.2-2-.2-3 0", key: "1bi9q0" }],
  ["path", { d: "M17 16.4c.7-.7 1.2-1.6 1.5-2.5", key: "1rhjqw" }],
  ["path", { d: "M5.5 13.9c.3.9.8 1.8 1.5 2.5", key: "8gsud3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bird = createLucideIcon("Bird", [
  ["path", { d: "M16 7h.01", key: "1kdx03" }],
  ["path", { d: "M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20", key: "oj1oa8" }],
  ["path", { d: "m20 7 2 .5-2 .5", key: "12nv4d" }],
  ["path", { d: "M10 18v3", key: "1yea0a" }],
  ["path", { d: "M14 17.75V21", key: "1pymcb" }],
  ["path", { d: "M7 18a6 6 0 0 0 3.84-10.61", key: "1npnn0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bitcoin = createLucideIcon("Bitcoin", [
  [
    "path",
    {
      d: "M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727",
      key: "yr8idg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Blend = createLucideIcon("Blend", [
  ["circle", { cx: "9", cy: "9", r: "7", key: "p2h5vp" }],
  ["circle", { cx: "15", cy: "15", r: "7", key: "19ennj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Blinds = createLucideIcon("Blinds", [
  ["path", { d: "M3 3h18", key: "o7r712" }],
  ["path", { d: "M20 7H8", key: "gd2fo2" }],
  ["path", { d: "M20 11H8", key: "1ynp89" }],
  ["path", { d: "M10 19h10", key: "19hjk5" }],
  ["path", { d: "M8 15h12", key: "1yqzne" }],
  ["path", { d: "M4 3v14", key: "fggqzn" }],
  ["circle", { cx: "4", cy: "19", r: "2", key: "p3m9r0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Blocks = createLucideIcon("Blocks", [
  ["rect", { width: "7", height: "7", x: "14", y: "3", rx: "1", key: "6d4xhi" }],
  [
    "path",
    {
      d: "M10 21V8a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1H3",
      key: "1fpvtg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BluetoothConnected = createLucideIcon("BluetoothConnected", [
  ["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }],
  ["line", { x1: "18", x2: "21", y1: "12", y2: "12", key: "1rsjjs" }],
  ["line", { x1: "3", x2: "6", y1: "12", y2: "12", key: "11yl8c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BluetoothOff = createLucideIcon("BluetoothOff", [
  ["path", { d: "m17 17-5 5V12l-5 5", key: "v5aci6" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M14.5 9.5 17 7l-5-5v4.5", key: "1kddfz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BluetoothSearching = createLucideIcon("BluetoothSearching", [
  ["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }],
  ["path", { d: "M20.83 14.83a4 4 0 0 0 0-5.66", key: "k8tn1j" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bluetooth = createLucideIcon("Bluetooth", [
  ["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bold = createLucideIcon("Bold", [
  [
    "path",
    { d: "M6 12h9a4 4 0 0 1 0 8H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h7a4 4 0 0 1 0 8", key: "mg9rjx" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bolt = createLucideIcon("Bolt", [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bomb = createLucideIcon("Bomb", [
  ["circle", { cx: "11", cy: "13", r: "9", key: "hd149" }],
  [
    "path",
    {
      d: "M14.35 4.65 16.3 2.7a2.41 2.41 0 0 1 3.4 0l1.6 1.6a2.4 2.4 0 0 1 0 3.4l-1.95 1.95",
      key: "jp4j1b"
    }
  ],
  ["path", { d: "m22 2-1.5 1.5", key: "ay92ug" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bone = createLucideIcon("Bone", [
  [
    "path",
    {
      d: "M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z",
      key: "w610uw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookA = createLucideIcon("BookA", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m8 13 4-7 4 7", key: "4rari8" }],
  ["path", { d: "M9.1 11h5.7", key: "1gkovt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookAudio = createLucideIcon("BookAudio", [
  ["path", { d: "M12 6v7", key: "1f6ttz" }],
  ["path", { d: "M16 8v3", key: "gejaml" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 8v3", key: "1qzp49" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookCheck = createLucideIcon("BookCheck", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 9.5 2 2 4-4", key: "1dth82" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookCopy = createLucideIcon("BookCopy", [
  ["path", { d: "M2 16V4a2 2 0 0 1 2-2h11", key: "spzkk5" }],
  [
    "path",
    {
      d: "M22 18H11a2 2 0 1 0 0 4h10.5a.5.5 0 0 0 .5-.5v-15a.5.5 0 0 0-.5-.5H11a2 2 0 0 0-2 2v12",
      key: "1wz07i"
    }
  ],
  ["path", { d: "M5 14H4a2 2 0 1 0 0 4h1", key: "16gqf9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookDashed = createLucideIcon("BookDashed", [
  ["path", { d: "M12 17h2", key: "13u4lk" }],
  ["path", { d: "M12 22h2", key: "kn7ki6" }],
  ["path", { d: "M12 2h2", key: "cvn524" }],
  ["path", { d: "M18 22h1a1 1 0 0 0 1-1", key: "w6gbqz" }],
  ["path", { d: "M18 2h1a1 1 0 0 1 1 1v1", key: "1vpra5" }],
  ["path", { d: "M20 15v2h-2", key: "fph276" }],
  ["path", { d: "M20 8v3", key: "deu0bs" }],
  ["path", { d: "M4 11V9", key: "v3xsx8" }],
  ["path", { d: "M4 19.5V15", key: "6gr39e" }],
  ["path", { d: "M4 5v-.5A2.5 2.5 0 0 1 6.5 2H8", key: "wywhs9" }],
  ["path", { d: "M8 22H6.5a1 1 0 0 1 0-5H8", key: "1cu73q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookDown = createLucideIcon("BookDown", [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 10 3 3 3-3", key: "zt5b4y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookHeadphones = createLucideIcon("BookHeadphones", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 12v-2a4 4 0 0 1 8 0v2", key: "1vsqkj" }],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookHeart = createLucideIcon("BookHeart", [
  [
    "path",
    {
      d: "M16 8.2A2.22 2.22 0 0 0 13.8 6c-.8 0-1.4.3-1.8.9-.4-.6-1-.9-1.8-.9A2.22 2.22 0 0 0 8 8.2c0 .6.3 1.2.7 1.6A226.652 226.652 0 0 0 12 13a404 404 0 0 0 3.3-3.1 2.413 2.413 0 0 0 .7-1.7",
      key: "1t75a8"
    }
  ],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookImage = createLucideIcon("BookImage", [
  ["path", { d: "m20 13.7-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17", key: "q6ojf0" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["circle", { cx: "10", cy: "8", r: "2", key: "2qkj4p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookKey = createLucideIcon("BookKey", [
  ["path", { d: "m19 3 1 1", key: "ze14oc" }],
  ["path", { d: "m20 2-4.5 4.5", key: "1sppr8" }],
  ["path", { d: "M20 8v13a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "1ocbpn" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H14", key: "1gfsgw" }],
  ["circle", { cx: "14", cy: "8", r: "2", key: "u49eql" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookLock = createLucideIcon("BookLock", [
  ["path", { d: "M18 6V4a2 2 0 1 0-4 0v2", key: "1aquzs" }],
  ["path", { d: "M20 15v6a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "1rkj32" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10", key: "18wgow" }],
  ["rect", { x: "12", y: "6", width: "8", height: "5", rx: "1", key: "73l30o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookMarked = createLucideIcon("BookMarked", [
  ["path", { d: "M10 2v8l3-3 3 3V2", key: "sqw3rj" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookMinus = createLucideIcon("BookMinus", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookOpenCheck = createLucideIcon("BookOpenCheck", [
  ["path", { d: "M12 21V7", key: "gj6g52" }],
  ["path", { d: "m16 12 2 2 4-4", key: "mdajum" }],
  [
    "path",
    {
      d: "M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3",
      key: "8arnkb"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookOpenText = createLucideIcon("BookOpenText", [
  ["path", { d: "M12 7v14", key: "1akyts" }],
  ["path", { d: "M16 12h2", key: "7q9ll5" }],
  ["path", { d: "M16 8h2", key: "msurwy" }],
  [
    "path",
    {
      d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",
      key: "ruj8y"
    }
  ],
  ["path", { d: "M6 12h2", key: "32wvfc" }],
  ["path", { d: "M6 8h2", key: "30oboj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookOpen = createLucideIcon("BookOpen", [
  ["path", { d: "M12 7v14", key: "1akyts" }],
  [
    "path",
    {
      d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",
      key: "ruj8y"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookPlus = createLucideIcon("BookPlus", [
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookText = createLucideIcon("BookText", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 11h8", key: "vwpz6n" }],
  ["path", { d: "M8 7h6", key: "1f0q6e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookType = createLucideIcon("BookType", [
  ["path", { d: "M10 13h4", key: "ytezjc" }],
  ["path", { d: "M12 6v7", key: "1f6ttz" }],
  ["path", { d: "M16 8V6H8v2", key: "x8j6u4" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookUp2 = createLucideIcon("BookUp2", [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "M18 2h1a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "161d7n" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2", key: "1lorq7" }],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }],
  ["path", { d: "m9 5 3-3 3 3", key: "l8vdw6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookUp = createLucideIcon("BookUp", [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookUser = createLucideIcon("BookUser", [
  ["path", { d: "M15 13a3 3 0 1 0-6 0", key: "10j68g" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookX = createLucideIcon("BookX", [
  ["path", { d: "m14.5 7-5 5", key: "dy991v" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9.5 7 5 5", key: "s45iea" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Book = createLucideIcon("Book", [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookmarkCheck = createLucideIcon("BookmarkCheck", [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z", key: "169p4p" }],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookmarkMinus = createLucideIcon("BookmarkMinus", [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }],
  ["line", { x1: "15", x2: "9", y1: "10", y2: "10", key: "1gty7f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookmarkPlus = createLucideIcon("BookmarkPlus", [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }],
  ["line", { x1: "12", x2: "12", y1: "7", y2: "13", key: "1cppfj" }],
  ["line", { x1: "15", x2: "9", y1: "10", y2: "10", key: "1gty7f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BookmarkX = createLucideIcon("BookmarkX", [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z", key: "169p4p" }],
  ["path", { d: "m14.5 7.5-5 5", key: "3lb6iw" }],
  ["path", { d: "m9.5 7.5 5 5", key: "ko136h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bookmark = createLucideIcon("Bookmark", [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BoomBox = createLucideIcon("BoomBox", [
  ["path", { d: "M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4", key: "vvzvr1" }],
  ["path", { d: "M8 8v1", key: "xcqmfk" }],
  ["path", { d: "M12 8v1", key: "1rj8u4" }],
  ["path", { d: "M16 8v1", key: "1q12zr" }],
  ["rect", { width: "20", height: "12", x: "2", y: "9", rx: "2", key: "igpb89" }],
  ["circle", { cx: "8", cy: "15", r: "2", key: "fa4a8s" }],
  ["circle", { cx: "16", cy: "15", r: "2", key: "14c3ya" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BotMessageSquare = createLucideIcon("BotMessageSquare", [
  ["path", { d: "M12 6V2H8", key: "1155em" }],
  ["path", { d: "m8 18-4 4V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2Z", key: "w2lp3e" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M9 11v2", key: "1ueba0" }],
  ["path", { d: "M15 11v2", key: "i11awn" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BotOff = createLucideIcon("BotOff", [
  ["path", { d: "M13.67 8H18a2 2 0 0 1 2 2v4.33", key: "7az073" }],
  ["path", { d: "M2 14h2", key: "vft8re" }],
  ["path", { d: "M20 14h2", key: "4cs60a" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }],
  ["path", { d: "M8 8H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 1.414-.586", key: "s09a7a" }],
  ["path", { d: "M9 13v2", key: "rq6x2g" }],
  ["path", { d: "M9.67 4H12v2.33", key: "110xot" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bot = createLucideIcon("Bot", [
  ["path", { d: "M12 8V4H8", key: "hb8ula" }],
  ["rect", { width: "16", height: "12", x: "4", y: "8", rx: "2", key: "enze0r" }],
  ["path", { d: "M2 14h2", key: "vft8re" }],
  ["path", { d: "M20 14h2", key: "4cs60a" }],
  ["path", { d: "M15 13v2", key: "1xurst" }],
  ["path", { d: "M9 13v2", key: "rq6x2g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Box = createLucideIcon("Box", [
  [
    "path",
    {
      d: "M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z",
      key: "hh9hay"
    }
  ],
  ["path", { d: "m3.3 7 8.7 5 8.7-5", key: "g66t2b" }],
  ["path", { d: "M12 22V12", key: "d0xqtd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Boxes = createLucideIcon("Boxes", [
  [
    "path",
    {
      d: "M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z",
      key: "lc1i9w"
    }
  ],
  ["path", { d: "m7 16.5-4.74-2.85", key: "1o9zyk" }],
  ["path", { d: "m7 16.5 5-3", key: "va8pkn" }],
  ["path", { d: "M7 16.5v5.17", key: "jnp8gn" }],
  [
    "path",
    {
      d: "M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z",
      key: "8zsnat"
    }
  ],
  ["path", { d: "m17 16.5-5-3", key: "8arw3v" }],
  ["path", { d: "m17 16.5 4.74-2.85", key: "8rfmw" }],
  ["path", { d: "M17 16.5v5.17", key: "k6z78m" }],
  [
    "path",
    {
      d: "M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z",
      key: "1xygjf"
    }
  ],
  ["path", { d: "M12 8 7.26 5.15", key: "1vbdud" }],
  ["path", { d: "m12 8 4.74-2.85", key: "3rx089" }],
  ["path", { d: "M12 13.5V8", key: "1io7kd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Braces = createLucideIcon("Braces", [
  [
    "path",
    { d: "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1", key: "ezmyqa" }
  ],
  [
    "path",
    {
      d: "M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1",
      key: "e1hn23"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Brackets = createLucideIcon("Brackets", [
  ["path", { d: "M16 3h3v18h-3", key: "1yor1f" }],
  ["path", { d: "M8 21H5V3h3", key: "1qrfwo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BrainCircuit = createLucideIcon("BrainCircuit", [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z",
      key: "l5xja"
    }
  ],
  ["path", { d: "M9 13a4.5 4.5 0 0 0 3-4", key: "10igwf" }],
  ["path", { d: "M6.003 5.125A3 3 0 0 0 6.401 6.5", key: "105sqy" }],
  ["path", { d: "M3.477 10.896a4 4 0 0 1 .585-.396", key: "ql3yin" }],
  ["path", { d: "M6 18a4 4 0 0 1-1.967-.516", key: "2e4loj" }],
  ["path", { d: "M12 13h4", key: "1ku699" }],
  ["path", { d: "M12 18h6a2 2 0 0 1 2 2v1", key: "105ag5" }],
  ["path", { d: "M12 8h8", key: "1lhi5i" }],
  ["path", { d: "M16 8V5a2 2 0 0 1 2-2", key: "u6izg6" }],
  ["circle", { cx: "16", cy: "13", r: ".5", key: "ry7gng" }],
  ["circle", { cx: "18", cy: "3", r: ".5", key: "1aiba7" }],
  ["circle", { cx: "20", cy: "21", r: ".5", key: "yhc1fs" }],
  ["circle", { cx: "20", cy: "8", r: ".5", key: "1e43v0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BrainCog = createLucideIcon("BrainCog", [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 0-5.997.142 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588 4 4 0 0 0 7.636 2.106 3.2 3.2 0 0 0 .164-.546c.028-.13.306-.13.335 0a3.2 3.2 0 0 0 .163.546 4 4 0 0 0 7.636-2.106 4 4 0 0 0 .556-6.588 4 4 0 0 0-2.526-5.77A3 3 0 1 0 12 5",
      key: "1kgmhc"
    }
  ],
  ["path", { d: "M17.599 6.5a3 3 0 0 0 .399-1.375", key: "tmeiqw" }],
  ["path", { d: "M6.003 5.125A3 3 0 0 0 6.401 6.5", key: "105sqy" }],
  ["path", { d: "M3.477 10.896a4 4 0 0 1 .585-.396", key: "ql3yin" }],
  ["path", { d: "M19.938 10.5a4 4 0 0 1 .585.396", key: "1qfode" }],
  ["path", { d: "M6 18a4 4 0 0 1-1.967-.516", key: "2e4loj" }],
  ["path", { d: "M19.967 17.484A4 4 0 0 1 18 18", key: "159ez6" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "m15.7 10.4-.9.4", key: "ayzo6p" }],
  ["path", { d: "m9.2 13.2-.9.4", key: "1uzb3g" }],
  ["path", { d: "m13.6 15.7-.4-.9", key: "11ifqf" }],
  ["path", { d: "m10.8 9.2-.4-.9", key: "1pmk2v" }],
  ["path", { d: "m15.7 13.5-.9-.4", key: "7ng02m" }],
  ["path", { d: "m9.2 10.9-.9-.4", key: "1x66zd" }],
  ["path", { d: "m10.5 15.7.4-.9", key: "3js94g" }],
  ["path", { d: "m13.1 9.2.4-.9", key: "18n7mc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Brain = createLucideIcon("Brain", [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z",
      key: "l5xja"
    }
  ],
  [
    "path",
    {
      d: "M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z",
      key: "ep3f8r"
    }
  ],
  ["path", { d: "M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4", key: "1p4c4q" }],
  ["path", { d: "M17.599 6.5a3 3 0 0 0 .399-1.375", key: "tmeiqw" }],
  ["path", { d: "M6.003 5.125A3 3 0 0 0 6.401 6.5", key: "105sqy" }],
  ["path", { d: "M3.477 10.896a4 4 0 0 1 .585-.396", key: "ql3yin" }],
  ["path", { d: "M19.938 10.5a4 4 0 0 1 .585.396", key: "1qfode" }],
  ["path", { d: "M6 18a4 4 0 0 1-1.967-.516", key: "2e4loj" }],
  ["path", { d: "M19.967 17.484A4 4 0 0 1 18 18", key: "159ez6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BrickWall = createLucideIcon("BrickWall", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 9v6", key: "199k2o" }],
  ["path", { d: "M16 15v6", key: "8rj2es" }],
  ["path", { d: "M16 3v6", key: "1j6rpj" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M8 15v6", key: "1stoo3" }],
  ["path", { d: "M8 3v6", key: "vlvjmk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BriefcaseBusiness = createLucideIcon("BriefcaseBusiness", [
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2", key: "1ksdt3" }],
  ["path", { d: "M22 13a18.15 18.15 0 0 1-20 0", key: "12hx5q" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BriefcaseConveyorBelt = createLucideIcon("BriefcaseConveyorBelt", [
  ["path", { d: "M10 20v2", key: "1n8e1g" }],
  ["path", { d: "M14 20v2", key: "1lq872" }],
  ["path", { d: "M18 20v2", key: "10uadw" }],
  ["path", { d: "M21 20H3", key: "kdqkdp" }],
  ["path", { d: "M6 20v2", key: "a9bc87" }],
  ["path", { d: "M8 16V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v12", key: "17n9tx" }],
  ["rect", { x: "4", y: "6", width: "16", height: "10", rx: "2", key: "1097i5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BriefcaseMedical = createLucideIcon("BriefcaseMedical", [
  ["path", { d: "M12 11v4", key: "a6ujw6" }],
  ["path", { d: "M14 13h-4", key: "1pl8zg" }],
  ["path", { d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2", key: "1ksdt3" }],
  ["path", { d: "M18 6v14", key: "1mu4gy" }],
  ["path", { d: "M6 6v14", key: "1s15cj" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Briefcase = createLucideIcon("Briefcase", [
  ["path", { d: "M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16", key: "jecpp" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BringToFront = createLucideIcon("BringToFront", [
  ["rect", { x: "8", y: "8", width: "8", height: "8", rx: "2", key: "yj20xf" }],
  ["path", { d: "M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2", key: "1ltk23" }],
  ["path", { d: "M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2", key: "1q24h9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Brush = createLucideIcon("Brush", [
  ["path", { d: "m9.06 11.9 8.07-8.06a2.85 2.85 0 1 1 4.03 4.03l-8.06 8.08", key: "1styjt" }],
  [
    "path",
    {
      d: "M7.07 14.94c-1.66 0-3 1.35-3 3.02 0 1.33-2.5 1.52-2 2.02 1.08 1.1 2.49 2.02 4 2.02 2.2 0 4-1.8 4-4.04a3.01 3.01 0 0 0-3-3.02z",
      key: "z0l1mu"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BugOff = createLucideIcon("BugOff", [
  ["path", { d: "M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2", key: "vl8zik" }],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M22 13h-4v-2a4 4 0 0 0-4-4h-1.3", key: "1ou0bd" }],
  ["path", { d: "M20.97 5c0 2.1-1.6 3.8-3.5 4", key: "18gb23" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13", key: "1njkjs" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "M3 21c0-2.1 1.7-3.9 3.8-4", key: "4p0ekp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BugPlay = createLucideIcon("BugPlay", [
  [
    "path",
    {
      d: "M12.765 21.522a.5.5 0 0 1-.765-.424v-8.196a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z",
      key: "17shqo"
    }
  ],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M18 11a4 4 0 0 0-4-4h-4a4 4 0 0 0-4 4v3a6.1 6.1 0 0 0 2 4.5", key: "1tjixy" }],
  ["path", { d: "M20.97 5c0 2.1-1.6 3.8-3.5 4", key: "18gb23" }],
  ["path", { d: "M3 21c0-2.1 1.7-3.9 3.8-4", key: "4p0ekp" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "M6.53 9C4.6 8.8 3 7.1 3 5", key: "32zzws" }],
  ["path", { d: "m8 2 1.88 1.88", key: "fmnt4t" }],
  ["path", { d: "M9 7.13v-1a3.003 3.003 0 1 1 6 0v1", key: "d7y7pr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bug = createLucideIcon("Bug", [
  ["path", { d: "m8 2 1.88 1.88", key: "fmnt4t" }],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M9 7.13v-1a3.003 3.003 0 1 1 6 0v1", key: "d7y7pr" }],
  [
    "path",
    {
      d: "M12 20c-3.3 0-6-2.7-6-6v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v3c0 3.3-2.7 6-6 6",
      key: "xs1cw7"
    }
  ],
  ["path", { d: "M12 20v-9", key: "1qisl0" }],
  ["path", { d: "M6.53 9C4.6 8.8 3 7.1 3 5", key: "32zzws" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "M3 21c0-2.1 1.7-3.9 3.8-4", key: "4p0ekp" }],
  ["path", { d: "M20.97 5c0 2.1-1.6 3.8-3.5 4", key: "18gb23" }],
  ["path", { d: "M22 13h-4", key: "1jl80f" }],
  ["path", { d: "M17.2 17c2.1.1 3.8 1.9 3.8 4", key: "k3fwyw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Building2 = createLucideIcon("Building2", [
  ["path", { d: "M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z", key: "1b4qmf" }],
  ["path", { d: "M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2", key: "i71pzd" }],
  ["path", { d: "M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2", key: "10jefs" }],
  ["path", { d: "M10 6h4", key: "1itunk" }],
  ["path", { d: "M10 10h4", key: "tcdvrf" }],
  ["path", { d: "M10 14h4", key: "kelpxr" }],
  ["path", { d: "M10 18h4", key: "1ulq68" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Building = createLucideIcon("Building", [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", ry: "2", key: "76otgf" }],
  ["path", { d: "M9 22v-4h6v4", key: "r93iot" }],
  ["path", { d: "M8 6h.01", key: "1dz90k" }],
  ["path", { d: "M16 6h.01", key: "1x0f13" }],
  ["path", { d: "M12 6h.01", key: "1vi96p" }],
  ["path", { d: "M12 10h.01", key: "1nrarc" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M16 10h.01", key: "1m94wz" }],
  ["path", { d: "M16 14h.01", key: "1gbofw" }],
  ["path", { d: "M8 10h.01", key: "19clt8" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const BusFront = createLucideIcon("BusFront", [
  ["path", { d: "M4 6 2 7", key: "1mqr15" }],
  ["path", { d: "M10 6h4", key: "1itunk" }],
  ["path", { d: "m22 7-2-1", key: "1umjhc" }],
  ["rect", { width: "16", height: "16", x: "4", y: "3", rx: "2", key: "1wxw4b" }],
  ["path", { d: "M4 11h16", key: "mpoxn0" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["path", { d: "M18 21v-2", key: "sqyl04" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Bus = createLucideIcon("Bus", [
  ["path", { d: "M8 6v6", key: "18i7km" }],
  ["path", { d: "M15 6v6", key: "1sg6z9" }],
  ["path", { d: "M2 12h19.6", key: "de5uta" }],
  [
    "path",
    {
      d: "M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3",
      key: "1wwztk"
    }
  ],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }],
  ["path", { d: "M9 18h5", key: "lrx6i" }],
  ["circle", { cx: "16", cy: "18", r: "2", key: "1v4tcr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CableCar = createLucideIcon("CableCar", [
  ["path", { d: "M10 3h.01", key: "lbucoy" }],
  ["path", { d: "M14 2h.01", key: "1k8aa1" }],
  ["path", { d: "m2 9 20-5", key: "1kz0j5" }],
  ["path", { d: "M12 12V6.5", key: "1vbrij" }],
  ["rect", { width: "16", height: "10", x: "4", y: "12", rx: "3", key: "if91er" }],
  ["path", { d: "M9 12v5", key: "3anwtq" }],
  ["path", { d: "M15 12v5", key: "5xh3zn" }],
  ["path", { d: "M4 17h16", key: "g4d7ey" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cable = createLucideIcon("Cable", [
  [
    "path",
    {
      d: "M17 21v-2a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1",
      key: "10bnsj"
    }
  ],
  ["path", { d: "M19 15V6.5a1 1 0 0 0-7 0v11a1 1 0 0 1-7 0V9", key: "1eqmu1" }],
  ["path", { d: "M21 21v-2h-4", key: "14zm7j" }],
  ["path", { d: "M3 5h4V3", key: "z442eg" }],
  [
    "path",
    { d: "M7 5a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a1 1 0 0 1 1-1V3", key: "ebdjd7" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CakeSlice = createLucideIcon("CakeSlice", [
  ["circle", { cx: "9", cy: "7", r: "2", key: "1305pl" }],
  [
    "path",
    { d: "M7.2 7.9 3 11v9c0 .6.4 1 1 1h16c.6 0 1-.4 1-1v-9c0-2-3-6-7-8l-3.6 2.6", key: "xle13f" }
  ],
  ["path", { d: "M16 13H3", key: "1wpj08" }],
  ["path", { d: "M16 17H3", key: "3lvfcd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cake = createLucideIcon("Cake", [
  ["path", { d: "M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8", key: "1w3rig" }],
  ["path", { d: "M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1", key: "n2jgmb" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }],
  ["path", { d: "M7 8v3", key: "1qtyvj" }],
  ["path", { d: "M12 8v3", key: "hwp4zt" }],
  ["path", { d: "M17 8v3", key: "1i6e5u" }],
  ["path", { d: "M7 4h.01", key: "1bh4kh" }],
  ["path", { d: "M12 4h.01", key: "1ujb9j" }],
  ["path", { d: "M17 4h.01", key: "1upcoc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Calculator = createLucideIcon("Calculator", [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["line", { x1: "8", x2: "16", y1: "6", y2: "6", key: "x4nwl0" }],
  ["line", { x1: "16", x2: "16", y1: "14", y2: "18", key: "wjye3r" }],
  ["path", { d: "M16 10h.01", key: "1m94wz" }],
  ["path", { d: "M12 10h.01", key: "1nrarc" }],
  ["path", { d: "M8 10h.01", key: "19clt8" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Calendar1 = createLucideIcon("Calendar1", [
  ["path", { d: "M11 14h1v4", key: "fy54vd" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarArrowDown = createLucideIcon("CalendarArrowDown", [
  ["path", { d: "m14 18 4 4 4-4", key: "1waygx" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M18 14v8", key: "irew45" }],
  [
    "path",
    { d: "M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343", key: "bse4f3" }
  ],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarArrowUp = createLucideIcon("CalendarArrowUp", [
  ["path", { d: "m14 18 4-4 4 4", key: "ftkppy" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M18 22v-8", key: "su0gjh" }],
  ["path", { d: "M21 11.343V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9", key: "1exg90" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarCheck2 = createLucideIcon("CalendarCheck2", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "bce9hv" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m16 20 2 2 4-4", key: "13tcca" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarCheck = createLucideIcon("CalendarCheck", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m9 16 2 2 4-4", key: "19s6y9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarClock = createLucideIcon("CalendarClock", [
  ["path", { d: "M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5", key: "1osxxc" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M3 10h5", key: "r794hk" }],
  ["path", { d: "M17.5 17.5 16 16.3V14", key: "akvzfd" }],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarCog = createLucideIcon("CalendarCog", [
  ["path", { d: "m15.2 16.9-.9-.4", key: "1r0w5f" }],
  ["path", { d: "m15.2 19.1-.9.4", key: "j188fs" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "m16.9 15.2-.4-.9", key: "699xu" }],
  ["path", { d: "m16.9 20.8-.4.9", key: "dfjc4z" }],
  ["path", { d: "m19.5 14.3-.4.9", key: "1eb35c" }],
  ["path", { d: "m19.5 21.7-.4-.9", key: "1tonu5" }],
  ["path", { d: "M21 10.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "11kmuh" }],
  ["path", { d: "m21.7 16.5-.9.4", key: "1knoei" }],
  ["path", { d: "m21.7 19.5-.9-.4", key: "q4dx6b" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarDays = createLucideIcon("CalendarDays", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M16 14h.01", key: "1gbofw" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M16 18h.01", key: "kzsmim" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarFold = createLucideIcon("CalendarFold", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 17V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11Z", key: "kg77oy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M15 22v-4a2 2 0 0 1 2-2h4", key: "1gnbqr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarHeart = createLucideIcon("CalendarHeart", [
  ["path", { d: "M3 10h18V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7", key: "136lmk" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  [
    "path",
    {
      d: "M21.29 14.7a2.43 2.43 0 0 0-2.65-.52c-.3.12-.57.3-.8.53l-.34.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L17.5 22l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z",
      key: "1t7hil"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarMinus2 = createLucideIcon("CalendarMinus2", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M10 16h4", key: "17e571" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarMinus = createLucideIcon("CalendarMinus", [
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5", key: "1scpom" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarOff = createLucideIcon("CalendarOff", [
  ["path", { d: "M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18", key: "16swn3" }],
  ["path", { d: "M21 15.5V6a2 2 0 0 0-2-2H9.5", key: "yhw86o" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h7", key: "1wap6i" }],
  ["path", { d: "M21 10h-5.5", key: "quycpq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarPlus2 = createLucideIcon("CalendarPlus2", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M10 16h4", key: "17e571" }],
  ["path", { d: "M12 14v4", key: "1thi36" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarPlus = createLucideIcon("CalendarPlus", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "3spt84" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarRange = createLucideIcon("CalendarRange", [
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M17 14h-6", key: "bkmgh3" }],
  ["path", { d: "M13 18H7", key: "bb0bb7" }],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 18h.01", key: "1bdyru" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarSearch = createLucideIcon("CalendarSearch", [
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 11.75V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.25", key: "1jrsq6" }],
  ["path", { d: "m22 22-1.875-1.875", key: "13zax7" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarSync = createLucideIcon("CalendarSync", [
  ["path", { d: "M11 10v4h4", key: "172dkj" }],
  ["path", { d: "m11 14 1.535-1.605a5 5 0 0 1 8 1.5", key: "vu0qm5" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "m21 18-1.535 1.605a5 5 0 0 1-8-1.5", key: "1qgeyt" }],
  ["path", { d: "M21 22v-4h-4", key: "hrummi" }],
  ["path", { d: "M21 8.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h4.3", key: "mctw84" }],
  ["path", { d: "M3 10h4", key: "1el30a" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarX2 = createLucideIcon("CalendarX2", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "3spt84" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m17 22 5-5", key: "1k6ppv" }],
  ["path", { d: "m17 17 5 5", key: "p7ous7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CalendarX = createLucideIcon("CalendarX", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m14 14-4 4", key: "rymu2i" }],
  ["path", { d: "m10 14 4 4", key: "3sz06r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Calendar$1 = createLucideIcon("Calendar", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CameraOff = createLucideIcon("CameraOff", [
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }],
  ["path", { d: "M7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16", key: "qmtpty" }],
  ["path", { d: "M9.5 4h5L17 7h3a2 2 0 0 1 2 2v7.5", key: "1ufyfc" }],
  ["path", { d: "M14.121 15.121A3 3 0 1 1 9.88 10.88", key: "11zox6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Camera = createLucideIcon("Camera", [
  [
    "path",
    {
      d: "M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",
      key: "1tc9qg"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "3", key: "1vg3eu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CandyCane = createLucideIcon("CandyCane", [
  [
    "path",
    {
      d: "M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z",
      key: "isaq8g"
    }
  ],
  ["path", { d: "M17.75 7 15 2.1", key: "12x7e8" }],
  ["path", { d: "M10.9 4.8 13 9", key: "100a87" }],
  ["path", { d: "m7.9 9.7 2 4.4", key: "ntfhaj" }],
  ["path", { d: "M4.9 14.7 7 18.9", key: "1x43jy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CandyOff = createLucideIcon("CandyOff", [
  ["path", { d: "m8.5 8.5-1 1a4.95 4.95 0 0 0 7 7l1-1", key: "1ff4ui" }],
  [
    "path",
    { d: "M11.843 6.187A4.947 4.947 0 0 1 16.5 7.5a4.947 4.947 0 0 1 1.313 4.657", key: "1sbrv4" }
  ],
  ["path", { d: "M14 16.5V14", key: "1maf8j" }],
  ["path", { d: "M14 6.5v1.843", key: "1a6u6t" }],
  ["path", { d: "M10 10v7.5", key: "80pj65" }],
  [
    "path",
    {
      d: "m16 7 1-5 1.367.683A3 3 0 0 0 19.708 3H21v1.292a3 3 0 0 0 .317 1.341L22 7l-5 1",
      key: "11a9mt"
    }
  ],
  [
    "path",
    {
      d: "m8 17-1 5-1.367-.683A3 3 0 0 0 4.292 21H3v-1.292a3 3 0 0 0-.317-1.341L2 17l5-1",
      key: "3mjmon"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Candy = createLucideIcon("Candy", [
  ["path", { d: "m9.5 7.5-2 2a4.95 4.95 0 1 0 7 7l2-2a4.95 4.95 0 1 0-7-7Z", key: "ue6khb" }],
  ["path", { d: "M14 6.5v10", key: "5xnk7c" }],
  ["path", { d: "M10 7.5v10", key: "1uew51" }],
  [
    "path",
    { d: "m16 7 1-5 1.37.68A3 3 0 0 0 19.7 3H21v1.3c0 .46.1.92.32 1.33L22 7l-5 1", key: "b9cp6k" }
  ],
  [
    "path",
    { d: "m8 17-1 5-1.37-.68A3 3 0 0 0 4.3 21H3v-1.3a3 3 0 0 0-.32-1.33L2 17l5-1", key: "5lney8" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cannabis = createLucideIcon("Cannabis", [
  ["path", { d: "M12 22v-4", key: "1utk9m" }],
  [
    "path",
    {
      d: "M7 12c-1.5 0-4.5 1.5-5 3 3.5 1.5 6 1 6 1-1.5 1.5-2 3.5-2 5 2.5 0 4.5-1.5 6-3 1.5 1.5 3.5 3 6 3 0-1.5-.5-3.5-2-5 0 0 2.5.5 6-1-.5-1.5-3.5-3-5-3 1.5-1 4-4 4-6-2.5 0-5.5 1.5-7 3 0-2.5-.5-5-2-7-1.5 2-2 4.5-2 7-1.5-1.5-4.5-3-7-3 0 2 2.5 5 4 6",
      key: "1mezod"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CaptionsOff = createLucideIcon("CaptionsOff", [
  ["path", { d: "M10.5 5H19a2 2 0 0 1 2 2v8.5", key: "jqtk4d" }],
  ["path", { d: "M17 11h-.5", key: "1961ue" }],
  ["path", { d: "M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2", key: "1keqsi" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M7 11h4", key: "1o1z6v" }],
  ["path", { d: "M7 15h2.5", key: "1ina1g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Captions = createLucideIcon("Captions", [
  ["rect", { width: "18", height: "14", x: "3", y: "5", rx: "2", ry: "2", key: "12ruh7" }],
  ["path", { d: "M7 15h4M15 15h2M7 11h2M13 11h4", key: "1ueiar" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CarFront = createLucideIcon("CarFront", [
  [
    "path",
    { d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8", key: "1imjwt" }
  ],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  ["rect", { width: "18", height: "8", x: "3", y: "10", rx: "2", key: "a7itu8" }],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CarTaxiFront = createLucideIcon("CarTaxiFront", [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  [
    "path",
    { d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8", key: "1imjwt" }
  ],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  ["rect", { width: "18", height: "8", x: "3", y: "10", rx: "2", key: "a7itu8" }],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Car = createLucideIcon("Car", [
  [
    "path",
    {
      d: "M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2",
      key: "5owen"
    }
  ],
  ["circle", { cx: "7", cy: "17", r: "2", key: "u2ysq9" }],
  ["path", { d: "M9 17h6", key: "r8uit2" }],
  ["circle", { cx: "17", cy: "17", r: "2", key: "axvx0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Caravan = createLucideIcon("Caravan", [
  ["path", { d: "M18 19V9a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v8a2 2 0 0 0 2 2h2", key: "19jm3t" }],
  ["path", { d: "M2 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2", key: "13hakp" }],
  ["path", { d: "M22 17v1a1 1 0 0 1-1 1H10v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9", key: "1crci8" }],
  ["circle", { cx: "8", cy: "19", r: "2", key: "t8fc5s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Carrot = createLucideIcon("Carrot", [
  [
    "path",
    {
      d: "M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46",
      key: "rfqxbe"
    }
  ],
  ["path", { d: "M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z", key: "6b25w4" }],
  ["path", { d: "M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z", key: "fn65lo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CaseLower = createLucideIcon("CaseLower", [
  ["circle", { cx: "7", cy: "12", r: "3", key: "12clwm" }],
  ["path", { d: "M10 9v6", key: "17i7lo" }],
  ["circle", { cx: "17", cy: "12", r: "3", key: "gl7c2s" }],
  ["path", { d: "M14 7v8", key: "dl84cr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CaseSensitive = createLucideIcon("CaseSensitive", [
  ["path", { d: "m3 15 4-8 4 8", key: "1vwr6u" }],
  ["path", { d: "M4 13h6", key: "1r9ots" }],
  ["circle", { cx: "18", cy: "12", r: "3", key: "1kchzo" }],
  ["path", { d: "M21 9v6", key: "anns31" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CaseUpper = createLucideIcon("CaseUpper", [
  ["path", { d: "m3 15 4-8 4 8", key: "1vwr6u" }],
  ["path", { d: "M4 13h6", key: "1r9ots" }],
  ["path", { d: "M15 11h4.5a2 2 0 0 1 0 4H15V7h4a2 2 0 0 1 0 4", key: "1sqfas" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CassetteTape = createLucideIcon("CassetteTape", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["circle", { cx: "8", cy: "10", r: "2", key: "1xl4ub" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["circle", { cx: "16", cy: "10", r: "2", key: "r14t7q" }],
  ["path", { d: "m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3", key: "l01ucn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cast = createLucideIcon("Cast", [
  ["path", { d: "M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6", key: "3zrzxg" }],
  ["path", { d: "M2 12a9 9 0 0 1 8 8", key: "g6cvee" }],
  ["path", { d: "M2 16a5 5 0 0 1 4 4", key: "1y1dii" }],
  ["line", { x1: "2", x2: "2.01", y1: "20", y2: "20", key: "xu2jvo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Castle = createLucideIcon("Castle", [
  ["path", { d: "M22 20v-9H2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2Z", key: "109fe4" }],
  ["path", { d: "M18 11V4H6v7", key: "mon5oj" }],
  ["path", { d: "M15 22v-4a3 3 0 0 0-3-3a3 3 0 0 0-3 3v4", key: "1k4jtn" }],
  ["path", { d: "M22 11V9", key: "3zbp94" }],
  ["path", { d: "M2 11V9", key: "1x5rnq" }],
  ["path", { d: "M6 4V2", key: "1rsq15" }],
  ["path", { d: "M18 4V2", key: "1jsdo1" }],
  ["path", { d: "M10 4V2", key: "75d9ly" }],
  ["path", { d: "M14 4V2", key: "8nj3z6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cat = createLucideIcon("Cat", [
  [
    "path",
    {
      d: "M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z",
      key: "x6xyqk"
    }
  ],
  ["path", { d: "M8 14v.5", key: "1nzgdb" }],
  ["path", { d: "M16 14v.5", key: "1lajdz" }],
  ["path", { d: "M11.25 16.25h1.5L12 17l-.75-.75Z", key: "12kq1m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cctv = createLucideIcon("Cctv", [
  [
    "path",
    {
      d: "M16.75 12h3.632a1 1 0 0 1 .894 1.447l-2.034 4.069a1 1 0 0 1-1.708.134l-2.124-2.97",
      key: "ir91b5"
    }
  ],
  [
    "path",
    {
      d: "M17.106 9.053a1 1 0 0 1 .447 1.341l-3.106 6.211a1 1 0 0 1-1.342.447L3.61 12.3a2.92 2.92 0 0 1-1.3-3.91L3.69 5.6a2.92 2.92 0 0 1 3.92-1.3z",
      key: "jlp8i1"
    }
  ],
  ["path", { d: "M2 19h3.76a2 2 0 0 0 1.8-1.1L9 15", key: "19bib8" }],
  ["path", { d: "M2 21v-4", key: "l40lih" }],
  ["path", { d: "M7 9h.01", key: "19b3jx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartArea = createLucideIcon("ChartArea", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  [
    "path",
    {
      d: "M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z",
      key: "q0gr47"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartBarBig = createLucideIcon("ChartBarBig", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "7", y: "13", width: "9", height: "4", rx: "1", key: "1iip1u" }],
  ["rect", { x: "7", y: "5", width: "12", height: "4", rx: "1", key: "1anskk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartBarDecreasing = createLucideIcon("ChartBarDecreasing", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 11h8", key: "1feolt" }],
  ["path", { d: "M7 16h3", key: "ur6vzw" }],
  ["path", { d: "M7 6h12", key: "sz5b0d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartBarIncreasing = createLucideIcon("ChartBarIncreasing", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 11h8", key: "1feolt" }],
  ["path", { d: "M7 16h12", key: "wsnu98" }],
  ["path", { d: "M7 6h3", key: "w9rmul" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartBarStacked = createLucideIcon("ChartBarStacked", [
  ["path", { d: "M11 13v4", key: "vyy2rb" }],
  ["path", { d: "M15 5v4", key: "1gx88a" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "7", y: "13", width: "9", height: "4", rx: "1", key: "1iip1u" }],
  ["rect", { x: "7", y: "5", width: "12", height: "4", rx: "1", key: "1anskk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartBar = createLucideIcon("ChartBar", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 16h8", key: "srdodz" }],
  ["path", { d: "M7 11h12", key: "127s9w" }],
  ["path", { d: "M7 6h3", key: "w9rmul" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartCandlestick = createLucideIcon("ChartCandlestick", [
  ["path", { d: "M9 5v4", key: "14uxtq" }],
  ["rect", { width: "4", height: "6", x: "7", y: "9", rx: "1", key: "f4fvz0" }],
  ["path", { d: "M9 15v2", key: "r5rk32" }],
  ["path", { d: "M17 3v2", key: "1l2re6" }],
  ["rect", { width: "4", height: "8", x: "15", y: "5", rx: "1", key: "z38je5" }],
  ["path", { d: "M17 13v3", key: "5l0wba" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartColumnBig = createLucideIcon("ChartColumnBig", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "15", y: "5", width: "4", height: "12", rx: "1", key: "q8uenq" }],
  ["rect", { x: "7", y: "8", width: "4", height: "9", rx: "1", key: "sr5ea" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartColumnDecreasing = createLucideIcon("ChartColumnDecreasing", [
  ["path", { d: "M13 17V9", key: "1fwyjl" }],
  ["path", { d: "M18 17v-3", key: "1sqioe" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 17V5", key: "1wzmnc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartColumnIncreasing = createLucideIcon("ChartColumnIncreasing", [
  ["path", { d: "M13 17V9", key: "1fwyjl" }],
  ["path", { d: "M18 17V5", key: "sfb6ij" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 17v-3", key: "17ska0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartColumnStacked = createLucideIcon("ChartColumnStacked", [
  ["path", { d: "M11 13H7", key: "t0o9gq" }],
  ["path", { d: "M19 9h-4", key: "rera1j" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "15", y: "5", width: "4", height: "12", rx: "1", key: "q8uenq" }],
  ["rect", { x: "7", y: "8", width: "4", height: "9", rx: "1", key: "sr5ea" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartColumn = createLucideIcon("ChartColumn", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M18 17V9", key: "2bz60n" }],
  ["path", { d: "M13 17V5", key: "1frdt8" }],
  ["path", { d: "M8 17v-3", key: "17ska0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartGantt = createLucideIcon("ChartGantt", [
  ["path", { d: "M10 6h8", key: "zvc2xc" }],
  ["path", { d: "M12 16h6", key: "yi5mkt" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 11h7", key: "wz2hg0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartLine = createLucideIcon("ChartLine", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "m19 9-5 5-4-4-3 3", key: "2osh9i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNetwork = createLucideIcon("ChartNetwork", [
  ["path", { d: "m13.11 7.664 1.78 2.672", key: "go2gg9" }],
  ["path", { d: "m14.162 12.788-3.324 1.424", key: "11x848" }],
  ["path", { d: "m20 4-6.06 1.515", key: "1wxxh7" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["circle", { cx: "12", cy: "6", r: "2", key: "1jj5th" }],
  ["circle", { cx: "16", cy: "12", r: "2", key: "4ma0v8" }],
  ["circle", { cx: "9", cy: "15", r: "2", key: "lf2ghp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNoAxesColumnDecreasing = createLucideIcon("ChartNoAxesColumnDecreasing", [
  ["path", { d: "M12 20V10", key: "g8npz5" }],
  ["path", { d: "M18 20v-4", key: "8uic4z" }],
  ["path", { d: "M6 20V4", key: "1w1bmo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNoAxesColumnIncreasing = createLucideIcon("ChartNoAxesColumnIncreasing", [
  ["line", { x1: "12", x2: "12", y1: "20", y2: "10", key: "1vz5eb" }],
  ["line", { x1: "18", x2: "18", y1: "20", y2: "4", key: "cun8e5" }],
  ["line", { x1: "6", x2: "6", y1: "20", y2: "16", key: "hq0ia6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNoAxesColumn = createLucideIcon("ChartNoAxesColumn", [
  ["line", { x1: "18", x2: "18", y1: "20", y2: "10", key: "1xfpm4" }],
  ["line", { x1: "12", x2: "12", y1: "20", y2: "4", key: "be30l9" }],
  ["line", { x1: "6", x2: "6", y1: "20", y2: "14", key: "1r4le6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNoAxesCombined = createLucideIcon("ChartNoAxesCombined", [
  ["path", { d: "M12 16v5", key: "zza2cw" }],
  ["path", { d: "M16 14v7", key: "1g90b9" }],
  ["path", { d: "M20 10v11", key: "1iqoj0" }],
  [
    "path",
    { d: "m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15", key: "1fw8x9" }
  ],
  ["path", { d: "M4 18v3", key: "1yp0dc" }],
  ["path", { d: "M8 14v7", key: "n3cwzv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartNoAxesGantt = createLucideIcon("ChartNoAxesGantt", [
  ["path", { d: "M8 6h10", key: "9lnwnk" }],
  ["path", { d: "M6 12h9", key: "1g9pqf" }],
  ["path", { d: "M11 18h7", key: "c8dzvl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartPie = createLucideIcon("ChartPie", [
  [
    "path",
    {
      d: "M21 12c.552 0 1.005-.449.95-.998a10 10 0 0 0-8.953-8.951c-.55-.055-.998.398-.998.95v8a1 1 0 0 0 1 1z",
      key: "pzmjnu"
    }
  ],
  ["path", { d: "M21.21 15.89A10 10 0 1 1 8 2.83", key: "k2fpak" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartScatter = createLucideIcon("ChartScatter", [
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }],
  ["circle", { cx: "18.5", cy: "5.5", r: ".5", fill: "currentColor", key: "lysivs" }],
  ["circle", { cx: "11.5", cy: "11.5", r: ".5", fill: "currentColor", key: "byv1b8" }],
  ["circle", { cx: "7.5", cy: "16.5", r: ".5", fill: "currentColor", key: "nkw3mc" }],
  ["circle", { cx: "17.5", cy: "14.5", r: ".5", fill: "currentColor", key: "1gjh6j" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChartSpline = createLucideIcon("ChartSpline", [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7", key: "lw07rv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CheckCheck = createLucideIcon("CheckCheck", [
  ["path", { d: "M18 6 7 17l-5-5", key: "116fxf" }],
  ["path", { d: "m22 10-7.5 7.5L13 16", key: "ke71qq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Check = createLucideIcon("Check", [["path", { d: "M20 6 9 17l-5-5", key: "1gmf2c" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChefHat = createLucideIcon("ChefHat", [
  [
    "path",
    {
      d: "M17 21a1 1 0 0 0 1-1v-5.35c0-.457.316-.844.727-1.041a4 4 0 0 0-2.134-7.589 5 5 0 0 0-9.186 0 4 4 0 0 0-2.134 7.588c.411.198.727.585.727 1.041V20a1 1 0 0 0 1 1Z",
      key: "1qvrer"
    }
  ],
  ["path", { d: "M6 17h12", key: "1jwigz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cherry = createLucideIcon("Cherry", [
  ["path", { d: "M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z", key: "cvxqlc" }],
  ["path", { d: "M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z", key: "1ostrc" }],
  ["path", { d: "M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12", key: "hqx58h" }],
  ["path", { d: "M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z", key: "eykp1o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronDown = createLucideIcon("ChevronDown", [
  ["path", { d: "m6 9 6 6 6-6", key: "qrunsl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronFirst = createLucideIcon("ChevronFirst", [
  ["path", { d: "m17 18-6-6 6-6", key: "1yerx2" }],
  ["path", { d: "M7 6v12", key: "1p53r6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronLast = createLucideIcon("ChevronLast", [
  ["path", { d: "m7 18 6-6-6-6", key: "lwmzdw" }],
  ["path", { d: "M17 6v12", key: "1o0aio" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronLeft = createLucideIcon("ChevronLeft", [
  ["path", { d: "m15 18-6-6 6-6", key: "1wnfg3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronRight = createLucideIcon("ChevronRight", [
  ["path", { d: "m9 18 6-6-6-6", key: "mthhwq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronUp = createLucideIcon("ChevronUp", [["path", { d: "m18 15-6-6-6 6", key: "153udz" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsDownUp = createLucideIcon("ChevronsDownUp", [
  ["path", { d: "m7 20 5-5 5 5", key: "13a0gw" }],
  ["path", { d: "m7 4 5 5 5-5", key: "1kwcof" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsDown = createLucideIcon("ChevronsDown", [
  ["path", { d: "m7 6 5 5 5-5", key: "1lc07p" }],
  ["path", { d: "m7 13 5 5 5-5", key: "1d48rs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsLeftRightEllipsis = createLucideIcon("ChevronsLeftRightEllipsis", [
  ["path", { d: "m18 8 4 4-4 4", key: "1ak13k" }],
  ["path", { d: "m6 8-4 4 4 4", key: "15zrgr" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsLeftRight = createLucideIcon("ChevronsLeftRight", [
  ["path", { d: "m9 7-5 5 5 5", key: "j5w590" }],
  ["path", { d: "m15 7 5 5-5 5", key: "1bl6da" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsLeft = createLucideIcon("ChevronsLeft", [
  ["path", { d: "m11 17-5-5 5-5", key: "13zhaf" }],
  ["path", { d: "m18 17-5-5 5-5", key: "h8a8et" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsRightLeft = createLucideIcon("ChevronsRightLeft", [
  ["path", { d: "m20 17-5-5 5-5", key: "30x0n2" }],
  ["path", { d: "m4 17 5-5-5-5", key: "16spf4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsRight = createLucideIcon("ChevronsRight", [
  ["path", { d: "m6 17 5-5-5-5", key: "xnjwq" }],
  ["path", { d: "m13 17 5-5-5-5", key: "17xmmf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsUpDown = createLucideIcon("ChevronsUpDown", [
  ["path", { d: "m7 15 5 5 5-5", key: "1hf1tw" }],
  ["path", { d: "m7 9 5-5 5 5", key: "sgt6xg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ChevronsUp = createLucideIcon("ChevronsUp", [
  ["path", { d: "m17 11-5-5-5 5", key: "e8nh98" }],
  ["path", { d: "m17 18-5-5-5 5", key: "2avn1x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Chrome = createLucideIcon("Chrome", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["line", { x1: "21.17", x2: "12", y1: "8", y2: "8", key: "a0cw5f" }],
  ["line", { x1: "3.95", x2: "8.54", y1: "6.06", y2: "14", key: "1kftof" }],
  ["line", { x1: "10.88", x2: "15.46", y1: "21.94", y2: "14", key: "1ymyh8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Church = createLucideIcon("Church", [
  ["path", { d: "M10 9h4", key: "u4k05v" }],
  ["path", { d: "M12 7v5", key: "ma6bk" }],
  ["path", { d: "M14 22v-4a2 2 0 0 0-4 0v4", key: "1pdhuj" }],
  [
    "path",
    {
      d: "M18 22V5.618a1 1 0 0 0-.553-.894l-4.553-2.277a2 2 0 0 0-1.788 0L6.553 4.724A1 1 0 0 0 6 5.618V22",
      key: "1rkokr"
    }
  ],
  [
    "path",
    {
      d: "m18 7 3.447 1.724a1 1 0 0 1 .553.894V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.618a1 1 0 0 1 .553-.894L6 7",
      key: "1w6esw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CigaretteOff = createLucideIcon("CigaretteOff", [
  ["path", { d: "M12 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h13", key: "1gdiyg" }],
  ["path", { d: "M18 8c0-2.5-2-2.5-2-5", key: "1il607" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M21 12a1 1 0 0 1 1 1v2a1 1 0 0 1-.5.866", key: "166zjj" }],
  ["path", { d: "M22 8c0-2.5-2-2.5-2-5", key: "1gah44" }],
  ["path", { d: "M7 12v4", key: "jqww69" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cigarette = createLucideIcon("Cigarette", [
  ["path", { d: "M17 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h14", key: "1mb5g1" }],
  ["path", { d: "M18 8c0-2.5-2-2.5-2-5", key: "1il607" }],
  ["path", { d: "M21 16a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1", key: "1yl5r7" }],
  ["path", { d: "M22 8c0-2.5-2-2.5-2-5", key: "1gah44" }],
  ["path", { d: "M7 12v4", key: "jqww69" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleAlert = createLucideIcon("CircleAlert", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "12", key: "1pkeuh" }],
  ["line", { x1: "12", x2: "12.01", y1: "16", y2: "16", key: "4dfq90" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowDown = createLucideIcon("CircleArrowDown", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8 12 4 4 4-4", key: "k98ssh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowLeft = createLucideIcon("CircleArrowLeft", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }],
  ["path", { d: "m12 8-4 4 4 4", key: "15vm53" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowOutDownLeft = createLucideIcon("CircleArrowOutDownLeft", [
  ["path", { d: "M2 12a10 10 0 1 1 10 10", key: "1yn6ov" }],
  ["path", { d: "m2 22 10-10", key: "28ilpk" }],
  ["path", { d: "M8 22H2v-6", key: "sulq54" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowOutDownRight = createLucideIcon("CircleArrowOutDownRight", [
  ["path", { d: "M12 22a10 10 0 1 1 10-10", key: "130bv5" }],
  ["path", { d: "M22 22 12 12", key: "131aw7" }],
  ["path", { d: "M22 16v6h-6", key: "1gvm70" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowOutUpLeft = createLucideIcon("CircleArrowOutUpLeft", [
  ["path", { d: "M2 8V2h6", key: "hiwtdz" }],
  ["path", { d: "m2 2 10 10", key: "1oh8rs" }],
  ["path", { d: "M12 2A10 10 0 1 1 2 12", key: "rrk4fa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowOutUpRight = createLucideIcon("CircleArrowOutUpRight", [
  ["path", { d: "M22 12A10 10 0 1 1 12 2", key: "1fm58d" }],
  ["path", { d: "M22 2 12 12", key: "yg2myt" }],
  ["path", { d: "M16 2h6v6", key: "zan5cs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowRight = createLucideIcon("CircleArrowRight", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m12 16 4-4-4-4", key: "1i9zcv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleArrowUp = createLucideIcon("CircleArrowUp", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleCheckBig = createLucideIcon("CircleCheckBig", [
  ["path", { d: "M21.801 10A10 10 0 1 1 17 3.335", key: "yps3ct" }],
  ["path", { d: "m9 11 3 3L22 4", key: "1pflzl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleCheck = createLucideIcon("CircleCheck", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleChevronDown = createLucideIcon("CircleChevronDown", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m16 10-4 4-4-4", key: "894hmk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleChevronLeft = createLucideIcon("CircleChevronLeft", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m14 16-4-4 4-4", key: "ojs7w8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleChevronRight = createLucideIcon("CircleChevronRight", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m10 8 4 4-4 4", key: "1wy4r4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleChevronUp = createLucideIcon("CircleChevronUp", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m8 14 4-4 4 4", key: "fy2ptz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleDashed = createLucideIcon("CircleDashed", [
  ["path", { d: "M10.1 2.182a10 10 0 0 1 3.8 0", key: "5ilxe3" }],
  ["path", { d: "M13.9 21.818a10 10 0 0 1-3.8 0", key: "11zvb9" }],
  ["path", { d: "M17.609 3.721a10 10 0 0 1 2.69 2.7", key: "1iw5b2" }],
  ["path", { d: "M2.182 13.9a10 10 0 0 1 0-3.8", key: "c0bmvh" }],
  ["path", { d: "M20.279 17.609a10 10 0 0 1-2.7 2.69", key: "1ruxm7" }],
  ["path", { d: "M21.818 10.1a10 10 0 0 1 0 3.8", key: "qkgqxc" }],
  ["path", { d: "M3.721 6.391a10 10 0 0 1 2.7-2.69", key: "1mcia2" }],
  ["path", { d: "M6.391 20.279a10 10 0 0 1-2.69-2.7", key: "1fvljs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleDivide = createLucideIcon("CircleDivide", [
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "16", key: "aqc6ln" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "8", key: "1mkcni" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleDollarSign = createLucideIcon("CircleDollarSign", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleDotDashed = createLucideIcon("CircleDotDashed", [
  ["path", { d: "M10.1 2.18a9.93 9.93 0 0 1 3.8 0", key: "1qdqn0" }],
  ["path", { d: "M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7", key: "1bq7p6" }],
  ["path", { d: "M21.82 10.1a9.93 9.93 0 0 1 0 3.8", key: "1rlaqf" }],
  ["path", { d: "M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69", key: "1xk03u" }],
  ["path", { d: "M13.9 21.82a9.94 9.94 0 0 1-3.8 0", key: "l7re25" }],
  ["path", { d: "M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7", key: "1v18p6" }],
  ["path", { d: "M2.18 13.9a9.93 9.93 0 0 1 0-3.8", key: "xdo6bj" }],
  ["path", { d: "M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69", key: "1jjmaz" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleDot = createLucideIcon("CircleDot", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleEllipsis = createLucideIcon("CircleEllipsis", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M17 12h.01", key: "1m0b6t" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M7 12h.01", key: "eqddd0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleEqual = createLucideIcon("CircleEqual", [
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M7 14h10", key: "1mhdw3" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleFadingArrowUp = createLucideIcon("CircleFadingArrowUp", [
  ["path", { d: "M12 2a10 10 0 0 1 7.38 16.75", key: "175t95" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }],
  ["path", { d: "M2.5 8.875a10 10 0 0 0-.5 3", key: "1vce0s" }],
  ["path", { d: "M2.83 16a10 10 0 0 0 2.43 3.4", key: "o3fkw4" }],
  ["path", { d: "M4.636 5.235a10 10 0 0 1 .891-.857", key: "1szpfk" }],
  ["path", { d: "M8.644 21.42a10 10 0 0 0 7.631-.38", key: "9yhvd4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleFadingPlus = createLucideIcon("CircleFadingPlus", [
  ["path", { d: "M12 2a10 10 0 0 1 7.38 16.75", key: "175t95" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }],
  ["path", { d: "M2.5 8.875a10 10 0 0 0-.5 3", key: "1vce0s" }],
  ["path", { d: "M2.83 16a10 10 0 0 0 2.43 3.4", key: "o3fkw4" }],
  ["path", { d: "M4.636 5.235a10 10 0 0 1 .891-.857", key: "1szpfk" }],
  ["path", { d: "M8.644 21.42a10 10 0 0 0 7.631-.38", key: "9yhvd4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleGauge = createLucideIcon("CircleGauge", [
  ["path", { d: "M15.6 2.7a10 10 0 1 0 5.7 5.7", key: "1e0p6d" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M13.4 10.6 19 5", key: "1kr7tw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleHelp = createLucideIcon("CircleHelp", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleMinus = createLucideIcon("CircleMinus", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleOff = createLucideIcon("CircleOff", [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.35 2.69A10 10 0 0 1 21.3 15.65", key: "1pfsoa" }],
  ["path", { d: "M19.08 19.08A10 10 0 1 1 4.92 4.92", key: "1ablyi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleParkingOff = createLucideIcon("CircleParkingOff", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m5 5 14 14", key: "11anup" }],
  ["path", { d: "M13 13a3 3 0 1 0 0-6H9v2", key: "uoagbd" }],
  ["path", { d: "M9 17v-2.34", key: "a9qo08" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleParking = createLucideIcon("CircleParking", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9 17V7h4a3 3 0 0 1 0 6H9", key: "1dfk2c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CirclePause = createLucideIcon("CirclePause", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "10", x2: "10", y1: "15", y2: "9", key: "c1nkhi" }],
  ["line", { x1: "14", x2: "14", y1: "15", y2: "9", key: "h65svq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CirclePercent = createLucideIcon("CirclePercent", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CirclePlay = createLucideIcon("CirclePlay", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polygon", { points: "10 8 16 12 10 16 10 8", key: "1cimsy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CirclePlus = createLucideIcon("CirclePlus", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CirclePower = createLucideIcon("CirclePower", [
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M7.998 9.003a5 5 0 1 0 8-.005", key: "1pek45" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleSlash2 = createLucideIcon("CircleSlash2", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M22 2 2 22", key: "y4kqgn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleSlash = createLucideIcon("CircleSlash", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "9", x2: "15", y1: "15", y2: "9", key: "1dfufj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleStop = createLucideIcon("CircleStop", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["rect", { x: "9", y: "9", width: "6", height: "6", rx: "1", key: "1ssd4o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleUserRound = createLucideIcon("CircleUserRound", [
  ["path", { d: "M18 20a6 6 0 0 0-12 0", key: "1qehca" }],
  ["circle", { cx: "12", cy: "10", r: "4", key: "1h16sb" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleUser = createLucideIcon("CircleUser", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662", key: "154egf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircleX = createLucideIcon("CircleX", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Circle = createLucideIcon("Circle", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CircuitBoard = createLucideIcon("CircuitBoard", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M11 9h4a2 2 0 0 0 2-2V3", key: "1ve2rv" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "M7 21v-4a2 2 0 0 1 2-2h4", key: "1fwkro" }],
  ["circle", { cx: "15", cy: "15", r: "2", key: "3i40o0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Citrus = createLucideIcon("Citrus", [
  [
    "path",
    {
      d: "M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z",
      key: "4ite01"
    }
  ],
  ["path", { d: "M19.65 15.66A8 8 0 0 1 8.35 4.34", key: "1gxipu" }],
  ["path", { d: "m14 10-5.5 5.5", key: "92pfem" }],
  ["path", { d: "M14 17.85V10H6.15", key: "xqmtsk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clapperboard = createLucideIcon("Clapperboard", [
  [
    "path",
    { d: "M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z", key: "1tn4o7" }
  ],
  ["path", { d: "m6.2 5.3 3.1 3.9", key: "iuk76l" }],
  ["path", { d: "m12.4 3.4 3.1 4", key: "6hsd6n" }],
  ["path", { d: "M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z", key: "ltgou9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardCheck = createLucideIcon("ClipboardCheck", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "m9 14 2 2 4-4", key: "df797q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardCopy = createLucideIcon("ClipboardCopy", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2", key: "4jdomd" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v4", key: "3hqy98" }],
  ["path", { d: "M21 14H11", key: "1bme5i" }],
  ["path", { d: "m15 10-4 4 4 4", key: "5dvupr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardList = createLucideIcon("ClipboardList", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M12 11h4", key: "1jrz19" }],
  ["path", { d: "M12 16h4", key: "n85exb" }],
  ["path", { d: "M8 11h.01", key: "1dfujw" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardMinus = createLucideIcon("ClipboardMinus", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 14h6", key: "159ibu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardPaste = createLucideIcon("ClipboardPaste", [
  [
    "path",
    { d: "M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z", key: "1pp7kr" }
  ],
  [
    "path",
    {
      d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10",
      key: "2ik1ml"
    }
  ],
  ["path", { d: "m17 10 4 4-4 4", key: "vp2hj1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardPenLine = createLucideIcon("ClipboardPenLine", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", key: "1oijnt" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5", key: "1but9f" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 1.73 1", key: "1p8n7l" }],
  ["path", { d: "M8 18h1", key: "13wk12" }],
  [
    "path",
    {
      d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "2t3380"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardPen = createLucideIcon("ClipboardPen", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", key: "1oijnt" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5", key: "cereej" }],
  ["path", { d: "M4 13.5V6a2 2 0 0 1 2-2h2", key: "5ua5vh" }],
  [
    "path",
    {
      d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1y4qbx"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardPlus = createLucideIcon("ClipboardPlus", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 14h6", key: "159ibu" }],
  ["path", { d: "M12 17v-6", key: "1y8rbf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardType = createLucideIcon("ClipboardType", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 12v-1h6v1", key: "iehl6m" }],
  ["path", { d: "M11 17h2", key: "12w5me" }],
  ["path", { d: "M12 11v6", key: "1bwqyc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClipboardX = createLucideIcon("ClipboardX", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "m15 11-6 6", key: "1toa9n" }],
  ["path", { d: "m9 11 6 6", key: "wlibny" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clipboard = createLucideIcon("Clipboard", [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock1 = createLucideIcon("Clock1", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 14.5 8", key: "12zbmj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock10 = createLucideIcon("Clock10", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 8 10", key: "atfzqc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock11 = createLucideIcon("Clock11", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 9.5 8", key: "l5bg6f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock12 = createLucideIcon("Clock12", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12", key: "1fub01" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock2 = createLucideIcon("Clock2", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 16 10", key: "1g230d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock3 = createLucideIcon("Clock3", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 16.5 12", key: "1aq6pp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock4 = createLucideIcon("Clock4", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 16 14", key: "68esgv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock5 = createLucideIcon("Clock5", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 14.5 16", key: "1pcbox" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock6 = createLucideIcon("Clock6", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 12 16.5", key: "hb2qv6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock7 = createLucideIcon("Clock7", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 9.5 16", key: "ka3394" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock8 = createLucideIcon("Clock8", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 8 14", key: "tmc9b4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock9 = createLucideIcon("Clock9", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 7.5 12", key: "1k60p0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClockAlert = createLucideIcon("ClockAlert", [
  ["path", { d: "M12 6v6l4 2", key: "mmk7yg" }],
  ["path", { d: "M16 21.16a10 10 0 1 1 5-13.516", key: "cxo92l" }],
  ["path", { d: "M20 11.5v6", key: "2ei3xq" }],
  ["path", { d: "M20 21.5h.01", key: "1r2dzp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClockArrowDown = createLucideIcon("ClockArrowDown", [
  ["path", { d: "M12.338 21.994A10 10 0 1 1 21.925 13.227", key: "1i7shu" }],
  ["path", { d: "M12 6v6l2 1", key: "19cm8n" }],
  ["path", { d: "m14 18 4 4 4-4", key: "1waygx" }],
  ["path", { d: "M18 14v8", key: "irew45" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ClockArrowUp = createLucideIcon("ClockArrowUp", [
  ["path", { d: "M13.228 21.925A10 10 0 1 1 21.994 12.338", key: "1fzlyi" }],
  ["path", { d: "M12 6v6l1.562.781", key: "1ujuk9" }],
  ["path", { d: "m14 18 4-4 4 4", key: "ftkppy" }],
  ["path", { d: "M18 22v-8", key: "su0gjh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clock = createLucideIcon("Clock", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["polyline", { points: "12 6 12 12 16 14", key: "68esgv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudAlert = createLucideIcon("CloudAlert", [
  ["path", { d: "M12 12v4", key: "tww15h" }],
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M17 18h.5a1 1 0 0 0 0-9h-1.79A7 7 0 1 0 7 17.708", key: "xsb5ju" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudCog = createLucideIcon("CloudCog", [
  ["circle", { cx: "12", cy: "17", r: "3", key: "1spfwm" }],
  ["path", { d: "M4.2 15.1A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2", key: "zaobp" }],
  ["path", { d: "m15.7 18.4-.9-.3", key: "4qxpbn" }],
  ["path", { d: "m9.2 15.9-.9-.3", key: "17q7o2" }],
  ["path", { d: "m10.6 20.7.3-.9", key: "1pf4s2" }],
  ["path", { d: "m13.1 14.2.3-.9", key: "1mnuqm" }],
  ["path", { d: "m13.6 20.7-.4-1", key: "1jpd1m" }],
  ["path", { d: "m10.8 14.3-.4-1", key: "17ugyy" }],
  ["path", { d: "m8.3 18.6 1-.4", key: "s42vdx" }],
  ["path", { d: "m14.7 15.8 1-.4", key: "2wizun" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudDownload = createLucideIcon("CloudDownload", [
  ["path", { d: "M12 13v8l-4-4", key: "1f5nwf" }],
  ["path", { d: "m12 21 4-4", key: "1lfcce" }],
  ["path", { d: "M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284", key: "ui1hmy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudDrizzle = createLucideIcon("CloudDrizzle", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M8 19v1", key: "1dk2by" }],
  ["path", { d: "M8 14v1", key: "84yxot" }],
  ["path", { d: "M16 19v1", key: "v220m7" }],
  ["path", { d: "M16 14v1", key: "g12gj6" }],
  ["path", { d: "M12 21v1", key: "q8vafk" }],
  ["path", { d: "M12 16v1", key: "1mx6rx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudFog = createLucideIcon("CloudFog", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 17H7", key: "pygtm1" }],
  ["path", { d: "M17 21H9", key: "1u2q02" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudHail = createLucideIcon("CloudHail", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 14v2", key: "a1is7l" }],
  ["path", { d: "M8 14v2", key: "1e9m6t" }],
  ["path", { d: "M16 20h.01", key: "xwek51" }],
  ["path", { d: "M8 20h.01", key: "1vjney" }],
  ["path", { d: "M12 16v2", key: "z66u1j" }],
  ["path", { d: "M12 22h.01", key: "1urd7a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudLightning = createLucideIcon("CloudLightning", [
  ["path", { d: "M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973", key: "1cez44" }],
  ["path", { d: "m13 12-3 5h4l-3 5", key: "1t22er" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudMoonRain = createLucideIcon("CloudMoonRain", [
  ["path", { d: "M10.188 8.5A6 6 0 0 1 16 4a1 1 0 0 0 6 6 6 6 0 0 1-3 5.197", key: "erj67n" }],
  ["path", { d: "M11 20v2", key: "174qtz" }],
  ["path", { d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24", key: "1qmrp3" }],
  ["path", { d: "M7 19v2", key: "12npes" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudMoon = createLucideIcon("CloudMoon", [
  ["path", { d: "M10.188 8.5A6 6 0 0 1 16 4a1 1 0 0 0 6 6 6 6 0 0 1-3 5.197", key: "erj67n" }],
  ["path", { d: "M13 16a3 3 0 1 1 0 6H7a5 5 0 1 1 4.9-6Z", key: "p44pc9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudOff = createLucideIcon("CloudOff", [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193", key: "yfwify" }],
  [
    "path",
    { d: "M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07", key: "jlfiyv" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudRainWind = createLucideIcon("CloudRainWind", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "m9.2 22 3-7", key: "sb5f6j" }],
  ["path", { d: "m9 13-3 7", key: "500co5" }],
  ["path", { d: "m17 13-3 7", key: "8t2fiy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudRain = createLucideIcon("CloudRain", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 14v6", key: "1j4efv" }],
  ["path", { d: "M8 14v6", key: "17c4r9" }],
  ["path", { d: "M12 16v6", key: "c8a4gj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudSnow = createLucideIcon("CloudSnow", [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M8 19h.01", key: "puxtts" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }],
  ["path", { d: "M12 21h.01", key: "h35vbk" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }],
  ["path", { d: "M16 19h.01", key: "1vcnzz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudSunRain = createLucideIcon("CloudSunRain", [
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }],
  ["path", { d: "M15.947 12.65a4 4 0 0 0-5.925-4.128", key: "dpwdj0" }],
  ["path", { d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24", key: "1qmrp3" }],
  ["path", { d: "M11 20v2", key: "174qtz" }],
  ["path", { d: "M7 19v2", key: "12npes" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudSun = createLucideIcon("CloudSun", [
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }],
  ["path", { d: "M15.947 12.65a4 4 0 0 0-5.925-4.128", key: "dpwdj0" }],
  ["path", { d: "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z", key: "s09mg5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CloudUpload = createLucideIcon("CloudUpload", [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "m8 17 4-4 4 4", key: "1quai1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cloud = createLucideIcon("Cloud", [
  ["path", { d: "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z", key: "p7xjir" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cloudy = createLucideIcon("Cloudy", [
  ["path", { d: "M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z", key: "gqqjvc" }],
  ["path", { d: "M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5", key: "1p2s76" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Clover = createLucideIcon("Clover", [
  ["path", { d: "M16.17 7.83 2 22", key: "t58vo8" }],
  [
    "path",
    {
      d: "M4.02 12a2.827 2.827 0 1 1 3.81-4.17A2.827 2.827 0 1 1 12 4.02a2.827 2.827 0 1 1 4.17 3.81A2.827 2.827 0 1 1 19.98 12a2.827 2.827 0 1 1-3.81 4.17A2.827 2.827 0 1 1 12 19.98a2.827 2.827 0 1 1-4.17-3.81A1 1 0 1 1 4 12",
      key: "17k36q"
    }
  ],
  ["path", { d: "m7.83 7.83 8.34 8.34", key: "1d7sxk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Club = createLucideIcon("Club", [
  [
    "path",
    {
      d: "M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z",
      key: "27yuqz"
    }
  ],
  ["path", { d: "M12 17.66L12 22", key: "ogfahf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CodeXml = createLucideIcon("CodeXml", [
  ["path", { d: "m18 16 4-4-4-4", key: "1inbqp" }],
  ["path", { d: "m6 8-4 4 4 4", key: "15zrgr" }],
  ["path", { d: "m14.5 4-5 16", key: "e7oirm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Code = createLucideIcon("Code", [
  ["polyline", { points: "16 18 22 12 16 6", key: "z7tu5w" }],
  ["polyline", { points: "8 6 2 12 8 18", key: "1eg1df" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Codepen = createLucideIcon("Codepen", [
  ["polygon", { points: "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2", key: "srzb37" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "15.5", key: "1t73f2" }],
  ["polyline", { points: "22 8.5 12 15.5 2 8.5", key: "ajlxae" }],
  ["polyline", { points: "2 15.5 12 8.5 22 15.5", key: "susrui" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "8.5", key: "2cldga" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Codesandbox = createLucideIcon("Codesandbox", [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ],
  ["polyline", { points: "7.5 4.21 12 6.81 16.5 4.21", key: "fabo96" }],
  ["polyline", { points: "7.5 19.79 7.5 14.6 3 12", key: "z377f1" }],
  ["polyline", { points: "21 12 16.5 14.6 16.5 19.79", key: "9nrev1" }],
  ["polyline", { points: "3.27 6.96 12 12.01 20.73 6.96", key: "1180pa" }],
  ["line", { x1: "12", x2: "12", y1: "22.08", y2: "12", key: "3z3uq6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Coffee = createLucideIcon("Coffee", [
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M14 2v2", key: "6buw04" }],
  [
    "path",
    {
      d: "M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1",
      key: "pwadti"
    }
  ],
  ["path", { d: "M6 2v2", key: "colzsn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cog = createLucideIcon("Cog", [
  ["path", { d: "M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z", key: "sobvz5" }],
  ["path", { d: "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z", key: "11i496" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 22v-2", key: "1osdcq" }],
  ["path", { d: "m17 20.66-1-1.73", key: "eq3orb" }],
  ["path", { d: "M11 10.27 7 3.34", key: "16pf9h" }],
  ["path", { d: "m20.66 17-1.73-1", key: "sg0v6f" }],
  ["path", { d: "m3.34 7 1.73 1", key: "1ulond" }],
  ["path", { d: "M14 12h8", key: "4f43i9" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "m20.66 7-1.73 1", key: "1ow05n" }],
  ["path", { d: "m3.34 17 1.73-1", key: "nuk764" }],
  ["path", { d: "m17 3.34-1 1.73", key: "2wel8s" }],
  ["path", { d: "m11 13.73-4 6.93", key: "794ttg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Coins = createLucideIcon("Coins", [
  ["circle", { cx: "8", cy: "8", r: "6", key: "3yglwk" }],
  ["path", { d: "M18.09 10.37A6 6 0 1 1 10.34 18", key: "t5s6rm" }],
  ["path", { d: "M7 6h1v4", key: "1obek4" }],
  ["path", { d: "m16.71 13.88.7.71-2.82 2.82", key: "1rbuyh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Columns2 = createLucideIcon("Columns2", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 3v18", key: "108xh3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Columns3 = createLucideIcon("Columns3", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Columns4 = createLucideIcon("Columns4", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7.5 3v18", key: "w0wo6v" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M16.5 3v18", key: "10tjh1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Combine = createLucideIcon("Combine", [
  ["path", { d: "M10 18H5a3 3 0 0 1-3-3v-1", key: "ru65g8" }],
  ["path", { d: "M14 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2", key: "e30een" }],
  ["path", { d: "M20 2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2", key: "2ahx8o" }],
  ["path", { d: "m7 21 3-3-3-3", key: "127cv2" }],
  ["rect", { x: "14", y: "14", width: "8", height: "8", rx: "2", key: "1b0bso" }],
  ["rect", { x: "2", y: "2", width: "8", height: "8", rx: "2", key: "1x09vl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Command$1 = createLucideIcon("Command", [
  [
    "path",
    { d: "M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3", key: "11bfej" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Compass = createLucideIcon("Compass", [
  [
    "path",
    {
      d: "m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z",
      key: "9ktpf1"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Component = createLucideIcon("Component", [
  [
    "path",
    {
      d: "M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z",
      key: "1uwlt4"
    }
  ],
  [
    "path",
    {
      d: "M2.297 11.293a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0z",
      key: "10291m"
    }
  ],
  [
    "path",
    {
      d: "M8.916 17.912a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0z",
      key: "1tqoq1"
    }
  ],
  [
    "path",
    {
      d: "M8.916 4.674a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z",
      key: "1x6lto"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Computer = createLucideIcon("Computer", [
  ["rect", { width: "14", height: "8", x: "5", y: "2", rx: "2", key: "wc9tft" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h2", key: "rwmk9e" }],
  ["path", { d: "M12 18h6", key: "aqd8w3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ConciergeBell = createLucideIcon("ConciergeBell", [
  [
    "path",
    { d: "M3 20a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1Z", key: "1pvr1r" }
  ],
  ["path", { d: "M20 16a8 8 0 1 0-16 0", key: "1pa543" }],
  ["path", { d: "M12 4v4", key: "1bq03y" }],
  ["path", { d: "M10 4h4", key: "1xpv9s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cone = createLucideIcon("Cone", [
  ["path", { d: "m20.9 18.55-8-15.98a1 1 0 0 0-1.8 0l-8 15.98", key: "53pte7" }],
  ["ellipse", { cx: "12", cy: "19", rx: "9", ry: "3", key: "1ji25f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Construction = createLucideIcon("Construction", [
  ["rect", { x: "2", y: "6", width: "20", height: "8", rx: "1", key: "1estib" }],
  ["path", { d: "M17 14v7", key: "7m2elx" }],
  ["path", { d: "M7 14v7", key: "1cm7wv" }],
  ["path", { d: "M17 3v3", key: "1v4jwn" }],
  ["path", { d: "M7 3v3", key: "7o6guu" }],
  ["path", { d: "M10 14 2.3 6.3", key: "1023jk" }],
  ["path", { d: "m14 6 7.7 7.7", key: "1s8pl2" }],
  ["path", { d: "m8 6 8 8", key: "hl96qh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ContactRound = createLucideIcon("ContactRound", [
  ["path", { d: "M16 2v2", key: "scm5qe" }],
  ["path", { d: "M17.915 22a6 6 0 0 0-12 0", key: "suqz9p" }],
  ["path", { d: "M8 2v2", key: "pbkmx" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Contact = createLucideIcon("Contact", [
  ["path", { d: "M16 2v2", key: "scm5qe" }],
  ["path", { d: "M7 22v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2", key: "1waht3" }],
  ["path", { d: "M8 2v2", key: "pbkmx" }],
  ["circle", { cx: "12", cy: "11", r: "3", key: "itu57m" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Container$1 = createLucideIcon("Container", [
  [
    "path",
    {
      d: "M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z",
      key: "1t2lqe"
    }
  ],
  ["path", { d: "M10 21.9V14L2.1 9.1", key: "o7czzq" }],
  ["path", { d: "m10 14 11.9-6.9", key: "zm5e20" }],
  ["path", { d: "M14 19.8v-8.1", key: "159ecu" }],
  ["path", { d: "M18 17.5V9.4", key: "11uown" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Contrast = createLucideIcon("Contrast", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 18a6 6 0 0 0 0-12v12z", key: "j4l70d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cookie = createLucideIcon("Cookie", [
  ["path", { d: "M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5", key: "laymnq" }],
  ["path", { d: "M8.5 8.5v.01", key: "ue8clq" }],
  ["path", { d: "M16 15.5v.01", key: "14dtrp" }],
  ["path", { d: "M12 12v.01", key: "u5ubse" }],
  ["path", { d: "M11 17v.01", key: "1hyl5a" }],
  ["path", { d: "M7 14v.01", key: "uct60s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CookingPot = createLucideIcon("CookingPot", [
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8", key: "u0tga0" }],
  ["path", { d: "m4 8 16-4", key: "16g0ng" }],
  [
    "path",
    {
      d: "m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8",
      key: "12cejc"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CopyCheck = createLucideIcon("CopyCheck", [
  ["path", { d: "m12 15 2 2 4-4", key: "2c609p" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CopyMinus = createLucideIcon("CopyMinus", [
  ["line", { x1: "12", x2: "18", y1: "15", y2: "15", key: "1nscbv" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CopyPlus = createLucideIcon("CopyPlus", [
  ["line", { x1: "15", x2: "15", y1: "12", y2: "18", key: "1p7wdc" }],
  ["line", { x1: "12", x2: "18", y1: "15", y2: "15", key: "1nscbv" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CopySlash = createLucideIcon("CopySlash", [
  ["line", { x1: "12", x2: "18", y1: "18", y2: "12", key: "ebkxgr" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CopyX = createLucideIcon("CopyX", [
  ["line", { x1: "12", x2: "18", y1: "12", y2: "18", key: "1rg63v" }],
  ["line", { x1: "12", x2: "18", y1: "18", y2: "12", key: "ebkxgr" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Copy = createLucideIcon("Copy", [
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Copyleft = createLucideIcon("Copyleft", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9.17 14.83a4 4 0 1 0 0-5.66", key: "1sveal" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Copyright = createLucideIcon("Copyright", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M14.83 14.83a4 4 0 1 1 0-5.66", key: "1i56pz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerDownLeft = createLucideIcon("CornerDownLeft", [
  ["polyline", { points: "9 10 4 15 9 20", key: "r3jprv" }],
  ["path", { d: "M20 4v7a4 4 0 0 1-4 4H4", key: "6o5b7l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerDownRight = createLucideIcon("CornerDownRight", [
  ["polyline", { points: "15 10 20 15 15 20", key: "1q7qjw" }],
  ["path", { d: "M4 4v7a4 4 0 0 0 4 4h12", key: "z08zvw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerLeftDown = createLucideIcon("CornerLeftDown", [
  ["polyline", { points: "14 15 9 20 4 15", key: "nkc4i" }],
  ["path", { d: "M20 4h-7a4 4 0 0 0-4 4v12", key: "nbpdq2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerLeftUp = createLucideIcon("CornerLeftUp", [
  ["polyline", { points: "14 9 9 4 4 9", key: "m9oyvo" }],
  ["path", { d: "M20 20h-7a4 4 0 0 1-4-4V4", key: "1blwi3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerRightDown = createLucideIcon("CornerRightDown", [
  ["polyline", { points: "10 15 15 20 20 15", key: "axus6l" }],
  ["path", { d: "M4 4h7a4 4 0 0 1 4 4v12", key: "wcbgct" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerRightUp = createLucideIcon("CornerRightUp", [
  ["polyline", { points: "10 9 15 4 20 9", key: "1lr6px" }],
  ["path", { d: "M4 20h7a4 4 0 0 0 4-4V4", key: "1plgdj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerUpLeft = createLucideIcon("CornerUpLeft", [
  ["polyline", { points: "9 14 4 9 9 4", key: "881910" }],
  ["path", { d: "M20 20v-7a4 4 0 0 0-4-4H4", key: "1nkjon" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CornerUpRight = createLucideIcon("CornerUpRight", [
  ["polyline", { points: "15 14 20 9 15 4", key: "1tbx3s" }],
  ["path", { d: "M4 20v-7a4 4 0 0 1 4-4h12", key: "1lu4f8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cpu = createLucideIcon("Cpu", [
  ["rect", { width: "16", height: "16", x: "4", y: "4", rx: "2", key: "14l7u7" }],
  ["rect", { width: "6", height: "6", x: "9", y: "9", rx: "1", key: "5aljv4" }],
  ["path", { d: "M15 2v2", key: "13l42r" }],
  ["path", { d: "M15 20v2", key: "15mkzm" }],
  ["path", { d: "M2 15h2", key: "1gxd5l" }],
  ["path", { d: "M2 9h2", key: "1bbxkp" }],
  ["path", { d: "M20 15h2", key: "19e6y8" }],
  ["path", { d: "M20 9h2", key: "19tzq7" }],
  ["path", { d: "M9 2v2", key: "165o2o" }],
  ["path", { d: "M9 20v2", key: "i2bqo8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CreativeCommons = createLucideIcon("CreativeCommons", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  [
    "path",
    { d: "M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1", key: "1ss3eq" }
  ],
  [
    "path",
    { d: "M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1", key: "1od56t" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CreditCard = createLucideIcon("CreditCard", [
  ["rect", { width: "20", height: "14", x: "2", y: "5", rx: "2", key: "ynyp8z" }],
  ["line", { x1: "2", x2: "22", y1: "10", y2: "10", key: "1b3vmo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Croissant = createLucideIcon("Croissant", [
  [
    "path",
    {
      d: "m4.6 13.11 5.79-3.21c1.89-1.05 4.79 1.78 3.71 3.71l-3.22 5.81C8.8 23.16.79 15.23 4.6 13.11Z",
      key: "1ozxlb"
    }
  ],
  [
    "path",
    {
      d: "m10.5 9.5-1-2.29C9.2 6.48 8.8 6 8 6H4.5C2.79 6 2 6.5 2 8.5a7.71 7.71 0 0 0 2 4.83",
      key: "ffuyb5"
    }
  ],
  ["path", { d: "M8 6c0-1.55.24-4-2-4-2 0-2.5 2.17-2.5 4", key: "osnpzi" }],
  [
    "path",
    {
      d: "m14.5 13.5 2.29 1c.73.3 1.21.7 1.21 1.5v3.5c0 1.71-.5 2.5-2.5 2.5a7.71 7.71 0 0 1-4.83-2",
      key: "1vubaw"
    }
  ],
  ["path", { d: "M18 16c1.55 0 4-.24 4 2 0 2-2.17 2.5-4 2.5", key: "wxr772" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Crop = createLucideIcon("Crop", [
  ["path", { d: "M6 2v14a2 2 0 0 0 2 2h14", key: "ron5a4" }],
  ["path", { d: "M18 22V8a2 2 0 0 0-2-2H2", key: "7s9ehn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cross = createLucideIcon("Cross", [
  [
    "path",
    {
      d: "M4 9a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a1 1 0 0 1 1 1v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a1 1 0 0 1 1-1h4a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-4a1 1 0 0 1-1-1V4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a1 1 0 0 1-1 1z",
      key: "1xbrqy"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Crosshair = createLucideIcon("Crosshair", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "22", x2: "18", y1: "12", y2: "12", key: "l9bcsi" }],
  ["line", { x1: "6", x2: "2", y1: "12", y2: "12", key: "13hhkx" }],
  ["line", { x1: "12", x2: "12", y1: "6", y2: "2", key: "10w3f3" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "18", key: "15g9kq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Crown = createLucideIcon("Crown", [
  [
    "path",
    {
      d: "M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z",
      key: "1vdc57"
    }
  ],
  ["path", { d: "M5 21h14", key: "11awu3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cuboid = createLucideIcon("Cuboid", [
  [
    "path",
    {
      d: "m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z",
      key: "1u2ovd"
    }
  ],
  ["path", { d: "M10 22v-8L2.25 9.15", key: "11pn4q" }],
  ["path", { d: "m10 14 11.77-6.87", key: "1kt1wh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const CupSoda = createLucideIcon("CupSoda", [
  ["path", { d: "m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8", key: "8166m8" }],
  ["path", { d: "M5 8h14", key: "pcz4l3" }],
  ["path", { d: "M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0", key: "yjz344" }],
  ["path", { d: "m12 8 1-6h2", key: "3ybfa4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Currency = createLucideIcon("Currency", [
  ["circle", { cx: "12", cy: "12", r: "8", key: "46899m" }],
  ["line", { x1: "3", x2: "6", y1: "3", y2: "6", key: "1jkytn" }],
  ["line", { x1: "21", x2: "18", y1: "3", y2: "6", key: "14zfjt" }],
  ["line", { x1: "3", x2: "6", y1: "21", y2: "18", key: "iusuec" }],
  ["line", { x1: "21", x2: "18", y1: "21", y2: "18", key: "yj2dd7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Cylinder = createLucideIcon("Cylinder", [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5v14a9 3 0 0 0 18 0V5", key: "aqi0yr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dam = createLucideIcon("Dam", [
  [
    "path",
    { d: "M11 11.31c1.17.56 1.54 1.69 3.5 1.69 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1", key: "157kva" }
  ],
  ["path", { d: "M11.75 18c.35.5 1.45 1 2.75 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1", key: "d7q6m6" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  [
    "path",
    { d: "M7 3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1L10 4a1 1 0 0 0-1-1z", key: "pr6s65" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DatabaseBackup = createLucideIcon("DatabaseBackup", [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 12a9 3 0 0 0 5 2.69", key: "1ui2ym" }],
  ["path", { d: "M21 9.3V5", key: "6k6cib" }],
  ["path", { d: "M3 5v14a9 3 0 0 0 6.47 2.88", key: "i62tjy" }],
  ["path", { d: "M12 12v4h4", key: "1bxaet" }],
  [
    "path",
    {
      d: "M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16",
      key: "1f4ei9"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DatabaseZap = createLucideIcon("DatabaseZap", [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5V19A9 3 0 0 0 15 21.84", key: "14ibmq" }],
  ["path", { d: "M21 5V8", key: "1marbg" }],
  ["path", { d: "M21 12L18 17H22L19 22", key: "zafso" }],
  ["path", { d: "M3 12A9 3 0 0 0 14.59 14.87", key: "1y4wr8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Database = createLucideIcon("Database", [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5V19A9 3 0 0 0 21 19V5", key: "1wlel7" }],
  ["path", { d: "M3 12A9 3 0 0 0 21 12", key: "mv7ke4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Delete = createLucideIcon("Delete", [
  [
    "path",
    {
      d: "M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z",
      key: "1yo7s0"
    }
  ],
  ["path", { d: "m12 9 6 6", key: "anjzzh" }],
  ["path", { d: "m18 9-6 6", key: "1fp51s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dessert = createLucideIcon("Dessert", [
  ["circle", { cx: "12", cy: "4", r: "2", key: "muu5ef" }],
  [
    "path",
    {
      d: "M10.2 3.2C5.5 4 2 8.1 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4 0c0-4.9-3.5-9-8.2-9.8",
      key: "lfo06j"
    }
  ],
  ["path", { d: "M3.2 14.8a9 9 0 0 0 17.6 0", key: "12xarc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Diameter = createLucideIcon("Diameter", [
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["circle", { cx: "5", cy: "5", r: "2", key: "1gwv83" }],
  ["path", { d: "M6.48 3.66a10 10 0 0 1 13.86 13.86", key: "xr8kdq" }],
  ["path", { d: "m6.41 6.41 11.18 11.18", key: "uhpjw7" }],
  ["path", { d: "M3.66 6.48a10 10 0 0 0 13.86 13.86", key: "cldpwv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DiamondMinus = createLucideIcon("DiamondMinus", [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z",
      key: "1ey20j"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DiamondPercent = createLucideIcon("DiamondPercent", [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z",
      key: "1tpxz2"
    }
  ],
  ["path", { d: "M9.2 9.2h.01", key: "1b7bvt" }],
  ["path", { d: "m14.5 9.5-5 5", key: "17q4r4" }],
  ["path", { d: "M14.7 14.8h.01", key: "17nsh4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DiamondPlus = createLucideIcon("DiamondPlus", [
  ["path", { d: "M12 8v8", key: "napkw2" }],
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z",
      key: "1ey20j"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Diamond = createLucideIcon("Diamond", [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z",
      key: "1f1r0c"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice1 = createLucideIcon("Dice1", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice2 = createLucideIcon("Dice2", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }],
  ["path", { d: "M9 15h.01", key: "fzyn71" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice3 = createLucideIcon("Dice3", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice4 = createLucideIcon("Dice4", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice5 = createLucideIcon("Dice5", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dice6 = createLucideIcon("Dice6", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dices = createLucideIcon("Dices", [
  ["rect", { width: "12", height: "12", x: "2", y: "10", rx: "2", ry: "2", key: "6agr2n" }],
  [
    "path",
    { d: "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6", key: "1o487t" }
  ],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 14h.01", key: "ssrbsk" }],
  ["path", { d: "M15 6h.01", key: "cblpky" }],
  ["path", { d: "M18 9h.01", key: "2061c0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Diff = createLucideIcon("Diff", [
  ["path", { d: "M12 3v14", key: "7cf3v8" }],
  ["path", { d: "M5 10h14", key: "elsbfy" }],
  ["path", { d: "M5 21h14", key: "11awu3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Disc2 = createLucideIcon("Disc2", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Disc3 = createLucideIcon("Disc3", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M6 12c0-1.7.7-3.2 1.8-4.2", key: "oqkarx" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M18 12c0 1.7-.7 3.2-1.8 4.2", key: "1eah9h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DiscAlbum = createLucideIcon("DiscAlbum", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "12", r: "5", key: "nd82uf" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Disc = createLucideIcon("Disc", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Divide = createLucideIcon("Divide", [
  ["circle", { cx: "12", cy: "6", r: "1", key: "1bh7o1" }],
  ["line", { x1: "5", x2: "19", y1: "12", y2: "12", key: "13b5wn" }],
  ["circle", { cx: "12", cy: "18", r: "1", key: "lqb9t5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DnaOff = createLucideIcon("DnaOff", [
  ["path", { d: "M15 2c-1.35 1.5-2.092 3-2.5 4.5L14 8", key: "1bivrr" }],
  ["path", { d: "m17 6-2.891-2.891", key: "xu6p2f" }],
  ["path", { d: "M2 15c3.333-3 6.667-3 10-3", key: "nxix30" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "m20 9 .891.891", key: "3xwk7g" }],
  ["path", { d: "M22 9c-1.5 1.35-3 2.092-4.5 2.5l-1-1", key: "18cutr" }],
  ["path", { d: "M3.109 14.109 4 15", key: "q76aoh" }],
  ["path", { d: "m6.5 12.5 1 1", key: "cs35ky" }],
  ["path", { d: "m7 18 2.891 2.891", key: "1sisit" }],
  ["path", { d: "M9 22c1.35-1.5 2.092-3 2.5-4.5L10 16", key: "rlvei3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dna = createLucideIcon("Dna", [
  ["path", { d: "m10 16 1.5 1.5", key: "11lckj" }],
  ["path", { d: "m14 8-1.5-1.5", key: "1ohn8i" }],
  ["path", { d: "M15 2c-1.798 1.998-2.518 3.995-2.807 5.993", key: "80uv8i" }],
  ["path", { d: "m16.5 10.5 1 1", key: "696xn5" }],
  ["path", { d: "m17 6-2.891-2.891", key: "xu6p2f" }],
  ["path", { d: "M2 15c6.667-6 13.333 0 20-6", key: "1pyr53" }],
  ["path", { d: "m20 9 .891.891", key: "3xwk7g" }],
  ["path", { d: "M3.109 14.109 4 15", key: "q76aoh" }],
  ["path", { d: "m6.5 12.5 1 1", key: "cs35ky" }],
  ["path", { d: "m7 18 2.891 2.891", key: "1sisit" }],
  ["path", { d: "M9 22c1.798-1.998 2.518-3.995 2.807-5.993", key: "q3hbxp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dock = createLucideIcon("Dock", [
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 16h12", key: "u522kt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dog = createLucideIcon("Dog", [
  ["path", { d: "M11.25 16.25h1.5L12 17z", key: "w7jh35" }],
  ["path", { d: "M16 14v.5", key: "1lajdz" }],
  [
    "path",
    {
      d: "M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444a11.702 11.702 0 0 0-.493-3.309",
      key: "u7s9ue"
    }
  ],
  ["path", { d: "M8 14v.5", key: "1nzgdb" }],
  [
    "path",
    {
      d: "M8.5 8.5c-.384 1.05-1.083 2.028-2.344 2.5-1.931.722-3.576-.297-3.656-1-.113-.994 1.177-6.53 4-7 1.923-.321 3.651.845 3.651 2.235A7.497 7.497 0 0 1 14 5.277c0-1.39 1.844-2.598 3.767-2.277 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5",
      key: "v8hric"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DollarSign = createLucideIcon("DollarSign", [
  ["line", { x1: "12", x2: "12", y1: "2", y2: "22", key: "7eqyqh" }],
  ["path", { d: "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6", key: "1b0p4s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Donut = createLucideIcon("Donut", [
  [
    "path",
    {
      d: "M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3",
      key: "19sr3x"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DoorClosed = createLucideIcon("DoorClosed", [
  ["path", { d: "M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14", key: "36qu9e" }],
  ["path", { d: "M2 20h20", key: "owomy5" }],
  ["path", { d: "M14 12v.01", key: "xfcn54" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DoorOpen = createLucideIcon("DoorOpen", [
  ["path", { d: "M13 4h3a2 2 0 0 1 2 2v14", key: "hrm0s9" }],
  ["path", { d: "M2 20h3", key: "1gaodv" }],
  ["path", { d: "M13 20h9", key: "s90cdi" }],
  ["path", { d: "M10 12v.01", key: "vx6srw" }],
  [
    "path",
    {
      d: "M13 4.562v16.157a1 1 0 0 1-1.242.97L5 20V5.562a2 2 0 0 1 1.515-1.94l4-1A2 2 0 0 1 13 4.561Z",
      key: "199qr4"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dot = createLucideIcon("Dot", [
  ["circle", { cx: "12.1", cy: "12.1", r: "1", key: "18d7e5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Download = createLucideIcon("Download", [
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }],
  ["polyline", { points: "7 10 12 15 17 10", key: "2ggqvy" }],
  ["line", { x1: "12", x2: "12", y1: "15", y2: "3", key: "1vk2je" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const DraftingCompass = createLucideIcon("DraftingCompass", [
  ["path", { d: "m12.99 6.74 1.93 3.44", key: "iwagvd" }],
  ["path", { d: "M19.136 12a10 10 0 0 1-14.271 0", key: "ppmlo4" }],
  ["path", { d: "m21 21-2.16-3.84", key: "vylbct" }],
  ["path", { d: "m3 21 8.02-14.26", key: "1ssaw4" }],
  ["circle", { cx: "12", cy: "5", r: "2", key: "f1ur92" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Drama = createLucideIcon("Drama", [
  ["path", { d: "M10 11h.01", key: "d2at3l" }],
  ["path", { d: "M14 6h.01", key: "k028ub" }],
  ["path", { d: "M18 6h.01", key: "1v4wsw" }],
  ["path", { d: "M6.5 13.1h.01", key: "1748ia" }],
  ["path", { d: "M22 5c0 9-4 12-6 12s-6-3-6-12c0-2 2-3 6-3s6 1 6 3", key: "172yzv" }],
  ["path", { d: "M17.4 9.9c-.8.8-2 .8-2.8 0", key: "1obv0w" }],
  [
    "path",
    {
      d: "M10.1 7.1C9 7.2 7.7 7.7 6 8.6c-3.5 2-4.7 3.9-3.7 5.6 4.5 7.8 9.5 8.4 11.2 7.4.9-.5 1.9-2.1 1.9-4.7",
      key: "rqjl8i"
    }
  ],
  ["path", { d: "M9.1 16.5c.3-1.1 1.4-1.7 2.4-1.4", key: "1mr6wy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dribbble = createLucideIcon("Dribbble", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94", key: "hpej1" }],
  ["path", { d: "M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32", key: "1tr44o" }],
  ["path", { d: "M8.56 2.75c4.37 6 6 9.42 8 17.72", key: "kbh691" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Drill = createLucideIcon("Drill", [
  [
    "path",
    { d: "M10 18a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H5a3 3 0 0 1-3-3 1 1 0 0 1 1-1z", key: "ioqxb1" }
  ],
  [
    "path",
    {
      d: "M13 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1l-.81 3.242a1 1 0 0 1-.97.758H8",
      key: "1rs59n"
    }
  ],
  ["path", { d: "M14 4h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3", key: "105ega" }],
  ["path", { d: "M18 6h4", key: "66u95g" }],
  ["path", { d: "m5 10-2 8", key: "xt2lic" }],
  ["path", { d: "m7 18 2-8", key: "1bzku2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Droplet = createLucideIcon("Droplet", [
  [
    "path",
    {
      d: "M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z",
      key: "c7niix"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Droplets = createLucideIcon("Droplets", [
  [
    "path",
    {
      d: "M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z",
      key: "1ptgy4"
    }
  ],
  [
    "path",
    {
      d: "M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97",
      key: "1sl1rz"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Drum = createLucideIcon("Drum", [
  ["path", { d: "m2 2 8 8", key: "1v6059" }],
  ["path", { d: "m22 2-8 8", key: "173r8a" }],
  ["ellipse", { cx: "12", cy: "9", rx: "10", ry: "5", key: "liohsx" }],
  ["path", { d: "M7 13.4v7.9", key: "1yi6u9" }],
  ["path", { d: "M12 14v8", key: "1tn2tj" }],
  ["path", { d: "M17 13.4v7.9", key: "eqz2v3" }],
  ["path", { d: "M2 9v8a10 5 0 0 0 20 0V9", key: "1750ul" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Drumstick = createLucideIcon("Drumstick", [
  [
    "path",
    { d: "M15.4 15.63a7.875 6 135 1 1 6.23-6.23 4.5 3.43 135 0 0-6.23 6.23", key: "1dtqwm" }
  ],
  [
    "path",
    {
      d: "m8.29 12.71-2.6 2.6a2.5 2.5 0 1 0-1.65 4.65A2.5 2.5 0 1 0 8.7 18.3l2.59-2.59",
      key: "1oq1fw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Dumbbell = createLucideIcon("Dumbbell", [
  ["path", { d: "M14.4 14.4 9.6 9.6", key: "ic80wn" }],
  [
    "path",
    {
      d: "M18.657 21.485a2 2 0 1 1-2.829-2.828l-1.767 1.768a2 2 0 1 1-2.829-2.829l6.364-6.364a2 2 0 1 1 2.829 2.829l-1.768 1.767a2 2 0 1 1 2.828 2.829z",
      key: "nnl7wr"
    }
  ],
  ["path", { d: "m21.5 21.5-1.4-1.4", key: "1f1ice" }],
  ["path", { d: "M3.9 3.9 2.5 2.5", key: "1evmna" }],
  [
    "path",
    {
      d: "M6.404 12.768a2 2 0 1 1-2.829-2.829l1.768-1.767a2 2 0 1 1-2.828-2.829l2.828-2.828a2 2 0 1 1 2.829 2.828l1.767-1.768a2 2 0 1 1 2.829 2.829z",
      key: "yhosts"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EarOff = createLucideIcon("EarOff", [
  ["path", { d: "M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46", key: "1qngmn" }],
  ["path", { d: "M6 8.5c0-.75.13-1.47.36-2.14", key: "b06bma" }],
  ["path", { d: "M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76", key: "g10hsz" }],
  ["path", { d: "M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18", key: "ygzou7" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ear = createLucideIcon("Ear", [
  ["path", { d: "M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0", key: "1dfaln" }],
  ["path", { d: "M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4", key: "1qnva7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EarthLock = createLucideIcon("EarthLock", [
  ["path", { d: "M7 3.34V5a3 3 0 0 0 3 3", key: "w732o8" }],
  ["path", { d: "M11 21.95V18a2 2 0 0 0-2-2 2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05", key: "f02343" }],
  ["path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54", key: "1djwo0" }],
  ["path", { d: "M12 2a10 10 0 1 0 9.54 13", key: "zjsr6q" }],
  ["path", { d: "M20 6V4a2 2 0 1 0-4 0v2", key: "1of5e8" }],
  ["rect", { width: "8", height: "5", x: "14", y: "6", rx: "1", key: "1fmf51" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Earth = createLucideIcon("Earth", [
  ["path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54", key: "1djwo0" }],
  [
    "path",
    {
      d: "M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17",
      key: "1tzkfa"
    }
  ],
  ["path", { d: "M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05", key: "14pb5j" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Eclipse = createLucideIcon("Eclipse", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 2a7 7 0 1 0 10 10", key: "1yuj32" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EggFried = createLucideIcon("EggFried", [
  ["circle", { cx: "11.5", cy: "12.5", r: "3.5", key: "1cl1mi" }],
  [
    "path",
    {
      d: "M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z",
      key: "165ef9"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EggOff = createLucideIcon("EggOff", [
  [
    "path",
    {
      d: "M6.399 6.399C5.362 8.157 4.65 10.189 4.5 12c-.37 4.43 1.27 9.95 7.5 10 3.256-.026 5.259-1.547 6.375-3.625",
      key: "6et380"
    }
  ],
  [
    "path",
    {
      d: "M19.532 13.875A14.07 14.07 0 0 0 19.5 12c-.36-4.34-3.95-9.96-7.5-10-1.04.012-2.082.502-3.046 1.297",
      key: "gcdc3f"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Egg = createLucideIcon("Egg", [
  [
    "path",
    {
      d: "M12 22c6.23-.05 7.87-5.57 7.5-10-.36-4.34-3.95-9.96-7.5-10-3.55.04-7.14 5.66-7.5 10-.37 4.43 1.27 9.95 7.5 10z",
      key: "1c39pg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EllipsisVertical = createLucideIcon("EllipsisVertical", [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["circle", { cx: "12", cy: "19", r: "1", key: "lyex9k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ellipsis = createLucideIcon("Ellipsis", [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "19", cy: "12", r: "1", key: "1wjl8i" }],
  ["circle", { cx: "5", cy: "12", r: "1", key: "1pcz8c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EqualApproximately = createLucideIcon("EqualApproximately", [
  ["path", { d: "M5 15a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0", key: "yrdkhy" }],
  ["path", { d: "M5 9a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0", key: "gzkvyz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EqualNot = createLucideIcon("EqualNot", [
  ["line", { x1: "5", x2: "19", y1: "9", y2: "9", key: "1nwqeh" }],
  ["line", { x1: "5", x2: "19", y1: "15", y2: "15", key: "g8yjpy" }],
  ["line", { x1: "19", x2: "5", y1: "5", y2: "19", key: "1x9vlm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Equal = createLucideIcon("Equal", [
  ["line", { x1: "5", x2: "19", y1: "9", y2: "9", key: "1nwqeh" }],
  ["line", { x1: "5", x2: "19", y1: "15", y2: "15", key: "g8yjpy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Eraser = createLucideIcon("Eraser", [
  [
    "path",
    {
      d: "m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21",
      key: "182aya"
    }
  ],
  ["path", { d: "M22 21H7", key: "t4ddhn" }],
  ["path", { d: "m5 11 9 9", key: "1mo9qw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EthernetPort = createLucideIcon("EthernetPort", [
  [
    "path",
    {
      d: "m15 20 3-3h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h2l3 3z",
      key: "rbahqx"
    }
  ],
  ["path", { d: "M6 8v1", key: "1636ez" }],
  ["path", { d: "M10 8v1", key: "1talb4" }],
  ["path", { d: "M14 8v1", key: "1rsfgr" }],
  ["path", { d: "M18 8v1", key: "gnkwox" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Euro = createLucideIcon("Euro", [
  ["path", { d: "M4 10h12", key: "1y6xl8" }],
  ["path", { d: "M4 14h9", key: "1loblj" }],
  [
    "path",
    {
      d: "M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2",
      key: "1j6lzo"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Expand = createLucideIcon("Expand", [
  ["path", { d: "m21 21-6-6m6 6v-4.8m0 4.8h-4.8", key: "1c15vz" }],
  ["path", { d: "M3 16.2V21m0 0h4.8M3 21l6-6", key: "1fsnz2" }],
  ["path", { d: "M21 7.8V3m0 0h-4.8M21 3l-6 6", key: "hawz9i" }],
  ["path", { d: "M3 7.8V3m0 0h4.8M3 3l6 6", key: "u9ee12" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ExternalLink = createLucideIcon("ExternalLink", [
  ["path", { d: "M15 3h6v6", key: "1q9fwt" }],
  ["path", { d: "M10 14 21 3", key: "gplh6r" }],
  ["path", { d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6", key: "a6xqqp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EyeClosed = createLucideIcon("EyeClosed", [
  ["path", { d: "m15 18-.722-3.25", key: "1j64jw" }],
  ["path", { d: "M2 8a10.645 10.645 0 0 0 20 0", key: "1e7gxb" }],
  ["path", { d: "m20 15-1.726-2.05", key: "1cnuld" }],
  ["path", { d: "m4 15 1.726-2.05", key: "1dsqqd" }],
  ["path", { d: "m9 18 .722-3.25", key: "ypw2yx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const EyeOff = createLucideIcon("EyeOff", [
  [
    "path",
    {
      d: "M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49",
      key: "ct8e1f"
    }
  ],
  ["path", { d: "M14.084 14.158a3 3 0 0 1-4.242-4.242", key: "151rxh" }],
  [
    "path",
    {
      d: "M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143",
      key: "13bj9a"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Eye = createLucideIcon("Eye", [
  [
    "path",
    {
      d: "M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",
      key: "1nclc0"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Facebook = createLucideIcon("Facebook", [
  [
    "path",
    { d: "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z", key: "1jg4f8" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Factory = createLucideIcon("Factory", [
  [
    "path",
    {
      d: "M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "159hny"
    }
  ],
  ["path", { d: "M17 18h1", key: "uldtlt" }],
  ["path", { d: "M12 18h1", key: "s9uhes" }],
  ["path", { d: "M7 18h1", key: "1neino" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fan = createLucideIcon("Fan", [
  [
    "path",
    {
      d: "M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z",
      key: "484a7f"
    }
  ],
  ["path", { d: "M12 12v.01", key: "u5ubse" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FastForward = createLucideIcon("FastForward", [
  ["polygon", { points: "13 19 22 12 13 5 13 19", key: "587y9g" }],
  ["polygon", { points: "2 19 11 12 2 5 2 19", key: "3pweh0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Feather = createLucideIcon("Feather", [
  [
    "path",
    {
      d: "M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z",
      key: "18jl4k"
    }
  ],
  ["path", { d: "M16 8 2 22", key: "vp34q" }],
  ["path", { d: "M17.5 15H9", key: "1oz8nu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fence = createLucideIcon("Fence", [
  ["path", { d: "M4 3 2 5v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "1n2rgs" }],
  ["path", { d: "M6 8h4", key: "utf9t1" }],
  ["path", { d: "M6 18h4", key: "12yh4b" }],
  ["path", { d: "m12 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "3ha7mj" }],
  ["path", { d: "M14 8h4", key: "1r8wg2" }],
  ["path", { d: "M14 18h4", key: "1t3kbu" }],
  ["path", { d: "m20 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "dfd4e2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FerrisWheel = createLucideIcon("FerrisWheel", [
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m6.8 15-3.5 2", key: "hjy98k" }],
  ["path", { d: "m20.7 7-3.5 2", key: "f08gto" }],
  ["path", { d: "M6.8 9 3.3 7", key: "1aevh4" }],
  ["path", { d: "m20.7 17-3.5-2", key: "1liqo3" }],
  ["path", { d: "m9 22 3-8 3 8", key: "wees03" }],
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M18 18.7a9 9 0 1 0-12 0", key: "dhzg4g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Figma = createLucideIcon("Figma", [
  ["path", { d: "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z", key: "1340ok" }],
  ["path", { d: "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z", key: "1hz3m3" }],
  ["path", { d: "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z", key: "1oz8n2" }],
  ["path", { d: "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z", key: "1ff65i" }],
  ["path", { d: "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z", key: "pdip6e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileArchive = createLucideIcon("FileArchive", [
  ["path", { d: "M10 12v-1", key: "v7bkov" }],
  ["path", { d: "M10 18v-2", key: "1cjy8d" }],
  ["path", { d: "M10 7V6", key: "dljcrl" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01", key: "gkbcor" }
  ],
  ["circle", { cx: "10", cy: "20", r: "2", key: "1xzdoj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileAudio2 = createLucideIcon("FileAudio2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2", key: "17k7jt" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "3", cy: "17", r: "1", key: "vo6nti" }],
  ["path", { d: "M2 17v-3a4 4 0 0 1 8 0v3", key: "1ggdre" }],
  ["circle", { cx: "9", cy: "17", r: "1", key: "bc1fq4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileAudio = createLucideIcon("FileAudio", [
  ["path", { d: "M17.5 22h.5a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "rslqgf" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M2 19a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0v-4a6 6 0 0 1 12 0v4a2 2 0 1 1-4 0v-1a2 2 0 1 1 4 0",
      key: "9f7x3i"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileAxis3d = createLucideIcon("FileAxis3d", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 18 4-4", key: "12zab0" }],
  ["path", { d: "M8 10v8h8", key: "tlaukw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileBadge2 = createLucideIcon("FileBadge2", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m14 12.5 1 5.5-3-1-3 1 1-5.5", key: "14xlky" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileBadge = createLucideIcon("FileBadge", [
  ["path", { d: "M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "12ixgl" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M5 17a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z", key: "u0c8gj" }],
  ["path", { d: "M7 16.5 8 22l-3-1-3 1 1-5.5", key: "5gm2nr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileBox = createLucideIcon("FileBox", [
  ["path", { d: "M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "16lz6z" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01Z",
      key: "99pj1s"
    }
  ],
  ["path", { d: "M7 17v5", key: "1yj1jh" }],
  ["path", { d: "M11.7 14.2 7 17l-4.7-2.8", key: "1yk8tc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileChartColumnIncreasing = createLucideIcon("FileChartColumnIncreasing", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 18v-2", key: "qcmpov" }],
  ["path", { d: "M12 18v-4", key: "q1q25u" }],
  ["path", { d: "M16 18v-6", key: "15y0np" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileChartColumn = createLucideIcon("FileChartColumn", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 18v-1", key: "zg0ygc" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }],
  ["path", { d: "M16 18v-3", key: "j5jt4h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileChartLine = createLucideIcon("FileChartLine", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m16 13-3.5 3.5-2-2L8 17", key: "zz7yod" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileChartPie = createLucideIcon("FileChartPie", [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.5", key: "13ddob" }],
  ["path", { d: "M4.017 11.512a6 6 0 1 0 8.466 8.475", key: "s6vs5t" }],
  [
    "path",
    {
      d: "M9 16a1 1 0 0 1-1-1v-4c0-.552.45-1.008.995-.917a6 6 0 0 1 4.922 4.922c.091.544-.365.995-.917.995z",
      key: "1dl6s6"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileCheck2 = createLucideIcon("FileCheck2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m3 15 2 2 4-4", key: "1lhrkk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileCheck = createLucideIcon("FileCheck", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m9 15 2 2 4-4", key: "1grp1n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileClock = createLucideIcon("FileClock", [
  ["path", { d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "37hlfg" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "8", cy: "16", r: "6", key: "10v15b" }],
  ["path", { d: "M9.5 17.5 8 16.25V14", key: "1o80t2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileCode2 = createLucideIcon("FileCode2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m5 12-3 3 3 3", key: "oke12k" }],
  ["path", { d: "m9 18 3-3-3-3", key: "112psh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileCode = createLucideIcon("FileCode", [
  ["path", { d: "M10 12.5 8 15l2 2.5", key: "1tg20x" }],
  ["path", { d: "m14 12.5 2 2.5-2 2.5", key: "yinavb" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileCog = createLucideIcon("FileCog", [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m3.2 12.9-.9-.4", key: "1i3dj5" }],
  ["path", { d: "m3.2 15.1-.9.4", key: "1fvgj0" }],
  [
    "path",
    {
      d: "M4.677 21.5a2 2 0 0 0 1.313.5H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2.5",
      key: "1yo3oz"
    }
  ],
  ["path", { d: "m4.9 11.2-.4-.9", key: "otmhb9" }],
  ["path", { d: "m4.9 16.8-.4.9", key: "1b8z07" }],
  ["path", { d: "m7.5 10.3-.4.9", key: "11k65u" }],
  ["path", { d: "m7.5 17.7-.4-.9", key: "431x55" }],
  ["path", { d: "m9.7 12.5-.9.4", key: "87sjan" }],
  ["path", { d: "m9.7 15.5-.9-.4", key: "khqm91" }],
  ["circle", { cx: "6", cy: "14", r: "3", key: "a1xfv6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileDiff = createLucideIcon("FileDiff", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }],
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "M9 17h6", key: "r8uit2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileDigit = createLucideIcon("FileDigit", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "4", height: "6", x: "2", y: "12", rx: "2", key: "jm304g" }],
  ["path", { d: "M10 12h2v6", key: "12zw74" }],
  ["path", { d: "M10 18h4", key: "1ulq68" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileDown = createLucideIcon("FileDown", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }],
  ["path", { d: "m9 15 3 3 3-3", key: "1npd3o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileHeart = createLucideIcon("FileHeart", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2", key: "17k7jt" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M10.29 10.7a2.43 2.43 0 0 0-2.66-.52c-.29.12-.56.3-.78.53l-.35.34-.35-.34a2.43 2.43 0 0 0-2.65-.53c-.3.12-.56.3-.79.53-.95.94-1 2.53.2 3.74L6.5 18l3.6-3.55c1.2-1.21 1.14-2.8.19-3.74Z",
      key: "1c1fso"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileImage = createLucideIcon("FileImage", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "10", cy: "12", r: "2", key: "737tya" }],
  ["path", { d: "m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22", key: "wt3hpn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileInput = createLucideIcon("FileInput", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M2 15h10", key: "jfw4w8" }],
  ["path", { d: "m9 18 3-3-3-3", key: "112psh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileJson2 = createLucideIcon("FileJson2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1", key: "fq0c9t" }
  ],
  [
    "path",
    { d: "M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1", key: "4gibmv" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileJson = createLucideIcon("FileJson", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1", key: "1oajmo" }
  ],
  [
    "path",
    { d: "M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1", key: "mpwhp6" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileKey2 = createLucideIcon("FileKey2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v6", key: "rc0qvx" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "4", cy: "16", r: "2", key: "1ehqvc" }],
  ["path", { d: "m10 10-4.5 4.5", key: "7fwrp6" }],
  ["path", { d: "m9 11 1 1", key: "wa6s5q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileKey = createLucideIcon("FileKey", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["circle", { cx: "10", cy: "16", r: "2", key: "4ckbqe" }],
  ["path", { d: "m16 10-4.5 4.5", key: "7p3ebg" }],
  ["path", { d: "m15 11 1 1", key: "1bsyx3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileLock2 = createLucideIcon("FileLock2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v1", key: "jmtmu2" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "8", height: "5", x: "2", y: "13", rx: "1", key: "10y5wo" }],
  ["path", { d: "M8 13v-2a2 2 0 1 0-4 0v2", key: "1pdxzg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileLock = createLucideIcon("FileLock", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["rect", { width: "8", height: "6", x: "8", y: "12", rx: "1", key: "3yr8at" }],
  ["path", { d: "M10 12v-2a2 2 0 1 1 4 0v2", key: "j4i8d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileMinus2 = createLucideIcon("FileMinus2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M3 15h6", key: "4e2qda" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileMinus = createLucideIcon("FileMinus", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileMusic = createLucideIcon("FileMusic", [
  ["path", { d: "M10.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v8.4", key: "1d3kfm" }],
  ["path", { d: "M8 18v-7.7L16 9v7", key: "1oie6o" }],
  ["circle", { cx: "14", cy: "16", r: "2", key: "1bzzi3" }],
  ["circle", { cx: "6", cy: "18", r: "2", key: "1fncim" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileOutput = createLucideIcon("FileOutput", [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M4 7V4a2 2 0 0 1 2-2 2 2 0 0 0-2 2", key: "1vk7w2" }],
  ["path", { d: "M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6", key: "1jink5" }],
  ["path", { d: "m5 11-3 3", key: "1dgrs4" }],
  ["path", { d: "m5 17-3-3h10", key: "1mvvaf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FilePenLine = createLucideIcon("FilePenLine", [
  [
    "path",
    {
      d: "m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2",
      key: "142zxg"
    }
  ],
  [
    "path",
    {
      d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "2t3380"
    }
  ],
  ["path", { d: "M8 18h1", key: "13wk12" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FilePen = createLucideIcon("FilePen", [
  ["path", { d: "M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5", key: "1couwa" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1y4qbx"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FilePlus2 = createLucideIcon("FilePlus2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M3 15h6", key: "4e2qda" }],
  ["path", { d: "M6 12v6", key: "1u72j0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FilePlus = createLucideIcon("FilePlus", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileQuestion = createLucideIcon("FileQuestion", [
  ["path", { d: "M12 17h.01", key: "p32p05" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  ["path", { d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3", key: "mhlwft" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileScan = createLucideIcon("FileScan", [
  ["path", { d: "M20 10V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4", key: "1rdf37" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M16 14a2 2 0 0 0-2 2", key: "ceaadl" }],
  ["path", { d: "M20 14a2 2 0 0 1 2 2", key: "1ny6zw" }],
  ["path", { d: "M20 22a2 2 0 0 0 2-2", key: "1l9q4k" }],
  ["path", { d: "M16 22a2 2 0 0 1-2-2", key: "1wqh5n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileSearch2 = createLucideIcon("FileSearch2", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "11.5", cy: "14.5", r: "2.5", key: "1bq0ko" }],
  ["path", { d: "M13.3 16.3 15 18", key: "2quom7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileSearch = createLucideIcon("FileSearch", [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "ms7g94" }
  ],
  ["path", { d: "m9 18-1.5-1.5", key: "1j6qii" }],
  ["circle", { cx: "5", cy: "14", r: "3", key: "ufru5t" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileSliders = createLucideIcon("FileSliders", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M10 11v2", key: "1s651w" }],
  ["path", { d: "M8 17h8", key: "wh5c61" }],
  ["path", { d: "M14 16v2", key: "12fp5e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileSpreadsheet = createLucideIcon("FileSpreadsheet", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 13h2", key: "yr2amv" }],
  ["path", { d: "M14 13h2", key: "un5t4a" }],
  ["path", { d: "M8 17h2", key: "2yhykz" }],
  ["path", { d: "M14 17h2", key: "10kma7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileStack = createLucideIcon("FileStack", [
  ["path", { d: "M21 7h-3a2 2 0 0 1-2-2V2", key: "9rb54x" }],
  [
    "path",
    {
      d: "M21 6v6.5c0 .8-.7 1.5-1.5 1.5h-7c-.8 0-1.5-.7-1.5-1.5v-9c0-.8.7-1.5 1.5-1.5H17Z",
      key: "1059l0"
    }
  ],
  ["path", { d: "M7 8v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H15", key: "16874u" }],
  ["path", { d: "M3 12v8.8c0 .3.2.6.4.8.2.2.5.4.8.4H11", key: "k2ox98" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileSymlink = createLucideIcon("FileSymlink", [
  ["path", { d: "m10 18 3-3-3-3", key: "18f6ys" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7",
      key: "50q2rw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileTerminal = createLucideIcon("FileTerminal", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 16 2-2-2-2", key: "10vzyd" }],
  ["path", { d: "M12 18h4", key: "1wd2n7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileText = createLucideIcon("FileText", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M10 9H8", key: "b1mrlr" }],
  ["path", { d: "M16 13H8", key: "t4e002" }],
  ["path", { d: "M16 17H8", key: "z1uh3a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileType2 = createLucideIcon("FileType2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M2 13v-1h6v1", key: "1dh9dg" }],
  ["path", { d: "M5 12v6", key: "150t9c" }],
  ["path", { d: "M4 18h2", key: "1xrofg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileType = createLucideIcon("FileType", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 13v-1h6v1", key: "1bb014" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  ["path", { d: "M11 18h2", key: "12mj7e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileUp = createLucideIcon("FileUp", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  ["path", { d: "m15 15-3-3-3 3", key: "15xj92" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileUser = createLucideIcon("FileUser", [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M15 18a3 3 0 1 0-6 0", key: "16awa0" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileVideo2 = createLucideIcon("FileVideo2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "8", height: "6", x: "2", y: "12", rx: "1", key: "1a6c1e" }],
  ["path", { d: "m10 15.5 4 2.5v-6l-4 2.5", key: "t7cp39" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileVideo = createLucideIcon("FileVideo", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m10 11 5 3-5 3v-6Z", key: "7ntvm4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileVolume2 = createLucideIcon("FileVolume2", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M11.5 13.5a2.5 2.5 0 0 1 0 3", key: "1fccat" }],
  ["path", { d: "M15 12a5 5 0 0 1 0 6", key: "ps46cm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileVolume = createLucideIcon("FileVolume", [
  ["path", { d: "M11 11a5 5 0 0 1 0 6", key: "193qb2" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4 6.765V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-.93-.23", key: "ifyjnl" }
  ],
  [
    "path",
    {
      d: "M7 10.51a.5.5 0 0 0-.826-.38l-1.893 1.628A1 1 0 0 1 3.63 12H2.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.129a1 1 0 0 1 .652.242l1.893 1.63a.5.5 0 0 0 .826-.38z",
      key: "mk8rxu"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileWarning = createLucideIcon("FileWarning", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M12 9v4", key: "juzpu7" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileX2 = createLucideIcon("FileX2", [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 12.5-5 5", key: "b853mi" }],
  ["path", { d: "m3 12.5 5 5", key: "1qls4r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FileX = createLucideIcon("FileX", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m14.5 12.5-5 5", key: "b62r18" }],
  ["path", { d: "m9.5 12.5 5 5", key: "1rk7el" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const File = createLucideIcon("File", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Files = createLucideIcon("Files", [
  ["path", { d: "M20 7h-3a2 2 0 0 1-2-2V2", key: "x099mo" }],
  ["path", { d: "M9 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h7l4 4v10a2 2 0 0 1-2 2Z", key: "18t6ie" }],
  ["path", { d: "M3 7.6v12.8A1.6 1.6 0 0 0 4.6 22h9.8", key: "1nja0z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Film = createLucideIcon("Film", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 3v18", key: "bbkbws" }],
  ["path", { d: "M3 7.5h4", key: "zfgn84" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "M3 16.5h4", key: "1230mu" }],
  ["path", { d: "M17 3v18", key: "in4fa5" }],
  ["path", { d: "M17 7.5h4", key: "myr1c1" }],
  ["path", { d: "M17 16.5h4", key: "go4c1d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FilterX = createLucideIcon("FilterX", [
  ["path", { d: "M13.013 3H2l8 9.46V19l4 2v-8.54l.9-1.055", key: "1fi1da" }],
  ["path", { d: "m22 3-5 5", key: "12jva0" }],
  ["path", { d: "m17 3 5 5", key: "k36vhe" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Filter$1 = createLucideIcon("Filter", [
  ["polygon", { points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3", key: "1yg77f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fingerprint = createLucideIcon("Fingerprint", [
  ["path", { d: "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4", key: "1nerag" }],
  ["path", { d: "M14 13.12c0 2.38 0 6.38-1 8.88", key: "o46ks0" }],
  ["path", { d: "M17.29 21.02c.12-.6.43-2.3.5-3.02", key: "ptglia" }],
  ["path", { d: "M2 12a10 10 0 0 1 18-6", key: "ydlgp0" }],
  ["path", { d: "M2 16h.01", key: "1gqxmh" }],
  ["path", { d: "M21.8 16c.2-2 .131-5.354 0-6", key: "drycrb" }],
  ["path", { d: "M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2", key: "1tidbn" }],
  ["path", { d: "M8.65 22c.21-.66.45-1.32.57-2", key: "13wd9y" }],
  ["path", { d: "M9 6.8a6 6 0 0 1 9 5.2v2", key: "1fr1j5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FireExtinguisher = createLucideIcon("FireExtinguisher", [
  ["path", { d: "M15 6.5V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3.5", key: "sqyvz" }],
  ["path", { d: "M9 18h8", key: "i7pszb" }],
  ["path", { d: "M18 3h-3", key: "7idoqj" }],
  ["path", { d: "M11 3a6 6 0 0 0-6 6v11", key: "1v5je3" }],
  ["path", { d: "M5 13h4", key: "svpcxo" }],
  ["path", { d: "M17 10a4 4 0 0 0-8 0v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2Z", key: "vsjego" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FishOff = createLucideIcon("FishOff", [
  [
    "path",
    {
      d: "M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058",
      key: "1j1hse"
    }
  ],
  [
    "path",
    {
      d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618",
      key: "1q46z8"
    }
  ],
  [
    "path",
    {
      d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20",
      key: "1407gh"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FishSymbol = createLucideIcon("FishSymbol", [
  ["path", { d: "M2 16s9-15 20-4C11 23 2 8 2 8", key: "h4oh4o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fish = createLucideIcon("Fish", [
  [
    "path",
    {
      d: "M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z",
      key: "15baut"
    }
  ],
  ["path", { d: "M18 12v.5", key: "18hhni" }],
  ["path", { d: "M16 17.93a9.77 9.77 0 0 1 0-11.86", key: "16dt7o" }],
  [
    "path",
    {
      d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33",
      key: "l9di03"
    }
  ],
  [
    "path",
    { d: "M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4", key: "1kjonw" }
  ],
  [
    "path",
    { d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98", key: "1zlm23" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlagOff = createLucideIcon("FlagOff", [
  ["path", { d: "M8 2c3 0 5 2 8 2s4-1 4-1v11", key: "9rwyz9" }],
  ["path", { d: "M4 22V4", key: "1plyxx" }],
  ["path", { d: "M4 15s1-1 4-1 5 2 8 2", key: "1myooe" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlagTriangleLeft = createLucideIcon("FlagTriangleLeft", [
  ["path", { d: "M17 22V2L7 7l10 5", key: "1rmf0r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlagTriangleRight = createLucideIcon("FlagTriangleRight", [
  ["path", { d: "M7 22V2l10 5-10 5", key: "17n18y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Flag = createLucideIcon("Flag", [
  ["path", { d: "M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z", key: "i9b6wo" }],
  ["line", { x1: "4", x2: "4", y1: "22", y2: "15", key: "1cm3nv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlameKindling = createLucideIcon("FlameKindling", [
  [
    "path",
    {
      d: "M12 2c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 17 10a5 5 0 1 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C8 4.5 11 2 12 2Z",
      key: "1ir223"
    }
  ],
  ["path", { d: "m5 22 14-4", key: "1brv4h" }],
  ["path", { d: "m5 18 14 4", key: "lgyyje" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Flame = createLucideIcon("Flame", [
  [
    "path",
    {
      d: "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z",
      key: "96xj49"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlashlightOff = createLucideIcon("FlashlightOff", [
  ["path", { d: "M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4", key: "1r120k" }],
  ["path", { d: "M7 2h11v4c0 2-2 2-2 4v1", key: "dz1920" }],
  ["line", { x1: "11", x2: "18", y1: "6", y2: "6", key: "bi1vpe" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Flashlight = createLucideIcon("Flashlight", [
  [
    "path",
    {
      d: "M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z",
      key: "1orkel"
    }
  ],
  ["line", { x1: "6", x2: "18", y1: "6", y2: "6", key: "1z11jq" }],
  ["line", { x1: "12", x2: "12", y1: "12", y2: "12", key: "1f4yc1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlaskConicalOff = createLucideIcon("FlaskConicalOff", [
  [
    "path",
    {
      d: "M10 10 4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-1.272-2.542",
      key: "59ek9y"
    }
  ],
  ["path", { d: "M10 2v2.343", key: "15t272" }],
  ["path", { d: "M14 2v6.343", key: "sxr80q" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }],
  ["path", { d: "M7 16h9", key: "t5njau" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlaskConical = createLucideIcon("FlaskConical", [
  [
    "path",
    {
      d: "M10 2v7.527a2 2 0 0 1-.211.896L4.72 20.55a1 1 0 0 0 .9 1.45h12.76a1 1 0 0 0 .9-1.45l-5.069-10.127A2 2 0 0 1 14 9.527V2",
      key: "pzvekw"
    }
  ],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }],
  ["path", { d: "M7 16h10", key: "wp8him" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlaskRound = createLucideIcon("FlaskRound", [
  ["path", { d: "M10 2v7.31", key: "5d1hyh" }],
  ["path", { d: "M14 9.3V1.99", key: "14k4l0" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }],
  ["path", { d: "M14 9.3a6.5 6.5 0 1 1-4 0", key: "1r8fvy" }],
  ["path", { d: "M5.52 16h12.96", key: "46hh1i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlipHorizontal2 = createLucideIcon("FlipHorizontal2", [
  ["path", { d: "m3 7 5 5-5 5V7", key: "couhi7" }],
  ["path", { d: "m21 7-5 5 5 5V7", key: "6ouia7" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 2v2", key: "tus03m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlipHorizontal = createLucideIcon("FlipHorizontal", [
  ["path", { d: "M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3", key: "1i73f7" }],
  ["path", { d: "M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3", key: "saxlbk" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 2v2", key: "tus03m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlipVertical2 = createLucideIcon("FlipVertical2", [
  ["path", { d: "m17 3-5 5-5-5h10", key: "1ftt6x" }],
  ["path", { d: "m17 21-5-5-5 5h10", key: "1m0wmu" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FlipVertical = createLucideIcon("FlipVertical", [
  ["path", { d: "M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3", key: "14bfxa" }],
  ["path", { d: "M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3", key: "14rx03" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Flower2 = createLucideIcon("Flower2", [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1",
      key: "3pnvol"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  ["path", { d: "M12 10v12", key: "6ubwww" }],
  ["path", { d: "M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z", key: "9hd38g" }],
  ["path", { d: "M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z", key: "ufn41s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Flower = createLucideIcon("Flower", [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  [
    "path",
    {
      d: "M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5",
      key: "14wa3c"
    }
  ],
  ["path", { d: "M12 7.5V9", key: "1oy5b0" }],
  ["path", { d: "M7.5 12H9", key: "eltsq1" }],
  ["path", { d: "M16.5 12H15", key: "vk5kw4" }],
  ["path", { d: "M12 16.5V15", key: "k7eayi" }],
  ["path", { d: "m8 8 1.88 1.88", key: "nxy4qf" }],
  ["path", { d: "M14.12 9.88 16 8", key: "1lst6k" }],
  ["path", { d: "m8 16 1.88-1.88", key: "h2eex1" }],
  ["path", { d: "M14.12 14.12 16 16", key: "uqkrx3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Focus = createLucideIcon("Focus", [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FoldHorizontal = createLucideIcon("FoldHorizontal", [
  ["path", { d: "M2 12h6", key: "1wqiqv" }],
  ["path", { d: "M22 12h-6", key: "1eg9hc" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m19 9-3 3 3 3", key: "12ol22" }],
  ["path", { d: "m5 15 3-3-3-3", key: "1kdhjc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FoldVertical = createLucideIcon("FoldVertical", [
  ["path", { d: "M12 22v-6", key: "6o8u61" }],
  ["path", { d: "M12 8V2", key: "1wkif3" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }],
  ["path", { d: "m15 19-3-3-3 3", key: "e37ymu" }],
  ["path", { d: "m15 5-3 3-3-3", key: "19d6lf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderArchive = createLucideIcon("FolderArchive", [
  ["circle", { cx: "15", cy: "19", r: "2", key: "u2pros" }],
  [
    "path",
    {
      d: "M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1",
      key: "1jj40k"
    }
  ],
  ["path", { d: "M15 11v-1", key: "cntcp" }],
  ["path", { d: "M15 17v-2", key: "1279jj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderCheck = createLucideIcon("FolderCheck", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "m9 13 2 2 4-4", key: "6343dt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderClock = createLucideIcon("FolderClock", [
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }],
  [
    "path",
    {
      d: "M7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2",
      key: "1urifu"
    }
  ],
  ["path", { d: "M16 14v2l1 1", key: "xth2jh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderClosed = createLucideIcon("FolderClosed", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M2 10h20", key: "1ir3d8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderCode = createLucideIcon("FolderCode", [
  ["path", { d: "M10 10.5 8 13l2 2.5", key: "m4t9c1" }],
  ["path", { d: "m14 10.5 2 2.5-2 2.5", key: "14w2eb" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2z",
      key: "1u1bxd"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderCog = createLucideIcon("FolderCog", [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  [
    "path",
    {
      d: "M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.3",
      key: "1k8050"
    }
  ],
  ["path", { d: "m21.7 19.4-.9-.3", key: "1qgwi9" }],
  ["path", { d: "m15.2 16.9-.9-.3", key: "1t7mvx" }],
  ["path", { d: "m16.6 21.7.3-.9", key: "1j67ps" }],
  ["path", { d: "m19.1 15.2.3-.9", key: "18r7jp" }],
  ["path", { d: "m19.6 21.7-.4-1", key: "z2vh2" }],
  ["path", { d: "m16.8 15.3-.4-1", key: "1ei7r6" }],
  ["path", { d: "m14.3 19.6 1-.4", key: "11sv9r" }],
  ["path", { d: "m20.7 16.8 1-.4", key: "19m87a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderDot = createLucideIcon("FolderDot", [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "1", key: "49l61u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderDown = createLucideIcon("FolderDown", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "m15 13-3 3-3-3", key: "6j2sf0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderGit2 = createLucideIcon("FolderGit2", [
  [
    "path",
    {
      d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5",
      key: "1w6njk"
    }
  ],
  ["circle", { cx: "13", cy: "12", r: "2", key: "1j92g6" }],
  ["path", { d: "M18 19c-2.8 0-5-2.2-5-5v8", key: "pkpw2h" }],
  ["circle", { cx: "20", cy: "19", r: "2", key: "1obnsp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderGit = createLucideIcon("FolderGit", [
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M14 13h3", key: "1dgedf" }],
  ["path", { d: "M7 13h3", key: "1pygq7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderHeart = createLucideIcon("FolderHeart", [
  [
    "path",
    {
      d: "M11 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v1.5",
      key: "6hud8k"
    }
  ],
  [
    "path",
    {
      d: "M13.9 17.45c-1.2-1.2-1.14-2.8-.2-3.73a2.43 2.43 0 0 1 3.44 0l.36.34.34-.34a2.43 2.43 0 0 1 3.45-.01c.95.95 1 2.53-.2 3.74L17.5 21Z",
      key: "wpff58"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderInput = createLucideIcon("FolderInput", [
  [
    "path",
    {
      d: "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1",
      key: "fm4g5t"
    }
  ],
  ["path", { d: "M2 13h10", key: "pgb2dq" }],
  ["path", { d: "m9 16 3-3-3-3", key: "6m91ic" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderKanban = createLucideIcon("FolderKanban", [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["path", { d: "M8 10v4", key: "tgpxqk" }],
  ["path", { d: "M12 10v2", key: "hh53o1" }],
  ["path", { d: "M16 10v6", key: "1d6xys" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderKey = createLucideIcon("FolderKey", [
  ["circle", { cx: "16", cy: "20", r: "2", key: "1vifvg" }],
  [
    "path",
    {
      d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2",
      key: "3hgo9p"
    }
  ],
  ["path", { d: "m22 14-4.5 4.5", key: "1ef6z8" }],
  ["path", { d: "m21 15 1 1", key: "1ejcpy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderLock = createLucideIcon("FolderLock", [
  ["rect", { width: "8", height: "5", x: "14", y: "17", rx: "1", key: "19aais" }],
  [
    "path",
    {
      d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2.5",
      key: "1w6v7t"
    }
  ],
  ["path", { d: "M20 17v-2a2 2 0 1 0-4 0v2", key: "pwaxnr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderMinus = createLucideIcon("FolderMinus", [
  ["path", { d: "M9 13h6", key: "1uhe8q" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderOpenDot = createLucideIcon("FolderOpenDot", [
  [
    "path",
    {
      d: "m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2",
      key: "1nmvlm"
    }
  ],
  ["circle", { cx: "14", cy: "15", r: "1", key: "1gm4qj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderOpen = createLucideIcon("FolderOpen", [
  [
    "path",
    {
      d: "m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2",
      key: "usdka0"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderOutput = createLucideIcon("FolderOutput", [
  [
    "path",
    {
      d: "M2 7.5V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-1.5",
      key: "1yk7aj"
    }
  ],
  ["path", { d: "M2 13h10", key: "pgb2dq" }],
  ["path", { d: "m5 10-3 3 3 3", key: "1r8ie0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderPen = createLucideIcon("FolderPen", [
  [
    "path",
    {
      d: "M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5",
      key: "a8xqs0"
    }
  ],
  [
    "path",
    {
      d: "M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1saktj"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderPlus = createLucideIcon("FolderPlus", [
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderRoot = createLucideIcon("FolderRoot", [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }],
  ["path", { d: "M12 15v5", key: "11xva1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderSearch2 = createLucideIcon("FolderSearch2", [
  ["circle", { cx: "11.5", cy: "12.5", r: "2.5", key: "1ea5ju" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M13.3 14.3 15 16", key: "1y4v1n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderSearch = createLucideIcon("FolderSearch", [
  [
    "path",
    {
      d: "M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1",
      key: "1bw5m7"
    }
  ],
  ["path", { d: "m21 21-1.9-1.9", key: "1g2n9r" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderSymlink = createLucideIcon("FolderSymlink", [
  [
    "path",
    {
      d: "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7",
      key: "x1c07l"
    }
  ],
  ["path", { d: "m8 16 3-3-3-3", key: "rlqrt1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderSync = createLucideIcon("FolderSync", [
  [
    "path",
    {
      d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v.5",
      key: "1dkoa9"
    }
  ],
  ["path", { d: "M12 10v4h4", key: "1czhmt" }],
  ["path", { d: "m12 14 1.535-1.605a5 5 0 0 1 8 1.5", key: "lvuxfi" }],
  ["path", { d: "M22 22v-4h-4", key: "1ewp4q" }],
  ["path", { d: "m22 18-1.535 1.605a5 5 0 0 1-8-1.5", key: "14ync0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderTree = createLucideIcon("FolderTree", [
  [
    "path",
    {
      d: "M20 10a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z",
      key: "hod4my"
    }
  ],
  [
    "path",
    {
      d: "M20 21a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.9a1 1 0 0 1-.88-.55l-.42-.85a1 1 0 0 0-.92-.6H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z",
      key: "w4yl2u"
    }
  ],
  ["path", { d: "M3 5a2 2 0 0 0 2 2h3", key: "f2jnh7" }],
  ["path", { d: "M3 3v13a2 2 0 0 0 2 2h3", key: "k8epm1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderUp = createLucideIcon("FolderUp", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "m9 13 3-3 3 3", key: "1pxg3c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const FolderX = createLucideIcon("FolderX", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "m9.5 10.5 5 5", key: "ra9qjz" }],
  ["path", { d: "m14.5 10.5-5 5", key: "l2rkpq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Folder = createLucideIcon("Folder", [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Folders = createLucideIcon("Folders", [
  [
    "path",
    {
      d: "M20 17a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3.9a2 2 0 0 1-1.69-.9l-.81-1.2a2 2 0 0 0-1.67-.9H8a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2Z",
      key: "4u7rpt"
    }
  ],
  ["path", { d: "M2 8v11a2 2 0 0 0 2 2h14", key: "1eicx1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Footprints = createLucideIcon("Footprints", [
  [
    "path",
    {
      d: "M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z",
      key: "1dudjm"
    }
  ],
  [
    "path",
    {
      d: "M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z",
      key: "l2t8xc"
    }
  ],
  ["path", { d: "M16 17h4", key: "1dejxt" }],
  ["path", { d: "M4 13h4", key: "1bwh8b" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Forklift = createLucideIcon("Forklift", [
  ["path", { d: "M12 12H5a2 2 0 0 0-2 2v5", key: "7zsz91" }],
  ["circle", { cx: "13", cy: "19", r: "2", key: "wjnkru" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }],
  ["path", { d: "M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5", key: "13bk1p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Forward = createLucideIcon("Forward", [
  ["polyline", { points: "15 17 20 12 15 7", key: "1w3sku" }],
  ["path", { d: "M4 18v-2a4 4 0 0 1 4-4h12", key: "jmiej9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Frame = createLucideIcon("Frame", [
  ["line", { x1: "22", x2: "2", y1: "6", y2: "6", key: "15w7dq" }],
  ["line", { x1: "22", x2: "2", y1: "18", y2: "18", key: "1ip48p" }],
  ["line", { x1: "6", x2: "6", y1: "2", y2: "22", key: "a2lnyx" }],
  ["line", { x1: "18", x2: "18", y1: "2", y2: "22", key: "8vb6jd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Framer = createLucideIcon("Framer", [
  ["path", { d: "M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7", key: "1a2nng" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Frown = createLucideIcon("Frown", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 16s-1.5-2-4-2-4 2-4 2", key: "epbg0q" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fuel = createLucideIcon("Fuel", [
  ["line", { x1: "3", x2: "15", y1: "22", y2: "22", key: "xegly4" }],
  ["line", { x1: "4", x2: "14", y1: "9", y2: "9", key: "xcnuvu" }],
  ["path", { d: "M14 22V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v18", key: "16j0yd" }],
  [
    "path",
    {
      d: "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 2 2a2 2 0 0 0 2-2V9.83a2 2 0 0 0-.59-1.42L18 5",
      key: "7cu91f"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Fullscreen = createLucideIcon("Fullscreen", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["rect", { width: "10", height: "8", x: "7", y: "8", rx: "1", key: "vys8me" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GalleryHorizontalEnd = createLucideIcon("GalleryHorizontalEnd", [
  ["path", { d: "M2 7v10", key: "a2pl2d" }],
  ["path", { d: "M6 5v14", key: "1kq3d7" }],
  ["rect", { width: "12", height: "18", x: "10", y: "3", rx: "2", key: "13i7bc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GalleryHorizontal = createLucideIcon("GalleryHorizontal", [
  ["path", { d: "M2 3v18", key: "pzttux" }],
  ["rect", { width: "12", height: "18", x: "6", y: "3", rx: "2", key: "btr8bg" }],
  ["path", { d: "M22 3v18", key: "6jf3v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GalleryThumbnails = createLucideIcon("GalleryThumbnails", [
  ["rect", { width: "18", height: "14", x: "3", y: "3", rx: "2", key: "74y24f" }],
  ["path", { d: "M4 21h1", key: "16zlid" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M19 21h1", key: "edywat" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GalleryVerticalEnd = createLucideIcon("GalleryVerticalEnd", [
  ["path", { d: "M7 2h10", key: "nczekb" }],
  ["path", { d: "M5 6h14", key: "u2x4p" }],
  ["rect", { width: "18", height: "12", x: "3", y: "10", rx: "2", key: "l0tzu3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GalleryVertical = createLucideIcon("GalleryVertical", [
  ["path", { d: "M3 2h18", key: "15qxfx" }],
  ["rect", { width: "18", height: "12", x: "3", y: "6", rx: "2", key: "1439r6" }],
  ["path", { d: "M3 22h18", key: "8prr45" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gamepad2 = createLucideIcon("Gamepad2", [
  ["line", { x1: "6", x2: "10", y1: "11", y2: "11", key: "1gktln" }],
  ["line", { x1: "8", x2: "8", y1: "9", y2: "13", key: "qnk9ow" }],
  ["line", { x1: "15", x2: "15.01", y1: "12", y2: "12", key: "krot7o" }],
  ["line", { x1: "18", x2: "18.01", y1: "10", y2: "10", key: "1lcuu1" }],
  [
    "path",
    {
      d: "M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z",
      key: "mfqc10"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gamepad = createLucideIcon("Gamepad", [
  ["line", { x1: "6", x2: "10", y1: "12", y2: "12", key: "161bw2" }],
  ["line", { x1: "8", x2: "8", y1: "10", y2: "14", key: "1i6ji0" }],
  ["line", { x1: "15", x2: "15.01", y1: "13", y2: "13", key: "dqpgro" }],
  ["line", { x1: "18", x2: "18.01", y1: "11", y2: "11", key: "meh2c" }],
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gauge = createLucideIcon("Gauge", [
  ["path", { d: "m12 14 4-4", key: "9kzdfg" }],
  ["path", { d: "M3.34 19a10 10 0 1 1 17.32 0", key: "19p75a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gavel = createLucideIcon("Gavel", [
  ["path", { d: "m14.5 12.5-8 8a2.119 2.119 0 1 1-3-3l8-8", key: "15492f" }],
  ["path", { d: "m16 16 6-6", key: "vzrcl6" }],
  ["path", { d: "m8 8 6-6", key: "18bi4p" }],
  ["path", { d: "m9 7 8 8", key: "5jnvq1" }],
  ["path", { d: "m21 11-8-8", key: "z4y7zo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gem = createLucideIcon("Gem", [
  ["path", { d: "M6 3h12l4 6-10 13L2 9Z", key: "1pcd5k" }],
  ["path", { d: "M11 3 8 9l4 13 4-13-3-6", key: "1fcu3u" }],
  ["path", { d: "M2 9h20", key: "16fsjt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ghost = createLucideIcon("Ghost", [
  ["path", { d: "M9 10h.01", key: "qbtxuw" }],
  ["path", { d: "M15 10h.01", key: "1qmjsl" }],
  [
    "path",
    {
      d: "M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z",
      key: "uwwb07"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gift = createLucideIcon("Gift", [
  ["rect", { x: "3", y: "8", width: "18", height: "4", rx: "1", key: "bkv52" }],
  ["path", { d: "M12 8v13", key: "1c76mn" }],
  ["path", { d: "M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7", key: "6wjy6b" }],
  [
    "path",
    {
      d: "M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5",
      key: "1ihvrl"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitBranchPlus = createLucideIcon("GitBranchPlus", [
  ["path", { d: "M6 3v12", key: "qpgusn" }],
  ["path", { d: "M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z", key: "1d02ji" }],
  ["path", { d: "M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z", key: "chk6ph" }],
  ["path", { d: "M15 6a9 9 0 0 0-9 9", key: "or332x" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitBranch = createLucideIcon("GitBranch", [
  ["line", { x1: "6", x2: "6", y1: "3", y2: "15", key: "17qcm7" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["path", { d: "M18 9a9 9 0 0 1-9 9", key: "n2h4wq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitCommitHorizontal = createLucideIcon("GitCommitHorizontal", [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["line", { x1: "3", x2: "9", y1: "12", y2: "12", key: "1dyftd" }],
  ["line", { x1: "15", x2: "21", y1: "12", y2: "12", key: "oup4p8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitCommitVertical = createLucideIcon("GitCommitVertical", [
  ["path", { d: "M12 3v6", key: "1holv5" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "M12 15v6", key: "a9ows0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitCompareArrows = createLucideIcon("GitCompareArrows", [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v7", key: "1yj91y" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["circle", { cx: "19", cy: "18", r: "3", key: "1qljk2" }],
  ["path", { d: "M12 18H7a2 2 0 0 1-2-2V9", key: "16sdep" }],
  ["path", { d: "m9 15 3 3-3 3", key: "1m3kbl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitCompare = createLucideIcon("GitCompare", [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v7", key: "1yeb86" }],
  ["path", { d: "M11 18H8a2 2 0 0 1-2-2V9", key: "19pyzm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitFork = createLucideIcon("GitFork", [
  ["circle", { cx: "12", cy: "18", r: "3", key: "1mpf1b" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }],
  ["path", { d: "M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9", key: "1uq4wg" }],
  ["path", { d: "M12 12v3", key: "158kv8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitGraph = createLucideIcon("GitGraph", [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v6", key: "158jrl" }],
  ["circle", { cx: "5", cy: "18", r: "3", key: "104gr9" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["circle", { cx: "19", cy: "6", r: "3", key: "108a5v" }],
  ["path", { d: "M16 15.7A9 9 0 0 0 19 9", key: "1e3vqb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitMerge = createLucideIcon("GitMerge", [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 21V9a9 9 0 0 0 9 9", key: "7kw0sc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequestArrow = createLucideIcon("GitPullRequestArrow", [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v12", key: "ih889a" }],
  ["circle", { cx: "19", cy: "18", r: "3", key: "1qljk2" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v7", key: "1yj91y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequestClosed = createLucideIcon("GitPullRequestClosed", [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 9v12", key: "1sc30k" }],
  ["path", { d: "m21 3-6 6", key: "16nqsk" }],
  ["path", { d: "m21 9-6-6", key: "9j17rh" }],
  ["path", { d: "M18 11.5V15", key: "65xf6f" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequestCreateArrow = createLucideIcon("GitPullRequestCreateArrow", [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v12", key: "ih889a" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v3", key: "1rbwk6" }],
  ["path", { d: "M19 15v6", key: "10aioa" }],
  ["path", { d: "M22 18h-6", key: "1d5gi5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequestCreate = createLucideIcon("GitPullRequestCreate", [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 9v12", key: "1sc30k" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v3", key: "1jb6z3" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequestDraft = createLucideIcon("GitPullRequestDraft", [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M18 6V5", key: "1oao2s" }],
  ["path", { d: "M18 11v-1", key: "11c8tz" }],
  ["line", { x1: "6", x2: "6", y1: "9", y2: "21", key: "rroup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GitPullRequest = createLucideIcon("GitPullRequest", [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v7", key: "1yeb86" }],
  ["line", { x1: "6", x2: "6", y1: "9", y2: "21", key: "rroup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Github = createLucideIcon("Github", [
  [
    "path",
    {
      d: "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4",
      key: "tonef"
    }
  ],
  ["path", { d: "M9 18c-4.51 2-5-2-7-2", key: "9comsn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Gitlab = createLucideIcon("Gitlab", [
  [
    "path",
    {
      d: "m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z",
      key: "148pdi"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GlassWater = createLucideIcon("GlassWater", [
  [
    "path",
    {
      d: "M5.116 4.104A1 1 0 0 1 6.11 3h11.78a1 1 0 0 1 .994 1.105L17.19 20.21A2 2 0 0 1 15.2 22H8.8a2 2 0 0 1-2-1.79z",
      key: "p55z4y"
    }
  ],
  ["path", { d: "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0", key: "mjntcy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Glasses = createLucideIcon("Glasses", [
  ["circle", { cx: "6", cy: "15", r: "4", key: "vux9w4" }],
  ["circle", { cx: "18", cy: "15", r: "4", key: "18o8ve" }],
  ["path", { d: "M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2", key: "1ag4bs" }],
  ["path", { d: "M2.5 13 5 7c.7-1.3 1.4-2 3-2", key: "1hm1gs" }],
  ["path", { d: "M21.5 13 19 7c-.7-1.3-1.5-2-3-2", key: "1r31ai" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GlobeLock = createLucideIcon("GlobeLock", [
  [
    "path",
    {
      d: "M15.686 15A14.5 14.5 0 0 1 12 22a14.5 14.5 0 0 1 0-20 10 10 0 1 0 9.542 13",
      key: "qkt0x6"
    }
  ],
  ["path", { d: "M2 12h8.5", key: "ovaggd" }],
  ["path", { d: "M20 6V4a2 2 0 1 0-4 0v2", key: "1of5e8" }],
  ["rect", { width: "8", height: "5", x: "14", y: "6", rx: "1", key: "1fmf51" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Globe = createLucideIcon("Globe", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20", key: "13o1zl" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Goal = createLucideIcon("Goal", [
  ["path", { d: "M12 13V2l8 4-8 4", key: "5wlwwj" }],
  ["path", { d: "M20.561 10.222a9 9 0 1 1-12.55-5.29", key: "1c0wjv" }],
  ["path", { d: "M8.002 9.997a5 5 0 1 0 8.9 2.02", key: "gb1g7m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grab = createLucideIcon("Grab", [
  ["path", { d: "M18 11.5V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4", key: "edstyy" }],
  ["path", { d: "M14 10V8a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2", key: "19wdwo" }],
  ["path", { d: "M10 9.9V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5", key: "1lugqo" }],
  ["path", { d: "M6 14a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1hbeus" }],
  [
    "path",
    { d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0", key: "1etffm" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GraduationCap = createLucideIcon("GraduationCap", [
  [
    "path",
    {
      d: "M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z",
      key: "j76jl0"
    }
  ],
  ["path", { d: "M22 10v6", key: "1lu8f3" }],
  ["path", { d: "M6 12.5V16a6 3 0 0 0 12 0v-3.5", key: "1r8lef" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grape = createLucideIcon("Grape", [
  ["path", { d: "M22 5V2l-5.89 5.89", key: "1eenpo" }],
  ["circle", { cx: "16.6", cy: "15.89", r: "3", key: "xjtalx" }],
  ["circle", { cx: "8.11", cy: "7.4", r: "3", key: "u2fv6i" }],
  ["circle", { cx: "12.35", cy: "11.65", r: "3", key: "i6i8g7" }],
  ["circle", { cx: "13.91", cy: "5.85", r: "3", key: "6ye0dv" }],
  ["circle", { cx: "18.15", cy: "10.09", r: "3", key: "snx9no" }],
  ["circle", { cx: "6.56", cy: "13.2", r: "3", key: "17x4xg" }],
  ["circle", { cx: "10.8", cy: "17.44", r: "3", key: "1hogw9" }],
  ["circle", { cx: "5", cy: "19", r: "3", key: "1sn6vo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grid2x2Check = createLucideIcon("Grid2x2Check", [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grid2x2Plus = createLucideIcon("Grid2x2Plus", [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M19 22v-6", key: "qhmiwi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grid2x2X = createLucideIcon("Grid2x2X", [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "m16 16 5 5", key: "8tpb07" }],
  ["path", { d: "m16 21 5-5", key: "193jll" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grid2x2 = createLucideIcon("Grid2x2", [
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grid3x3 = createLucideIcon("Grid3x3", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GripHorizontal = createLucideIcon("GripHorizontal", [
  ["circle", { cx: "12", cy: "9", r: "1", key: "124mty" }],
  ["circle", { cx: "19", cy: "9", r: "1", key: "1ruzo2" }],
  ["circle", { cx: "5", cy: "9", r: "1", key: "1a8b28" }],
  ["circle", { cx: "12", cy: "15", r: "1", key: "1e56xg" }],
  ["circle", { cx: "19", cy: "15", r: "1", key: "1a92ep" }],
  ["circle", { cx: "5", cy: "15", r: "1", key: "5r1jwy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const GripVertical = createLucideIcon("GripVertical", [
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }],
  ["circle", { cx: "9", cy: "5", r: "1", key: "hp0tcf" }],
  ["circle", { cx: "9", cy: "19", r: "1", key: "fkjjf6" }],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "15", cy: "5", r: "1", key: "19l28e" }],
  ["circle", { cx: "15", cy: "19", r: "1", key: "f4zoj3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Grip = createLucideIcon("Grip", [
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["circle", { cx: "19", cy: "5", r: "1", key: "w8mnmm" }],
  ["circle", { cx: "5", cy: "5", r: "1", key: "lttvr7" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "19", cy: "12", r: "1", key: "1wjl8i" }],
  ["circle", { cx: "5", cy: "12", r: "1", key: "1pcz8c" }],
  ["circle", { cx: "12", cy: "19", r: "1", key: "lyex9k" }],
  ["circle", { cx: "19", cy: "19", r: "1", key: "shf9b7" }],
  ["circle", { cx: "5", cy: "19", r: "1", key: "bfqh0e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Group = createLucideIcon("Group", [
  ["path", { d: "M3 7V5c0-1.1.9-2 2-2h2", key: "adw53z" }],
  ["path", { d: "M17 3h2c1.1 0 2 .9 2 2v2", key: "an4l38" }],
  ["path", { d: "M21 17v2c0 1.1-.9 2-2 2h-2", key: "144t0e" }],
  ["path", { d: "M7 21H5c-1.1 0-2-.9-2-2v-2", key: "rtnfgi" }],
  ["rect", { width: "7", height: "5", x: "7", y: "7", rx: "1", key: "1eyiv7" }],
  ["rect", { width: "7", height: "5", x: "10", y: "12", rx: "1", key: "1qlmkx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Guitar = createLucideIcon("Guitar", [
  ["path", { d: "m11.9 12.1 4.514-4.514", key: "109xqo" }],
  [
    "path",
    {
      d: "M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z",
      key: "txyc8t"
    }
  ],
  ["path", { d: "m6 16 2 2", key: "16qmzd" }],
  [
    "path",
    {
      d: "M8.2 9.9C8.7 8.8 9.8 8 11 8c2.8 0 5 2.2 5 5 0 1.2-.8 2.3-1.9 2.8l-.9.4A2 2 0 0 0 12 18a4 4 0 0 1-4 4c-3.3 0-6-2.7-6-6a4 4 0 0 1 4-4 2 2 0 0 0 1.8-1.2z",
      key: "1u8q3z"
    }
  ],
  ["circle", { cx: "11.5", cy: "12.5", r: ".5", fill: "currentColor", key: "16onso" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ham = createLucideIcon("Ham", [
  ["path", { d: "M13.144 21.144A7.274 10.445 45 1 0 2.856 10.856", key: "1k1t7q" }],
  [
    "path",
    {
      d: "M13.144 21.144A7.274 4.365 45 0 0 2.856 10.856a7.274 4.365 45 0 0 10.288 10.288",
      key: "153t1g"
    }
  ],
  [
    "path",
    {
      d: "M16.565 10.435 18.6 8.4a2.501 2.501 0 1 0 1.65-4.65 2.5 2.5 0 1 0-4.66 1.66l-2.024 2.025",
      key: "gzrt0n"
    }
  ],
  ["path", { d: "m8.5 16.5-1-1", key: "otr954" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hammer = createLucideIcon("Hammer", [
  ["path", { d: "m15 12-8.373 8.373a1 1 0 1 1-3-3L12 9", key: "eefl8a" }],
  ["path", { d: "m18 15 4-4", key: "16gjal" }],
  [
    "path",
    {
      d: "m21.5 11.5-1.914-1.914A2 2 0 0 1 19 8.172V7l-2.26-2.26a6 6 0 0 0-4.202-1.756L9 2.96l.92.82A6.18 6.18 0 0 1 12 8.4V10l2 2h1.172a2 2 0 0 1 1.414.586L18.5 14.5",
      key: "b7pghm"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HandCoins = createLucideIcon("HandCoins", [
  ["path", { d: "M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17", key: "geh8rc" }],
  [
    "path",
    {
      d: "m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "1fto5m"
    }
  ],
  ["path", { d: "m2 16 6 6", key: "1pfhp9" }],
  ["circle", { cx: "16", cy: "9", r: "2.9", key: "1n0dlu" }],
  ["circle", { cx: "6", cy: "5", r: "3", key: "151irh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HandHeart = createLucideIcon("HandHeart", [
  ["path", { d: "M11 14h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 16", key: "1ifwr1" }],
  [
    "path",
    {
      d: "m7 20 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "17abbs"
    }
  ],
  ["path", { d: "m2 15 6 6", key: "10dquu" }],
  [
    "path",
    {
      d: "M19.5 8.5c.7-.7 1.5-1.6 1.5-2.7A2.73 2.73 0 0 0 16 4a2.78 2.78 0 0 0-5 1.8c0 1.2.8 2 1.5 2.8L16 12Z",
      key: "1h3036"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HandHelping = createLucideIcon("HandHelping", [
  ["path", { d: "M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14", key: "1j4xps" }],
  [
    "path",
    {
      d: "m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "uospg8"
    }
  ],
  ["path", { d: "m2 13 6 6", key: "16e5sb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HandMetal = createLucideIcon("HandMetal", [
  ["path", { d: "M18 12.5V10a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4", key: "wc6myp" }],
  ["path", { d: "M14 11V9a2 2 0 1 0-4 0v2", key: "94qvcw" }],
  ["path", { d: "M10 10.5V5a2 2 0 1 0-4 0v9", key: "m1ah89" }],
  [
    "path",
    {
      d: "m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5",
      key: "t1skq1"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HandPlatter = createLucideIcon("HandPlatter", [
  ["path", { d: "M12 3V2", key: "ar7q03" }],
  [
    "path",
    {
      d: "m15.4 17.4 3.2-2.8a2 2 0 1 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2l-1.302-1.464A1 1 0 0 0 6.151 19H5",
      key: "n2g93r"
    }
  ],
  ["path", { d: "M2 14h12a2 2 0 0 1 0 4h-2", key: "1o2jem" }],
  ["path", { d: "M4 10h16", key: "img6z1" }],
  ["path", { d: "M5 10a7 7 0 0 1 14 0", key: "1ega1o" }],
  ["path", { d: "M5 14v6a1 1 0 0 1-1 1H2", key: "1hescx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hand = createLucideIcon("Hand", [
  ["path", { d: "M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1fvzgz" }],
  ["path", { d: "M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2", key: "1kc0my" }],
  ["path", { d: "M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8", key: "10h0bg" }],
  [
    "path",
    {
      d: "M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15",
      key: "1s1gnw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Handshake = createLucideIcon("Handshake", [
  ["path", { d: "m11 17 2 2a1 1 0 1 0 3-3", key: "efffak" }],
  [
    "path",
    {
      d: "m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4",
      key: "9pr0kb"
    }
  ],
  ["path", { d: "m21 3 1 11h-2", key: "1tisrp" }],
  ["path", { d: "M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3", key: "1uvwmv" }],
  ["path", { d: "M3 4h8", key: "1ep09j" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HardDriveDownload = createLucideIcon("HardDriveDownload", [
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["path", { d: "m16 6-4 4-4-4", key: "6wukr" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 18h.01", key: "h775k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HardDriveUpload = createLucideIcon("HardDriveUpload", [
  ["path", { d: "m16 6-4-4-4 4", key: "13yo43" }],
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 18h.01", key: "h775k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HardDrive = createLucideIcon("HardDrive", [
  ["line", { x1: "22", x2: "2", y1: "12", y2: "12", key: "1y58io" }],
  [
    "path",
    {
      d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",
      key: "oot6mr"
    }
  ],
  ["line", { x1: "6", x2: "6.01", y1: "16", y2: "16", key: "sgf278" }],
  ["line", { x1: "10", x2: "10.01", y1: "16", y2: "16", key: "1l4acy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HardHat = createLucideIcon("HardHat", [
  ["path", { d: "M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5", key: "1p9q5i" }],
  ["path", { d: "M14 6a6 6 0 0 1 6 6v3", key: "1hnv84" }],
  ["path", { d: "M4 15v-3a6 6 0 0 1 6-6", key: "9ciidu" }],
  ["rect", { x: "2", y: "15", width: "20", height: "4", rx: "1", key: "g3x8cw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hash = createLucideIcon("Hash", [
  ["line", { x1: "4", x2: "20", y1: "9", y2: "9", key: "4lhtct" }],
  ["line", { x1: "4", x2: "20", y1: "15", y2: "15", key: "vyu0kd" }],
  ["line", { x1: "10", x2: "8", y1: "3", y2: "21", key: "1ggp8o" }],
  ["line", { x1: "16", x2: "14", y1: "3", y2: "21", key: "weycgp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Haze = createLucideIcon("Haze", [
  ["path", { d: "m5.2 6.2 1.4 1.4", key: "17imol" }],
  ["path", { d: "M2 13h2", key: "13gyu8" }],
  ["path", { d: "M20 13h2", key: "16rner" }],
  ["path", { d: "m17.4 7.6 1.4-1.4", key: "t4xlah" }],
  ["path", { d: "M22 17H2", key: "1gtaj3" }],
  ["path", { d: "M22 21H2", key: "1gy6en" }],
  ["path", { d: "M16 13a4 4 0 0 0-8 0", key: "1dyczq" }],
  ["path", { d: "M12 5V2.5", key: "1vytko" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HdmiPort = createLucideIcon("HdmiPort", [
  [
    "path",
    {
      d: "M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z",
      key: "2128wb"
    }
  ],
  ["path", { d: "M7.5 12h9", key: "1t0ckc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading1 = createLucideIcon("Heading1", [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "m17 12 3-2v8", key: "1hhhft" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading2 = createLucideIcon("Heading2", [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1", key: "9jr5yi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading3 = createLucideIcon("Heading3", [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2", key: "68ncm8" }],
  ["path", { d: "M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2", key: "1ejuhz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading4 = createLucideIcon("Heading4", [
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17 10v3a1 1 0 0 0 1 1h3", key: "tj5zdr" }],
  ["path", { d: "M21 10v8", key: "1kdml4" }],
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading5 = createLucideIcon("Heading5", [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17 13v-3h4", key: "1nvgqp" }],
  [
    "path",
    { d: "M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17", key: "2nebdn" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading6 = createLucideIcon("Heading6", [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["circle", { cx: "19", cy: "16", r: "2", key: "15mx69" }],
  ["path", { d: "M20 10c-2 2-3 3.5-3 6", key: "f35dl0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heading = createLucideIcon("Heading", [
  ["path", { d: "M6 12h12", key: "8npq4p" }],
  ["path", { d: "M6 20V4", key: "1w1bmo" }],
  ["path", { d: "M18 20V4", key: "o2hl4u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HeadphoneOff = createLucideIcon("HeadphoneOff", [
  ["path", { d: "M21 14h-1.343", key: "1jdnxi" }],
  ["path", { d: "M9.128 3.47A9 9 0 0 1 21 12v3.343", key: "6kipu2" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20.414 20.414A2 2 0 0 1 19 21h-1a2 2 0 0 1-2-2v-3", key: "9x50f4" }],
  [
    "path",
    {
      d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 2.636-6.364",
      key: "1bkxnm"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Headphones = createLucideIcon("Headphones", [
  [
    "path",
    {
      d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3",
      key: "1xhozi"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Headset = createLucideIcon("Headset", [
  [
    "path",
    {
      d: "M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-5Zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3Z",
      key: "12oyoe"
    }
  ],
  ["path", { d: "M21 16v2a4 4 0 0 1-4 4h-5", key: "1x7m43" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HeartCrack = createLucideIcon("HeartCrack", [
  [
    "path",
    {
      d: "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",
      key: "c3ymky"
    }
  ],
  ["path", { d: "m12 13-1-1 2-2-3-3 2-2", key: "xjdxli" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HeartHandshake = createLucideIcon("HeartHandshake", [
  [
    "path",
    {
      d: "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",
      key: "c3ymky"
    }
  ],
  [
    "path",
    {
      d: "M12 5 9.04 7.96a2.17 2.17 0 0 0 0 3.08c.82.82 2.13.85 3 .07l2.07-1.9a2.82 2.82 0 0 1 3.79 0l2.96 2.66",
      key: "4oyue0"
    }
  ],
  ["path", { d: "m18 15-2-2", key: "60u0ii" }],
  ["path", { d: "m15 18-2-2", key: "6p76be" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HeartOff = createLucideIcon("HeartOff", [
  ["line", { x1: "2", y1: "2", x2: "22", y2: "22", key: "1w4vcy" }],
  [
    "path",
    { d: "M16.5 16.5 12 21l-7-7c-1.5-1.45-3-3.2-3-5.5a5.5 5.5 0 0 1 2.14-4.35", key: "3mpagl" }
  ],
  [
    "path",
    {
      d: "M8.76 3.1c1.15.22 2.13.78 3.24 1.9 1.5-1.5 2.74-2 4.5-2A5.5 5.5 0 0 1 22 8.5c0 2.12-1.3 3.78-2.67 5.17",
      key: "1gh3v3"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HeartPulse = createLucideIcon("HeartPulse", [
  [
    "path",
    {
      d: "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",
      key: "c3ymky"
    }
  ],
  ["path", { d: "M3.22 12H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27", key: "1uw2ng" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heart = createLucideIcon("Heart", [
  [
    "path",
    {
      d: "M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z",
      key: "c3ymky"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Heater = createLucideIcon("Heater", [
  ["path", { d: "M11 8c2-3-2-3 0-6", key: "1ldv5m" }],
  ["path", { d: "M15.5 8c2-3-2-3 0-6", key: "1otqoz" }],
  ["path", { d: "M6 10h.01", key: "1lbq93" }],
  ["path", { d: "M6 14h.01", key: "zudwn7" }],
  ["path", { d: "M10 16v-4", key: "1c25yv" }],
  ["path", { d: "M14 16v-4", key: "1dkbt8" }],
  ["path", { d: "M18 16v-4", key: "1yg9me" }],
  [
    "path",
    { d: "M20 6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3", key: "1ubg90" }
  ],
  ["path", { d: "M5 20v2", key: "1abpe8" }],
  ["path", { d: "M19 20v2", key: "kqn6ft" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hexagon = createLucideIcon("Hexagon", [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Highlighter = createLucideIcon("Highlighter", [
  ["path", { d: "m9 11-6 6v3h9l3-3", key: "1a3l36" }],
  ["path", { d: "m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4", key: "14a9rk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const History = createLucideIcon("History", [
  ["path", { d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "1357e3" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["path", { d: "M12 7v5l4 2", key: "1fdv2h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HopOff = createLucideIcon("HopOff", [
  ["path", { d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.28.01.53-.09.7-.27", key: "qyzcap" }],
  [
    "path",
    {
      d: "M11.14 20.57c.52.24 2.44 1.12 4.08 1.37.46.06.86-.25.9-.71.12-1.52-.3-3.43-.5-4.28",
      key: "y078lb"
    }
  ],
  ["path", { d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .7-.26", key: "1utre3" }],
  [
    "path",
    {
      d: "M17.99 5.52a20.83 20.83 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-1.17.1-2.5.02-3.9-.25",
      key: "17o9hm"
    }
  ],
  ["path", { d: "M20.57 11.14c.24.52 1.12 2.44 1.37 4.08.04.3-.08.59-.31.75", key: "1d1n4p" }],
  [
    "path",
    {
      d: "M4.93 4.93a10 10 0 0 0-.67 13.4c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.85.85 0 0 0 .48-.24",
      key: "9uv3tt"
    }
  ],
  [
    "path",
    {
      d: "M5.52 17.99c1.05.95 2.91 2.42 4.5 3.15a.8.8 0 0 0 1.13-.68c.2-2.34-.33-5.3-1.57-8.28",
      key: "1292wz"
    }
  ],
  [
    "path",
    {
      d: "M8.35 2.68a10 10 0 0 1 9.98 1.58c.43.35.4.96-.12 1.17-1.5.6-4.3.98-6.07 1.05",
      key: "7ozu9p"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hop = createLucideIcon("Hop", [
  [
    "path",
    {
      d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.55.03 1-.42.97-.97-.06-1.27-.26-3.5-.85-5.18",
      key: "18lxf1"
    }
  ],
  [
    "path",
    {
      d: "M11.5 6.5c1.64 0 5-.38 6.71-1.07.52-.2.55-.82.12-1.17A10 10 0 0 0 4.26 18.33c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.88.88 0 0 0 .73-.74c.3-2.14-.15-3.5-.61-4.88",
      key: "vtfxrw"
    }
  ],
  [
    "path",
    {
      d: "M15.62 16.95c.2.85.62 2.76.5 4.28a.77.77 0 0 1-.9.7 16.64 16.64 0 0 1-4.08-1.36",
      key: "13hl71"
    }
  ],
  [
    "path",
    {
      d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .96-.96 17.68 17.68 0 0 0-.9-4.87",
      key: "1sl8oj"
    }
  ],
  [
    "path",
    {
      d: "M16.94 15.62c.86.2 2.77.62 4.29.5a.77.77 0 0 0 .7-.9 16.64 16.64 0 0 0-1.36-4.08",
      key: "19c6kt"
    }
  ],
  [
    "path",
    {
      d: "M17.99 5.52a20.82 20.82 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-2.33.2-5.3-.32-8.27-1.57",
      key: "85ghs3"
    }
  ],
  ["path", { d: "M4.93 4.93 3 3a.7.7 0 0 1 0-1", key: "x087yj" }],
  [
    "path",
    {
      d: "M9.58 12.18c1.24 2.98 1.77 5.95 1.57 8.28a.8.8 0 0 1-1.13.68 20.82 20.82 0 0 1-4.5-3.15",
      key: "11xdqo"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hospital = createLucideIcon("Hospital", [
  ["path", { d: "M12 6v4", key: "16clxf" }],
  ["path", { d: "M14 14h-4", key: "esezmu" }],
  ["path", { d: "M14 18h-4", key: "16mqa2" }],
  ["path", { d: "M14 8h-4", key: "z8ypaz" }],
  [
    "path",
    {
      d: "M18 12h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2",
      key: "b1k337"
    }
  ],
  ["path", { d: "M18 22V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v18", key: "16g51d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hotel = createLucideIcon("Hotel", [
  ["path", { d: "M10 22v-6.57", key: "1wmca3" }],
  ["path", { d: "M12 11h.01", key: "z322tv" }],
  ["path", { d: "M12 7h.01", key: "1ivr5q" }],
  ["path", { d: "M14 15.43V22", key: "1q2vjd" }],
  ["path", { d: "M15 16a5 5 0 0 0-6 0", key: "o9wqvi" }],
  ["path", { d: "M16 11h.01", key: "xkw8gn" }],
  ["path", { d: "M16 7h.01", key: "1kdx03" }],
  ["path", { d: "M8 11h.01", key: "1dfujw" }],
  ["path", { d: "M8 7h.01", key: "1vti4s" }],
  ["rect", { x: "4", y: "2", width: "16", height: "20", rx: "2", key: "1uxh74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Hourglass = createLucideIcon("Hourglass", [
  ["path", { d: "M5 22h14", key: "ehvnwv" }],
  ["path", { d: "M5 2h14", key: "pdyrp9" }],
  [
    "path",
    {
      d: "M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22",
      key: "1d314k"
    }
  ],
  [
    "path",
    { d: "M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2", key: "1vvvr6" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HousePlug = createLucideIcon("HousePlug", [
  ["path", { d: "M10 12V8.964", key: "1vll13" }],
  ["path", { d: "M14 12V8.964", key: "1x3qvg" }],
  [
    "path",
    { d: "M15 12a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1z", key: "ppykja" }
  ],
  [
    "path",
    {
      d: "M8.5 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-2",
      key: "1gvg2z"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const HousePlus = createLucideIcon("HousePlus", [
  [
    "path",
    {
      d: "M13.22 2.416a2 2 0 0 0-2.511.057l-7 5.999A2 2 0 0 0 3 10v9a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7.354",
      key: "5phn05"
    }
  ],
  ["path", { d: "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8", key: "5wwlr5" }],
  ["path", { d: "M15 6h6", key: "1jlkvy" }],
  ["path", { d: "M18 3v6", key: "x1uolp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const House = createLucideIcon("House", [
  ["path", { d: "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8", key: "5wwlr5" }],
  [
    "path",
    {
      d: "M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",
      key: "1d0kgt"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IceCreamBowl = createLucideIcon("IceCreamBowl", [
  [
    "path",
    {
      d: "M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6m-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0",
      key: "1uxfcu"
    }
  ],
  ["path", { d: "M12.14 11a3.5 3.5 0 1 1 6.71 0", key: "4k3m1s" }],
  ["path", { d: "M15.5 6.5a3.5 3.5 0 1 0-7 0", key: "zmuahr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IceCreamCone = createLucideIcon("IceCreamCone", [
  ["path", { d: "m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11", key: "1v6356" }],
  ["path", { d: "M17 7A5 5 0 0 0 7 7", key: "151p3v" }],
  ["path", { d: "M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4", key: "1sdaij" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IdCard = createLucideIcon("IdCard", [
  ["path", { d: "M16 10h2", key: "8sgtl7" }],
  ["path", { d: "M16 14h2", key: "epxaof" }],
  ["path", { d: "M6.17 15a3 3 0 0 1 5.66 0", key: "n6f512" }],
  ["circle", { cx: "9", cy: "11", r: "2", key: "yxgjnd" }],
  ["rect", { x: "2", y: "5", width: "20", height: "14", rx: "2", key: "qneu4z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImageDown = createLucideIcon("ImageDown", [
  [
    "path",
    {
      d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21",
      key: "9csbqa"
    }
  ],
  ["path", { d: "m14 19 3 3v-5.5", key: "9ldu5r" }],
  ["path", { d: "m17 22 3-3", key: "1nkfve" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImageMinus = createLucideIcon("ImageMinus", [
  ["path", { d: "M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7", key: "m87ecr" }],
  ["line", { x1: "16", x2: "22", y1: "5", y2: "5", key: "ez7e4s" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImageOff = createLucideIcon("ImageOff", [
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }],
  ["path", { d: "M10.41 10.41a2 2 0 1 1-2.83-2.83", key: "1bzlo9" }],
  ["line", { x1: "13.5", x2: "6", y1: "13.5", y2: "21", key: "1q0aeu" }],
  ["line", { x1: "18", x2: "21", y1: "12", y2: "15", key: "5mozeu" }],
  [
    "path",
    {
      d: "M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59",
      key: "mmje98"
    }
  ],
  ["path", { d: "M21 15V5a2 2 0 0 0-2-2H9", key: "43el77" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImagePlay = createLucideIcon("ImagePlay", [
  ["path", { d: "m11 16-5 5", key: "j5f7ct" }],
  ["path", { d: "M11 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6.5", key: "7s81lt" }],
  [
    "path",
    {
      d: "M15.765 22a.5.5 0 0 1-.765-.424V13.38a.5.5 0 0 1 .765-.424l5.878 3.674a1 1 0 0 1 0 1.696z",
      key: "1omb6s"
    }
  ],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImagePlus = createLucideIcon("ImagePlus", [
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 2v6", key: "4bpg5p" }],
  ["path", { d: "M21 11.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5", key: "1ue2ih" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImageUp = createLucideIcon("ImageUp", [
  [
    "path",
    {
      d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21",
      key: "9csbqa"
    }
  ],
  ["path", { d: "m14 19.5 3-3 3 3", key: "9vmjn0" }],
  ["path", { d: "M17 22v-5.5", key: "1aa6fl" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ImageUpscale = createLucideIcon("ImageUpscale", [
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M17 21h2a2 2 0 0 0 2-2", key: "130fy9" }],
  ["path", { d: "M21 12v3", key: "1wzk3p" }],
  ["path", { d: "m21 3-5 5", key: "1g5oa7" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2", key: "kk3yz1" }],
  ["path", { d: "m5 21 4.144-4.144a1.21 1.21 0 0 1 1.712 0L13 19", key: "fyekpt" }],
  ["path", { d: "M9 3h3", key: "d52fa" }],
  ["rect", { x: "3", y: "11", width: "10", height: "10", rx: "1", key: "1wpmix" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Image = createLucideIcon("Image", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Images = createLucideIcon("Images", [
  ["path", { d: "M18 22H4a2 2 0 0 1-2-2V6", key: "pblm9e" }],
  ["path", { d: "m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18", key: "nf6bnh" }],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  ["rect", { width: "16", height: "16", x: "6", y: "2", rx: "2", key: "12espp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Import = createLucideIcon("Import", [
  ["path", { d: "M12 3v12", key: "1x0j5s" }],
  ["path", { d: "m8 11 4 4 4-4", key: "1dohi6" }],
  [
    "path",
    {
      d: "M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4",
      key: "1ywtjm"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Inbox = createLucideIcon("Inbox", [
  ["polyline", { points: "22 12 16 12 14 15 10 15 8 12 2 12", key: "o97t9d" }],
  [
    "path",
    {
      d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",
      key: "oot6mr"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IndentDecrease = createLucideIcon("IndentDecrease", [
  ["path", { d: "M21 12H11", key: "wd7e0v" }],
  ["path", { d: "M21 18H11", key: "4wu86t" }],
  ["path", { d: "M21 6H11", key: "6dy1d6" }],
  ["path", { d: "m7 8-4 4 4 4", key: "o5hrat" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IndentIncrease = createLucideIcon("IndentIncrease", [
  ["path", { d: "M21 12H11", key: "wd7e0v" }],
  ["path", { d: "M21 18H11", key: "4wu86t" }],
  ["path", { d: "M21 6H11", key: "6dy1d6" }],
  ["path", { d: "m3 8 4 4-4 4", key: "1a3j6y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IndianRupee = createLucideIcon("IndianRupee", [
  ["path", { d: "M6 3h12", key: "ggurg9" }],
  ["path", { d: "M6 8h12", key: "6g4wlu" }],
  ["path", { d: "m6 13 8.5 8", key: "u1kupk" }],
  ["path", { d: "M6 13h3", key: "wdp6ag" }],
  ["path", { d: "M9 13c6.667 0 6.667-10 0-10", key: "1nkvk2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Infinity = createLucideIcon("Infinity", [
  [
    "path",
    {
      d: "M12 12c-2-2.67-4-4-6-4a4 4 0 1 0 0 8c2 0 4-1.33 6-4Zm0 0c2 2.67 4 4 6 4a4 4 0 0 0 0-8c-2 0-4 1.33-6 4Z",
      key: "1z0uae"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Info = createLucideIcon("Info", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 16v-4", key: "1dtifu" }],
  ["path", { d: "M12 8h.01", key: "e9boi3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const InspectionPanel = createLucideIcon("InspectionPanel", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7h.01", key: "7u93v4" }],
  ["path", { d: "M17 7h.01", key: "14a9sn" }],
  ["path", { d: "M7 17h.01", key: "19xn7k" }],
  ["path", { d: "M17 17h.01", key: "1sd3ek" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Instagram = createLucideIcon("Instagram", [
  ["rect", { width: "20", height: "20", x: "2", y: "2", rx: "5", ry: "5", key: "2e1cvw" }],
  ["path", { d: "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z", key: "9exkf1" }],
  ["line", { x1: "17.5", x2: "17.51", y1: "6.5", y2: "6.5", key: "r4j83e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Italic = createLucideIcon("Italic", [
  ["line", { x1: "19", x2: "10", y1: "4", y2: "4", key: "15jd3p" }],
  ["line", { x1: "14", x2: "5", y1: "20", y2: "20", key: "bu0au3" }],
  ["line", { x1: "15", x2: "9", y1: "4", y2: "20", key: "uljnxc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IterationCcw = createLucideIcon("IterationCcw", [
  ["path", { d: "M20 10c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8h8", key: "4znkd0" }],
  ["polyline", { points: "16 14 20 18 16 22", key: "11njsm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const IterationCw = createLucideIcon("IterationCw", [
  ["path", { d: "M4 10c0-4.4 3.6-8 8-8s8 3.6 8 8-3.6 8-8 8H4", key: "tuf4su" }],
  ["polyline", { points: "8 22 4 18 8 14", key: "evkj9s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const JapaneseYen = createLucideIcon("JapaneseYen", [
  ["path", { d: "M12 9.5V21m0-11.5L6 3m6 6.5L18 3", key: "2ej80x" }],
  ["path", { d: "M6 15h12", key: "1hwgt5" }],
  ["path", { d: "M6 11h12", key: "wf4gp6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Joystick = createLucideIcon("Joystick", [
  [
    "path",
    {
      d: "M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z",
      key: "jg2n2t"
    }
  ],
  ["path", { d: "M6 15v-2", key: "gd6mvg" }],
  ["path", { d: "M12 15V9", key: "8c7uyn" }],
  ["circle", { cx: "12", cy: "6", r: "3", key: "1gm2ql" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Kanban = createLucideIcon("Kanban", [
  ["path", { d: "M6 5v11", key: "mdvv1e" }],
  ["path", { d: "M12 5v6", key: "14ar3b" }],
  ["path", { d: "M18 5v14", key: "7ji314" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const KeyRound = createLucideIcon("KeyRound", [
  [
    "path",
    {
      d: "M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z",
      key: "1s6t7t"
    }
  ],
  ["circle", { cx: "16.5", cy: "7.5", r: ".5", fill: "currentColor", key: "w0ekpg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const KeySquare = createLucideIcon("KeySquare", [
  [
    "path",
    {
      d: "M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z",
      key: "165ttr"
    }
  ],
  ["path", { d: "m14 7 3 3", key: "1r5n42" }],
  [
    "path",
    {
      d: "m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814",
      key: "1ubxi2"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Key = createLucideIcon("Key", [
  ["path", { d: "m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4", key: "g0fldk" }],
  ["path", { d: "m21 2-9.6 9.6", key: "1j0ho8" }],
  ["circle", { cx: "7.5", cy: "15.5", r: "5.5", key: "yqb3hr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const KeyboardMusic = createLucideIcon("KeyboardMusic", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 8h4", key: "utf9t1" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M6 12v4", key: "dy92yo" }],
  ["path", { d: "M10 12v4", key: "1fxnav" }],
  ["path", { d: "M14 12v4", key: "1hft58" }],
  ["path", { d: "M18 12v4", key: "tjjnbz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const KeyboardOff = createLucideIcon("KeyboardOff", [
  ["path", { d: "M 20 4 A2 2 0 0 1 22 6", key: "1g1fkt" }],
  ["path", { d: "M 22 6 L 22 16.41", key: "1qjg3w" }],
  ["path", { d: "M 7 16 L 16 16", key: "n0yqwb" }],
  ["path", { d: "M 9.69 4 L 20 4", key: "kbpcgx" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2", key: "s23sx2" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Keyboard = createLucideIcon("Keyboard", [
  ["path", { d: "M10 8h.01", key: "1r9ogq" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M7 16h10", key: "wp8him" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LampCeiling = createLucideIcon("LampCeiling", [
  ["path", { d: "M12 2v5", key: "nd4vlx" }],
  ["path", { d: "M6 7h12l4 9H2l4-9Z", key: "123d64" }],
  ["path", { d: "M9.17 16a3 3 0 1 0 5.66 0", key: "1061mw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LampDesk = createLucideIcon("LampDesk", [
  ["path", { d: "m14 5-3 3 2 7 8-8-7-2Z", key: "1b0msb" }],
  ["path", { d: "m14 5-3 3-3-3 3-3 3 3Z", key: "1uemms" }],
  ["path", { d: "M9.5 6.5 4 12l3 6", key: "1bx08v" }],
  ["path", { d: "M3 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H3Z", key: "wap775" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LampFloor = createLucideIcon("LampFloor", [
  ["path", { d: "M9 2h6l3 7H6l3-7Z", key: "wcx6mj" }],
  ["path", { d: "M12 9v13", key: "3n1su1" }],
  ["path", { d: "M9 22h6", key: "1rlq3v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LampWallDown = createLucideIcon("LampWallDown", [
  ["path", { d: "M11 13h6l3 7H8l3-7Z", key: "9n3qlo" }],
  ["path", { d: "M14 13V8a2 2 0 0 0-2-2H8", key: "1hu4hb" }],
  ["path", { d: "M4 9h2a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H4v6Z", key: "s053bc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LampWallUp = createLucideIcon("LampWallUp", [
  ["path", { d: "M11 4h6l3 7H8l3-7Z", key: "11x1ee" }],
  ["path", { d: "M14 11v5a2 2 0 0 1-2 2H8", key: "eutp5o" }],
  ["path", { d: "M4 15h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H4v-6Z", key: "1iuthr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lamp = createLucideIcon("Lamp", [
  ["path", { d: "M8 2h8l4 10H4L8 2Z", key: "9dma5w" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  ["path", { d: "M8 22v-2c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2H8Z", key: "mwf4oh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LandPlot = createLucideIcon("LandPlot", [
  ["path", { d: "m12 8 6-3-6-3v10", key: "mvpnpy" }],
  [
    "path",
    {
      d: "m8 11.99-5.5 3.14a1 1 0 0 0 0 1.74l8.5 4.86a2 2 0 0 0 2 0l8.5-4.86a1 1 0 0 0 0-1.74L16 12",
      key: "ek95tt"
    }
  ],
  ["path", { d: "m6.49 12.85 11.02 6.3", key: "1kt42w" }],
  ["path", { d: "M17.51 12.85 6.5 19.15", key: "v55bdg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Landmark = createLucideIcon("Landmark", [
  ["line", { x1: "3", x2: "21", y1: "22", y2: "22", key: "j8o0r" }],
  ["line", { x1: "6", x2: "6", y1: "18", y2: "11", key: "10tf0k" }],
  ["line", { x1: "10", x2: "10", y1: "18", y2: "11", key: "54lgf6" }],
  ["line", { x1: "14", x2: "14", y1: "18", y2: "11", key: "380y" }],
  ["line", { x1: "18", x2: "18", y1: "18", y2: "11", key: "1kevvc" }],
  ["polygon", { points: "12 2 20 7 4 7", key: "jkujk7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Languages = createLucideIcon("Languages", [
  ["path", { d: "m5 8 6 6", key: "1wu5hv" }],
  ["path", { d: "m4 14 6-6 2-3", key: "1k1g8d" }],
  ["path", { d: "M2 5h12", key: "or177f" }],
  ["path", { d: "M7 2h1", key: "1t2jsx" }],
  ["path", { d: "m22 22-5-10-5 10", key: "don7ne" }],
  ["path", { d: "M14 18h6", key: "1m8k6r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LaptopMinimalCheck = createLucideIcon("LaptopMinimalCheck", [
  ["path", { d: "M2 20h20", key: "owomy5" }],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }],
  ["rect", { x: "3", y: "4", width: "18", height: "12", rx: "2", key: "8ur36m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LaptopMinimal = createLucideIcon("LaptopMinimal", [
  ["rect", { width: "18", height: "12", x: "3", y: "4", rx: "2", ry: "2", key: "1qhy41" }],
  ["line", { x1: "2", x2: "22", y1: "20", y2: "20", key: "ni3hll" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Laptop = createLucideIcon("Laptop", [
  [
    "path",
    {
      d: "M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16",
      key: "tarvll"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LassoSelect = createLucideIcon("LassoSelect", [
  ["path", { d: "M7 22a5 5 0 0 1-2-4", key: "umushi" }],
  ["path", { d: "M7 16.93c.96.43 1.96.74 2.99.91", key: "ybbtv3" }],
  [
    "path",
    {
      d: "M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2",
      key: "gt5e1w"
    }
  ],
  ["path", { d: "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z", key: "bq3ynw" }],
  [
    "path",
    {
      d: "M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14z",
      key: "72q637"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lasso = createLucideIcon("Lasso", [
  ["path", { d: "M7 22a5 5 0 0 1-2-4", key: "umushi" }],
  [
    "path",
    {
      d: "M3.3 14A6.8 6.8 0 0 1 2 10c0-4.4 4.5-8 10-8s10 3.6 10 8-4.5 8-10 8a12 12 0 0 1-5-1",
      key: "146dds"
    }
  ],
  ["path", { d: "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z", key: "bq3ynw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Laugh = createLucideIcon("Laugh", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z", key: "b2q4dd" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Layers2 = createLucideIcon("Layers2", [
  [
    "path",
    {
      d: "m16.02 12 5.48 3.13a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74L7.98 12",
      key: "1cuww1"
    }
  ],
  [
    "path",
    {
      d: "M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74Z",
      key: "pdlvxu"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Layers3 = createLucideIcon("Layers3", [
  [
    "path",
    {
      d: "m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z",
      key: "8b97xw"
    }
  ],
  [
    "path",
    {
      d: "m6.08 9.5-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59",
      key: "1e5n1m"
    }
  ],
  [
    "path",
    {
      d: "m6.08 14.5-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59",
      key: "1iwflc"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Layers = createLucideIcon("Layers", [
  [
    "path",
    {
      d: "m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z",
      key: "8b97xw"
    }
  ],
  ["path", { d: "m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65", key: "dd6zsq" }],
  ["path", { d: "m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65", key: "ep9fru" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutDashboard = createLucideIcon("LayoutDashboard", [
  ["rect", { width: "7", height: "9", x: "3", y: "3", rx: "1", key: "10lvy0" }],
  ["rect", { width: "7", height: "5", x: "14", y: "3", rx: "1", key: "16une8" }],
  ["rect", { width: "7", height: "9", x: "14", y: "12", rx: "1", key: "1hutg5" }],
  ["rect", { width: "7", height: "5", x: "3", y: "16", rx: "1", key: "ldoo1y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutGrid = createLucideIcon("LayoutGrid", [
  ["rect", { width: "7", height: "7", x: "3", y: "3", rx: "1", key: "1g98yp" }],
  ["rect", { width: "7", height: "7", x: "14", y: "3", rx: "1", key: "6d4xhi" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutList = createLucideIcon("LayoutList", [
  ["rect", { width: "7", height: "7", x: "3", y: "3", rx: "1", key: "1g98yp" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }],
  ["path", { d: "M14 4h7", key: "3xa0d5" }],
  ["path", { d: "M14 9h7", key: "1icrd9" }],
  ["path", { d: "M14 15h7", key: "1mj8o2" }],
  ["path", { d: "M14 20h7", key: "11slyb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutPanelLeft = createLucideIcon("LayoutPanelLeft", [
  ["rect", { width: "7", height: "18", x: "3", y: "3", rx: "1", key: "2obqm" }],
  ["rect", { width: "7", height: "7", x: "14", y: "3", rx: "1", key: "6d4xhi" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutPanelTop = createLucideIcon("LayoutPanelTop", [
  ["rect", { width: "18", height: "7", x: "3", y: "3", rx: "1", key: "f1a2em" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LayoutTemplate = createLucideIcon("LayoutTemplate", [
  ["rect", { width: "18", height: "7", x: "3", y: "3", rx: "1", key: "f1a2em" }],
  ["rect", { width: "9", height: "7", x: "3", y: "14", rx: "1", key: "jqznyg" }],
  ["rect", { width: "5", height: "7", x: "16", y: "14", rx: "1", key: "q5h2i8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Leaf = createLucideIcon("Leaf", [
  [
    "path",
    {
      d: "M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z",
      key: "nnexq3"
    }
  ],
  ["path", { d: "M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12", key: "mt58a7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LeafyGreen = createLucideIcon("LeafyGreen", [
  [
    "path",
    {
      d: "M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22",
      key: "1134nt"
    }
  ],
  ["path", { d: "M2 22 17 7", key: "1q7jp2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lectern = createLucideIcon("Lectern", [
  [
    "path",
    {
      d: "M16 12h3a2 2 0 0 0 1.902-1.38l1.056-3.333A1 1 0 0 0 21 6H3a1 1 0 0 0-.958 1.287l1.056 3.334A2 2 0 0 0 5 12h3",
      key: "13jjxg"
    }
  ],
  ["path", { d: "M18 6V3a1 1 0 0 0-1-1h-3", key: "1550fe" }],
  ["rect", { width: "8", height: "12", x: "8", y: "10", rx: "1", key: "qmu8b6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LetterText = createLucideIcon("LetterText", [
  ["path", { d: "M15 12h6", key: "upa0zy" }],
  ["path", { d: "M15 6h6", key: "1jlkvy" }],
  ["path", { d: "m3 13 3.553-7.724a.5.5 0 0 1 .894 0L11 13", key: "blevx4" }],
  ["path", { d: "M3 18h18", key: "1h113x" }],
  ["path", { d: "M4 11h6", key: "olkgv1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LibraryBig = createLucideIcon("LibraryBig", [
  ["rect", { width: "8", height: "18", x: "3", y: "3", rx: "1", key: "oynpb5" }],
  ["path", { d: "M7 3v18", key: "bbkbws" }],
  [
    "path",
    {
      d: "M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z",
      key: "1qboyk"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Library = createLucideIcon("Library", [
  ["path", { d: "m16 6 4 14", key: "ji33uf" }],
  ["path", { d: "M12 6v14", key: "1n7gus" }],
  ["path", { d: "M8 8v12", key: "1gg7y9" }],
  ["path", { d: "M4 4v16", key: "6qkkli" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LifeBuoy = createLucideIcon("LifeBuoy", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m4.93 4.93 4.24 4.24", key: "1ymg45" }],
  ["path", { d: "m14.83 9.17 4.24-4.24", key: "1cb5xl" }],
  ["path", { d: "m14.83 14.83 4.24 4.24", key: "q42g0n" }],
  ["path", { d: "m9.17 14.83-4.24 4.24", key: "bqpfvv" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ligature = createLucideIcon("Ligature", [
  ["path", { d: "M8 20V8c0-2.2 1.8-4 4-4 1.5 0 2.8.8 3.5 2", key: "1rtphz" }],
  ["path", { d: "M6 12h4", key: "a4o3ry" }],
  ["path", { d: "M14 12h2v8", key: "c1fccl" }],
  ["path", { d: "M6 20h4", key: "1i6q5t" }],
  ["path", { d: "M14 20h4", key: "lzx1xo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LightbulbOff = createLucideIcon("LightbulbOff", [
  ["path", { d: "M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5", key: "1fkcox" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5", key: "10m8kw" }],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["path", { d: "M10 22h4", key: "ceow96" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lightbulb = createLucideIcon("Lightbulb", [
  [
    "path",
    {
      d: "M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",
      key: "1gvzjb"
    }
  ],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["path", { d: "M10 22h4", key: "ceow96" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Link2Off = createLucideIcon("Link2Off", [
  ["path", { d: "M9 17H7A5 5 0 0 1 7 7", key: "10o201" }],
  ["path", { d: "M15 7h2a5 5 0 0 1 4 8", key: "1d3206" }],
  ["line", { x1: "8", x2: "12", y1: "12", y2: "12", key: "rvw6j4" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Link2 = createLucideIcon("Link2", [
  ["path", { d: "M9 17H7A5 5 0 0 1 7 7h2", key: "8i5ue5" }],
  ["path", { d: "M15 7h2a5 5 0 1 1 0 10h-2", key: "1b9ql8" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Link$1 = createLucideIcon("Link", [
  ["path", { d: "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71", key: "1cjeqo" }],
  ["path", { d: "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71", key: "19qd67" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Linkedin = createLucideIcon("Linkedin", [
  [
    "path",
    {
      d: "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z",
      key: "c2jq9f"
    }
  ],
  ["rect", { width: "4", height: "12", x: "2", y: "9", key: "mk3on5" }],
  ["circle", { cx: "4", cy: "4", r: "2", key: "bt5ra8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListCheck = createLucideIcon("ListCheck", [
  ["path", { d: "M11 18H3", key: "n3j2dh" }],
  ["path", { d: "m15 18 2 2 4-4", key: "1szwhi" }],
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListChecks = createLucideIcon("ListChecks", [
  ["path", { d: "m3 17 2 2 4-4", key: "1jhpwq" }],
  ["path", { d: "m3 7 2 2 4-4", key: "1obspn" }],
  ["path", { d: "M13 6h8", key: "15sg57" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 18h8", key: "oe0vm4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListCollapse = createLucideIcon("ListCollapse", [
  ["path", { d: "m3 10 2.5-2.5L3 5", key: "i6eama" }],
  ["path", { d: "m3 19 2.5-2.5L3 14", key: "w2gmor" }],
  ["path", { d: "M10 6h11", key: "c7qv1k" }],
  ["path", { d: "M10 12h11", key: "6m4ad9" }],
  ["path", { d: "M10 18h11", key: "11hvi2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListEnd = createLucideIcon("ListEnd", [
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M10 18H3", key: "13769t" }],
  ["path", { d: "M21 6v10a2 2 0 0 1-2 2h-5", key: "ilrcs8" }],
  ["path", { d: "m16 16-2 2 2 2", key: "kkc6pm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListFilter = createLucideIcon("ListFilter", [
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M10 18h4", key: "1ulq68" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListMinus = createLucideIcon("ListMinus", [
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M16 18H3", key: "12xzn7" }],
  ["path", { d: "M21 12h-6", key: "bt1uis" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListMusic = createLucideIcon("ListMusic", [
  ["path", { d: "M21 15V6", key: "h1cx4g" }],
  ["path", { d: "M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z", key: "8saifv" }],
  ["path", { d: "M12 12H3", key: "18klou" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M12 18H3", key: "11ftsu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListOrdered = createLucideIcon("ListOrdered", [
  ["path", { d: "M10 12h11", key: "6m4ad9" }],
  ["path", { d: "M10 18h11", key: "11hvi2" }],
  ["path", { d: "M10 6h11", key: "c7qv1k" }],
  ["path", { d: "M4 10h2", key: "16xx2s" }],
  ["path", { d: "M4 6h1v4", key: "cnovpq" }],
  ["path", { d: "M6 18H4c0-1 2-2 2-3s-1-1.5-2-1", key: "m9a95d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListPlus = createLucideIcon("ListPlus", [
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M16 18H3", key: "12xzn7" }],
  ["path", { d: "M18 9v6", key: "1twb98" }],
  ["path", { d: "M21 12h-6", key: "bt1uis" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListRestart = createLucideIcon("ListRestart", [
  ["path", { d: "M21 6H3", key: "1jwq7v" }],
  ["path", { d: "M7 12H3", key: "13ou7f" }],
  ["path", { d: "M7 18H3", key: "1sijw9" }],
  [
    "path",
    {
      d: "M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14",
      key: "qth677"
    }
  ],
  ["path", { d: "M11 10v4h4", key: "172dkj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListStart = createLucideIcon("ListStart", [
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M16 18H3", key: "12xzn7" }],
  ["path", { d: "M10 6H3", key: "lf8lx7" }],
  ["path", { d: "M21 18V8a2 2 0 0 0-2-2h-5", key: "1hghli" }],
  ["path", { d: "m16 8-2-2 2-2", key: "160uvd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListTodo = createLucideIcon("ListTodo", [
  ["rect", { x: "3", y: "5", width: "6", height: "6", rx: "1", key: "1defrl" }],
  ["path", { d: "m3 17 2 2 4-4", key: "1jhpwq" }],
  ["path", { d: "M13 6h8", key: "15sg57" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 18h8", key: "oe0vm4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListTree = createLucideIcon("ListTree", [
  ["path", { d: "M21 12h-8", key: "1bmf0i" }],
  ["path", { d: "M21 6H8", key: "1pqkrb" }],
  ["path", { d: "M21 18h-8", key: "1tm79t" }],
  ["path", { d: "M3 6v4c0 1.1.9 2 2 2h3", key: "1ywdgy" }],
  ["path", { d: "M3 10v6c0 1.1.9 2 2 2h3", key: "2wc746" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListVideo = createLucideIcon("ListVideo", [
  ["path", { d: "M12 12H3", key: "18klou" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M12 18H3", key: "11ftsu" }],
  ["path", { d: "m16 12 5 3-5 3v-6Z", key: "zpskkp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ListX = createLucideIcon("ListX", [
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M16 18H3", key: "12xzn7" }],
  ["path", { d: "m19 10-4 4", key: "1tz659" }],
  ["path", { d: "m15 10 4 4", key: "1n7nei" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const List$1 = createLucideIcon("List", [
  ["path", { d: "M3 12h.01", key: "nlz23k" }],
  ["path", { d: "M3 18h.01", key: "1tta3j" }],
  ["path", { d: "M3 6h.01", key: "1rqtza" }],
  ["path", { d: "M8 12h13", key: "1za7za" }],
  ["path", { d: "M8 18h13", key: "1lx6n3" }],
  ["path", { d: "M8 6h13", key: "ik3vkj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LoaderCircle = createLucideIcon("LoaderCircle", [
  ["path", { d: "M21 12a9 9 0 1 1-6.219-8.56", key: "13zald" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LoaderPinwheel = createLucideIcon("LoaderPinwheel", [
  ["path", { d: "M22 12a1 1 0 0 1-10 0 1 1 0 0 0-10 0", key: "1lzz15" }],
  ["path", { d: "M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6", key: "1gnrpi" }],
  ["path", { d: "M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6", key: "u9yy5q" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Loader = createLucideIcon("Loader", [
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m16.2 7.8 2.9-2.9", key: "r700ao" }],
  ["path", { d: "M18 12h4", key: "wj9ykh" }],
  ["path", { d: "m16.2 16.2 2.9 2.9", key: "1bxg5t" }],
  ["path", { d: "M12 18v4", key: "jadmvz" }],
  ["path", { d: "m4.9 19.1 2.9-2.9", key: "bwix9q" }],
  ["path", { d: "M2 12h4", key: "j09sii" }],
  ["path", { d: "m4.9 4.9 2.9 2.9", key: "giyufr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LocateFixed = createLucideIcon("LocateFixed", [
  ["line", { x1: "2", x2: "5", y1: "12", y2: "12", key: "bvdh0s" }],
  ["line", { x1: "19", x2: "22", y1: "12", y2: "12", key: "1tbv5k" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "5", key: "11lu5j" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }],
  ["circle", { cx: "12", cy: "12", r: "7", key: "fim9np" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LocateOff = createLucideIcon("LocateOff", [
  ["line", { x1: "2", x2: "5", y1: "12", y2: "12", key: "bvdh0s" }],
  ["line", { x1: "19", x2: "22", y1: "12", y2: "12", key: "1tbv5k" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "5", key: "11lu5j" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }],
  [
    "path",
    {
      d: "M7.11 7.11C5.83 8.39 5 10.1 5 12c0 3.87 3.13 7 7 7 1.9 0 3.61-.83 4.89-2.11",
      key: "1oh7ia"
    }
  ],
  [
    "path",
    {
      d: "M18.71 13.96c.19-.63.29-1.29.29-1.96 0-3.87-3.13-7-7-7-.67 0-1.33.1-1.96.29",
      key: "3qdecy"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Locate = createLucideIcon("Locate", [
  ["line", { x1: "2", x2: "5", y1: "12", y2: "12", key: "bvdh0s" }],
  ["line", { x1: "19", x2: "22", y1: "12", y2: "12", key: "1tbv5k" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "5", key: "11lu5j" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }],
  ["circle", { cx: "12", cy: "12", r: "7", key: "fim9np" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LockKeyholeOpen = createLucideIcon("LockKeyholeOpen", [
  ["circle", { cx: "12", cy: "16", r: "1", key: "1au0dj" }],
  ["rect", { width: "18", height: "12", x: "3", y: "10", rx: "2", key: "l0tzu3" }],
  ["path", { d: "M7 10V7a5 5 0 0 1 9.33-2.5", key: "car5b7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LockKeyhole = createLucideIcon("LockKeyhole", [
  ["circle", { cx: "12", cy: "16", r: "1", key: "1au0dj" }],
  ["rect", { x: "3", y: "10", width: "18", height: "12", rx: "2", key: "6s8ecr" }],
  ["path", { d: "M7 10V7a5 5 0 0 1 10 0v3", key: "1pqi11" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LockOpen = createLucideIcon("LockOpen", [
  ["rect", { width: "18", height: "11", x: "3", y: "11", rx: "2", ry: "2", key: "1w4ew1" }],
  ["path", { d: "M7 11V7a5 5 0 0 1 9.9-1", key: "1mm8w8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lock = createLucideIcon("Lock", [
  ["rect", { width: "18", height: "11", x: "3", y: "11", rx: "2", ry: "2", key: "1w4ew1" }],
  ["path", { d: "M7 11V7a5 5 0 0 1 10 0v4", key: "fwvmzm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LogIn = createLucideIcon("LogIn", [
  ["path", { d: "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4", key: "u53s6r" }],
  ["polyline", { points: "10 17 15 12 10 7", key: "1ail0h" }],
  ["line", { x1: "15", x2: "3", y1: "12", y2: "12", key: "v6grx8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const LogOut = createLucideIcon("LogOut", [
  ["path", { d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4", key: "1uf3rs" }],
  ["polyline", { points: "16 17 21 12 16 7", key: "1gabdz" }],
  ["line", { x1: "21", x2: "9", y1: "12", y2: "12", key: "1uyos4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Logs = createLucideIcon("Logs", [
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 18h8", key: "oe0vm4" }],
  ["path", { d: "M13 6h8", key: "15sg57" }],
  ["path", { d: "M3 12h1", key: "lp3yf2" }],
  ["path", { d: "M3 18h1", key: "1eiwyy" }],
  ["path", { d: "M3 6h1", key: "rgxa97" }],
  ["path", { d: "M8 12h1", key: "1con00" }],
  ["path", { d: "M8 18h1", key: "13wk12" }],
  ["path", { d: "M8 6h1", key: "tn6mkg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Lollipop = createLucideIcon("Lollipop", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }],
  ["path", { d: "M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0", key: "107gwy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Luggage = createLucideIcon("Luggage", [
  [
    "path",
    { d: "M6 20a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2", key: "1m57jg" }
  ],
  ["path", { d: "M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14", key: "1l99gc" }],
  ["path", { d: "M10 20h4", key: "ni2waw" }],
  ["circle", { cx: "16", cy: "20", r: "2", key: "1vifvg" }],
  ["circle", { cx: "8", cy: "20", r: "2", key: "ckkr5m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Magnet = createLucideIcon("Magnet", [
  [
    "path",
    {
      d: "m6 15-4-4 6.75-6.77a7.79 7.79 0 0 1 11 11L13 22l-4-4 6.39-6.36a2.14 2.14 0 0 0-3-3L6 15",
      key: "1i3lhw"
    }
  ],
  ["path", { d: "m5 8 4 4", key: "j6kj7e" }],
  ["path", { d: "m12 15 4 4", key: "lnac28" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailCheck = createLucideIcon("MailCheck", [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "12jkf8" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailMinus = createLucideIcon("MailMinus", [
  ["path", { d: "M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "fuxbkv" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailOpen = createLucideIcon("MailOpen", [
  [
    "path",
    {
      d: "M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z",
      key: "1jhwl8"
    }
  ],
  ["path", { d: "m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10", key: "1qfld7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailPlus = createLucideIcon("MailPlus", [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "12jkf8" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailQuestion = createLucideIcon("MailQuestion", [
  ["path", { d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5", key: "e61zoh" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  [
    "path",
    {
      d: "M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2",
      key: "7z9rxb"
    }
  ],
  ["path", { d: "M20 22v.01", key: "12bgn6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailSearch = createLucideIcon("MailSearch", [
  ["path", { d: "M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5", key: "w80f2v" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z", key: "8lzu5m" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["path", { d: "m22 22-1.5-1.5", key: "1x83k4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailWarning = createLucideIcon("MailWarning", [
  ["path", { d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5", key: "e61zoh" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M20 14v4", key: "1hm744" }],
  ["path", { d: "M20 22v.01", key: "12bgn6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MailX = createLucideIcon("MailX", [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9", key: "1j9vog" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "m17 17 4 4", key: "1b3523" }],
  ["path", { d: "m21 17-4 4", key: "uinynz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mail = createLucideIcon("Mail", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mailbox = createLucideIcon("Mailbox", [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z",
      key: "1lbycx"
    }
  ],
  ["polyline", { points: "15,9 18,9 18,11", key: "1pm9c0" }],
  ["path", { d: "M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2", key: "15i455" }],
  ["line", { x1: "6", x2: "7", y1: "10", y2: "10", key: "1e2scm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mails = createLucideIcon("Mails", [
  ["rect", { width: "16", height: "13", x: "6", y: "4", rx: "2", key: "1drq3f" }],
  ["path", { d: "m22 7-7.1 3.78c-.57.3-1.23.3-1.8 0L6 7", key: "xn252p" }],
  ["path", { d: "M2 8v11c0 1.1.9 2 2 2h14", key: "n13cji" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinCheckInside = createLucideIcon("MapPinCheckInside", [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinCheck = createLucideIcon("MapPinCheck", [
  [
    "path",
    {
      d: "M19.43 12.935c.357-.967.57-1.955.57-2.935a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32.197 32.197 0 0 0 .813-.728",
      key: "1dq61d"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "m16 18 2 2 4-4", key: "1mkfmb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinHouse = createLucideIcon("MapPinHouse", [
  [
    "path",
    {
      d: "M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z",
      key: "1p1rcz"
    }
  ],
  [
    "path",
    {
      d: "M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2",
      key: "mcbcs9"
    }
  ],
  ["path", { d: "M18 22v-3", key: "1t1ugv" }],
  ["circle", { cx: "10", cy: "10", r: "3", key: "1ns7v1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinMinusInside = createLucideIcon("MapPinMinusInside", [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinMinus = createLucideIcon("MapPinMinus", [
  [
    "path",
    {
      d: "M18.977 14C19.6 12.701 20 11.343 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738",
      key: "11uxia"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M16 18h6", key: "987eiv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinOff = createLucideIcon("MapPinOff", [
  ["path", { d: "M12.75 7.09a3 3 0 0 1 2.16 2.16", key: "1d4wjd" }],
  [
    "path",
    {
      d: "M17.072 17.072c-1.634 2.17-3.527 3.912-4.471 4.727a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 1.432-4.568",
      key: "12yil7"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.475 2.818A8 8 0 0 1 20 10c0 1.183-.31 2.377-.81 3.533", key: "lhrkcz" }],
  ["path", { d: "M9.13 9.13a3 3 0 0 0 3.74 3.74", key: "13wojd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinPlusInside = createLucideIcon("MapPinPlusInside", [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinPlus = createLucideIcon("MapPinPlus", [
  [
    "path",
    {
      d: "M19.914 11.105A7.298 7.298 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738",
      key: "fcdtly"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M16 18h6", key: "987eiv" }],
  ["path", { d: "M19 15v6", key: "10aioa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinXInside = createLucideIcon("MapPinXInside", [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "m14.5 7.5-5 5", key: "3lb6iw" }],
  ["path", { d: "m9.5 7.5 5 5", key: "ko136h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinX = createLucideIcon("MapPinX", [
  [
    "path",
    {
      d: "M19.752 11.901A7.78 7.78 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 19 19 0 0 0 .09-.077",
      key: "y0ewhp"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "m21.5 15.5-5 5", key: "11iqnx" }],
  ["path", { d: "m21.5 20.5-5-5", key: "1bylgx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPin = createLucideIcon("MapPin", [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MapPinned = createLucideIcon("MapPinned", [
  [
    "path",
    {
      d: "M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0",
      key: "11u0oz"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  [
    "path",
    {
      d: "M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712",
      key: "q8zwxj"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Map$1 = createLucideIcon("Map", [
  [
    "path",
    {
      d: "M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z",
      key: "169xi5"
    }
  ],
  ["path", { d: "M15 5.764v15", key: "1pn4in" }],
  ["path", { d: "M9 3.236v15", key: "1uimfh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Martini = createLucideIcon("Martini", [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M12 11v11", key: "ur9y6a" }],
  ["path", { d: "m19 3-7 8-7-8Z", key: "1sgpiw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Maximize2 = createLucideIcon("Maximize2", [
  ["polyline", { points: "15 3 21 3 21 9", key: "mznyad" }],
  ["polyline", { points: "9 21 3 21 3 15", key: "1avn1i" }],
  ["line", { x1: "21", x2: "14", y1: "3", y2: "10", key: "ota7mn" }],
  ["line", { x1: "3", x2: "10", y1: "21", y2: "14", key: "1atl0r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Maximize = createLucideIcon("Maximize", [
  ["path", { d: "M8 3H5a2 2 0 0 0-2 2v3", key: "1dcmit" }],
  ["path", { d: "M21 8V5a2 2 0 0 0-2-2h-3", key: "1e4gt3" }],
  ["path", { d: "M3 16v3a2 2 0 0 0 2 2h3", key: "wsl5sc" }],
  ["path", { d: "M16 21h3a2 2 0 0 0 2-2v-3", key: "18trek" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Medal = createLucideIcon("Medal", [
  [
    "path",
    {
      d: "M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15",
      key: "143lza"
    }
  ],
  ["path", { d: "M11 12 5.12 2.2", key: "qhuxz6" }],
  ["path", { d: "m13 12 5.88-9.8", key: "hbye0f" }],
  ["path", { d: "M8 7h8", key: "i86dvs" }],
  ["circle", { cx: "12", cy: "17", r: "5", key: "qbz8iq" }],
  ["path", { d: "M12 18v-2h-.5", key: "fawc4q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MegaphoneOff = createLucideIcon("MegaphoneOff", [
  ["path", { d: "M9.26 9.26 3 11v3l14.14 3.14", key: "3429n" }],
  ["path", { d: "M21 15.34V6l-7.31 2.03", key: "4o1dh8" }],
  ["path", { d: "M11.6 16.8a3 3 0 1 1-5.8-1.6", key: "1yl0tm" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Megaphone = createLucideIcon("Megaphone", [
  ["path", { d: "m3 11 18-5v12L3 14v-3z", key: "n962bs" }],
  ["path", { d: "M11.6 16.8a3 3 0 1 1-5.8-1.6", key: "1yl0tm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Meh = createLucideIcon("Meh", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "8", x2: "16", y1: "15", y2: "15", key: "1xb1d9" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MemoryStick = createLucideIcon("MemoryStick", [
  ["path", { d: "M6 19v-3", key: "1nvgqn" }],
  ["path", { d: "M10 19v-3", key: "iu8nkm" }],
  ["path", { d: "M14 19v-3", key: "kcehxu" }],
  ["path", { d: "M18 19v-3", key: "1vh91z" }],
  ["path", { d: "M8 11V9", key: "63erz4" }],
  ["path", { d: "M16 11V9", key: "fru6f3" }],
  ["path", { d: "M12 11V9", key: "ha00sb" }],
  ["path", { d: "M2 15h20", key: "16ne18" }],
  [
    "path",
    {
      d: "M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z",
      key: "lhddv3"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Menu$1 = createLucideIcon("Menu", [
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }],
  ["line", { x1: "4", x2: "20", y1: "6", y2: "6", key: "1owob3" }],
  ["line", { x1: "4", x2: "20", y1: "18", y2: "18", key: "yk5zj1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Merge = createLucideIcon("Merge", [
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }],
  ["path", { d: "M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22", key: "1hyw0i" }],
  ["path", { d: "m20 22-5-5", key: "1m27yz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleCode = createLucideIcon("MessageCircleCode", [
  ["path", { d: "M10 9.5 8 12l2 2.5", key: "3mjy60" }],
  ["path", { d: "m14 9.5 2 2.5-2 2.5", key: "1bir2l" }],
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22z", key: "k85zhp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleDashed = createLucideIcon("MessageCircleDashed", [
  ["path", { d: "M13.5 3.1c-.5 0-1-.1-1.5-.1s-1 .1-1.5.1", key: "16ll65" }],
  ["path", { d: "M19.3 6.8a10.45 10.45 0 0 0-2.1-2.1", key: "1nq77a" }],
  ["path", { d: "M20.9 13.5c.1-.5.1-1 .1-1.5s-.1-1-.1-1.5", key: "1sf7wn" }],
  ["path", { d: "M17.2 19.3a10.45 10.45 0 0 0 2.1-2.1", key: "x1hs5g" }],
  ["path", { d: "M10.5 20.9c.5.1 1 .1 1.5.1s1-.1 1.5-.1", key: "19m18z" }],
  ["path", { d: "M3.5 17.5 2 22l4.5-1.5", key: "1f36qi" }],
  ["path", { d: "M3.1 10.5c0 .5-.1 1-.1 1.5s.1 1 .1 1.5", key: "1vz3ju" }],
  ["path", { d: "M6.8 4.7a10.45 10.45 0 0 0-2.1 2.1", key: "19f9do" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleHeart = createLucideIcon("MessageCircleHeart", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  [
    "path",
    {
      d: "M15.8 9.2a2.5 2.5 0 0 0-3.5 0l-.3.4-.35-.3a2.42 2.42 0 1 0-3.2 3.6l3.6 3.5 3.6-3.5c1.2-1.2 1.1-2.7.2-3.7",
      key: "43lnbm"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleMore = createLucideIcon("MessageCircleMore", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleOff = createLucideIcon("MessageCircleOff", [
  ["path", { d: "M20.5 14.9A9 9 0 0 0 9.1 3.5", key: "1iebmn" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5.6 5.6C3 8.3 2.2 12.5 4 16l-2 6 6-2c3.4 1.8 7.6 1.1 10.3-1.7", key: "1ov8ce" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCirclePlus = createLucideIcon("MessageCirclePlus", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleQuestion = createLucideIcon("MessageCircleQuestion", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleReply = createLucideIcon("MessageCircleReply", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "m10 15-3-3 3-3", key: "1pgupc" }],
  ["path", { d: "M7 12h7a2 2 0 0 1 2 2v1", key: "1gheu4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleWarning = createLucideIcon("MessageCircleWarning", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  ["path", { d: "M12 16h.01", key: "1drbdi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircleX = createLucideIcon("MessageCircleX", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageCircle = createLucideIcon("MessageCircle", [
  ["path", { d: "M7.9 20A9 9 0 1 0 4 16.1L2 22Z", key: "vv11sd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareCode = createLucideIcon("MessageSquareCode", [
  ["path", { d: "M10 7.5 8 10l2 2.5", key: "xb17xw" }],
  ["path", { d: "m14 7.5 2 2.5-2 2.5", key: "5rap1v" }],
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareDashed = createLucideIcon("MessageSquareDashed", [
  ["path", { d: "M10 17H7l-4 4v-7", key: "1r71xu" }],
  ["path", { d: "M14 17h1", key: "nufu4t" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 14v1a2 2 0 0 1-2 2", key: "29akq3" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M9 3h1", key: "1yesri" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareDiff = createLucideIcon("MessageSquareDiff", [
  ["path", { d: "m5 19-2 2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2", key: "1xuzuj" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }],
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  ["path", { d: "M9 17h6", key: "r8uit2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareDot = createLucideIcon("MessageSquareDot", [
  ["path", { d: "M11.7 3H5a2 2 0 0 0-2 2v16l4-4h12a2 2 0 0 0 2-2v-2.7", key: "uodpkb" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareHeart = createLucideIcon("MessageSquareHeart", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  [
    "path",
    {
      d: "M14.8 7.5a1.84 1.84 0 0 0-2.6 0l-.2.3-.3-.3a1.84 1.84 0 1 0-2.4 2.8L12 13l2.7-2.7c.9-.9.8-2.1.1-2.8",
      key: "1blaws"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareLock = createLucideIcon("MessageSquareLock", [
  ["path", { d: "M19 15v-2a2 2 0 1 0-4 0v2", key: "h3d1vz" }],
  ["path", { d: "M9 17H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v3.5", key: "xsnnhn" }],
  ["rect", { x: "13", y: "15", width: "8", height: "5", rx: "1", key: "1ccwuk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareMore = createLucideIcon("MessageSquareMore", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "M8 10h.01", key: "19clt8" }],
  ["path", { d: "M12 10h.01", key: "1nrarc" }],
  ["path", { d: "M16 10h.01", key: "1m94wz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareOff = createLucideIcon("MessageSquareOff", [
  ["path", { d: "M21 15V5a2 2 0 0 0-2-2H9", key: "43el77" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M3.6 3.6c-.4.3-.6.8-.6 1.4v16l4-4h10", key: "pwpm4a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquarePlus = createLucideIcon("MessageSquarePlus", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareQuote = createLucideIcon("MessageSquareQuote", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "M8 12a2 2 0 0 0 2-2V8H8", key: "1jfesj" }],
  ["path", { d: "M14 12a2 2 0 0 0 2-2V8h-2", key: "1dq9mh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareReply = createLucideIcon("MessageSquareReply", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "m10 7-3 3 3 3", key: "1eugdv" }],
  ["path", { d: "M17 13v-1a2 2 0 0 0-2-2H7", key: "ernfh3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareShare = createLucideIcon("MessageSquareShare", [
  ["path", { d: "M21 12v3a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h7", key: "tqtdkg" }],
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "m16 8 5-5", key: "15mbrl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareText = createLucideIcon("MessageSquareText", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "M13 8H7", key: "14i4kc" }],
  ["path", { d: "M17 12H7", key: "16if0g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareWarning = createLucideIcon("MessageSquareWarning", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "M12 7v2", key: "stiyo7" }],
  ["path", { d: "M12 13h.01", key: "y0uutt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquareX = createLucideIcon("MessageSquareX", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }],
  ["path", { d: "m14.5 7.5-5 5", key: "3lb6iw" }],
  ["path", { d: "m9.5 7.5 5 5", key: "ko136h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessageSquare = createLucideIcon("MessageSquare", [
  ["path", { d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z", key: "1lielz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MessagesSquare = createLucideIcon("MessagesSquare", [
  ["path", { d: "M14 9a2 2 0 0 1-2 2H6l-4 4V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2z", key: "p1xzt8" }],
  ["path", { d: "M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1", key: "1cx29u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MicOff = createLucideIcon("MicOff", [
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }],
  ["path", { d: "M18.89 13.23A7.12 7.12 0 0 0 19 12v-2", key: "80xlxr" }],
  ["path", { d: "M5 10v2a7 7 0 0 0 12 5", key: "p2k8kg" }],
  ["path", { d: "M15 9.34V5a3 3 0 0 0-5.68-1.33", key: "1gzdoj" }],
  ["path", { d: "M9 9v3a3 3 0 0 0 5.12 2.12", key: "r2i35w" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MicVocal = createLucideIcon("MicVocal", [
  [
    "path",
    {
      d: "m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12",
      key: "80a601"
    }
  ],
  [
    "path",
    {
      d: "M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5",
      key: "j0ngtp"
    }
  ],
  ["circle", { cx: "16", cy: "7", r: "5", key: "d08jfb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mic = createLucideIcon("Mic", [
  ["path", { d: "M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z", key: "131961" }],
  ["path", { d: "M19 10v2a7 7 0 0 1-14 0v-2", key: "1vc78b" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Microchip = createLucideIcon("Microchip", [
  ["path", { d: "M18 12h2", key: "quuxs7" }],
  ["path", { d: "M18 16h2", key: "zsn3lv" }],
  ["path", { d: "M18 20h2", key: "9x5y9y" }],
  ["path", { d: "M18 4h2", key: "1luxfb" }],
  ["path", { d: "M18 8h2", key: "nxqzg" }],
  ["path", { d: "M4 12h2", key: "1ltxp0" }],
  ["path", { d: "M4 16h2", key: "8a5zha" }],
  ["path", { d: "M4 20h2", key: "27dk57" }],
  ["path", { d: "M4 4h2", key: "10groj" }],
  ["path", { d: "M4 8h2", key: "18vq6w" }],
  [
    "path",
    {
      d: "M8 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-1.5c-.276 0-.494.227-.562.495a2 2 0 0 1-3.876 0C9.994 2.227 9.776 2 9.5 2z",
      key: "1681fp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Microscope = createLucideIcon("Microscope", [
  ["path", { d: "M6 18h8", key: "1borvv" }],
  ["path", { d: "M3 22h18", key: "8prr45" }],
  ["path", { d: "M14 22a7 7 0 1 0 0-14h-1", key: "1jwaiy" }],
  ["path", { d: "M9 14h2", key: "197e7h" }],
  ["path", { d: "M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z", key: "1bmzmy" }],
  ["path", { d: "M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3", key: "1drr47" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Microwave = createLucideIcon("Microwave", [
  ["rect", { width: "20", height: "15", x: "2", y: "4", rx: "2", key: "2no95f" }],
  ["rect", { width: "8", height: "7", x: "6", y: "8", rx: "1", key: "zh9wx" }],
  ["path", { d: "M18 8v7", key: "o5zi4n" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["path", { d: "M18 19v2", key: "1dawf0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Milestone = createLucideIcon("Milestone", [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M12 3v3", key: "1n5kay" }],
  [
    "path",
    {
      d: "M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z",
      key: "1btarq"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MilkOff = createLucideIcon("MilkOff", [
  ["path", { d: "M8 2h8", key: "1ssgc1" }],
  [
    "path",
    {
      d: "M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3",
      key: "y0ejgx"
    }
  ],
  ["path", { d: "M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435", key: "iaxqsy" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Milk = createLucideIcon("Milk", [
  ["path", { d: "M8 2h8", key: "1ssgc1" }],
  [
    "path",
    {
      d: "M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2",
      key: "qtp12x"
    }
  ],
  ["path", { d: "M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0", key: "ygeh44" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Minimize2 = createLucideIcon("Minimize2", [
  ["polyline", { points: "4 14 10 14 10 20", key: "11kfnr" }],
  ["polyline", { points: "20 10 14 10 14 4", key: "rlmsce" }],
  ["line", { x1: "14", x2: "21", y1: "10", y2: "3", key: "o5lafz" }],
  ["line", { x1: "3", x2: "10", y1: "21", y2: "14", key: "1atl0r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Minimize = createLucideIcon("Minimize", [
  ["path", { d: "M8 3v3a2 2 0 0 1-2 2H3", key: "hohbtr" }],
  ["path", { d: "M21 8h-3a2 2 0 0 1-2-2V3", key: "5jw1f3" }],
  ["path", { d: "M3 16h3a2 2 0 0 1 2 2v3", key: "198tvr" }],
  ["path", { d: "M16 21v-3a2 2 0 0 1 2-2h3", key: "ph8mxp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Minus = createLucideIcon("Minus", [["path", { d: "M5 12h14", key: "1ays0h" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorCheck = createLucideIcon("MonitorCheck", [
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorCog = createLucideIcon("MonitorCog", [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m15.2 4.9-.9-.4", key: "12wd2u" }],
  ["path", { d: "m15.2 7.1-.9.4", key: "1r2vl7" }],
  ["path", { d: "m16.9 3.2-.4-.9", key: "3zbo91" }],
  ["path", { d: "m16.9 8.8-.4.9", key: "1qr2dn" }],
  ["path", { d: "m19.5 2.3-.4.9", key: "1rjrkq" }],
  ["path", { d: "m19.5 9.7-.4-.9", key: "heryx5" }],
  ["path", { d: "m21.7 4.5-.9.4", key: "17fqt1" }],
  ["path", { d: "m21.7 7.5-.9-.4", key: "14zyni" }],
  ["path", { d: "M22 13v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7", key: "1tnzv8" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorDot = createLucideIcon("MonitorDot", [
  ["circle", { cx: "19", cy: "6", r: "3", key: "108a5v" }],
  ["path", { d: "M22 12v3a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h9", key: "1fet9y" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorDown = createLucideIcon("MonitorDown", [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "m15 10-3 3-3-3", key: "lzhmyn" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorOff = createLucideIcon("MonitorOff", [
  ["path", { d: "M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2", key: "k0q8oc" }],
  ["path", { d: "M22 15V5a2 2 0 0 0-2-2H9", key: "cp1ac0" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorPause = createLucideIcon("MonitorPause", [
  ["path", { d: "M10 13V7", key: "1u13u9" }],
  ["path", { d: "M14 13V7", key: "1vj9om" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorPlay = createLucideIcon("MonitorPlay", [
  [
    "path",
    {
      d: "M10 7.75a.75.75 0 0 1 1.142-.638l3.664 2.249a.75.75 0 0 1 0 1.278l-3.664 2.25a.75.75 0 0 1-1.142-.64z",
      key: "1pctta"
    }
  ],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["rect", { x: "2", y: "3", width: "20", height: "14", rx: "2", key: "x3v2xh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorSmartphone = createLucideIcon("MonitorSmartphone", [
  ["path", { d: "M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8", key: "10dyio" }],
  ["path", { d: "M10 19v-3.96 3.15", key: "1irgej" }],
  ["path", { d: "M7 19h5", key: "qswx4l" }],
  ["rect", { width: "6", height: "10", x: "16", y: "12", rx: "2", key: "1egngj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorSpeaker = createLucideIcon("MonitorSpeaker", [
  ["path", { d: "M5.5 20H8", key: "1k40s5" }],
  ["path", { d: "M17 9h.01", key: "1j24nn" }],
  ["rect", { width: "10", height: "16", x: "12", y: "4", rx: "2", key: "ixliua" }],
  ["path", { d: "M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4", key: "1mp6e1" }],
  ["circle", { cx: "17", cy: "15", r: "1", key: "tqvash" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorStop = createLucideIcon("MonitorStop", [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["rect", { x: "2", y: "3", width: "20", height: "14", rx: "2", key: "x3v2xh" }],
  ["rect", { x: "9", y: "7", width: "6", height: "6", rx: "1", key: "5m2oou" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorUp = createLucideIcon("MonitorUp", [
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }],
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MonitorX = createLucideIcon("MonitorX", [
  ["path", { d: "m14.5 12.5-5-5", key: "1jahn5" }],
  ["path", { d: "m9.5 12.5 5-5", key: "1k2t7b" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Monitor = createLucideIcon("Monitor", [
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["line", { x1: "8", x2: "16", y1: "21", y2: "21", key: "1svkeh" }],
  ["line", { x1: "12", x2: "12", y1: "17", y2: "21", key: "vw1qmm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoonStar = createLucideIcon("MoonStar", [
  ["path", { d: "M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9", key: "4ay0iu" }],
  ["path", { d: "M20 3v4", key: "1olli1" }],
  ["path", { d: "M22 5h-4", key: "1gvqau" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Moon = createLucideIcon("Moon", [
  ["path", { d: "M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z", key: "a7tn18" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MountainSnow = createLucideIcon("MountainSnow", [
  ["path", { d: "m8 3 4 8 5-5 5 15H2L8 3z", key: "otkl63" }],
  [
    "path",
    { d: "M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19", key: "1pvmmp" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mountain = createLucideIcon("Mountain", [
  ["path", { d: "m8 3 4 8 5-5 5 15H2L8 3z", key: "otkl63" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MouseOff = createLucideIcon("MouseOff", [
  ["path", { d: "M12 6v.343", key: "1gyhex" }],
  ["path", { d: "M18.218 18.218A7 7 0 0 1 5 15V9a7 7 0 0 1 .782-3.218", key: "ukzz01" }],
  ["path", { d: "M19 13.343V9A7 7 0 0 0 8.56 2.902", key: "104jy9" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MousePointer2 = createLucideIcon("MousePointer2", [
  [
    "path",
    {
      d: "M4.037 4.688a.495.495 0 0 1 .651-.651l16 6.5a.5.5 0 0 1-.063.947l-6.124 1.58a2 2 0 0 0-1.438 1.435l-1.579 6.126a.5.5 0 0 1-.947.063z",
      key: "edeuup"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MousePointerBan = createLucideIcon("MousePointerBan", [
  [
    "path",
    {
      d: "M2.034 2.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.944L8.204 7.545a1 1 0 0 0-.66.66l-1.066 3.443a.5.5 0 0 1-.944.033z",
      key: "11pp1i"
    }
  ],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }],
  ["path", { d: "m11.8 11.8 8.4 8.4", key: "oogvdj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MousePointerClick = createLucideIcon("MousePointerClick", [
  ["path", { d: "M14 4.1 12 6", key: "ita8i4" }],
  ["path", { d: "m5.1 8-2.9-.8", key: "1go3kf" }],
  ["path", { d: "m6 12-1.9 2", key: "mnht97" }],
  ["path", { d: "M7.2 2.2 8 5.1", key: "1cfko1" }],
  [
    "path",
    {
      d: "M9.037 9.69a.498.498 0 0 1 .653-.653l11 4.5a.5.5 0 0 1-.074.949l-4.349 1.041a1 1 0 0 0-.74.739l-1.04 4.35a.5.5 0 0 1-.95.074z",
      key: "s0h3yz"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MousePointer = createLucideIcon("MousePointer", [
  ["path", { d: "M12.586 12.586 19 19", key: "ea5xo7" }],
  [
    "path",
    {
      d: "M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z",
      key: "277e5u"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Mouse = createLucideIcon("Mouse", [
  ["rect", { x: "5", y: "2", width: "14", height: "20", rx: "7", key: "11ol66" }],
  ["path", { d: "M12 6v4", key: "16clxf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Move3d = createLucideIcon("Move3d", [
  ["path", { d: "M5 3v16h16", key: "1mqmf9" }],
  ["path", { d: "m5 19 6-6", key: "jh6hbb" }],
  ["path", { d: "m2 6 3-3 3 3", key: "tkyvxa" }],
  ["path", { d: "m18 16 3 3-3 3", key: "1d4glt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveDiagonal2 = createLucideIcon("MoveDiagonal2", [
  ["path", { d: "M19 13v6h-6", key: "1hxl6d" }],
  ["path", { d: "M5 11V5h6", key: "12e2xe" }],
  ["path", { d: "m5 5 14 14", key: "11anup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveDiagonal = createLucideIcon("MoveDiagonal", [
  ["path", { d: "M11 19H5v-6", key: "8awifj" }],
  ["path", { d: "M13 5h6v6", key: "7voy1q" }],
  ["path", { d: "M19 5 5 19", key: "wwaj1z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveDownLeft = createLucideIcon("MoveDownLeft", [
  ["path", { d: "M11 19H5V13", key: "1akmht" }],
  ["path", { d: "M19 5L5 19", key: "72u4yj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveDownRight = createLucideIcon("MoveDownRight", [
  ["path", { d: "M19 13V19H13", key: "10vkzq" }],
  ["path", { d: "M5 5L19 19", key: "5zm2fv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveDown = createLucideIcon("MoveDown", [
  ["path", { d: "M8 18L12 22L16 18", key: "cskvfv" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveHorizontal = createLucideIcon("MoveHorizontal", [
  ["path", { d: "m18 8 4 4-4 4", key: "1ak13k" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "m6 8-4 4 4 4", key: "15zrgr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveLeft = createLucideIcon("MoveLeft", [
  ["path", { d: "M6 8L2 12L6 16", key: "kyvwex" }],
  ["path", { d: "M2 12H22", key: "1m8cig" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveRight = createLucideIcon("MoveRight", [
  ["path", { d: "M18 8L22 12L18 16", key: "1r0oui" }],
  ["path", { d: "M2 12H22", key: "1m8cig" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveUpLeft = createLucideIcon("MoveUpLeft", [
  ["path", { d: "M5 11V5H11", key: "3q78g9" }],
  ["path", { d: "M5 5L19 19", key: "5zm2fv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveUpRight = createLucideIcon("MoveUpRight", [
  ["path", { d: "M13 5H19V11", key: "1n1gyv" }],
  ["path", { d: "M19 5L5 19", key: "72u4yj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveUp = createLucideIcon("MoveUp", [
  ["path", { d: "M8 6L12 2L16 6", key: "1yvkyx" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const MoveVertical = createLucideIcon("MoveVertical", [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "m8 18 4 4 4-4", key: "bh5tu3" }],
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Move = createLucideIcon("Move", [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "m15 19-3 3-3-3", key: "11eu04" }],
  ["path", { d: "m19 9 3 3-3 3", key: "1mg7y2" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "m5 9-3 3 3 3", key: "j64kie" }],
  ["path", { d: "m9 5 3-3 3 3", key: "l8vdw6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Music2 = createLucideIcon("Music2", [
  ["circle", { cx: "8", cy: "18", r: "4", key: "1fc0mg" }],
  ["path", { d: "M12 18V2l7 4", key: "g04rme" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Music3 = createLucideIcon("Music3", [
  ["circle", { cx: "12", cy: "18", r: "4", key: "m3r9ws" }],
  ["path", { d: "M16 18V2", key: "40x2m5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Music4 = createLucideIcon("Music4", [
  ["path", { d: "M9 18V5l12-2v13", key: "1jmyc2" }],
  ["path", { d: "m9 9 12-2", key: "1e64n2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Music = createLucideIcon("Music", [
  ["path", { d: "M9 18V5l12-2v13", key: "1jmyc2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Navigation2Off = createLucideIcon("Navigation2Off", [
  ["path", { d: "M9.31 9.31 5 21l7-4 7 4-1.17-3.17", key: "qoq2o2" }],
  ["path", { d: "M14.53 8.88 12 2l-1.17 3.17", key: "k3sjzy" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Navigation2 = createLucideIcon("Navigation2", [
  ["polygon", { points: "12 2 19 21 12 17 5 21 12 2", key: "x8c0qg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NavigationOff = createLucideIcon("NavigationOff", [
  ["path", { d: "M8.43 8.43 3 11l8 2 2 8 2.57-5.43", key: "1vdtb7" }],
  ["path", { d: "M17.39 11.73 22 2l-9.73 4.61", key: "tya3r6" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Navigation$1 = createLucideIcon("Navigation", [
  ["polygon", { points: "3 11 22 2 13 21 11 13 3 11", key: "1ltx0t" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Network = createLucideIcon("Network", [
  ["rect", { x: "16", y: "16", width: "6", height: "6", rx: "1", key: "4q2zg0" }],
  ["rect", { x: "2", y: "16", width: "6", height: "6", rx: "1", key: "8cvhb9" }],
  ["rect", { x: "9", y: "2", width: "6", height: "6", rx: "1", key: "1egb70" }],
  ["path", { d: "M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3", key: "1jsf9p" }],
  ["path", { d: "M12 12V8", key: "2874zd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Newspaper = createLucideIcon("Newspaper", [
  [
    "path",
    {
      d: "M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-2 2Zm0 0a2 2 0 0 1-2-2v-9c0-1.1.9-2 2-2h2",
      key: "7pis2x"
    }
  ],
  ["path", { d: "M18 14h-8", key: "sponae" }],
  ["path", { d: "M15 18h-5", key: "95g1m2" }],
  ["path", { d: "M10 6h8v4h-8V6Z", key: "smlsk5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Nfc = createLucideIcon("Nfc", [
  ["path", { d: "M6 8.32a7.43 7.43 0 0 1 0 7.36", key: "9iaqei" }],
  ["path", { d: "M9.46 6.21a11.76 11.76 0 0 1 0 11.58", key: "1yha7l" }],
  ["path", { d: "M12.91 4.1a15.91 15.91 0 0 1 .01 15.8", key: "4iu2gk" }],
  ["path", { d: "M16.37 2a20.16 20.16 0 0 1 0 20", key: "sap9u2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NotebookPen = createLucideIcon("NotebookPen", [
  ["path", { d: "M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4", key: "re6nr2" }],
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  [
    "path",
    {
      d: "M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "pqwjuv"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NotebookTabs = createLucideIcon("NotebookTabs", [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M15 2v20", key: "dcj49h" }],
  ["path", { d: "M15 7h5", key: "1xj5lc" }],
  ["path", { d: "M15 12h5", key: "w5shd9" }],
  ["path", { d: "M15 17h5", key: "1qaofu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NotebookText = createLucideIcon("NotebookText", [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M9.5 8h5", key: "11mslq" }],
  ["path", { d: "M9.5 12H16", key: "ktog6x" }],
  ["path", { d: "M9.5 16H14", key: "p1seyn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Notebook = createLucideIcon("Notebook", [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M16 2v20", key: "rotuqe" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NotepadTextDashed = createLucideIcon("NotepadTextDashed", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v2", key: "j91f56" }],
  ["path", { d: "M20 12v2", key: "w8o0tu" }],
  ["path", { d: "M20 18v2a2 2 0 0 1-2 2h-1", key: "1c9ggx" }],
  ["path", { d: "M13 22h-2", key: "191ugt" }],
  ["path", { d: "M7 22H6a2 2 0 0 1-2-2v-2", key: "1rt9px" }],
  ["path", { d: "M4 14v-2", key: "1v0sqh" }],
  ["path", { d: "M4 8V6a2 2 0 0 1 2-2h2", key: "1mwabg" }],
  ["path", { d: "M8 10h6", key: "3oa6kw" }],
  ["path", { d: "M8 14h8", key: "1fgep2" }],
  ["path", { d: "M8 18h5", key: "17enja" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NotepadText = createLucideIcon("NotepadText", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "16", height: "18", x: "4", y: "4", rx: "2", key: "1u9h20" }],
  ["path", { d: "M8 10h6", key: "3oa6kw" }],
  ["path", { d: "M8 14h8", key: "1fgep2" }],
  ["path", { d: "M8 18h5", key: "17enja" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const NutOff = createLucideIcon("NutOff", [
  ["path", { d: "M12 4V2", key: "1k5q1u" }],
  [
    "path",
    {
      d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939",
      key: "1xcvy9"
    }
  ],
  ["path", { d: "M19 10v3.343", key: "163tfc" }],
  [
    "path",
    {
      d: "M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192",
      key: "17914v"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Nut = createLucideIcon("Nut", [
  ["path", { d: "M12 4V2", key: "1k5q1u" }],
  [
    "path",
    {
      d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4",
      key: "1tgyif"
    }
  ],
  [
    "path",
    {
      d: "M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z",
      key: "tnsqj"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const OctagonAlert = createLucideIcon("OctagonAlert", [
  ["path", { d: "M12 16h.01", key: "1drbdi" }],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  [
    "path",
    {
      d: "M15.312 2a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586l-4.688-4.688A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2z",
      key: "1fd625"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const OctagonMinus = createLucideIcon("OctagonMinus", [
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const OctagonPause = createLucideIcon("OctagonPause", [
  ["path", { d: "M10 15V9", key: "1lckn7" }],
  ["path", { d: "M14 15V9", key: "1muqhk" }],
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const OctagonX = createLucideIcon("OctagonX", [
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Octagon = createLucideIcon("Octagon", [
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Omega = createLucideIcon("Omega", [
  [
    "path",
    {
      d: "M3 20h4.5a.5.5 0 0 0 .5-.5v-.282a.52.52 0 0 0-.247-.437 8 8 0 1 1 8.494-.001.52.52 0 0 0-.247.438v.282a.5.5 0 0 0 .5.5H21",
      key: "1x94xo"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Option = createLucideIcon("Option", [
  ["path", { d: "M3 3h6l6 18h6", key: "ph9rgk" }],
  ["path", { d: "M14 3h7", key: "16f0ms" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Orbit = createLucideIcon("Orbit", [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["circle", { cx: "19", cy: "5", r: "2", key: "mhkx31" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }],
  ["path", { d: "M10.4 21.9a10 10 0 0 0 9.941-15.416", key: "eohfx2" }],
  ["path", { d: "M13.5 2.1a10 10 0 0 0-9.841 15.416", key: "19pvbm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Origami = createLucideIcon("Origami", [
  ["path", { d: "M12 12V4a1 1 0 0 1 1-1h6.297a1 1 0 0 1 .651 1.759l-4.696 4.025", key: "1bx4vc" }],
  [
    "path",
    {
      d: "m12 21-7.414-7.414A2 2 0 0 1 4 12.172V6.415a1.002 1.002 0 0 1 1.707-.707L20 20.009",
      key: "1h3km6"
    }
  ],
  [
    "path",
    {
      d: "m12.214 3.381 8.414 14.966a1 1 0 0 1-.167 1.199l-1.168 1.163a1 1 0 0 1-.706.291H6.351a1 1 0 0 1-.625-.219L3.25 18.8a1 1 0 0 1 .631-1.781l4.165.027",
      key: "1hj4wg"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Package2 = createLucideIcon("Package2", [
  ["path", { d: "M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z", key: "1ront0" }],
  ["path", { d: "m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9", key: "19h2x1" }],
  ["path", { d: "M12 3v6", key: "1holv5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackageCheck = createLucideIcon("PackageCheck", [
  ["path", { d: "m16 16 2 2 4-4", key: "gfu2re" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackageMinus = createLucideIcon("PackageMinus", [
  ["path", { d: "M16 16h6", key: "100bgy" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackageOpen = createLucideIcon("PackageOpen", [
  ["path", { d: "M12 22v-9", key: "x3hkom" }],
  [
    "path",
    {
      d: "M15.17 2.21a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.655 1.655 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z",
      key: "2ntwy6"
    }
  ],
  [
    "path",
    {
      d: "M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13",
      key: "1pmm1c"
    }
  ],
  [
    "path",
    {
      d: "M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.636 1.636 0 0 0 1.63 0z",
      key: "12ttoo"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackagePlus = createLucideIcon("PackagePlus", [
  ["path", { d: "M16 16h6", key: "100bgy" }],
  ["path", { d: "M19 13v6", key: "85cyf1" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackageSearch = createLucideIcon("PackageSearch", [
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }],
  ["circle", { cx: "18.5", cy: "15.5", r: "2.5", key: "b5zd12" }],
  ["path", { d: "M20.27 17.27 22 19", key: "1l4muz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PackageX = createLucideIcon("PackageX", [
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }],
  ["path", { d: "m17 13 5 5m-5 0 5-5", key: "im3w4b" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Package = createLucideIcon("Package", [
  [
    "path",
    {
      d: "M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z",
      key: "1a0edw"
    }
  ],
  ["path", { d: "M12 22V12", key: "d0xqtd" }],
  ["path", { d: "m3.3 7 7.703 4.734a2 2 0 0 0 1.994 0L20.7 7", key: "yx3hmr" }],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PaintBucket = createLucideIcon("PaintBucket", [
  [
    "path",
    { d: "m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z", key: "irua1i" }
  ],
  ["path", { d: "m5 2 5 5", key: "1lls2c" }],
  ["path", { d: "M2 13h15", key: "1hkzvu" }],
  ["path", { d: "M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z", key: "xk76lq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PaintRoller = createLucideIcon("PaintRoller", [
  ["rect", { width: "16", height: "6", x: "2", y: "2", rx: "2", key: "jcyz7m" }],
  ["path", { d: "M10 16v-2a2 2 0 0 1 2-2h8a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2", key: "1b9h7c" }],
  ["rect", { width: "4", height: "6", x: "8", y: "16", rx: "1", key: "d6e7yl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PaintbrushVertical = createLucideIcon("PaintbrushVertical", [
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M14 2v4", key: "qmzblu" }],
  ["path", { d: "M17 2a1 1 0 0 1 1 1v9H6V3a1 1 0 0 1 1-1z", key: "ycvu00" }],
  [
    "path",
    {
      d: "M6 12a1 1 0 0 0-1 1v1a2 2 0 0 0 2 2h2a1 1 0 0 1 1 1v2.9a2 2 0 1 0 4 0V17a1 1 0 0 1 1-1h2a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1",
      key: "iw4wnp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Paintbrush = createLucideIcon("Paintbrush", [
  ["path", { d: "m14.622 17.897-10.68-2.913", key: "vj2p1u" }],
  [
    "path",
    {
      d: "M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0z",
      key: "18tc5c"
    }
  ],
  [
    "path",
    {
      d: "M9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15",
      key: "ytzfxy"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Palette = createLucideIcon("Palette", [
  ["circle", { cx: "13.5", cy: "6.5", r: ".5", fill: "currentColor", key: "1okk4w" }],
  ["circle", { cx: "17.5", cy: "10.5", r: ".5", fill: "currentColor", key: "f64h9f" }],
  ["circle", { cx: "8.5", cy: "7.5", r: ".5", fill: "currentColor", key: "fotxhn" }],
  ["circle", { cx: "6.5", cy: "12.5", r: ".5", fill: "currentColor", key: "qy21gx" }],
  [
    "path",
    {
      d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",
      key: "12rzf8"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelBottomClose = createLucideIcon("PanelBottomClose", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "m15 8-3 3-3-3", key: "1oxy1z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelBottomDashed = createLucideIcon("PanelBottomDashed", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M14 15h1", key: "171nev" }],
  ["path", { d: "M19 15h2", key: "1vnucp" }],
  ["path", { d: "M3 15h2", key: "8bym0q" }],
  ["path", { d: "M9 15h1", key: "1tg3ks" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelBottomOpen = createLucideIcon("PanelBottomOpen", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelBottom = createLucideIcon("PanelBottom", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelLeftClose = createLucideIcon("PanelLeftClose", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "m16 15-3-3 3-3", key: "14y99z" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelLeftDashed = createLucideIcon("PanelLeftDashed", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 14v1", key: "askpd8" }],
  ["path", { d: "M9 19v2", key: "16tejx" }],
  ["path", { d: "M9 3v2", key: "1noubl" }],
  ["path", { d: "M9 9v1", key: "19ebxg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelLeftOpen = createLucideIcon("PanelLeftOpen", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "m14 9 3 3-3 3", key: "8010ee" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelLeft = createLucideIcon("PanelLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelRightClose = createLucideIcon("PanelRightClose", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["path", { d: "m8 9 3 3-3 3", key: "12hl5m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelRightDashed = createLucideIcon("PanelRightDashed", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 14v1", key: "ilsfch" }],
  ["path", { d: "M15 19v2", key: "1fst2f" }],
  ["path", { d: "M15 3v2", key: "z204g4" }],
  ["path", { d: "M15 9v1", key: "z2a8b1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelRightOpen = createLucideIcon("PanelRightOpen", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["path", { d: "m10 15-3-3 3-3", key: "1pgupc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelRight = createLucideIcon("PanelRight", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelTopClose = createLucideIcon("PanelTopClose", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "m9 16 3-3 3 3", key: "1idcnm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelTopDashed = createLucideIcon("PanelTopDashed", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M14 9h1", key: "l0svgy" }],
  ["path", { d: "M19 9h2", key: "te2zfg" }],
  ["path", { d: "M3 9h2", key: "1h4ldw" }],
  ["path", { d: "M9 9h1", key: "15jzuz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelTopOpen = createLucideIcon("PanelTopOpen", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "m15 14-3 3-3-3", key: "g215vf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelTop = createLucideIcon("PanelTop", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelsLeftBottom = createLucideIcon("PanelsLeftBottom", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M9 15h12", key: "5ijen5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelsRightBottom = createLucideIcon("PanelsRightBottom", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h12", key: "1wkqb3" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PanelsTopLeft = createLucideIcon("PanelsTopLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M9 21V9", key: "1oto5p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Paperclip = createLucideIcon("Paperclip", [
  [
    "path",
    {
      d: "m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48",
      key: "1u3ebp"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Parentheses = createLucideIcon("Parentheses", [
  ["path", { d: "M8 21s-4-3-4-9 4-9 4-9", key: "uto9ud" }],
  ["path", { d: "M16 3s4 3 4 9-4 9-4 9", key: "4w2vsq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ParkingMeter = createLucideIcon("ParkingMeter", [
  ["path", { d: "M11 15h2", key: "199qp6" }],
  ["path", { d: "M12 12v3", key: "158kv8" }],
  ["path", { d: "M12 19v3", key: "npa21l" }],
  [
    "path",
    {
      d: "M15.282 19a1 1 0 0 0 .948-.68l2.37-6.988a7 7 0 1 0-13.2 0l2.37 6.988a1 1 0 0 0 .948.68z",
      key: "1jofit"
    }
  ],
  ["path", { d: "M9 9a3 3 0 1 1 6 0", key: "jdoeu8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PartyPopper = createLucideIcon("PartyPopper", [
  ["path", { d: "M5.8 11.3 2 22l10.7-3.79", key: "gwxi1d" }],
  ["path", { d: "M4 3h.01", key: "1vcuye" }],
  ["path", { d: "M22 8h.01", key: "1mrtc2" }],
  ["path", { d: "M15 2h.01", key: "1cjtqr" }],
  ["path", { d: "M22 20h.01", key: "1mrys2" }],
  [
    "path",
    {
      d: "m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10",
      key: "hbicv8"
    }
  ],
  [
    "path",
    { d: "m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17", key: "1i94pl" }
  ],
  ["path", { d: "m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7", key: "1cofks" }],
  [
    "path",
    {
      d: "M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z",
      key: "4kbmks"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pause = createLucideIcon("Pause", [
  ["rect", { x: "14", y: "4", width: "4", height: "16", rx: "1", key: "zuxfzm" }],
  ["rect", { x: "6", y: "4", width: "4", height: "16", rx: "1", key: "1okwgv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PawPrint = createLucideIcon("PawPrint", [
  ["circle", { cx: "11", cy: "4", r: "2", key: "vol9p0" }],
  ["circle", { cx: "18", cy: "8", r: "2", key: "17gozi" }],
  ["circle", { cx: "20", cy: "16", r: "2", key: "1v9bxh" }],
  [
    "path",
    {
      d: "M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z",
      key: "1ydw1z"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PcCase = createLucideIcon("PcCase", [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", key: "1uq1d7" }],
  ["path", { d: "M15 14h.01", key: "1kp3bh" }],
  ["path", { d: "M9 6h6", key: "dgm16u" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PenLine = createLucideIcon("PenLine", [
  ["path", { d: "M12 20h9", key: "t2du7b" }],
  [
    "path",
    {
      d: "M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z",
      key: "1ykcvy"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PenOff = createLucideIcon("PenOff", [
  [
    "path",
    {
      d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982",
      key: "bjo8r8"
    }
  ],
  ["path", { d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353", key: "16h5ne" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PenTool = createLucideIcon("PenTool", [
  [
    "path",
    {
      d: "M15.707 21.293a1 1 0 0 1-1.414 0l-1.586-1.586a1 1 0 0 1 0-1.414l5.586-5.586a1 1 0 0 1 1.414 0l1.586 1.586a1 1 0 0 1 0 1.414z",
      key: "nt11vn"
    }
  ],
  [
    "path",
    {
      d: "m18 13-1.375-6.874a1 1 0 0 0-.746-.776L3.235 2.028a1 1 0 0 0-1.207 1.207L5.35 15.879a1 1 0 0 0 .776.746L13 18",
      key: "15qc1e"
    }
  ],
  ["path", { d: "m2.3 2.3 7.286 7.286", key: "1wuzzi" }],
  ["circle", { cx: "11", cy: "11", r: "2", key: "xmgehs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pen = createLucideIcon("Pen", [
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PencilLine = createLucideIcon("PencilLine", [
  ["path", { d: "M12 20h9", key: "t2du7b" }],
  [
    "path",
    {
      d: "M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z",
      key: "1ykcvy"
    }
  ],
  ["path", { d: "m15 5 3 3", key: "1w25hb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PencilOff = createLucideIcon("PencilOff", [
  [
    "path",
    {
      d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982",
      key: "bjo8r8"
    }
  ],
  ["path", { d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353", key: "16h5ne" }],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PencilRuler = createLucideIcon("PencilRuler", [
  [
    "path",
    { d: "M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13", key: "orapub" }
  ],
  ["path", { d: "m8 6 2-2", key: "115y1s" }],
  ["path", { d: "m18 16 2-2", key: "ee94s4" }],
  [
    "path",
    {
      d: "m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17",
      key: "cfq27r"
    }
  ],
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pencil = createLucideIcon("Pencil", [
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pentagon = createLucideIcon("Pentagon", [
  [
    "path",
    {
      d: "M10.83 2.38a2 2 0 0 1 2.34 0l8 5.74a2 2 0 0 1 .73 2.25l-3.04 9.26a2 2 0 0 1-1.9 1.37H7.04a2 2 0 0 1-1.9-1.37L2.1 10.37a2 2 0 0 1 .73-2.25z",
      key: "2hea0t"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Percent = createLucideIcon("Percent", [
  ["line", { x1: "19", x2: "5", y1: "5", y2: "19", key: "1x9vlm" }],
  ["circle", { cx: "6.5", cy: "6.5", r: "2.5", key: "4mh3h7" }],
  ["circle", { cx: "17.5", cy: "17.5", r: "2.5", key: "1mdrzq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PersonStanding = createLucideIcon("PersonStanding", [
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["path", { d: "m9 20 3-6 3 6", key: "se2kox" }],
  ["path", { d: "m6 8 6 2 6-2", key: "4o3us4" }],
  ["path", { d: "M12 10v4", key: "1kjpxc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhilippinePeso = createLucideIcon("PhilippinePeso", [
  ["path", { d: "M20 11H4", key: "6ut86h" }],
  ["path", { d: "M20 7H4", key: "zbl0bi" }],
  ["path", { d: "M7 21V4a1 1 0 0 1 1-1h4a1 1 0 0 1 0 12H7", key: "1ana5r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneCall = createLucideIcon("PhoneCall", [
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ],
  ["path", { d: "M14.05 2a9 9 0 0 1 8 7.94", key: "vmijpz" }],
  ["path", { d: "M14.05 6A5 5 0 0 1 18 10", key: "13nbpp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneForwarded = createLucideIcon("PhoneForwarded", [
  ["polyline", { points: "18 2 22 6 18 10", key: "6vjanh" }],
  ["line", { x1: "14", x2: "22", y1: "6", y2: "6", key: "1jsywh" }],
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneIncoming = createLucideIcon("PhoneIncoming", [
  ["polyline", { points: "16 2 16 8 22 8", key: "1ygljm" }],
  ["line", { x1: "22", x2: "16", y1: "2", y2: "8", key: "1xzwqn" }],
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneMissed = createLucideIcon("PhoneMissed", [
  ["line", { x1: "22", x2: "16", y1: "2", y2: "8", key: "1xzwqn" }],
  ["line", { x1: "16", x2: "22", y1: "2", y2: "8", key: "13zxdn" }],
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneOff = createLucideIcon("PhoneOff", [
  [
    "path",
    {
      d: "M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91",
      key: "z86iuo"
    }
  ],
  ["line", { x1: "22", x2: "2", y1: "2", y2: "22", key: "11kh81" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PhoneOutgoing = createLucideIcon("PhoneOutgoing", [
  ["polyline", { points: "22 8 22 2 16 2", key: "1g204g" }],
  ["line", { x1: "16", x2: "22", y1: "8", y2: "2", key: "1ggias" }],
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Phone = createLucideIcon("Phone", [
  [
    "path",
    {
      d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z",
      key: "foiqr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pi = createLucideIcon("Pi", [
  ["line", { x1: "9", x2: "9", y1: "4", y2: "20", key: "ovs5a5" }],
  ["path", { d: "M4 7c0-1.7 1.3-3 3-3h13", key: "10pag4" }],
  ["path", { d: "M18 20c-1.7 0-3-1.3-3-3V4", key: "1gaosr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Piano = createLucideIcon("Piano", [
  [
    "path",
    {
      d: "M18.5 8c-1.4 0-2.6-.8-3.2-2A6.87 6.87 0 0 0 2 9v11a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-8.5C22 9.6 20.4 8 18.5 8",
      key: "lag0yf"
    }
  ],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M6 14v4", key: "9ng0ue" }],
  ["path", { d: "M10 14v4", key: "1v8uk5" }],
  ["path", { d: "M14 14v4", key: "1tqops" }],
  ["path", { d: "M18 14v4", key: "18uqwm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pickaxe = createLucideIcon("Pickaxe", [
  ["path", { d: "M14.531 12.469 6.619 20.38a1 1 0 1 1-3-3l7.912-7.912", key: "we99rg" }],
  [
    "path",
    {
      d: "M15.686 4.314A12.5 12.5 0 0 0 5.461 2.958 1 1 0 0 0 5.58 4.71a22 22 0 0 1 6.318 3.393",
      key: "1w6hck"
    }
  ],
  [
    "path",
    {
      d: "M17.7 3.7a1 1 0 0 0-1.4 0l-4.6 4.6a1 1 0 0 0 0 1.4l2.6 2.6a1 1 0 0 0 1.4 0l4.6-4.6a1 1 0 0 0 0-1.4z",
      key: "15hgfx"
    }
  ],
  [
    "path",
    {
      d: "M19.686 8.314a12.501 12.501 0 0 1 1.356 10.225 1 1 0 0 1-1.751-.119 22 22 0 0 0-3.393-6.319",
      key: "452b4h"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PictureInPicture2 = createLucideIcon("PictureInPicture2", [
  ["path", { d: "M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4", key: "daa4of" }],
  ["rect", { width: "10", height: "7", x: "12", y: "13", rx: "2", key: "1nb8gs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PictureInPicture = createLucideIcon("PictureInPicture", [
  [
    "path",
    {
      d: "M8 4.5v5H3m-1-6 6 6m13 0v-3c0-1.16-.84-2-2-2h-7m-9 9v2c0 1.05.95 2 2 2h3",
      key: "bcd8fb"
    }
  ],
  ["rect", { width: "10", height: "7", x: "12", y: "13.5", ry: "2", key: "136fx3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PiggyBank = createLucideIcon("PiggyBank", [
  [
    "path",
    {
      d: "M19 5c-1.5 0-2.8 1.4-3 2-3.5-1.5-11-.3-11 5 0 1.8 0 3 2 4.5V20h4v-2h3v2h4v-4c1-.5 1.7-1 2-2h2v-4h-2c0-1-.5-1.5-1-2V5z",
      key: "1ivx2i"
    }
  ],
  ["path", { d: "M2 9v1c0 1.1.9 2 2 2h1", key: "nm575m" }],
  ["path", { d: "M16 11h.01", key: "xkw8gn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PilcrowLeft = createLucideIcon("PilcrowLeft", [
  ["path", { d: "M14 3v11", key: "mlfb7b" }],
  ["path", { d: "M14 9h-3a3 3 0 0 1 0-6h9", key: "1ulc19" }],
  ["path", { d: "M18 3v11", key: "1phi0r" }],
  ["path", { d: "M22 18H2l4-4", key: "yt65j9" }],
  ["path", { d: "m6 22-4-4", key: "6jgyf5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PilcrowRight = createLucideIcon("PilcrowRight", [
  ["path", { d: "M10 3v11", key: "o3l5kj" }],
  ["path", { d: "M10 9H7a1 1 0 0 1 0-6h8", key: "1wb1nc" }],
  ["path", { d: "M14 3v11", key: "mlfb7b" }],
  ["path", { d: "m18 14 4 4H2", key: "4r8io1" }],
  ["path", { d: "m22 18-4 4", key: "1hjjrd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pilcrow = createLucideIcon("Pilcrow", [
  ["path", { d: "M13 4v16", key: "8vvj80" }],
  ["path", { d: "M17 4v16", key: "7dpous" }],
  ["path", { d: "M19 4H9.5a4.5 4.5 0 0 0 0 9H13", key: "sh4n9v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PillBottle = createLucideIcon("PillBottle", [
  ["path", { d: "M18 11h-4a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4", key: "17ldeb" }],
  ["path", { d: "M6 7v13a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7", key: "nc37y6" }],
  ["rect", { width: "16", height: "5", x: "4", y: "2", rx: "1", key: "3jeezo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pill = createLucideIcon("Pill", [
  [
    "path",
    { d: "m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z", key: "wa1lgi" }
  ],
  ["path", { d: "m8.5 8.5 7 7", key: "rvfmvr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PinOff = createLucideIcon("PinOff", [
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  ["path", { d: "M15 9.34V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H7.89", key: "znwnzq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h11",
      key: "c9qhm2"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pin = createLucideIcon("Pin", [
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  [
    "path",
    {
      d: "M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z",
      key: "1nkz8b"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pipette = createLucideIcon("Pipette", [
  ["path", { d: "m2 22 1-1h3l9-9", key: "1sre89" }],
  ["path", { d: "M3 21v-3l9-9", key: "hpe2y6" }],
  [
    "path",
    {
      d: "m15 6 3.4-3.4a2.1 2.1 0 1 1 3 3L18 9l.4.4a2.1 2.1 0 1 1-3 3l-3.8-3.8a2.1 2.1 0 1 1 3-3l.4.4Z",
      key: "196du1"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pizza = createLucideIcon("Pizza", [
  ["path", { d: "m12 14-1 1", key: "11onhr" }],
  ["path", { d: "m13.75 18.25-1.25 1.42", key: "1yisr3" }],
  ["path", { d: "M17.775 5.654a15.68 15.68 0 0 0-12.121 12.12", key: "1qtqk6" }],
  ["path", { d: "M18.8 9.3a1 1 0 0 0 2.1 7.7", key: "fbbbr2" }],
  [
    "path",
    {
      d: "M21.964 20.732a1 1 0 0 1-1.232 1.232l-18-5a1 1 0 0 1-.695-1.232A19.68 19.68 0 0 1 15.732 2.037a1 1 0 0 1 1.232.695z",
      key: "1hyfdd"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PlaneLanding = createLucideIcon("PlaneLanding", [
  ["path", { d: "M2 22h20", key: "272qi7" }],
  [
    "path",
    {
      d: "M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z",
      key: "1ma21e"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PlaneTakeoff = createLucideIcon("PlaneTakeoff", [
  ["path", { d: "M2 22h20", key: "272qi7" }],
  [
    "path",
    {
      d: "M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z",
      key: "fkigj9"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Plane = createLucideIcon("Plane", [
  [
    "path",
    {
      d: "M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z",
      key: "1v9wt8"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Play = createLucideIcon("Play", [
  ["polygon", { points: "6 3 20 12 6 21 6 3", key: "1oa8hb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Plug2 = createLucideIcon("Plug2", [
  ["path", { d: "M9 2v6", key: "17ngun" }],
  ["path", { d: "M15 2v6", key: "s7yy2p" }],
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  ["path", { d: "M5 8h14", key: "pcz4l3" }],
  ["path", { d: "M6 11V8h12v3a6 6 0 1 1-12 0Z", key: "wtfw2c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PlugZap = createLucideIcon("PlugZap", [
  [
    "path",
    { d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z", key: "goz73y" }
  ],
  ["path", { d: "m2 22 3-3", key: "19mgm9" }],
  ["path", { d: "M7.5 13.5 10 11", key: "7xgeeb" }],
  ["path", { d: "M10.5 16.5 13 14", key: "10btkg" }],
  ["path", { d: "m18 3-4 4h6l-4 4", key: "16psg9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Plug = createLucideIcon("Plug", [
  ["path", { d: "M12 22v-5", key: "1ega77" }],
  ["path", { d: "M9 8V2", key: "14iosj" }],
  ["path", { d: "M15 8V2", key: "18g5xt" }],
  ["path", { d: "M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z", key: "osxo6l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Plus = createLucideIcon("Plus", [
  ["path", { d: "M5 12h14", key: "1ays0h" }],
  ["path", { d: "M12 5v14", key: "s699le" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PocketKnife = createLucideIcon("PocketKnife", [
  ["path", { d: "M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2", key: "19w3oe" }],
  ["path", { d: "M18 6h.01", key: "1v4wsw" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z", key: "6fykxj" }],
  ["path", { d: "M18 11.66V22a4 4 0 0 0 4-4V6", key: "1utzek" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pocket = createLucideIcon("Pocket", [
  [
    "path",
    {
      d: "M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z",
      key: "1mz881"
    }
  ],
  ["polyline", { points: "8 10 12 14 16 10", key: "w4mbv5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Podcast = createLucideIcon("Podcast", [
  ["path", { d: "M16.85 18.58a9 9 0 1 0-9.7 0", key: "d71mpg" }],
  ["path", { d: "M8 14a5 5 0 1 1 8 0", key: "fc81rn" }],
  ["circle", { cx: "12", cy: "11", r: "1", key: "1gvufo" }],
  ["path", { d: "M13 17a1 1 0 1 0-2 0l.5 4.5a.5.5 0 1 0 1 0Z", key: "za5kbj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PointerOff = createLucideIcon("PointerOff", [
  ["path", { d: "M10 4.5V4a2 2 0 0 0-2.41-1.957", key: "jsi14n" }],
  ["path", { d: "M13.9 8.4a2 2 0 0 0-1.26-1.295", key: "hirc7f" }],
  [
    "path",
    { d: "M21.7 16.2A8 8 0 0 0 22 14v-3a2 2 0 1 0-4 0v-1a2 2 0 0 0-3.63-1.158", key: "1jxb2e" }
  ],
  [
    "path",
    {
      d: "m7 15-1.8-1.8a2 2 0 0 0-2.79 2.86L6 19.7a7.74 7.74 0 0 0 6 2.3h2a8 8 0 0 0 5.657-2.343",
      key: "10r7hm"
    }
  ],
  ["path", { d: "M6 6v8", key: "tv5xkp" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pointer = createLucideIcon("Pointer", [
  ["path", { d: "M22 14a8 8 0 0 1-8 8", key: "56vcr3" }],
  ["path", { d: "M18 11v-1a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1agjmk" }],
  ["path", { d: "M14 10V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1", key: "wdbh2u" }],
  ["path", { d: "M10 9.5V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v10", key: "1ibuk9" }],
  [
    "path",
    {
      d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15",
      key: "g6ys72"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Popcorn = createLucideIcon("Popcorn", [
  [
    "path",
    {
      d: "M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4",
      key: "10td1f"
    }
  ],
  ["path", { d: "M10 22 9 8", key: "yjptiv" }],
  ["path", { d: "m14 22 1-14", key: "8jwc8b" }],
  [
    "path",
    {
      d: "M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z",
      key: "1qo33t"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Popsicle = createLucideIcon("Popsicle", [
  [
    "path",
    {
      d: "M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z",
      key: "1o68ps"
    }
  ],
  ["path", { d: "m22 22-5.5-5.5", key: "17o70y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PoundSterling = createLucideIcon("PoundSterling", [
  ["path", { d: "M18 7c0-5.333-8-5.333-8 0", key: "1prm2n" }],
  ["path", { d: "M10 7v14", key: "18tmcs" }],
  ["path", { d: "M6 21h12", key: "4dkmi1" }],
  ["path", { d: "M6 13h10", key: "ybwr4a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PowerOff = createLucideIcon("PowerOff", [
  ["path", { d: "M18.36 6.64A9 9 0 0 1 20.77 15", key: "dxknvb" }],
  ["path", { d: "M6.16 6.16a9 9 0 1 0 12.68 12.68", key: "1x7qb5" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Power = createLucideIcon("Power", [
  ["path", { d: "M12 2v10", key: "mnfbl" }],
  ["path", { d: "M18.4 6.6a9 9 0 1 1-12.77.04", key: "obofu9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Presentation = createLucideIcon("Presentation", [
  ["path", { d: "M2 3h20", key: "91anmk" }],
  ["path", { d: "M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3", key: "2k9sn8" }],
  ["path", { d: "m7 21 5-5 5 5", key: "bip4we" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const PrinterCheck = createLucideIcon("PrinterCheck", [
  ["path", { d: "M13.5 22H7a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v.5", key: "qeb09x" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }],
  ["path", { d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2", key: "1md90i" }],
  ["path", { d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6", key: "1itne7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Printer = createLucideIcon("Printer", [
  [
    "path",
    {
      d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2",
      key: "143wyd"
    }
  ],
  ["path", { d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6", key: "1itne7" }],
  ["rect", { x: "6", y: "14", width: "12", height: "8", rx: "1", key: "1ue0tg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Projector = createLucideIcon("Projector", [
  ["path", { d: "M5 7 3 5", key: "1yys58" }],
  ["path", { d: "M9 6V3", key: "1ptz9u" }],
  ["path", { d: "m13 7 2-2", key: "1w3vmq" }],
  ["circle", { cx: "9", cy: "13", r: "3", key: "1mma13" }],
  [
    "path",
    {
      d: "M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17",
      key: "2frwzc"
    }
  ],
  ["path", { d: "M16 16h2", key: "dnq2od" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Proportions = createLucideIcon("Proportions", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M12 9v11", key: "1fnkrn" }],
  ["path", { d: "M2 9h13a2 2 0 0 1 2 2v9", key: "11z3ex" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Puzzle = createLucideIcon("Puzzle", [
  [
    "path",
    {
      d: "M15.39 4.39a1 1 0 0 0 1.68-.474 2.5 2.5 0 1 1 3.014 3.015 1 1 0 0 0-.474 1.68l1.683 1.682a2.414 2.414 0 0 1 0 3.414L19.61 15.39a1 1 0 0 1-1.68-.474 2.5 2.5 0 1 0-3.014 3.015 1 1 0 0 1 .474 1.68l-1.683 1.682a2.414 2.414 0 0 1-3.414 0L8.61 19.61a1 1 0 0 0-1.68.474 2.5 2.5 0 1 1-3.014-3.015 1 1 0 0 0 .474-1.68l-1.683-1.682a2.414 2.414 0 0 1 0-3.414L4.39 8.61a1 1 0 0 1 1.68.474 2.5 2.5 0 1 0 3.014-3.015 1 1 0 0 1-.474-1.68l1.683-1.682a2.414 2.414 0 0 1 3.414 0z",
      key: "w46dr5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Pyramid = createLucideIcon("Pyramid", [
  [
    "path",
    {
      d: "M2.5 16.88a1 1 0 0 1-.32-1.43l9-13.02a1 1 0 0 1 1.64 0l9 13.01a1 1 0 0 1-.32 1.44l-8.51 4.86a2 2 0 0 1-1.98 0Z",
      key: "aenxs0"
    }
  ],
  ["path", { d: "M12 2v20", key: "t6zp3m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const QrCode = createLucideIcon("QrCode", [
  ["rect", { width: "5", height: "5", x: "3", y: "3", rx: "1", key: "1tu5fj" }],
  ["rect", { width: "5", height: "5", x: "16", y: "3", rx: "1", key: "1v8r4q" }],
  ["rect", { width: "5", height: "5", x: "3", y: "16", rx: "1", key: "1x03jg" }],
  ["path", { d: "M21 16h-3a2 2 0 0 0-2 2v3", key: "177gqh" }],
  ["path", { d: "M21 21v.01", key: "ents32" }],
  ["path", { d: "M12 7v3a2 2 0 0 1-2 2H7", key: "8crl2c" }],
  ["path", { d: "M3 12h.01", key: "nlz23k" }],
  ["path", { d: "M12 3h.01", key: "n36tog" }],
  ["path", { d: "M12 16v.01", key: "133mhm" }],
  ["path", { d: "M16 12h1", key: "1slzba" }],
  ["path", { d: "M21 12v.01", key: "1lwtk9" }],
  ["path", { d: "M12 21v-1", key: "1880an" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Quote = createLucideIcon("Quote", [
  [
    "path",
    {
      d: "M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z",
      key: "rib7q0"
    }
  ],
  [
    "path",
    {
      d: "M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z",
      key: "1ymkrd"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rabbit = createLucideIcon("Rabbit", [
  ["path", { d: "M13 16a3 3 0 0 1 2.24 5", key: "1epib5" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  [
    "path",
    {
      d: "M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1 1 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1a3 3 0 0 0-3 3",
      key: "ue9ozu"
    }
  ],
  ["path", { d: "M20 8.54V4a2 2 0 1 0-4 0v3", key: "49iql8" }],
  ["path", { d: "M7.612 12.524a3 3 0 1 0-1.6 4.3", key: "1e33i0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Radar = createLucideIcon("Radar", [
  ["path", { d: "M19.07 4.93A10 10 0 0 0 6.99 3.34", key: "z3du51" }],
  ["path", { d: "M4 6h.01", key: "oypzma" }],
  ["path", { d: "M2.29 9.62A10 10 0 1 0 21.31 8.35", key: "qzzz0" }],
  ["path", { d: "M16.24 7.76A6 6 0 1 0 8.23 16.67", key: "1yjesh" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M17.99 11.66A6 6 0 0 1 15.77 16.67", key: "1u2y91" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "m13.41 10.59 5.66-5.66", key: "mhq4k0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Radiation = createLucideIcon("Radiation", [
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  [
    "path",
    {
      d: "M7.5 4.2c-.3-.5-.9-.7-1.3-.4C3.9 5.5 2.3 8.1 2 11c-.1.5.4 1 1 1h5c0-1.5.8-2.8 2-3.4-1.1-1.9-2-3.5-2.5-4.4z",
      key: "wy49g3"
    }
  ],
  [
    "path",
    {
      d: "M21 12c.6 0 1-.4 1-1-.3-2.9-1.8-5.5-4.1-7.1-.4-.3-1.1-.2-1.3.3-.6.9-1.5 2.5-2.6 4.3 1.2.7 2 2 2 3.5h5z",
      key: "vklnvr"
    }
  ],
  [
    "path",
    {
      d: "M7.5 19.8c-.3.5-.1 1.1.4 1.3 2.6 1.2 5.6 1.2 8.2 0 .5-.2.7-.8.4-1.3-.5-.9-1.4-2.5-2.5-4.3-1.2.7-2.8.7-4 0-1.1 1.8-2 3.4-2.5 4.3z",
      key: "wkdf1o"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Radical = createLucideIcon("Radical", [
  [
    "path",
    {
      d: "M3 12h3.28a1 1 0 0 1 .948.684l2.298 7.934a.5.5 0 0 0 .96-.044L13.82 4.771A1 1 0 0 1 14.792 4H21",
      key: "1mqj8i"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RadioReceiver = createLucideIcon("RadioReceiver", [
  ["path", { d: "M5 16v2", key: "g5qcv5" }],
  ["path", { d: "M19 16v2", key: "1gbaio" }],
  ["rect", { width: "20", height: "8", x: "2", y: "8", rx: "2", key: "vjsjur" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RadioTower = createLucideIcon("RadioTower", [
  ["path", { d: "M4.9 16.1C1 12.2 1 5.8 4.9 1.9", key: "s0qx1y" }],
  ["path", { d: "M7.8 4.7a6.14 6.14 0 0 0-.8 7.5", key: "1idnkw" }],
  ["circle", { cx: "12", cy: "9", r: "2", key: "1092wv" }],
  ["path", { d: "M16.2 4.8c2 2 2.26 5.11.8 7.47", key: "ojru2q" }],
  ["path", { d: "M19.1 1.9a9.96 9.96 0 0 1 0 14.1", key: "rhi7fg" }],
  ["path", { d: "M9.5 18h5", key: "mfy3pd" }],
  ["path", { d: "m8 22 4-11 4 11", key: "25yftu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Radio = createLucideIcon("Radio", [
  ["path", { d: "M4.9 19.1C1 15.2 1 8.8 4.9 4.9", key: "1vaf9d" }],
  ["path", { d: "M7.8 16.2c-2.3-2.3-2.3-6.1 0-8.5", key: "u1ii0m" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M16.2 7.8c2.3 2.3 2.3 6.1 0 8.5", key: "1j5fej" }],
  ["path", { d: "M19.1 4.9C23 8.8 23 15.1 19.1 19", key: "10b0cb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Radius = createLucideIcon("Radius", [
  ["path", { d: "M20.34 17.52a10 10 0 1 0-2.82 2.82", key: "fydyku" }],
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["path", { d: "m13.41 13.41 4.18 4.18", key: "1gqbwc" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RailSymbol = createLucideIcon("RailSymbol", [
  ["path", { d: "M5 15h14", key: "m0yey3" }],
  ["path", { d: "M5 9h14", key: "7tsvo6" }],
  ["path", { d: "m14 20-5-5 6-6-5-5", key: "1jo42i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rainbow = createLucideIcon("Rainbow", [
  ["path", { d: "M22 17a10 10 0 0 0-20 0", key: "ozegv" }],
  ["path", { d: "M6 17a6 6 0 0 1 12 0", key: "5giftw" }],
  ["path", { d: "M10 17a2 2 0 0 1 4 0", key: "gnsikk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rat = createLucideIcon("Rat", [
  [
    "path",
    {
      d: "M17 5c0-1.7-1.3-3-3-3s-3 1.3-3 3c0 .8.3 1.5.8 2H11c-3.9 0-7 3.1-7 7c0 2.2 1.8 4 4 4",
      key: "1wq71c"
    }
  ],
  [
    "path",
    {
      d: "M16.8 3.9c.3-.3.6-.5 1-.7 1.5-.6 3.3.1 3.9 1.6.6 1.5-.1 3.3-1.6 3.9l1.6 2.8c.2.3.2.7.2 1-.2.8-.9 1.2-1.7 1.1 0 0-1.6-.3-2.7-.6H17c-1.7 0-3 1.3-3 3",
      key: "1crdmb"
    }
  ],
  ["path", { d: "M13.2 18a3 3 0 0 0-2.2-5", key: "1ol3lk" }],
  ["path", { d: "M13 22H4a2 2 0 0 1 0-4h12", key: "bt3f23" }],
  ["path", { d: "M16 9h.01", key: "1bdo4e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ratio = createLucideIcon("Ratio", [
  ["rect", { width: "12", height: "20", x: "6", y: "2", rx: "2", key: "1oxtiu" }],
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptCent = createLucideIcon("ReceiptCent", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M12 6.5v11", key: "ecfhkf" }],
  ["path", { d: "M15 9.4a4 4 0 1 0 0 5.2", key: "1makmb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptEuro = createLucideIcon("ReceiptEuro", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 12h5", key: "1g6qi8" }],
  ["path", { d: "M16 9.5a4 4 0 1 0 0 5.2", key: "b2px4r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptIndianRupee = createLucideIcon("ReceiptIndianRupee", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 7h8", key: "i86dvs" }],
  ["path", { d: "M12 17.5 8 15h1a4 4 0 0 0 0-8", key: "grpkl4" }],
  ["path", { d: "M8 11h8", key: "vwpz6n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptJapaneseYen = createLucideIcon("ReceiptJapaneseYen", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "m12 10 3-3", key: "1mc12w" }],
  ["path", { d: "m9 7 3 3v7.5", key: "39i0xv" }],
  ["path", { d: "M9 11h6", key: "1fldmi" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptPoundSterling = createLucideIcon("ReceiptPoundSterling", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 13h5", key: "1k9z8w" }],
  ["path", { d: "M10 17V9.5a2.5 2.5 0 0 1 5 0", key: "1dzgp0" }],
  ["path", { d: "M8 17h7", key: "8mjdqu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptRussianRuble = createLucideIcon("ReceiptRussianRuble", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 15h5", key: "vxg57a" }],
  ["path", { d: "M8 11h5a2 2 0 1 0 0-4h-3v10", key: "1usi5u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptSwissFranc = createLucideIcon("ReceiptSwissFranc", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M10 17V7h5", key: "k7jq18" }],
  ["path", { d: "M10 11h4", key: "1i0mka" }],
  ["path", { d: "M8 15h5", key: "vxg57a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReceiptText = createLucideIcon("ReceiptText", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M14 8H8", key: "1l3xfs" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }],
  ["path", { d: "M13 16H8", key: "wsln4y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Receipt = createLucideIcon("Receipt", [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 17.5v-11", key: "1jc1ny" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RectangleEllipsis = createLucideIcon("RectangleEllipsis", [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M17 12h.01", key: "1m0b6t" }],
  ["path", { d: "M7 12h.01", key: "eqddd0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RectangleHorizontal = createLucideIcon("RectangleHorizontal", [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RectangleVertical = createLucideIcon("RectangleVertical", [
  ["rect", { width: "12", height: "20", x: "6", y: "2", rx: "2", key: "1oxtiu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Recycle = createLucideIcon("Recycle", [
  [
    "path",
    {
      d: "M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5",
      key: "x6z5xu"
    }
  ],
  [
    "path",
    {
      d: "M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12",
      key: "1x4zh5"
    }
  ],
  ["path", { d: "m14 16-3 3 3 3", key: "f6jyew" }],
  ["path", { d: "M8.293 13.596 7.196 9.5 3.1 10.598", key: "wf1obh" }],
  [
    "path",
    {
      d: "m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843",
      key: "9tzpgr"
    }
  ],
  ["path", { d: "m13.378 9.633 4.096 1.098 1.097-4.096", key: "1oe83g" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Redo2 = createLucideIcon("Redo2", [
  ["path", { d: "m15 14 5-5-5-5", key: "12vg1m" }],
  ["path", { d: "M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13", key: "6uklza" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RedoDot = createLucideIcon("RedoDot", [
  ["circle", { cx: "12", cy: "17", r: "1", key: "1ixnty" }],
  ["path", { d: "M21 7v6h-6", key: "3ptur4" }],
  ["path", { d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7", key: "1kgawr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Redo = createLucideIcon("Redo", [
  ["path", { d: "M21 7v6h-6", key: "3ptur4" }],
  ["path", { d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7", key: "1kgawr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RefreshCcwDot = createLucideIcon("RefreshCcwDot", [
  ["path", { d: "M3 2v6h6", key: "18ldww" }],
  ["path", { d: "M21 12A9 9 0 0 0 6 5.3L3 8", key: "1pbrqz" }],
  ["path", { d: "M21 22v-6h-6", key: "usdfbe" }],
  ["path", { d: "M3 12a9 9 0 0 0 15 6.7l3-2.7", key: "1hosoe" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RefreshCcw = createLucideIcon("RefreshCcw", [
  ["path", { d: "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "14sxne" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["path", { d: "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16", key: "1hlbsb" }],
  ["path", { d: "M16 16h5v5", key: "ccwih5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RefreshCwOff = createLucideIcon("RefreshCwOff", [
  ["path", { d: "M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47", key: "1krf6h" }],
  ["path", { d: "M8 16H3v5", key: "1cv678" }],
  ["path", { d: "M3 12C3 9.51 4 7.26 5.64 5.64", key: "ruvoct" }],
  ["path", { d: "m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64", key: "19q130" }],
  ["path", { d: "M21 12c0 1-.16 1.97-.47 2.87", key: "4w8emr" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RefreshCw = createLucideIcon("RefreshCw", [
  ["path", { d: "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8", key: "v9h5vc" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }],
  ["path", { d: "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16", key: "3uifl3" }],
  ["path", { d: "M8 16H3v5", key: "1cv678" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Refrigerator = createLucideIcon("Refrigerator", [
  [
    "path",
    { d: "M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z", key: "fpq118" }
  ],
  ["path", { d: "M5 10h14", key: "elsbfy" }],
  ["path", { d: "M15 7v6", key: "1nx30x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Regex = createLucideIcon("Regex", [
  ["path", { d: "M17 3v10", key: "15fgeh" }],
  ["path", { d: "m12.67 5.5 8.66 5", key: "1gpheq" }],
  ["path", { d: "m12.67 10.5 8.66-5", key: "1dkfa6" }],
  [
    "path",
    { d: "M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z", key: "swwfx4" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RemoveFormatting = createLucideIcon("RemoveFormatting", [
  ["path", { d: "M4 7V4h16v3", key: "9msm58" }],
  ["path", { d: "M5 20h6", key: "1h6pxn" }],
  ["path", { d: "M13 4 8 20", key: "kqq6aj" }],
  ["path", { d: "m15 15 5 5", key: "me55sn" }],
  ["path", { d: "m20 15-5 5", key: "11p7ol" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Repeat1 = createLucideIcon("Repeat1", [
  ["path", { d: "m17 2 4 4-4 4", key: "nntrym" }],
  ["path", { d: "M3 11v-1a4 4 0 0 1 4-4h14", key: "84bu3i" }],
  ["path", { d: "m7 22-4-4 4-4", key: "1wqhfi" }],
  ["path", { d: "M21 13v1a4 4 0 0 1-4 4H3", key: "1rx37r" }],
  ["path", { d: "M11 10h1v4", key: "70cz1p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Repeat2 = createLucideIcon("Repeat2", [
  ["path", { d: "m2 9 3-3 3 3", key: "1ltn5i" }],
  ["path", { d: "M13 18H7a2 2 0 0 1-2-2V6", key: "1r6tfw" }],
  ["path", { d: "m22 15-3 3-3-3", key: "4rnwn2" }],
  ["path", { d: "M11 6h6a2 2 0 0 1 2 2v10", key: "2f72bc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Repeat = createLucideIcon("Repeat", [
  ["path", { d: "m17 2 4 4-4 4", key: "nntrym" }],
  ["path", { d: "M3 11v-1a4 4 0 0 1 4-4h14", key: "84bu3i" }],
  ["path", { d: "m7 22-4-4 4-4", key: "1wqhfi" }],
  ["path", { d: "M21 13v1a4 4 0 0 1-4 4H3", key: "1rx37r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReplaceAll = createLucideIcon("ReplaceAll", [
  ["path", { d: "M14 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2", key: "1yyzbs" }],
  ["path", { d: "M14 4a2 2 0 0 1 2-2", key: "1w2hp7" }],
  ["path", { d: "M16 10a2 2 0 0 1-2-2", key: "shjach" }],
  ["path", { d: "M20 14a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2", key: "zfj4xr" }],
  ["path", { d: "M20 2a2 2 0 0 1 2 2", key: "188mtx" }],
  ["path", { d: "M22 8a2 2 0 0 1-2 2", key: "ddf4tu" }],
  ["path", { d: "m3 7 3 3 3-3", key: "x25e72" }],
  ["path", { d: "M6 10V5a 3 3 0 0 1 3-3h1", key: "1ageje" }],
  ["rect", { x: "2", y: "14", width: "8", height: "8", rx: "2", key: "4rksxw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Replace = createLucideIcon("Replace", [
  ["path", { d: "M14 4a2 2 0 0 1 2-2", key: "1w2hp7" }],
  ["path", { d: "M16 10a2 2 0 0 1-2-2", key: "shjach" }],
  ["path", { d: "M20 2a2 2 0 0 1 2 2", key: "188mtx" }],
  ["path", { d: "M22 8a2 2 0 0 1-2 2", key: "ddf4tu" }],
  ["path", { d: "m3 7 3 3 3-3", key: "x25e72" }],
  ["path", { d: "M6 10V5a3 3 0 0 1 3-3h1", key: "3y3t5z" }],
  ["rect", { x: "2", y: "14", width: "8", height: "8", rx: "2", key: "4rksxw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ReplyAll = createLucideIcon("ReplyAll", [
  ["polyline", { points: "7 17 2 12 7 7", key: "t83bqg" }],
  ["polyline", { points: "12 17 7 12 12 7", key: "1g4ajm" }],
  ["path", { d: "M22 18v-2a4 4 0 0 0-4-4H7", key: "1fcyog" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Reply = createLucideIcon("Reply", [
  ["polyline", { points: "9 17 4 12 9 7", key: "hvgpf2" }],
  ["path", { d: "M20 18v-2a4 4 0 0 0-4-4H4", key: "5vmcpk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rewind = createLucideIcon("Rewind", [
  ["polygon", { points: "11 19 2 12 11 5 11 19", key: "14yba5" }],
  ["polygon", { points: "22 19 13 12 22 5 22 19", key: "1pi1cj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ribbon = createLucideIcon("Ribbon", [
  [
    "path",
    { d: "M12 11.22C11 9.997 10 9 10 8a2 2 0 0 1 4 0c0 1-.998 2.002-2.01 3.22", key: "1rnhq3" }
  ],
  ["path", { d: "m12 18 2.57-3.5", key: "116vt7" }],
  ["path", { d: "M6.243 9.016a7 7 0 0 1 11.507-.009", key: "10dq0b" }],
  ["path", { d: "M9.35 14.53 12 11.22", key: "tdsyp2" }],
  [
    "path",
    {
      d: "M9.35 14.53C7.728 12.246 6 10.221 6 7a6 5 0 0 1 12 0c-.005 3.22-1.778 5.235-3.43 7.5l3.557 4.527a1 1 0 0 1-.203 1.43l-1.894 1.36a1 1 0 0 1-1.384-.215L12 18l-2.679 3.593a1 1 0 0 1-1.39.213l-1.865-1.353a1 1 0 0 1-.203-1.422z",
      key: "nmifey"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rocket = createLucideIcon("Rocket", [
  [
    "path",
    {
      d: "M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z",
      key: "m3kijz"
    }
  ],
  [
    "path",
    {
      d: "m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z",
      key: "1fmvmk"
    }
  ],
  ["path", { d: "M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0", key: "1f8sc4" }],
  ["path", { d: "M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5", key: "qeys4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RockingChair = createLucideIcon("RockingChair", [
  ["polyline", { points: "3.5 2 6.5 12.5 18 12.5", key: "y3iy52" }],
  ["line", { x1: "9.5", x2: "5.5", y1: "12.5", y2: "20", key: "19vg5i" }],
  ["line", { x1: "15", x2: "18.5", y1: "12.5", y2: "20", key: "1inpmv" }],
  ["path", { d: "M2.75 18a13 13 0 0 0 18.5 0", key: "1nquas" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RollerCoaster = createLucideIcon("RollerCoaster", [
  ["path", { d: "M6 19V5", key: "1r845m" }],
  ["path", { d: "M10 19V6.8", key: "9j2tfs" }],
  ["path", { d: "M14 19v-7.8", key: "10s8qv" }],
  ["path", { d: "M18 5v4", key: "1tajlv" }],
  ["path", { d: "M18 19v-6", key: "ielfq3" }],
  ["path", { d: "M22 19V9", key: "158nzp" }],
  ["path", { d: "M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65", key: "1930oh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rotate3d = createLucideIcon("Rotate3d", [
  [
    "path",
    {
      d: "M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2",
      key: "10n0gc"
    }
  ],
  ["path", { d: "m15.194 13.707 3.814 1.86-1.86 3.814", key: "16shm9" }],
  [
    "path",
    {
      d: "M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4",
      key: "1lxi77"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RotateCcwSquare = createLucideIcon("RotateCcwSquare", [
  ["path", { d: "M20 9V7a2 2 0 0 0-2-2h-6", key: "19z8uc" }],
  ["path", { d: "m15 2-3 3 3 3", key: "177bxs" }],
  ["path", { d: "M20 13v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2", key: "d36hnl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RotateCcw = createLucideIcon("RotateCcw", [
  ["path", { d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "1357e3" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RotateCwSquare = createLucideIcon("RotateCwSquare", [
  ["path", { d: "M12 5H6a2 2 0 0 0-2 2v3", key: "l96uqu" }],
  ["path", { d: "m9 8 3-3-3-3", key: "1gzgc3" }],
  ["path", { d: "M4 14v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2", key: "1w2k5h" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RotateCw = createLucideIcon("RotateCw", [
  ["path", { d: "M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8", key: "1p45f6" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RouteOff = createLucideIcon("RouteOff", [
  ["circle", { cx: "6", cy: "19", r: "3", key: "1kj8tv" }],
  ["path", { d: "M9 19h8.5c.4 0 .9-.1 1.3-.2", key: "1effex" }],
  ["path", { d: "M5.2 5.2A3.5 3.53 0 0 0 6.5 12H12", key: "k9y2ds" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M21 15.3a3.5 3.5 0 0 0-3.3-3.3", key: "11nlu2" }],
  ["path", { d: "M15 5h-4.3", key: "6537je" }],
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Route = createLucideIcon("Route", [
  ["circle", { cx: "6", cy: "19", r: "3", key: "1kj8tv" }],
  ["path", { d: "M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15", key: "1d8sl" }],
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Router = createLucideIcon("Router", [
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6.01 18H6", key: "19vcac" }],
  ["path", { d: "M10.01 18H10", key: "uamcmx" }],
  ["path", { d: "M15 10v4", key: "qjz1xs" }],
  ["path", { d: "M17.84 7.17a4 4 0 0 0-5.66 0", key: "1rif40" }],
  ["path", { d: "M20.66 4.34a8 8 0 0 0-11.31 0", key: "6a5xfq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rows2 = createLucideIcon("Rows2", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rows3 = createLucideIcon("Rows3", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 9H3", key: "1338ky" }],
  ["path", { d: "M21 15H3", key: "9uk58r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rows4 = createLucideIcon("Rows4", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 7.5H3", key: "1hm9pq" }],
  ["path", { d: "M21 12H3", key: "2avoz0" }],
  ["path", { d: "M21 16.5H3", key: "n7jzkj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Rss = createLucideIcon("Rss", [
  ["path", { d: "M4 11a9 9 0 0 1 9 9", key: "pv89mb" }],
  ["path", { d: "M4 4a16 16 0 0 1 16 16", key: "k0647b" }],
  ["circle", { cx: "5", cy: "19", r: "1", key: "bfqh0e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ruler = createLucideIcon("Ruler", [
  [
    "path",
    {
      d: "M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z",
      key: "icamh8"
    }
  ],
  ["path", { d: "m14.5 12.5 2-2", key: "inckbg" }],
  ["path", { d: "m11.5 9.5 2-2", key: "fmmyf7" }],
  ["path", { d: "m8.5 6.5 2-2", key: "vc6u1g" }],
  ["path", { d: "m17.5 15.5 2-2", key: "wo5hmg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const RussianRuble = createLucideIcon("RussianRuble", [
  ["path", { d: "M6 11h8a4 4 0 0 0 0-8H9v18", key: "18ai8t" }],
  ["path", { d: "M6 15h8", key: "1y8f6l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sailboat = createLucideIcon("Sailboat", [
  ["path", { d: "M22 18H2a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4Z", key: "1404fh" }],
  ["path", { d: "M21 14 10 2 3 14h18Z", key: "1nzg7v" }],
  ["path", { d: "M10 2v16", key: "1labyt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Salad = createLucideIcon("Salad", [
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z", key: "4rw317" }],
  [
    "path",
    {
      d: "M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1",
      key: "10xrj0"
    }
  ],
  ["path", { d: "m13 12 4-4", key: "1hckqy" }],
  ["path", { d: "M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2", key: "1p4srx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sandwich = createLucideIcon("Sandwich", [
  ["path", { d: "m2.37 11.223 8.372-6.777a2 2 0 0 1 2.516 0l8.371 6.777", key: "f1wd0e" }],
  ["path", { d: "M21 15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5.25", key: "1pfu07" }],
  ["path", { d: "M3 15a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h9", key: "1oq9qw" }],
  ["path", { d: "m6.67 15 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2", key: "1fnwu5" }],
  ["rect", { width: "20", height: "4", x: "2", y: "11", rx: "1", key: "itshg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SatelliteDish = createLucideIcon("SatelliteDish", [
  ["path", { d: "M4 10a7.31 7.31 0 0 0 10 10Z", key: "1fzpp3" }],
  ["path", { d: "m9 15 3-3", key: "88sc13" }],
  ["path", { d: "M17 13a6 6 0 0 0-6-6", key: "15cc6u" }],
  ["path", { d: "M21 13A10 10 0 0 0 11 3", key: "11nf8s" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Satellite = createLucideIcon("Satellite", [
  ["path", { d: "M13 7 9 3 5 7l4 4", key: "vyckw6" }],
  ["path", { d: "m17 11 4 4-4 4-4-4", key: "rchckc" }],
  ["path", { d: "m8 12 4 4 6-6-4-4Z", key: "1sshf7" }],
  ["path", { d: "m16 8 3-3", key: "x428zp" }],
  ["path", { d: "M9 21a6 6 0 0 0-6-6", key: "1iajcf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SaveAll = createLucideIcon("SaveAll", [
  ["path", { d: "M10 2v3a1 1 0 0 0 1 1h5", key: "1xspal" }],
  ["path", { d: "M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6", key: "1ra60u" }],
  ["path", { d: "M18 22H4a2 2 0 0 1-2-2V6", key: "pblm9e" }],
  [
    "path",
    {
      d: "M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z",
      key: "1yve0x"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SaveOff = createLucideIcon("SaveOff", [
  ["path", { d: "M13 13H8a1 1 0 0 0-1 1v7", key: "h8g396" }],
  ["path", { d: "M14 8h1", key: "1lfen6" }],
  ["path", { d: "M17 21v-4", key: "1yknxs" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    { d: "M20.41 20.41A2 2 0 0 1 19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 .59-1.41", key: "1t4vdl" }
  ],
  ["path", { d: "M29.5 11.5s5 5 4 5", key: "zzn4i6" }],
  ["path", { d: "M9 3h6.2a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V15", key: "24cby9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Save = createLucideIcon("Save", [
  [
    "path",
    {
      d: "M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z",
      key: "1c8476"
    }
  ],
  ["path", { d: "M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7", key: "1ydtos" }],
  ["path", { d: "M7 3v4a1 1 0 0 0 1 1h7", key: "t51u73" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scale3d = createLucideIcon("Scale3d", [
  ["path", { d: "M5 7v11a1 1 0 0 0 1 1h11", key: "13dt1j" }],
  ["path", { d: "M5.293 18.707 11 13", key: "ezgbsx" }],
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["circle", { cx: "5", cy: "5", r: "2", key: "1gwv83" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scale = createLucideIcon("Scale", [
  ["path", { d: "m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z", key: "7g6ntu" }],
  ["path", { d: "m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z", key: "ijws7r" }],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2", key: "3gwbw2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scaling = createLucideIcon("Scaling", [
  ["path", { d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7", key: "1m0v6g" }],
  ["path", { d: "M14 15H9v-5", key: "pi4jk9" }],
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M21 3 9 15", key: "15kdhq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanBarcode = createLucideIcon("ScanBarcode", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M8 7v10", key: "23sfjj" }],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M17 7v10", key: "578dap" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanEye = createLucideIcon("ScanEye", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0",
      key: "11ak4c"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanFace = createLucideIcon("ScanFace", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanLine = createLucideIcon("ScanLine", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanQrCode = createLucideIcon("ScanQrCode", [
  ["path", { d: "M17 12v4a1 1 0 0 1-1 1h-4", key: "uk4fdo" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M17 8V7", key: "q2g9wo" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M7 17h.01", key: "19xn7k" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["rect", { x: "7", y: "7", width: "5", height: "5", rx: "1", key: "m9kyts" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanSearch = createLucideIcon("ScanSearch", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "m16 16-1.9-1.9", key: "1dq9hf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScanText = createLucideIcon("ScanText", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M7 8h8", key: "1jbsf9" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M7 16h6", key: "1vyc9m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scan = createLucideIcon("Scan", [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const School = createLucideIcon("School", [
  ["path", { d: "M14 22v-4a2 2 0 1 0-4 0v4", key: "hhkicm" }],
  [
    "path",
    {
      d: "m18 10 3.447 1.724a1 1 0 0 1 .553.894V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-7.382a1 1 0 0 1 .553-.894L6 10",
      key: "1xqip1"
    }
  ],
  ["path", { d: "M18 5v17", key: "1sw6gf" }],
  ["path", { d: "m4 6 7.106-3.553a2 2 0 0 1 1.788 0L20 6", key: "9d2mlk" }],
  ["path", { d: "M6 5v17", key: "1xfsm0" }],
  ["circle", { cx: "12", cy: "9", r: "2", key: "1092wv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScissorsLineDashed = createLucideIcon("ScissorsLineDashed", [
  ["path", { d: "M5.42 9.42 8 12", key: "12pkuq" }],
  ["circle", { cx: "4", cy: "8", r: "2", key: "107mxr" }],
  ["path", { d: "m14 6-8.58 8.58", key: "gvzu5l" }],
  ["circle", { cx: "4", cy: "16", r: "2", key: "1ehqvc" }],
  ["path", { d: "M10.8 14.8 14 18", key: "ax7m9r" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scissors = createLucideIcon("Scissors", [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M8.12 8.12 12 12", key: "1alkpv" }],
  ["path", { d: "M20 4 8.12 15.88", key: "xgtan2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["path", { d: "M14.8 14.8 20 20", key: "ptml3r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScreenShareOff = createLucideIcon("ScreenShareOff", [
  ["path", { d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3", key: "i8wdob" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m22 3-5 5", key: "12jva0" }],
  ["path", { d: "m17 3 5 5", key: "k36vhe" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScreenShare = createLucideIcon("ScreenShare", [
  ["path", { d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3", key: "i8wdob" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m17 8 5-5", key: "fqif7o" }],
  ["path", { d: "M17 3h5v5", key: "1o3tu8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ScrollText = createLucideIcon("ScrollText", [
  ["path", { d: "M15 12h-5", key: "r7krc0" }],
  ["path", { d: "M15 8h-5", key: "1khuty" }],
  ["path", { d: "M19 17V5a2 2 0 0 0-2-2H4", key: "zz82l3" }],
  [
    "path",
    {
      d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3",
      key: "1ph1d7"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Scroll = createLucideIcon("Scroll", [
  ["path", { d: "M19 17V5a2 2 0 0 0-2-2H4", key: "zz82l3" }],
  [
    "path",
    {
      d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3",
      key: "1ph1d7"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SearchCheck = createLucideIcon("SearchCheck", [
  ["path", { d: "m8 11 2 2 4-4", key: "1sed1v" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SearchCode = createLucideIcon("SearchCode", [
  ["path", { d: "m13 13.5 2-2.5-2-2.5", key: "1rvxrh" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }],
  ["path", { d: "M9 8.5 7 11l2 2.5", key: "6ffwbx" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SearchSlash = createLucideIcon("SearchSlash", [
  ["path", { d: "m13.5 8.5-5 5", key: "1cs55j" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SearchX = createLucideIcon("SearchX", [
  ["path", { d: "m13.5 8.5-5 5", key: "1cs55j" }],
  ["path", { d: "m8.5 8.5 5 5", key: "a8mexj" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Search = createLucideIcon("Search", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Section = createLucideIcon("Section", [
  ["path", { d: "M16 5a4 3 0 0 0-8 0c0 4 8 3 8 7a4 3 0 0 1-8 0", key: "vqan6v" }],
  ["path", { d: "M8 19a4 3 0 0 0 8 0c0-4-8-3-8-7a4 3 0 0 1 8 0", key: "wdjd8o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SendHorizontal = createLucideIcon("SendHorizontal", [
  [
    "path",
    {
      d: "M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z",
      key: "117uat"
    }
  ],
  ["path", { d: "M6 12h16", key: "s4cdu5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SendToBack = createLucideIcon("SendToBack", [
  ["rect", { x: "14", y: "14", width: "8", height: "8", rx: "2", key: "1b0bso" }],
  ["rect", { x: "2", y: "2", width: "8", height: "8", rx: "2", key: "1x09vl" }],
  ["path", { d: "M7 14v1a2 2 0 0 0 2 2h1", key: "pao6x6" }],
  ["path", { d: "M14 7h1a2 2 0 0 1 2 2v1", key: "19tdru" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Send = createLucideIcon("Send", [
  [
    "path",
    {
      d: "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z",
      key: "1ffxy3"
    }
  ],
  ["path", { d: "m21.854 2.147-10.94 10.939", key: "12cjpa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SeparatorHorizontal = createLucideIcon("SeparatorHorizontal", [
  ["line", { x1: "3", x2: "21", y1: "12", y2: "12", key: "10d38w" }],
  ["polyline", { points: "8 8 12 4 16 8", key: "zo8t4w" }],
  ["polyline", { points: "16 16 12 20 8 16", key: "1oyrid" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SeparatorVertical = createLucideIcon("SeparatorVertical", [
  ["line", { x1: "12", x2: "12", y1: "3", y2: "21", key: "1efggb" }],
  ["polyline", { points: "8 8 4 12 8 16", key: "bnfmv4" }],
  ["polyline", { points: "16 16 20 12 16 8", key: "u90052" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ServerCog = createLucideIcon("ServerCog", [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  [
    "path",
    {
      d: "M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5",
      key: "tn8das"
    }
  ],
  [
    "path",
    {
      d: "M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5",
      key: "1g2pve"
    }
  ],
  ["path", { d: "M6 6h.01", key: "1utrut" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "m15.7 13.4-.9-.3", key: "1jwmzr" }],
  ["path", { d: "m9.2 10.9-.9-.3", key: "qapnim" }],
  ["path", { d: "m10.6 15.7.3-.9", key: "quwk0k" }],
  ["path", { d: "m13.6 15.7-.4-1", key: "cb9xp7" }],
  ["path", { d: "m10.8 9.3-.4-1", key: "1uaiz5" }],
  ["path", { d: "m8.3 13.6 1-.4", key: "s6srou" }],
  ["path", { d: "m14.7 10.8 1-.4", key: "4d31cq" }],
  ["path", { d: "m13.4 8.3-.3.9", key: "1bm987" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ServerCrash = createLucideIcon("ServerCrash", [
  [
    "path",
    {
      d: "M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2",
      key: "4b9dqc"
    }
  ],
  [
    "path",
    {
      d: "M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2",
      key: "22nnkd"
    }
  ],
  ["path", { d: "M6 6h.01", key: "1utrut" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "m13 6-4 6h6l-4 6", key: "14hqih" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ServerOff = createLucideIcon("ServerOff", [
  ["path", { d: "M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5", key: "bt2siv" }],
  ["path", { d: "M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z", key: "1hjrv1" }],
  ["path", { d: "M22 17v-1a2 2 0 0 0-2-2h-1", key: "1iynyr" }],
  ["path", { d: "M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z", key: "161ggg" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Server = createLucideIcon("Server", [
  ["rect", { width: "20", height: "8", x: "2", y: "2", rx: "2", ry: "2", key: "ngkwjq" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", ry: "2", key: "iecqi9" }],
  ["line", { x1: "6", x2: "6.01", y1: "6", y2: "6", key: "16zg32" }],
  ["line", { x1: "6", x2: "6.01", y1: "18", y2: "18", key: "nzw8ys" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Settings2 = createLucideIcon("Settings2", [
  ["path", { d: "M20 7h-9", key: "3s1dr2" }],
  ["path", { d: "M14 17H5", key: "gfn3mx" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }],
  ["circle", { cx: "7", cy: "7", r: "3", key: "dfmy0x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Settings = createLucideIcon("Settings", [
  [
    "path",
    {
      d: "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",
      key: "1qme2f"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shapes = createLucideIcon("Shapes", [
  [
    "path",
    {
      d: "M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z",
      key: "1bo67w"
    }
  ],
  ["rect", { x: "3", y: "14", width: "7", height: "7", rx: "1", key: "1bkyp8" }],
  ["circle", { cx: "17.5", cy: "17.5", r: "3.5", key: "w3z12y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Share2 = createLucideIcon("Share2", [
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }],
  ["circle", { cx: "6", cy: "12", r: "3", key: "w7nqdw" }],
  ["circle", { cx: "18", cy: "19", r: "3", key: "1xt0gg" }],
  ["line", { x1: "8.59", x2: "15.42", y1: "13.51", y2: "17.49", key: "47mynk" }],
  ["line", { x1: "15.41", x2: "8.59", y1: "6.51", y2: "10.49", key: "1n3mei" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Share = createLucideIcon("Share", [
  ["path", { d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8", key: "1b2hhj" }],
  ["polyline", { points: "16 6 12 2 8 6", key: "m901s6" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "15", key: "1p0rca" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sheet$1 = createLucideIcon("Sheet", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["line", { x1: "3", x2: "21", y1: "9", y2: "9", key: "1vqk6q" }],
  ["line", { x1: "3", x2: "21", y1: "15", y2: "15", key: "o2sbyz" }],
  ["line", { x1: "9", x2: "9", y1: "9", y2: "21", key: "1ib60c" }],
  ["line", { x1: "15", x2: "15", y1: "9", y2: "21", key: "1n26ft" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shell = createLucideIcon("Shell", [
  [
    "path",
    {
      d: "M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44",
      key: "1cn552"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldAlert = createLucideIcon("ShieldAlert", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  ["path", { d: "M12 16h.01", key: "1drbdi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldBan = createLucideIcon("ShieldBan", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m4.243 5.21 14.39 12.472", key: "1c9a7c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldCheck = createLucideIcon("ShieldCheck", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldEllipsis = createLucideIcon("ShieldEllipsis", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldHalf = createLucideIcon("ShieldHalf", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M12 22V2", key: "zs6s6o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldMinus = createLucideIcon("ShieldMinus", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldOff = createLucideIcon("ShieldOff", [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M5 5a1 1 0 0 0-1 1v7c0 5 3.5 7.5 7.67 8.94a1 1 0 0 0 .67.01c2.35-.82 4.48-1.97 5.9-3.71",
      key: "1jlk70"
    }
  ],
  [
    "path",
    {
      d: "M9.309 3.652A12.252 12.252 0 0 0 11.24 2.28a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1v7a9.784 9.784 0 0 1-.08 1.264",
      key: "18rp1v"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldPlus = createLucideIcon("ShieldPlus", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M12 9v6", key: "199k2o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldQuestion = createLucideIcon("ShieldQuestion", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3", key: "mhlwft" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShieldX = createLucideIcon("ShieldX", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m14.5 9.5-5 5", key: "17q4r4" }],
  ["path", { d: "m9.5 9.5 5 5", key: "18nt4w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shield = createLucideIcon("Shield", [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShipWheel = createLucideIcon("ShipWheel", [
  ["circle", { cx: "12", cy: "12", r: "8", key: "46899m" }],
  ["path", { d: "M12 2v7.5", key: "1e5rl5" }],
  ["path", { d: "m19 5-5.23 5.23", key: "1ezxxf" }],
  ["path", { d: "M22 12h-7.5", key: "le1719" }],
  ["path", { d: "m19 19-5.23-5.23", key: "p3fmgn" }],
  ["path", { d: "M12 14.5V22", key: "dgcmos" }],
  ["path", { d: "M10.23 13.77 5 19", key: "qwopd4" }],
  ["path", { d: "M9.5 12H2", key: "r7bup8" }],
  ["path", { d: "M10.23 10.23 5 5", key: "k2y7lj" }],
  ["circle", { cx: "12", cy: "12", r: "2.5", key: "ix0uyj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ship = createLucideIcon("Ship", [
  ["path", { d: "M12 10.189V14", key: "1p8cqu" }],
  ["path", { d: "M12 2v3", key: "qbqxhf" }],
  ["path", { d: "M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6", key: "qpkstq" }],
  [
    "path",
    {
      d: "M19.38 20A11.6 11.6 0 0 0 21 14l-8.188-3.639a2 2 0 0 0-1.624 0L3 14a11.6 11.6 0 0 0 2.81 7.76",
      key: "7tigtc"
    }
  ],
  [
    "path",
    {
      d: "M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1s1.2 1 2.5 1c2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "1924j5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shirt = createLucideIcon("Shirt", [
  [
    "path",
    {
      d: "M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z",
      key: "1wgbhj"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShoppingBag = createLucideIcon("ShoppingBag", [
  ["path", { d: "M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4Z", key: "hou9p0" }],
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M16 10a4 4 0 0 1-8 0", key: "1ltviw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShoppingBasket = createLucideIcon("ShoppingBasket", [
  ["path", { d: "m15 11-1 9", key: "5wnq3a" }],
  ["path", { d: "m19 11-4-7", key: "cnml18" }],
  ["path", { d: "M2 11h20", key: "3eubbj" }],
  ["path", { d: "m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8a2 2 0 0 0 2-1.6l1.7-7.4", key: "yiazzp" }],
  ["path", { d: "M4.5 15.5h15", key: "13mye1" }],
  ["path", { d: "m5 11 4-7", key: "116ra9" }],
  ["path", { d: "m9 11 1 9", key: "1ojof7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShoppingCart = createLucideIcon("ShoppingCart", [
  ["circle", { cx: "8", cy: "21", r: "1", key: "jimo8o" }],
  ["circle", { cx: "19", cy: "21", r: "1", key: "13723u" }],
  [
    "path",
    {
      d: "M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12",
      key: "9zh506"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shovel = createLucideIcon("Shovel", [
  ["path", { d: "M2 22v-5l5-5 5 5-5 5z", key: "1fh25c" }],
  ["path", { d: "M9.5 14.5 16 8", key: "1smz5x" }],
  [
    "path",
    { d: "m17 2 5 5-.5.5a3.53 3.53 0 0 1-5 0s0 0 0 0a3.53 3.53 0 0 1 0-5L17 2", key: "1q8uv5" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ShowerHead = createLucideIcon("ShowerHead", [
  ["path", { d: "m4 4 2.5 2.5", key: "uv2vmf" }],
  ["path", { d: "M13.5 6.5a4.95 4.95 0 0 0-7 7", key: "frdkwv" }],
  ["path", { d: "M15 5 5 15", key: "1ag8rq" }],
  ["path", { d: "M14 17v.01", key: "eokfpp" }],
  ["path", { d: "M10 16v.01", key: "14uyyl" }],
  ["path", { d: "M13 13v.01", key: "1v1k97" }],
  ["path", { d: "M16 10v.01", key: "5169yg" }],
  ["path", { d: "M11 20v.01", key: "cj92p8" }],
  ["path", { d: "M17 14v.01", key: "11cswd" }],
  ["path", { d: "M20 11v.01", key: "19e0od" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shrink = createLucideIcon("Shrink", [
  ["path", { d: "m15 15 6 6m-6-6v4.8m0-4.8h4.8", key: "17vawe" }],
  ["path", { d: "M9 19.8V15m0 0H4.2M9 15l-6 6", key: "chjx8e" }],
  ["path", { d: "M15 4.2V9m0 0h4.8M15 9l6-6", key: "lav6yq" }],
  ["path", { d: "M9 4.2V9m0 0H4.2M9 9 3 3", key: "1pxi2q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shrub = createLucideIcon("Shrub", [
  ["path", { d: "M12 22v-7l-2-2", key: "eqv9mc" }],
  ["path", { d: "M17 8v.8A6 6 0 0 1 13.8 20H10A6.5 6.5 0 0 1 7 8a5 5 0 0 1 10 0Z", key: "ubcgy" }],
  ["path", { d: "m14 14-2 2", key: "847xa2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Shuffle = createLucideIcon("Shuffle", [
  ["path", { d: "m18 14 4 4-4 4", key: "10pe0f" }],
  ["path", { d: "m18 2 4 4-4 4", key: "pucp1d" }],
  ["path", { d: "M2 18h1.973a4 4 0 0 0 3.3-1.7l5.454-8.6a4 4 0 0 1 3.3-1.7H22", key: "1ailkh" }],
  ["path", { d: "M2 6h1.972a4 4 0 0 1 3.6 2.2", key: "km57vx" }],
  ["path", { d: "M22 18h-6.041a4 4 0 0 1-3.3-1.8l-.359-.45", key: "os18l9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sigma = createLucideIcon("Sigma", [
  [
    "path",
    {
      d: "M18 7V5a1 1 0 0 0-1-1H6.5a.5.5 0 0 0-.4.8l4.5 6a2 2 0 0 1 0 2.4l-4.5 6a.5.5 0 0 0 .4.8H17a1 1 0 0 0 1-1v-2",
      key: "wuwx1p"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SignalHigh = createLucideIcon("SignalHigh", [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M17 20V8", key: "1tkaf5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SignalLow = createLucideIcon("SignalLow", [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SignalMedium = createLucideIcon("SignalMedium", [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SignalZero = createLucideIcon("SignalZero", [["path", { d: "M2 20h.01", key: "4haj6o" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Signal = createLucideIcon("Signal", [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M17 20V8", key: "1tkaf5" }],
  ["path", { d: "M22 4v16", key: "sih9yq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Signature = createLucideIcon("Signature", [
  [
    "path",
    {
      d: "m21 17-2.156-1.868A.5.5 0 0 0 18 15.5v.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1c0-2.545-3.991-3.97-8.5-4a1 1 0 0 0 0 5c4.153 0 4.745-11.295 5.708-13.5a2.5 2.5 0 1 1 3.31 3.284",
      key: "y32ogt"
    }
  ],
  ["path", { d: "M3 21h18", key: "itz85i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SignpostBig = createLucideIcon("SignpostBig", [
  ["path", { d: "M10 9H4L2 7l2-2h6", key: "1hq7x2" }],
  ["path", { d: "M14 5h6l2 2-2 2h-6", key: "bv62ej" }],
  ["path", { d: "M10 22V4a2 2 0 1 1 4 0v18", key: "eqpcf2" }],
  ["path", { d: "M8 22h8", key: "rmew8v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Signpost = createLucideIcon("Signpost", [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M12 3v3", key: "1n5kay" }],
  [
    "path",
    {
      d: "M18 6a2 2 0 0 1 1.387.56l2.307 2.22a1 1 0 0 1 0 1.44l-2.307 2.22A2 2 0 0 1 18 13H6a2 2 0 0 1-1.387-.56l-2.306-2.22a1 1 0 0 1 0-1.44l2.306-2.22A2 2 0 0 1 6 6z",
      key: "gqqp9m"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Siren = createLucideIcon("Siren", [
  ["path", { d: "M7 18v-6a5 5 0 1 1 10 0v6", key: "pcx96s" }],
  [
    "path",
    { d: "M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2z", key: "1b4s83" }
  ],
  ["path", { d: "M21 12h1", key: "jtio3y" }],
  ["path", { d: "M18.5 4.5 18 5", key: "g5sp9y" }],
  ["path", { d: "M2 12h1", key: "1uaihz" }],
  ["path", { d: "M12 2v1", key: "11qlp1" }],
  ["path", { d: "m4.929 4.929.707.707", key: "1i51kw" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SkipBack = createLucideIcon("SkipBack", [
  ["polygon", { points: "19 20 9 12 19 4 19 20", key: "o2sva" }],
  ["line", { x1: "5", x2: "5", y1: "19", y2: "5", key: "1ocqjk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SkipForward = createLucideIcon("SkipForward", [
  ["polygon", { points: "5 4 15 12 5 20 5 4", key: "16p6eg" }],
  ["line", { x1: "19", x2: "19", y1: "5", y2: "19", key: "futhcm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Skull = createLucideIcon("Skull", [
  ["path", { d: "m12.5 17-.5-1-.5 1h1z", key: "3me087" }],
  [
    "path",
    {
      d: "M15 22a1 1 0 0 0 1-1v-1a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20v1a1 1 0 0 0 1 1z",
      key: "1o5pge"
    }
  ],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Slack = createLucideIcon("Slack", [
  ["rect", { width: "3", height: "8", x: "13", y: "2", rx: "1.5", key: "diqz80" }],
  ["path", { d: "M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5", key: "183iwg" }],
  ["rect", { width: "3", height: "8", x: "8", y: "14", rx: "1.5", key: "hqg7r1" }],
  ["path", { d: "M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5", key: "76g71w" }],
  ["rect", { width: "8", height: "3", x: "14", y: "13", rx: "1.5", key: "1kmz0a" }],
  ["path", { d: "M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5", key: "jc4sz0" }],
  ["rect", { width: "8", height: "3", x: "2", y: "8", rx: "1.5", key: "1omvl4" }],
  ["path", { d: "M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5", key: "16f3cl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Slash = createLucideIcon("Slash", [["path", { d: "M22 2 2 22", key: "y4kqgn" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Slice = createLucideIcon("Slice", [
  [
    "path",
    {
      d: "M11 16.586V19a1 1 0 0 1-1 1H2L18.37 3.63a1 1 0 1 1 3 3l-9.663 9.663a1 1 0 0 1-1.414 0L8 14",
      key: "1sllp5"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SlidersHorizontal = createLucideIcon("SlidersHorizontal", [
  ["line", { x1: "21", x2: "14", y1: "4", y2: "4", key: "obuewd" }],
  ["line", { x1: "10", x2: "3", y1: "4", y2: "4", key: "1q6298" }],
  ["line", { x1: "21", x2: "12", y1: "12", y2: "12", key: "1iu8h1" }],
  ["line", { x1: "8", x2: "3", y1: "12", y2: "12", key: "ntss68" }],
  ["line", { x1: "21", x2: "16", y1: "20", y2: "20", key: "14d8ph" }],
  ["line", { x1: "12", x2: "3", y1: "20", y2: "20", key: "m0wm8r" }],
  ["line", { x1: "14", x2: "14", y1: "2", y2: "6", key: "14e1ph" }],
  ["line", { x1: "8", x2: "8", y1: "10", y2: "14", key: "1i6ji0" }],
  ["line", { x1: "16", x2: "16", y1: "18", y2: "22", key: "1lctlv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SlidersVertical = createLucideIcon("SlidersVertical", [
  ["line", { x1: "4", x2: "4", y1: "21", y2: "14", key: "1p332r" }],
  ["line", { x1: "4", x2: "4", y1: "10", y2: "3", key: "gb41h5" }],
  ["line", { x1: "12", x2: "12", y1: "21", y2: "12", key: "hf2csr" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "3", key: "1kfi7u" }],
  ["line", { x1: "20", x2: "20", y1: "21", y2: "16", key: "1lhrwl" }],
  ["line", { x1: "20", x2: "20", y1: "12", y2: "3", key: "16vvfq" }],
  ["line", { x1: "2", x2: "6", y1: "14", y2: "14", key: "1uebub" }],
  ["line", { x1: "10", x2: "14", y1: "8", y2: "8", key: "1yglbp" }],
  ["line", { x1: "18", x2: "22", y1: "16", y2: "16", key: "1jxqpz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SmartphoneCharging = createLucideIcon("SmartphoneCharging", [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", ry: "2", key: "1yt0o3" }],
  ["path", { d: "M12.667 8 10 12h4l-2.667 4", key: "h9lk2d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SmartphoneNfc = createLucideIcon("SmartphoneNfc", [
  ["rect", { width: "7", height: "12", x: "2", y: "6", rx: "1", key: "5nje8w" }],
  ["path", { d: "M13 8.32a7.43 7.43 0 0 1 0 7.36", key: "1g306n" }],
  ["path", { d: "M16.46 6.21a11.76 11.76 0 0 1 0 11.58", key: "uqvjvo" }],
  ["path", { d: "M19.91 4.1a15.91 15.91 0 0 1 .01 15.8", key: "ujntz3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Smartphone = createLucideIcon("Smartphone", [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", ry: "2", key: "1yt0o3" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SmilePlus = createLucideIcon("SmilePlus", [
  ["path", { d: "M22 11v1a10 10 0 1 1-9-10", key: "ew0xw9" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }],
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 2v6", key: "4bpg5p" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Smile = createLucideIcon("Smile", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Snail = createLucideIcon("Snail", [
  ["path", { d: "M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0", key: "hneq2s" }],
  ["circle", { cx: "10", cy: "13", r: "8", key: "194lz3" }],
  ["path", { d: "M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6", key: "ixqyt7" }],
  ["path", { d: "M18 3 19.1 5.2", key: "9tjm43" }],
  ["path", { d: "M22 3 20.9 5.2", key: "j3odrs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Snowflake = createLucideIcon("Snowflake", [
  ["line", { x1: "2", x2: "22", y1: "12", y2: "12", key: "1dnqot" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "22", key: "7eqyqh" }],
  ["path", { d: "m20 16-4-4 4-4", key: "rquw4f" }],
  ["path", { d: "m4 8 4 4-4 4", key: "12s3z9" }],
  ["path", { d: "m16 4-4 4-4-4", key: "1tumq1" }],
  ["path", { d: "m8 20 4-4 4 4", key: "9p200w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sofa = createLucideIcon("Sofa", [
  ["path", { d: "M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3", key: "1dgpiv" }],
  [
    "path",
    {
      d: "M2 16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z",
      key: "xacw8m"
    }
  ],
  ["path", { d: "M4 18v2", key: "jwo5n2" }],
  ["path", { d: "M20 18v2", key: "1ar1qi" }],
  ["path", { d: "M12 4v9", key: "oqhhn3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Soup = createLucideIcon("Soup", [
  ["path", { d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z", key: "4rw317" }],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M19.5 12 22 6", key: "shfsr5" }],
  [
    "path",
    {
      d: "M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62",
      key: "rpc6vp"
    }
  ],
  [
    "path",
    {
      d: "M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62",
      key: "1lf63m"
    }
  ],
  [
    "path",
    { d: "M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62", key: "97tijn" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Space = createLucideIcon("Space", [
  ["path", { d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1", key: "lt2kga" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Spade = createLucideIcon("Spade", [
  [
    "path",
    {
      d: "M5 9c-1.5 1.5-3 3.2-3 5.5A5.5 5.5 0 0 0 7.5 20c1.8 0 3-.5 4.5-2 1.5 1.5 2.7 2 4.5 2a5.5 5.5 0 0 0 5.5-5.5c0-2.3-1.5-4-3-5.5l-7-7-7 7Z",
      key: "40bo9n"
    }
  ],
  ["path", { d: "M12 18v4", key: "jadmvz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sparkle = createLucideIcon("Sparkle", [
  [
    "path",
    {
      d: "M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z",
      key: "4pj2yx"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sparkles = createLucideIcon("Sparkles", [
  [
    "path",
    {
      d: "M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z",
      key: "4pj2yx"
    }
  ],
  ["path", { d: "M20 3v4", key: "1olli1" }],
  ["path", { d: "M22 5h-4", key: "1gvqau" }],
  ["path", { d: "M4 17v2", key: "vumght" }],
  ["path", { d: "M5 18H3", key: "zchphs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Speaker = createLucideIcon("Speaker", [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M12 6h.01", key: "1vi96p" }],
  ["circle", { cx: "12", cy: "14", r: "4", key: "1jruaj" }],
  ["path", { d: "M12 14h.01", key: "1etili" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Speech = createLucideIcon("Speech", [
  [
    "path",
    {
      d: "M8.8 20v-4.1l1.9.2a2.3 2.3 0 0 0 2.164-2.1V8.3A5.37 5.37 0 0 0 2 8.25c0 2.8.656 3.054 1 4.55a5.77 5.77 0 0 1 .029 2.758L2 20",
      key: "11atix"
    }
  ],
  ["path", { d: "M19.8 17.8a7.5 7.5 0 0 0 .003-10.603", key: "yol142" }],
  ["path", { d: "M17 15a3.5 3.5 0 0 0-.025-4.975", key: "ssbmkc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SpellCheck2 = createLucideIcon("SpellCheck2", [
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  [
    "path",
    {
      d: "M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1",
      key: "8mdmtu"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SpellCheck = createLucideIcon("SpellCheck", [
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m16 20 2 2 4-4", key: "13tcca" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Spline = createLucideIcon("Spline", [
  ["circle", { cx: "19", cy: "5", r: "2", key: "mhkx31" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }],
  ["path", { d: "M5 17A12 12 0 0 1 17 5", key: "1okkup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Split = createLucideIcon("Split", [
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M8 3H3v5", key: "15dfkv" }],
  ["path", { d: "M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3", key: "1qrqzj" }],
  ["path", { d: "m15 9 6-6", key: "ko1vev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SprayCan = createLucideIcon("SprayCan", [
  ["path", { d: "M3 3h.01", key: "159qn6" }],
  ["path", { d: "M7 5h.01", key: "1hq22a" }],
  ["path", { d: "M11 7h.01", key: "1osv80" }],
  ["path", { d: "M3 7h.01", key: "1xzrh3" }],
  ["path", { d: "M7 9h.01", key: "19b3jx" }],
  ["path", { d: "M3 11h.01", key: "1eifu7" }],
  ["rect", { width: "4", height: "4", x: "15", y: "5", key: "mri9e4" }],
  ["path", { d: "m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2", key: "aib6hk" }],
  ["path", { d: "m13 14 8-2", key: "1d7bmk" }],
  ["path", { d: "m13 19 8-2", key: "1y2vml" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sprout = createLucideIcon("Sprout", [
  ["path", { d: "M7 20h10", key: "e6iznv" }],
  ["path", { d: "M10 20c5.5-2.5.8-6.4 3-10", key: "161w41" }],
  [
    "path",
    {
      d: "M9.5 9.4c1.1.8 1.8 2.2 2.3 3.7-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2 2.8-.5 4.4 0 5.5.8z",
      key: "9gtqwd"
    }
  ],
  [
    "path",
    {
      d: "M14.1 6a7 7 0 0 0-1.1 4c1.9-.1 3.3-.6 4.3-1.4 1-1 1.6-2.3 1.7-4.6-2.7.1-4 1-4.9 2z",
      key: "bkxnd2"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareActivity = createLucideIcon("SquareActivity", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M17 12h-2l-2 5-2-10-2 5H7", key: "15hlnc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowDownLeft = createLucideIcon("SquareArrowDownLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 8-8 8", key: "166keh" }],
  ["path", { d: "M16 16H8V8", key: "1w2ppm" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowDownRight = createLucideIcon("SquareArrowDownRight", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m8 8 8 8", key: "1imecy" }],
  ["path", { d: "M16 8v8H8", key: "1lbpgo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowDown = createLucideIcon("SquareArrowDown", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8 12 4 4 4-4", key: "k98ssh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowLeft = createLucideIcon("SquareArrowLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m12 8-4 4 4 4", key: "15vm53" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowOutDownLeft = createLucideIcon("SquareArrowOutDownLeft", [
  ["path", { d: "M13 21h6a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6", key: "14qz4y" }],
  ["path", { d: "m3 21 9-9", key: "1jfql5" }],
  ["path", { d: "M9 21H3v-6", key: "wtvkvv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowOutDownRight = createLucideIcon("SquareArrowOutDownRight", [
  ["path", { d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "14rsvq" }],
  ["path", { d: "m21 21-9-9", key: "1et2py" }],
  ["path", { d: "M21 15v6h-6", key: "1jko0i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowOutUpLeft = createLucideIcon("SquareArrowOutUpLeft", [
  ["path", { d: "M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-6", key: "14mv1t" }],
  ["path", { d: "m3 3 9 9", key: "rks13r" }],
  ["path", { d: "M3 9V3h6", key: "ira0h2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowOutUpRight = createLucideIcon("SquareArrowOutUpRight", [
  ["path", { d: "M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6", key: "y09zxi" }],
  ["path", { d: "m21 3-9 9", key: "mpx6sq" }],
  ["path", { d: "M15 3h6v6", key: "1q9fwt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowRight = createLucideIcon("SquareArrowRight", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m12 16 4-4-4-4", key: "1i9zcv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowUpLeft = createLucideIcon("SquareArrowUpLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 16V8h8", key: "19xb1h" }],
  ["path", { d: "M16 16 8 8", key: "1qdy8n" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowUpRight = createLucideIcon("SquareArrowUpRight", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 8h8v8", key: "b65dnt" }],
  ["path", { d: "m8 16 8-8", key: "13b9ih" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareArrowUp = createLucideIcon("SquareArrowUp", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareAsterisk = createLucideIcon("SquareAsterisk", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8.5 14 7-4", key: "12hpby" }],
  ["path", { d: "m8.5 10 7 4", key: "wwy2dy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareBottomDashedScissors = createLucideIcon("SquareBottomDashedScissors", [
  [
    "path",
    { d: "M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2", key: "1vzg26" }
  ],
  ["path", { d: "M10 22H8", key: "euku7a" }],
  ["path", { d: "M16 22h-2", key: "18d249" }],
  ["circle", { cx: "8", cy: "8", r: "2", key: "14cg06" }],
  ["path", { d: "M9.414 9.414 12 12", key: "qz4lzr" }],
  ["path", { d: "M14.8 14.8 18 18", key: "11flf1" }],
  ["circle", { cx: "8", cy: "16", r: "2", key: "1acxsx" }],
  ["path", { d: "m18 6-8.586 8.586", key: "11kzk1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareChartGantt = createLucideIcon("SquareChartGantt", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 8h7", key: "kbo1nt" }],
  ["path", { d: "M8 12h6", key: "ikassy" }],
  ["path", { d: "M11 16h5", key: "oq65wt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareCheckBig = createLucideIcon("SquareCheckBig", [
  ["path", { d: "M21 10.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.5", key: "1uzm8b" }],
  ["path", { d: "m9 11 3 3L22 4", key: "1pflzl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareCheck = createLucideIcon("SquareCheck", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareChevronDown = createLucideIcon("SquareChevronDown", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 10-4 4-4-4", key: "894hmk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareChevronLeft = createLucideIcon("SquareChevronLeft", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m14 16-4-4 4-4", key: "ojs7w8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareChevronRight = createLucideIcon("SquareChevronRight", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m10 8 4 4-4 4", key: "1wy4r4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareChevronUp = createLucideIcon("SquareChevronUp", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m8 14 4-4 4 4", key: "fy2ptz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareCode = createLucideIcon("SquareCode", [
  ["path", { d: "M10 9.5 8 12l2 2.5", key: "3mjy60" }],
  ["path", { d: "m14 9.5 2 2.5-2 2.5", key: "1bir2l" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDashedBottomCode = createLucideIcon("SquareDashedBottomCode", [
  ["path", { d: "M10 9.5 8 12l2 2.5", key: "3mjy60" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "m14 9.5 2 2.5-2 2.5", key: "1bir2l" }],
  [
    "path",
    { d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2", key: "as5y1o" }
  ],
  ["path", { d: "M9 21h1", key: "15o7lz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDashedBottom = createLucideIcon("SquareDashedBottom", [
  [
    "path",
    { d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2", key: "as5y1o" }
  ],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDashedKanban = createLucideIcon("SquareDashedKanban", [
  ["path", { d: "M8 7v7", key: "1x2jlm" }],
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M16 7v9", key: "1hp2iy" }],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M21 14v1", key: "169vum" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDashedMousePointer = createLucideIcon("SquareDashedMousePointer", [
  [
    "path",
    {
      d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z",
      key: "xwnzip"
    }
  ],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M9 21h2", key: "1qve2z" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M21 9v2", key: "p14lih" }],
  ["path", { d: "M3 14v1", key: "vnatye" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDashed = createLucideIcon("SquareDashed", [
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M21 14v1", key: "169vum" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDivide = createLucideIcon("SquareDivide", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "16", key: "aqc6ln" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "8", key: "1mkcni" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareDot = createLucideIcon("SquareDot", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareEqual = createLucideIcon("SquareEqual", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M7 14h10", key: "1mhdw3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareFunction = createLucideIcon("SquareFunction", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3", key: "m1af9g" }],
  ["path", { d: "M9 11.2h5.7", key: "3zgcl2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareKanban = createLucideIcon("SquareKanban", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 7v7", key: "1x2jlm" }],
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M16 7v9", key: "1hp2iy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareLibrary = createLucideIcon("SquareLibrary", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7v10", key: "d5nglc" }],
  ["path", { d: "M11 7v10", key: "pptsnr" }],
  ["path", { d: "m15 7 2 10", key: "1m7qm5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareM = createLucideIcon("SquareM", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 16V8l4 4 4-4v8", key: "141u4e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareMenu = createLucideIcon("SquareMenu", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 8h10", key: "1jw688" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M7 16h10", key: "wp8him" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareMinus = createLucideIcon("SquareMinus", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareMousePointer = createLucideIcon("SquareMousePointer", [
  [
    "path",
    {
      d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z",
      key: "xwnzip"
    }
  ],
  ["path", { d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "14rsvq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareParkingOff = createLucideIcon("SquareParkingOff", [
  ["path", { d: "M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41", key: "9l1ft6" }],
  ["path", { d: "M3 8.7V19a2 2 0 0 0 2 2h10.3", key: "17knke" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M13 13a3 3 0 1 0 0-6H9v2", key: "uoagbd" }],
  ["path", { d: "M9 17v-2.3", key: "1jxgo2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareParking = createLucideIcon("SquareParking", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 17V7h4a3 3 0 0 1 0 6H9", key: "1dfk2c" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePen = createLucideIcon("SquarePen", [
  ["path", { d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7", key: "1m0v6g" }],
  [
    "path",
    {
      d: "M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",
      key: "ohrbg2"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePercent = createLucideIcon("SquarePercent", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePi = createLucideIcon("SquarePi", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7h10", key: "udp07y" }],
  ["path", { d: "M10 7v10", key: "i1d9ee" }],
  ["path", { d: "M16 17a2 2 0 0 1-2-2V7", key: "ftwdc7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePilcrow = createLucideIcon("SquarePilcrow", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 12H9.5a2.5 2.5 0 0 1 0-5H17", key: "1l9586" }],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M16 7v10", key: "lavkr4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePlay = createLucideIcon("SquarePlay", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m9 8 6 4-6 4Z", key: "f1r3lt" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePlus = createLucideIcon("SquarePlus", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquarePower = createLucideIcon("SquarePower", [
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M7.998 9.003a5 5 0 1 0 8-.005", key: "1pek45" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareRadical = createLucideIcon("SquareRadical", [
  ["path", { d: "M7 12h2l2 5 2-10h4", key: "1fxv6h" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareScissors = createLucideIcon("SquareScissors", [
  ["rect", { width: "20", height: "20", x: "2", y: "2", rx: "2", key: "1btzen" }],
  ["circle", { cx: "8", cy: "8", r: "2", key: "14cg06" }],
  ["path", { d: "M9.414 9.414 12 12", key: "qz4lzr" }],
  ["path", { d: "M14.8 14.8 18 18", key: "11flf1" }],
  ["circle", { cx: "8", cy: "16", r: "2", key: "1acxsx" }],
  ["path", { d: "m18 6-8.586 8.586", key: "11kzk1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareSigma = createLucideIcon("SquareSigma", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M16 8.9V7H8l4 5-4 5h8v-1.9", key: "9nih0i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareSlash = createLucideIcon("SquareSlash", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["line", { x1: "9", x2: "15", y1: "15", y2: "9", key: "1dfufj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareSplitHorizontal = createLucideIcon("SquareSplitHorizontal", [
  ["path", { d: "M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3", key: "lubmu8" }],
  ["path", { d: "M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3", key: "1ag34g" }],
  ["line", { x1: "12", x2: "12", y1: "4", y2: "20", key: "1tx1rr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareSplitVertical = createLucideIcon("SquareSplitVertical", [
  ["path", { d: "M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3", key: "1pi83i" }],
  ["path", { d: "M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3", key: "ido5k7" }],
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareSquare = createLucideIcon("SquareSquare", [
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }],
  ["rect", { x: "8", y: "8", width: "8", height: "8", rx: "1", key: "z9xiuo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareStack = createLucideIcon("SquareStack", [
  ["path", { d: "M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2", key: "4i38lg" }],
  ["path", { d: "M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2", key: "mlte4a" }],
  ["rect", { width: "8", height: "8", x: "14", y: "14", rx: "2", key: "1fa9i4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareTerminal = createLucideIcon("SquareTerminal", [
  ["path", { d: "m7 11 2-2-2-2", key: "1lz0vl" }],
  ["path", { d: "M11 13h4", key: "1p7l4v" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareUserRound = createLucideIcon("SquareUserRound", [
  ["path", { d: "M18 21a6 6 0 0 0-12 0", key: "kaz2du" }],
  ["circle", { cx: "12", cy: "11", r: "4", key: "1gt34v" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareUser = createLucideIcon("SquareUser", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2", key: "1m6ac2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SquareX = createLucideIcon("SquareX", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Square = createLucideIcon("Square", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Squircle = createLucideIcon("Squircle", [
  ["path", { d: "M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9-9-1.8-9-9 1.8-9 9-9", key: "garfkc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Squirrel = createLucideIcon("Squirrel", [
  ["path", { d: "M15.236 22a3 3 0 0 0-2.2-5", key: "21bitc" }],
  ["path", { d: "M16 20a3 3 0 0 1 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4", key: "oh0fg0" }],
  ["path", { d: "M18 13h.01", key: "9veqaj" }],
  [
    "path",
    {
      d: "M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10",
      key: "980v8a"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Stamp = createLucideIcon("Stamp", [
  ["path", { d: "M5 22h14", key: "ehvnwv" }],
  [
    "path",
    {
      d: "M19.27 13.73A2.5 2.5 0 0 0 17.5 13h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-1.5c0-.66-.26-1.3-.73-1.77Z",
      key: "1sy9ra"
    }
  ],
  [
    "path",
    { d: "M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-3-3c-1.66 0-3 1-3 3s1 2 1 3.5V13", key: "cnxgux" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StarHalf = createLucideIcon("StarHalf", [
  [
    "path",
    {
      d: "M12 18.338a2.1 2.1 0 0 0-.987.244L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16l2.309-4.679A.53.53 0 0 1 12 2",
      key: "2ksp49"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StarOff = createLucideIcon("StarOff", [
  ["path", { d: "M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43", key: "16m0ql" }],
  ["path", { d: "M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91", key: "1vt8nq" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Star = createLucideIcon("Star", [
  [
    "path",
    {
      d: "M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z",
      key: "r04s7s"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StepBack = createLucideIcon("StepBack", [
  ["line", { x1: "18", x2: "18", y1: "20", y2: "4", key: "cun8e5" }],
  ["polygon", { points: "14,20 4,12 14,4", key: "ypakod" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StepForward = createLucideIcon("StepForward", [
  ["line", { x1: "6", x2: "6", y1: "4", y2: "20", key: "fy8qot" }],
  ["polygon", { points: "10,4 20,12 10,20", key: "1mc1pf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Stethoscope = createLucideIcon("Stethoscope", [
  ["path", { d: "M11 2v2", key: "1539x4" }],
  ["path", { d: "M5 2v2", key: "1yf1q8" }],
  ["path", { d: "M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1", key: "rb5t3r" }],
  ["path", { d: "M8 15a6 6 0 0 0 12 0v-3", key: "x18d4x" }],
  ["circle", { cx: "20", cy: "10", r: "2", key: "ts1r5v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sticker = createLucideIcon("Sticker", [
  [
    "path",
    { d: "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z", key: "1wis1t" }
  ],
  ["path", { d: "M14 3v4a2 2 0 0 0 2 2h4", key: "36rjfy" }],
  ["path", { d: "M8 13h.01", key: "1sbv64" }],
  ["path", { d: "M16 13h.01", key: "wip0gl" }],
  ["path", { d: "M10 16s.8 1 2 1c1.3 0 2-1 2-1", key: "1vvgv3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StickyNote = createLucideIcon("StickyNote", [
  ["path", { d: "M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z", key: "qazsjp" }],
  ["path", { d: "M15 3v4a2 2 0 0 0 2 2h4", key: "40519r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Store = createLucideIcon("Store", [
  ["path", { d: "m2 7 4.41-4.41A2 2 0 0 1 7.83 2h8.34a2 2 0 0 1 1.42.59L22 7", key: "ztvudi" }],
  ["path", { d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8", key: "1b2hhj" }],
  ["path", { d: "M15 22v-4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4", key: "2ebpfo" }],
  ["path", { d: "M2 7h20", key: "1fcdvo" }],
  [
    "path",
    {
      d: "M22 7v3a2 2 0 0 1-2 2a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 16 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 12 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 8 12a2.7 2.7 0 0 1-1.59-.63.7.7 0 0 0-.82 0A2.7 2.7 0 0 1 4 12a2 2 0 0 1-2-2V7",
      key: "6c3vgh"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StretchHorizontal = createLucideIcon("StretchHorizontal", [
  ["rect", { width: "20", height: "6", x: "2", y: "4", rx: "2", key: "qdearl" }],
  ["rect", { width: "20", height: "6", x: "2", y: "14", rx: "2", key: "1xrn6j" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const StretchVertical = createLucideIcon("StretchVertical", [
  ["rect", { width: "6", height: "20", x: "4", y: "2", rx: "2", key: "19qu7m" }],
  ["rect", { width: "6", height: "20", x: "14", y: "2", rx: "2", key: "24v0nk" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Strikethrough = createLucideIcon("Strikethrough", [
  ["path", { d: "M16 4H9a3 3 0 0 0-2.83 4", key: "43sutm" }],
  ["path", { d: "M14 12a4 4 0 0 1 0 8H6", key: "nlfj13" }],
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Subscript = createLucideIcon("Subscript", [
  ["path", { d: "m4 5 8 8", key: "1eunvl" }],
  ["path", { d: "m12 5-8 8", key: "1ah0jp" }],
  [
    "path",
    {
      d: "M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07",
      key: "e8ta8j"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SunDim = createLucideIcon("SunDim", [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 4h.01", key: "1ujb9j" }],
  ["path", { d: "M20 12h.01", key: "1ykeid" }],
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M4 12h.01", key: "158zrr" }],
  ["path", { d: "M17.657 6.343h.01", key: "31pqzk" }],
  ["path", { d: "M17.657 17.657h.01", key: "jehnf4" }],
  ["path", { d: "M6.343 17.657h.01", key: "gdk6ow" }],
  ["path", { d: "M6.343 6.343h.01", key: "1uurf0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SunMedium = createLucideIcon("SunMedium", [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 3v1", key: "1asbbs" }],
  ["path", { d: "M12 20v1", key: "1wcdkc" }],
  ["path", { d: "M3 12h1", key: "lp3yf2" }],
  ["path", { d: "M20 12h1", key: "1vloll" }],
  ["path", { d: "m18.364 5.636-.707.707", key: "1hakh0" }],
  ["path", { d: "m6.343 17.657-.707.707", key: "18m9nf" }],
  ["path", { d: "m5.636 5.636.707.707", key: "1xv1c5" }],
  ["path", { d: "m17.657 17.657.707.707", key: "vl76zb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SunMoon = createLucideIcon("SunMoon", [
  ["path", { d: "M12 8a2.83 2.83 0 0 0 4 4 4 4 0 1 1-4-4", key: "1fu5g2" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m4.9 4.9 1.4 1.4", key: "b9915j" }],
  ["path", { d: "m17.7 17.7 1.4 1.4", key: "qc3ed3" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m6.3 17.7-1.4 1.4", key: "5gca6" }],
  ["path", { d: "m19.1 4.9-1.4 1.4", key: "wpu9u6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SunSnow = createLucideIcon("SunSnow", [
  ["path", { d: "M10 9a3 3 0 1 0 0 6", key: "6zmtdl" }],
  ["path", { d: "M2 12h1", key: "1uaihz" }],
  ["path", { d: "M14 21V3", key: "1llu3z" }],
  ["path", { d: "M10 4V3", key: "pkzwkn" }],
  ["path", { d: "M10 21v-1", key: "1u8rkd" }],
  ["path", { d: "m3.64 18.36.7-.7", key: "105rm9" }],
  ["path", { d: "m4.34 6.34-.7-.7", key: "d3unjp" }],
  ["path", { d: "M14 12h8", key: "4f43i9" }],
  ["path", { d: "m17 4-3 3", key: "15jcng" }],
  ["path", { d: "m14 17 3 3", key: "6tlq38" }],
  ["path", { d: "m21 15-3-3 3-3", key: "1nlnje" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sun = createLucideIcon("Sun", [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "m17.66 17.66 1.41 1.41", key: "ptbguv" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m6.34 17.66-1.41 1.41", key: "1m8zz5" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sunrise = createLucideIcon("Sunrise", [
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["path", { d: "m4.93 10.93 1.41 1.41", key: "2a7f42" }],
  ["path", { d: "M2 18h2", key: "j10viu" }],
  ["path", { d: "M20 18h2", key: "wocana" }],
  ["path", { d: "m19.07 10.93-1.41 1.41", key: "15zs5n" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }],
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }],
  ["path", { d: "M16 18a4 4 0 0 0-8 0", key: "1lzouq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sunset = createLucideIcon("Sunset", [
  ["path", { d: "M12 10V2", key: "16sf7g" }],
  ["path", { d: "m4.93 10.93 1.41 1.41", key: "2a7f42" }],
  ["path", { d: "M2 18h2", key: "j10viu" }],
  ["path", { d: "M20 18h2", key: "wocana" }],
  ["path", { d: "m19.07 10.93-1.41 1.41", key: "15zs5n" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }],
  ["path", { d: "m16 6-4 4-4-4", key: "6wukr" }],
  ["path", { d: "M16 18a4 4 0 0 0-8 0", key: "1lzouq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Superscript = createLucideIcon("Superscript", [
  ["path", { d: "m4 19 8-8", key: "hr47gm" }],
  ["path", { d: "m12 19-8-8", key: "1dhhmo" }],
  [
    "path",
    {
      d: "M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06",
      key: "1dfcux"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SwatchBook = createLucideIcon("SwatchBook", [
  ["path", { d: "M11 17a4 4 0 0 1-8 0V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2Z", key: "1ldrpk" }],
  ["path", { d: "M16.7 13H19a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H7", key: "11i5po" }],
  ["path", { d: "M 7 17h.01", key: "1euzgo" }],
  [
    "path",
    {
      d: "m11 8 2.3-2.3a2.4 2.4 0 0 1 3.404.004L18.6 7.6a2.4 2.4 0 0 1 .026 3.434L9.9 19.8",
      key: "o2gii7"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SwissFranc = createLucideIcon("SwissFranc", [
  ["path", { d: "M10 21V3h8", key: "br2l0g" }],
  ["path", { d: "M6 16h9", key: "2py0wn" }],
  ["path", { d: "M10 9.5h7", key: "13dmhz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const SwitchCamera = createLucideIcon("SwitchCamera", [
  ["path", { d: "M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5", key: "mtk2lu" }],
  ["path", { d: "M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5", key: "120jsl" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "m18 22-3-3 3-3", key: "kgdoj7" }],
  ["path", { d: "m6 2 3 3-3 3", key: "1fnbkv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Sword = createLucideIcon("Sword", [
  ["polyline", { points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5", key: "1hfsw2" }],
  ["line", { x1: "13", x2: "19", y1: "19", y2: "13", key: "1vrmhu" }],
  ["line", { x1: "16", x2: "20", y1: "16", y2: "20", key: "1bron3" }],
  ["line", { x1: "19", x2: "21", y1: "21", y2: "19", key: "13pww6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Swords = createLucideIcon("Swords", [
  ["polyline", { points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5", key: "1hfsw2" }],
  ["line", { x1: "13", x2: "19", y1: "19", y2: "13", key: "1vrmhu" }],
  ["line", { x1: "16", x2: "20", y1: "16", y2: "20", key: "1bron3" }],
  ["line", { x1: "19", x2: "21", y1: "21", y2: "19", key: "13pww6" }],
  ["polyline", { points: "14.5 6.5 18 3 21 3 21 6 17.5 9.5", key: "hbey2j" }],
  ["line", { x1: "5", x2: "9", y1: "14", y2: "18", key: "1hf58s" }],
  ["line", { x1: "7", x2: "4", y1: "17", y2: "20", key: "pidxm4" }],
  ["line", { x1: "3", x2: "5", y1: "19", y2: "21", key: "1pehsh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Syringe = createLucideIcon("Syringe", [
  ["path", { d: "m18 2 4 4", key: "22kx64" }],
  ["path", { d: "m17 7 3-3", key: "1w1zoj" }],
  ["path", { d: "M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5", key: "1exhtz" }],
  ["path", { d: "m9 11 4 4", key: "rovt3i" }],
  ["path", { d: "m5 19-3 3", key: "59f2uf" }],
  ["path", { d: "m14 4 6 6", key: "yqp9t2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Table2 = createLucideIcon("Table2", [
  [
    "path",
    {
      d: "M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18",
      key: "gugj83"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableCellsMerge = createLucideIcon("TableCellsMerge", [
  ["path", { d: "M12 21v-6", key: "lihzve" }],
  ["path", { d: "M12 9V3", key: "da5inc" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableCellsSplit = createLucideIcon("TableCellsSplit", [
  ["path", { d: "M12 15V9", key: "8c7uyn" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableColumnsSplit = createLucideIcon("TableColumnsSplit", [
  ["path", { d: "M14 14v2", key: "w2a1xv" }],
  ["path", { d: "M14 20v2", key: "1lq872" }],
  ["path", { d: "M14 2v2", key: "6buw04" }],
  ["path", { d: "M14 8v2", key: "i67w9a" }],
  ["path", { d: "M2 15h8", key: "82wtch" }],
  ["path", { d: "M2 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2", key: "up0l64" }],
  ["path", { d: "M2 9h8", key: "yelfik" }],
  ["path", { d: "M22 15h-4", key: "1es58f" }],
  ["path", { d: "M22 3h-2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2", key: "pdjoqf" }],
  ["path", { d: "M22 9h-4", key: "1luja7" }],
  ["path", { d: "M5 3v18", key: "14hmio" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableOfContents = createLucideIcon("TableOfContents", [
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M16 18H3", key: "12xzn7" }],
  ["path", { d: "M16 6H3", key: "1wxfjs" }],
  ["path", { d: "M21 12h.01", key: "msek7k" }],
  ["path", { d: "M21 18h.01", key: "1e8rq1" }],
  ["path", { d: "M21 6h.01", key: "1koanj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableProperties = createLucideIcon("TableProperties", [
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 9H3", key: "1338ky" }],
  ["path", { d: "M21 15H3", key: "9uk58r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TableRowsSplit = createLucideIcon("TableRowsSplit", [
  ["path", { d: "M14 10h2", key: "1lstlu" }],
  ["path", { d: "M15 22v-8", key: "1fwwgm" }],
  ["path", { d: "M15 2v4", key: "1044rn" }],
  ["path", { d: "M2 10h2", key: "1r8dkt" }],
  ["path", { d: "M20 10h2", key: "1ug425" }],
  ["path", { d: "M3 19h18", key: "awlh7x" }],
  ["path", { d: "M3 22v-6a2 2 135 0 1 2-2h14a2 2 45 0 1 2 2v6", key: "ibqhof" }],
  ["path", { d: "M3 2v2a2 2 45 0 0 2 2h14a2 2 135 0 0 2-2V2", key: "1uenja" }],
  ["path", { d: "M8 10h2", key: "66od0" }],
  ["path", { d: "M9 22v-8", key: "fmnu31" }],
  ["path", { d: "M9 2v4", key: "j1yeou" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Table$1 = createLucideIcon("Table", [
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M3 15h18", key: "5xshup" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TabletSmartphone = createLucideIcon("TabletSmartphone", [
  ["rect", { width: "10", height: "14", x: "3", y: "8", rx: "2", key: "1vrsiq" }],
  ["path", { d: "M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4", key: "1j4zmg" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tablet = createLucideIcon("Tablet", [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", ry: "2", key: "76otgf" }],
  ["line", { x1: "12", x2: "12.01", y1: "18", y2: "18", key: "1dp563" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tablets = createLucideIcon("Tablets", [
  ["circle", { cx: "7", cy: "7", r: "5", key: "x29byf" }],
  ["circle", { cx: "17", cy: "17", r: "5", key: "1op1d2" }],
  ["path", { d: "M12 17h10", key: "ls21zv" }],
  ["path", { d: "m3.46 10.54 7.08-7.08", key: "1rehiu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tag$1 = createLucideIcon("Tag", [
  [
    "path",
    {
      d: "M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z",
      key: "vktsd0"
    }
  ],
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tags = createLucideIcon("Tags", [
  ["path", { d: "m15 5 6.3 6.3a2.4 2.4 0 0 1 0 3.4L17 19", key: "1cbfv1" }],
  [
    "path",
    {
      d: "M9.586 5.586A2 2 0 0 0 8.172 5H3a1 1 0 0 0-1 1v5.172a2 2 0 0 0 .586 1.414L8.29 18.29a2.426 2.426 0 0 0 3.42 0l3.58-3.58a2.426 2.426 0 0 0 0-3.42z",
      key: "135mg7"
    }
  ],
  ["circle", { cx: "6.5", cy: "9.5", r: ".5", fill: "currentColor", key: "5pm5xn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tally1 = createLucideIcon("Tally1", [["path", { d: "M4 4v16", key: "6qkkli" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tally2 = createLucideIcon("Tally2", [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tally3 = createLucideIcon("Tally3", [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tally4 = createLucideIcon("Tally4", [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }],
  ["path", { d: "M19 4v16", key: "8ij5ei" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tally5 = createLucideIcon("Tally5", [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }],
  ["path", { d: "M19 4v16", key: "8ij5ei" }],
  ["path", { d: "M22 6 2 18", key: "h9moai" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tangent = createLucideIcon("Tangent", [
  ["circle", { cx: "17", cy: "4", r: "2", key: "y5j2s2" }],
  ["path", { d: "M15.59 5.41 5.41 15.59", key: "l0vprr" }],
  ["circle", { cx: "4", cy: "17", r: "2", key: "9p4efm" }],
  ["path", { d: "M12 22s-4-9-1.5-11.5S22 12 22 12", key: "1twk4o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Target = createLucideIcon("Target", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "6", key: "1vlfrh" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Telescope = createLucideIcon("Telescope", [
  [
    "path",
    {
      d: "m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44",
      key: "k4qptu"
    }
  ],
  ["path", { d: "m13.56 11.747 4.332-.924", key: "19l80z" }],
  ["path", { d: "m16 21-3.105-6.21", key: "7oh9d" }],
  [
    "path",
    {
      d: "M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z",
      key: "m7xp4m"
    }
  ],
  ["path", { d: "m6.158 8.633 1.114 4.456", key: "74o979" }],
  ["path", { d: "m8 21 3.105-6.21", key: "1fvxut" }],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TentTree = createLucideIcon("TentTree", [
  ["circle", { cx: "4", cy: "4", r: "2", key: "bt5ra8" }],
  ["path", { d: "m14 5 3-3 3 3", key: "1sorif" }],
  ["path", { d: "m14 10 3-3 3 3", key: "1jyi9h" }],
  ["path", { d: "M17 14V2", key: "8ymqnk" }],
  ["path", { d: "M17 14H7l-5 8h20Z", key: "13ar7p" }],
  ["path", { d: "M8 14v8", key: "1ghmqk" }],
  ["path", { d: "m9 14 5 8", key: "13pgi6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tent = createLucideIcon("Tent", [
  ["path", { d: "M3.5 21 14 3", key: "1szst5" }],
  ["path", { d: "M20.5 21 10 3", key: "1310c3" }],
  ["path", { d: "M15.5 21 12 15l-3.5 6", key: "1ddtfw" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Terminal = createLucideIcon("Terminal", [
  ["polyline", { points: "4 17 10 11 4 5", key: "akl6gq" }],
  ["line", { x1: "12", x2: "20", y1: "19", y2: "19", key: "q2wloq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TestTubeDiagonal = createLucideIcon("TestTubeDiagonal", [
  [
    "path",
    { d: "M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01a2.83 2.83 0 0 1 0-4L17 3", key: "1ub6xw" }
  ],
  ["path", { d: "m16 2 6 6", key: "1gw87d" }],
  ["path", { d: "M12 16H4", key: "1cjfip" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TestTube = createLucideIcon("TestTube", [
  ["path", { d: "M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2", key: "125lnx" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }],
  ["path", { d: "M14.5 16h-5", key: "1ox875" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TestTubes = createLucideIcon("TestTubes", [
  ["path", { d: "M9 2v17.5A2.5 2.5 0 0 1 6.5 22A2.5 2.5 0 0 1 4 19.5V2", key: "1hjrqt" }],
  ["path", { d: "M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5a2.5 2.5 0 0 1-2.5-2.5V2", key: "16lc8n" }],
  ["path", { d: "M3 2h7", key: "7s29d5" }],
  ["path", { d: "M14 2h7", key: "7sicin" }],
  ["path", { d: "M9 16H4", key: "1bfye3" }],
  ["path", { d: "M20 16h-5", key: "ddnjpe" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TextCursorInput = createLucideIcon("TextCursorInput", [
  ["path", { d: "M5 4h1a3 3 0 0 1 3 3 3 3 0 0 1 3-3h1", key: "18xjzo" }],
  ["path", { d: "M13 20h-1a3 3 0 0 1-3-3 3 3 0 0 1-3 3H5", key: "fj48gi" }],
  ["path", { d: "M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1", key: "1n9rhb" }],
  ["path", { d: "M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7", key: "13ksps" }],
  ["path", { d: "M9 7v10", key: "1vc8ob" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TextCursor = createLucideIcon("TextCursor", [
  ["path", { d: "M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1", key: "uvaxm9" }],
  ["path", { d: "M7 22h1a4 4 0 0 0 4-4v-1", key: "11xy8d" }],
  ["path", { d: "M7 2h1a4 4 0 0 1 4 4v1", key: "1uw06m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TextQuote = createLucideIcon("TextQuote", [
  ["path", { d: "M17 6H3", key: "16j9eg" }],
  ["path", { d: "M21 12H8", key: "scolzb" }],
  ["path", { d: "M21 18H8", key: "1wfozv" }],
  ["path", { d: "M3 12v6", key: "fv4c87" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TextSearch = createLucideIcon("TextSearch", [
  ["path", { d: "M21 6H3", key: "1jwq7v" }],
  ["path", { d: "M10 12H3", key: "1ulcyk" }],
  ["path", { d: "M10 18H3", key: "13769t" }],
  ["circle", { cx: "17", cy: "15", r: "3", key: "1upz2a" }],
  ["path", { d: "m21 19-1.9-1.9", key: "dwi7p8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TextSelect = createLucideIcon("TextSelect", [
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M21 14v1", key: "169vum" }],
  ["line", { x1: "7", x2: "15", y1: "8", y2: "8", key: "1758g8" }],
  ["line", { x1: "7", x2: "17", y1: "12", y2: "12", key: "197423" }],
  ["line", { x1: "7", x2: "13", y1: "16", y2: "16", key: "37cgm6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Text = createLucideIcon("Text", [
  ["path", { d: "M17 6.1H3", key: "wptmhv" }],
  ["path", { d: "M21 12.1H3", key: "1j38uz" }],
  ["path", { d: "M15.1 18H3", key: "1nb16a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Theater = createLucideIcon("Theater", [
  ["path", { d: "M2 10s3-3 3-8", key: "3xiif0" }],
  ["path", { d: "M22 10s-3-3-3-8", key: "ioaa5q" }],
  ["path", { d: "M10 2c0 4.4-3.6 8-8 8", key: "16fkpi" }],
  ["path", { d: "M14 2c0 4.4 3.6 8 8 8", key: "b9eulq" }],
  ["path", { d: "M2 10s2 2 2 5", key: "1au1lb" }],
  ["path", { d: "M22 10s-2 2-2 5", key: "qi2y5e" }],
  ["path", { d: "M8 15h8", key: "45n4r" }],
  ["path", { d: "M2 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1", key: "1vsc2m" }],
  ["path", { d: "M14 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1", key: "hrha4u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ThermometerSnowflake = createLucideIcon("ThermometerSnowflake", [
  ["path", { d: "M2 12h10", key: "19562f" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "m3 9 3 3-3 3", key: "1sas0l" }],
  ["path", { d: "M12 6 9 9 6 6", key: "pfrgxu" }],
  ["path", { d: "m6 18 3-3 1.5 1.5", key: "1e277p" }],
  ["path", { d: "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z", key: "iof6y5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ThermometerSun = createLucideIcon("ThermometerSun", [
  ["path", { d: "M12 9a4 4 0 0 0-2 7.5", key: "1jvsq6" }],
  ["path", { d: "M12 3v2", key: "1w22ol" }],
  ["path", { d: "m6.6 18.4-1.4 1.4", key: "w2yidj" }],
  ["path", { d: "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z", key: "iof6y5" }],
  ["path", { d: "M4 13H2", key: "118le4" }],
  ["path", { d: "M6.34 7.34 4.93 5.93", key: "1brd51" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Thermometer = createLucideIcon("Thermometer", [
  ["path", { d: "M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z", key: "17jzev" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ThumbsDown = createLucideIcon("ThumbsDown", [
  ["path", { d: "M17 14V2", key: "8ymqnk" }],
  [
    "path",
    {
      d: "M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z",
      key: "m61m77"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ThumbsUp = createLucideIcon("ThumbsUp", [
  ["path", { d: "M7 10v12", key: "1qc93n" }],
  [
    "path",
    {
      d: "M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z",
      key: "emmmcr"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketCheck = createLucideIcon("TicketCheck", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketMinus = createLucideIcon("TicketMinus", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketPercent = createLucideIcon("TicketPercent", [
  [
    "path",
    {
      d: "M2 9a3 3 0 1 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "1l48ns"
    }
  ],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketPlus = createLucideIcon("TicketPlus", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M12 9v6", key: "199k2o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketSlash = createLucideIcon("TicketSlash", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9.5 14.5 5-5", key: "qviqfa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketX = createLucideIcon("TicketX", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9.5 14.5 5-5", key: "qviqfa" }],
  ["path", { d: "m9.5 9.5 5 5", key: "18nt4w" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ticket = createLucideIcon("Ticket", [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M13 5v2", key: "dyzc3o" }],
  ["path", { d: "M13 17v2", key: "1ont0d" }],
  ["path", { d: "M13 11v2", key: "1wjjxi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TicketsPlane = createLucideIcon("TicketsPlane", [
  ["path", { d: "M10.5 17h1.227a2 2 0 0 0 1.345-.52L18 12", key: "16muxl" }],
  ["path", { d: "m12 13.5 3.75.5", key: "1i9qhk" }],
  ["path", { d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8", key: "12lg5p" }],
  ["path", { d: "M6 10V8", key: "1y41hn" }],
  ["path", { d: "M6 14v1", key: "cao2tf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["rect", { x: "2", y: "8", width: "20", height: "13", rx: "2", key: "p3bz5l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tickets = createLucideIcon("Tickets", [
  ["path", { d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8", key: "12lg5p" }],
  ["path", { d: "M6 10V8", key: "1y41hn" }],
  ["path", { d: "M6 14v1", key: "cao2tf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["rect", { x: "2", y: "8", width: "20", height: "13", rx: "2", key: "p3bz5l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TimerOff = createLucideIcon("TimerOff", [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  ["path", { d: "M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7", key: "10he05" }],
  ["path", { d: "M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2", key: "15f7sh" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M12 12v-2", key: "fwoke6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TimerReset = createLucideIcon("TimerReset", [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  ["path", { d: "M12 14v-4", key: "1evpnu" }],
  ["path", { d: "M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6", key: "1ts96g" }],
  ["path", { d: "M9 17H4v5", key: "8t5av" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Timer = createLucideIcon("Timer", [
  ["line", { x1: "10", x2: "14", y1: "2", y2: "2", key: "14vaq8" }],
  ["line", { x1: "12", x2: "15", y1: "14", y2: "11", key: "17fdiu" }],
  ["circle", { cx: "12", cy: "14", r: "8", key: "1e1u0o" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ToggleLeft = createLucideIcon("ToggleLeft", [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "6", ry: "6", key: "f2vt7d" }],
  ["circle", { cx: "8", cy: "12", r: "2", key: "1nvbw3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ToggleRight = createLucideIcon("ToggleRight", [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "6", ry: "6", key: "f2vt7d" }],
  ["circle", { cx: "16", cy: "12", r: "2", key: "4ma0v8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Toilet = createLucideIcon("Toilet", [
  [
    "path",
    {
      d: "M7 12h13a1 1 0 0 1 1 1 5 5 0 0 1-5 5h-.598a.5.5 0 0 0-.424.765l1.544 2.47a.5.5 0 0 1-.424.765H5.402a.5.5 0 0 1-.424-.765L7 18",
      key: "kc4kqr"
    }
  ],
  ["path", { d: "M8 18a5 5 0 0 1-5-5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8", key: "1tqs57" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tornado = createLucideIcon("Tornado", [
  ["path", { d: "M21 4H3", key: "1hwok0" }],
  ["path", { d: "M18 8H6", key: "41n648" }],
  ["path", { d: "M19 12H9", key: "1g4lpz" }],
  ["path", { d: "M16 16h-6", key: "1j5d54" }],
  ["path", { d: "M11 20H9", key: "39obr8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Torus = createLucideIcon("Torus", [
  ["ellipse", { cx: "12", cy: "11", rx: "3", ry: "2", key: "1b2qxu" }],
  ["ellipse", { cx: "12", cy: "12.5", rx: "10", ry: "8.5", key: "h8emeu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TouchpadOff = createLucideIcon("TouchpadOff", [
  ["path", { d: "M4 4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16", key: "lnt0bk" }],
  ["path", { d: "M2 14h12", key: "d8icqz" }],
  ["path", { d: "M22 14h-2", key: "jrx26d" }],
  ["path", { d: "M12 20v-6", key: "1rm09r" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M22 16V6a2 2 0 0 0-2-2H10", key: "11y8e4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Touchpad = createLucideIcon("Touchpad", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M12 20v-6", key: "1rm09r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TowerControl = createLucideIcon("TowerControl", [
  [
    "path",
    { d: "M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z", key: "1pledb" }
  ],
  ["path", { d: "M8 13v9", key: "hmv0ci" }],
  ["path", { d: "M16 22v-9", key: "ylnf1u" }],
  ["path", { d: "m9 6 1 7", key: "dpdgam" }],
  ["path", { d: "m15 6-1 7", key: "ls7zgu" }],
  ["path", { d: "M12 6V2", key: "1pj48d" }],
  ["path", { d: "M13 2h-2", key: "mj6ths" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ToyBrick = createLucideIcon("ToyBrick", [
  ["rect", { width: "18", height: "12", x: "3", y: "8", rx: "1", key: "158fvp" }],
  ["path", { d: "M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3", key: "s0042v" }],
  ["path", { d: "M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3", key: "9wmeh2" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tractor = createLucideIcon("Tractor", [
  ["path", { d: "m10 11 11 .9a1 1 0 0 1 .8 1.1l-.665 4.158a1 1 0 0 1-.988.842H20", key: "she1j9" }],
  ["path", { d: "M16 18h-5", key: "bq60fd" }],
  ["path", { d: "M18 5a1 1 0 0 0-1 1v5.573", key: "1kv8ia" }],
  ["path", { d: "M3 4h8.129a1 1 0 0 1 .99.863L13 11.246", key: "1q1ert" }],
  ["path", { d: "M4 11V4", key: "9ft8pt" }],
  ["path", { d: "M7 15h.01", key: "k5ht0j" }],
  ["path", { d: "M8 10.1V4", key: "1jgyzo" }],
  ["circle", { cx: "18", cy: "18", r: "2", key: "1emm8v" }],
  ["circle", { cx: "7", cy: "15", r: "5", key: "ddtuc" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrafficCone = createLucideIcon("TrafficCone", [
  ["path", { d: "M9.3 6.2a4.55 4.55 0 0 0 5.4 0", key: "flyxqv" }],
  ["path", { d: "M7.9 10.7c.9.8 2.4 1.3 4.1 1.3s3.2-.5 4.1-1.3", key: "1nlxxg" }],
  [
    "path",
    {
      d: "M13.9 3.5a1.93 1.93 0 0 0-3.8-.1l-3 10c-.1.2-.1.4-.1.6 0 1.7 2.2 3 5 3s5-1.3 5-3c0-.2 0-.4-.1-.5Z",
      key: "vz7x1l"
    }
  ],
  [
    "path",
    {
      d: "m7.5 12.2-4.7 2.7c-.5.3-.8.7-.8 1.1s.3.8.8 1.1l7.6 4.5c.9.5 2.1.5 3 0l7.6-4.5c.7-.3 1-.7 1-1.1s-.3-.8-.8-1.1l-4.7-2.8",
      key: "1xfzlw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrainFrontTunnel = createLucideIcon("TrainFrontTunnel", [
  ["path", { d: "M2 22V12a10 10 0 1 1 20 0v10", key: "o0fyp0" }],
  ["path", { d: "M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8", key: "m8q3n9" }],
  ["path", { d: "M10 15h.01", key: "44in9x" }],
  ["path", { d: "M14 15h.01", key: "5mohn5" }],
  ["path", { d: "M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z", key: "hckbmu" }],
  ["path", { d: "m9 19-2 3", key: "iij7hm" }],
  ["path", { d: "m15 19 2 3", key: "npx8sa" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrainFront = createLucideIcon("TrainFront", [
  ["path", { d: "M8 3.1V7a4 4 0 0 0 8 0V3.1", key: "1v71zp" }],
  ["path", { d: "m9 15-1-1", key: "1yrq24" }],
  ["path", { d: "m15 15 1-1", key: "1t0d6s" }],
  ["path", { d: "M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z", key: "1p0hjs" }],
  ["path", { d: "m8 19-2 3", key: "13i0xs" }],
  ["path", { d: "m16 19 2 3", key: "xo31yx" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrainTrack = createLucideIcon("TrainTrack", [
  ["path", { d: "M2 17 17 2", key: "18b09t" }],
  ["path", { d: "m2 14 8 8", key: "1gv9hu" }],
  ["path", { d: "m5 11 8 8", key: "189pqp" }],
  ["path", { d: "m8 8 8 8", key: "1imecy" }],
  ["path", { d: "m11 5 8 8", key: "ummqn6" }],
  ["path", { d: "m14 2 8 8", key: "1vk7dn" }],
  ["path", { d: "M7 22 22 7", key: "15mb1i" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TramFront = createLucideIcon("TramFront", [
  ["rect", { width: "16", height: "16", x: "4", y: "3", rx: "2", key: "1wxw4b" }],
  ["path", { d: "M4 11h16", key: "mpoxn0" }],
  ["path", { d: "M12 3v8", key: "1h2ygw" }],
  ["path", { d: "m8 19-2 3", key: "13i0xs" }],
  ["path", { d: "m18 22-2-3", key: "1p0ohu" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Trash2 = createLucideIcon("Trash2", [
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6", key: "4alrt4" }],
  ["path", { d: "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2", key: "v07s0e" }],
  ["line", { x1: "10", x2: "10", y1: "11", y2: "17", key: "1uufr5" }],
  ["line", { x1: "14", x2: "14", y1: "11", y2: "17", key: "xtxkd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Trash = createLucideIcon("Trash", [
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6", key: "4alrt4" }],
  ["path", { d: "M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2", key: "v07s0e" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TreeDeciduous = createLucideIcon("TreeDeciduous", [
  [
    "path",
    {
      d: "M8 19a4 4 0 0 1-2.24-7.32A3.5 3.5 0 0 1 9 6.03V6a3 3 0 1 1 6 0v.04a3.5 3.5 0 0 1 3.24 5.65A4 4 0 0 1 16 19Z",
      key: "oadzkq"
    }
  ],
  ["path", { d: "M12 19v3", key: "npa21l" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TreePalm = createLucideIcon("TreePalm", [
  ["path", { d: "M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4", key: "foxbe7" }],
  [
    "path",
    { d: "M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3", key: "18arnh" }
  ],
  [
    "path",
    {
      d: "M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35",
      key: "ywahnh"
    }
  ],
  ["path", { d: "M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14", key: "ft0feo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TreePine = createLucideIcon("TreePine", [
  [
    "path",
    {
      d: "m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z",
      key: "cpyugq"
    }
  ],
  ["path", { d: "M12 22v-3", key: "kmzjlo" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Trees = createLucideIcon("Trees", [
  ["path", { d: "M10 10v.2A3 3 0 0 1 8.9 16H5a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z", key: "1l6gj6" }],
  ["path", { d: "M7 16v6", key: "1a82de" }],
  ["path", { d: "M13 19v3", key: "13sx9i" }],
  [
    "path",
    {
      d: "M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5",
      key: "1sj9kv"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Trello = createLucideIcon("Trello", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["rect", { width: "3", height: "9", x: "7", y: "7", key: "14n3xi" }],
  ["rect", { width: "3", height: "5", x: "14", y: "7", key: "s4azjd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrendingDown = createLucideIcon("TrendingDown", [
  ["polyline", { points: "22 17 13.5 8.5 8.5 13.5 2 7", key: "1r2t7k" }],
  ["polyline", { points: "16 17 22 17 22 11", key: "11uiuu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrendingUpDown = createLucideIcon("TrendingUpDown", [
  ["path", { d: "M14.828 14.828 21 21", key: "ar5fw7" }],
  ["path", { d: "M21 16v5h-5", key: "1ck2sf" }],
  ["path", { d: "m21 3-9 9-4-4-6 6", key: "1h02xo" }],
  ["path", { d: "M21 8V3h-5", key: "1qoq8a" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TrendingUp = createLucideIcon("TrendingUp", [
  ["polyline", { points: "22 7 13.5 15.5 8.5 10.5 2 17", key: "126l90" }],
  ["polyline", { points: "16 7 22 7 22 13", key: "kwv8wd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TriangleAlert = createLucideIcon("TriangleAlert", [
  [
    "path",
    {
      d: "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",
      key: "wmoenq"
    }
  ],
  ["path", { d: "M12 9v4", key: "juzpu7" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TriangleRight = createLucideIcon("TriangleRight", [
  [
    "path",
    {
      d: "M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z",
      key: "183wce"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Triangle = createLucideIcon("Triangle", [
  [
    "path",
    { d: "M13.73 4a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z", key: "14u9p9" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Trophy = createLucideIcon("Trophy", [
  ["path", { d: "M6 9H4.5a2.5 2.5 0 0 1 0-5H6", key: "17hqa7" }],
  ["path", { d: "M18 9h1.5a2.5 2.5 0 0 0 0-5H18", key: "lmptdp" }],
  ["path", { d: "M4 22h16", key: "57wxv0" }],
  ["path", { d: "M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22", key: "1nw9bq" }],
  ["path", { d: "M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22", key: "1np0yb" }],
  ["path", { d: "M18 2H6v7a6 6 0 0 0 12 0V2Z", key: "u46fv3" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Truck = createLucideIcon("Truck", [
  ["path", { d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2", key: "wrbu53" }],
  ["path", { d: "M15 18H9", key: "1lyqi6" }],
  [
    "path",
    {
      d: "M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14",
      key: "lysw3i"
    }
  ],
  ["circle", { cx: "17", cy: "18", r: "2", key: "332jqn" }],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Turtle = createLucideIcon("Turtle", [
  [
    "path",
    {
      d: "m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z",
      key: "1lbbv7"
    }
  ],
  ["path", { d: "M4.82 7.9 8 10", key: "m9wose" }],
  ["path", { d: "M15.18 7.9 12 10", key: "p8dp2u" }],
  ["path", { d: "M16.93 10H20a2 2 0 0 1 0 4H2", key: "12nsm7" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TvMinimalPlay = createLucideIcon("TvMinimalPlay", [
  [
    "path",
    {
      d: "M10 7.75a.75.75 0 0 1 1.142-.638l3.664 2.249a.75.75 0 0 1 0 1.278l-3.664 2.25a.75.75 0 0 1-1.142-.64z",
      key: "1pctta"
    }
  ],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TvMinimal = createLucideIcon("TvMinimal", [
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Tv = createLucideIcon("Tv", [
  ["rect", { width: "20", height: "15", x: "2", y: "7", rx: "2", ry: "2", key: "10ag99" }],
  ["polyline", { points: "17 2 12 7 7 2", key: "11pgbg" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Twitch = createLucideIcon("Twitch", [
  ["path", { d: "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7", key: "c0yzno" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Twitter = createLucideIcon("Twitter", [
  [
    "path",
    {
      d: "M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z",
      key: "pff0z6"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const TypeOutline = createLucideIcon("TypeOutline", [
  [
    "path",
    {
      d: "M14 16.5a.5.5 0 0 0 .5.5h.5a2 2 0 0 1 0 4H9a2 2 0 0 1 0-4h.5a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V8a2 2 0 0 1-4 0V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v3a2 2 0 0 1-4 0v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5Z",
      key: "1reda3"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Type = createLucideIcon("Type", [
  ["polyline", { points: "4 7 4 4 20 4 20 7", key: "1nosan" }],
  ["line", { x1: "9", x2: "15", y1: "20", y2: "20", key: "swin9y" }],
  ["line", { x1: "12", x2: "12", y1: "4", y2: "20", key: "1tx1rr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UmbrellaOff = createLucideIcon("UmbrellaOff", [
  ["path", { d: "M12 2v1", key: "11qlp1" }],
  ["path", { d: "M15.5 21a1.85 1.85 0 0 1-3.5-1v-8H2a10 10 0 0 1 3.428-6.575", key: "eki10q" }],
  ["path", { d: "M17.5 12H22A10 10 0 0 0 9.004 3.455", key: "n2ayka" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Umbrella = createLucideIcon("Umbrella", [
  ["path", { d: "M22 12a10.06 10.06 1 0 0-20 0Z", key: "1teyop" }],
  ["path", { d: "M12 12v8a2 2 0 0 0 4 0", key: "ulpmoc" }],
  ["path", { d: "M12 2v1", key: "11qlp1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Underline = createLucideIcon("Underline", [
  ["path", { d: "M6 4v6a6 6 0 0 0 12 0V4", key: "9kb039" }],
  ["line", { x1: "4", x2: "20", y1: "20", y2: "20", key: "nun2al" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Undo2 = createLucideIcon("Undo2", [
  ["path", { d: "M9 14 4 9l5-5", key: "102s5s" }],
  ["path", { d: "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11", key: "f3b9sd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UndoDot = createLucideIcon("UndoDot", [
  ["path", { d: "M21 17a9 9 0 0 0-15-6.7L3 13", key: "8mp6z9" }],
  ["path", { d: "M3 7v6h6", key: "1v2h90" }],
  ["circle", { cx: "12", cy: "17", r: "1", key: "1ixnty" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Undo = createLucideIcon("Undo", [
  ["path", { d: "M3 7v6h6", key: "1v2h90" }],
  ["path", { d: "M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13", key: "1r6uu6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UnfoldHorizontal = createLucideIcon("UnfoldHorizontal", [
  ["path", { d: "M16 12h6", key: "15xry1" }],
  ["path", { d: "M8 12H2", key: "1jqql6" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m19 15 3-3-3-3", key: "wjy7rq" }],
  ["path", { d: "m5 9-3 3 3 3", key: "j64kie" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UnfoldVertical = createLucideIcon("UnfoldVertical", [
  ["path", { d: "M12 22v-6", key: "6o8u61" }],
  ["path", { d: "M12 8V2", key: "1wkif3" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }],
  ["path", { d: "m15 19-3 3-3-3", key: "11eu04" }],
  ["path", { d: "m15 5-3-3-3 3", key: "itvq4r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Ungroup = createLucideIcon("Ungroup", [
  ["rect", { width: "8", height: "6", x: "5", y: "4", rx: "1", key: "nzclkv" }],
  ["rect", { width: "8", height: "6", x: "11", y: "14", rx: "1", key: "4tytwb" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const University = createLucideIcon("University", [
  ["circle", { cx: "12", cy: "10", r: "1", key: "1gnqs8" }],
  ["path", { d: "M22 20V8h-4l-6-4-6 4H2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2", key: "1qj5sn" }],
  ["path", { d: "M6 17v.01", key: "roodi6" }],
  ["path", { d: "M6 13v.01", key: "67c122" }],
  ["path", { d: "M18 17v.01", key: "12ktxm" }],
  ["path", { d: "M18 13v.01", key: "tn1rt1" }],
  ["path", { d: "M14 22v-5a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5", key: "11g7fi" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Unlink2 = createLucideIcon("Unlink2", [
  ["path", { d: "M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2", key: "1re2ne" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Unlink = createLucideIcon("Unlink", [
  [
    "path",
    {
      d: "m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71",
      key: "yqzxt4"
    }
  ],
  [
    "path",
    {
      d: "m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71",
      key: "4qinb0"
    }
  ],
  ["line", { x1: "8", x2: "8", y1: "2", y2: "5", key: "1041cp" }],
  ["line", { x1: "2", x2: "5", y1: "8", y2: "8", key: "14m1p5" }],
  ["line", { x1: "16", x2: "16", y1: "19", y2: "22", key: "rzdirn" }],
  ["line", { x1: "19", x2: "22", y1: "16", y2: "16", key: "ox905f" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Unplug = createLucideIcon("Unplug", [
  ["path", { d: "m19 5 3-3", key: "yk6iyv" }],
  ["path", { d: "m2 22 3-3", key: "19mgm9" }],
  [
    "path",
    { d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z", key: "goz73y" }
  ],
  ["path", { d: "M7.5 13.5 10 11", key: "7xgeeb" }],
  ["path", { d: "M10.5 16.5 13 14", key: "10btkg" }],
  [
    "path",
    { d: "m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z", key: "1snsnr" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Upload = createLucideIcon("Upload", [
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }],
  ["polyline", { points: "17 8 12 3 7 8", key: "t8dd8p" }],
  ["line", { x1: "12", x2: "12", y1: "3", y2: "15", key: "widbto" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Usb = createLucideIcon("Usb", [
  ["circle", { cx: "10", cy: "7", r: "1", key: "dypaad" }],
  ["circle", { cx: "4", cy: "20", r: "1", key: "22iqad" }],
  ["path", { d: "M4.7 19.3 19 5", key: "1enqfc" }],
  ["path", { d: "m21 3-3 1 2 2Z", key: "d3ov82" }],
  ["path", { d: "M9.26 7.68 5 12l2 5", key: "1esawj" }],
  ["path", { d: "m10 14 5 2 3.5-3.5", key: "v8oal5" }],
  ["path", { d: "m18 12 1-1 1 1-1 1Z", key: "1bh22v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserCheck = createLucideIcon("UserCheck", [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["polyline", { points: "16 11 18 13 22 9", key: "1pwet4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserCog = createLucideIcon("UserCog", [
  ["circle", { cx: "18", cy: "15", r: "3", key: "gjjjvw" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["path", { d: "M10 15H6a4 4 0 0 0-4 4v2", key: "1nfge6" }],
  ["path", { d: "m21.7 16.4-.9-.3", key: "12j9ji" }],
  ["path", { d: "m15.2 13.9-.9-.3", key: "1fdjdi" }],
  ["path", { d: "m16.6 18.7.3-.9", key: "heedtr" }],
  ["path", { d: "m19.1 12.2.3-.9", key: "1af3ki" }],
  ["path", { d: "m19.6 18.7-.4-1", key: "1x9vze" }],
  ["path", { d: "m16.8 12.3-.4-1", key: "vqeiwj" }],
  ["path", { d: "m14.3 16.6 1-.4", key: "1qlj63" }],
  ["path", { d: "m20.7 13.8 1-.4", key: "1v5t8k" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserMinus = createLucideIcon("UserMinus", [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "22", x2: "16", y1: "11", y2: "11", key: "1shjgl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserPen = createLucideIcon("UserPen", [
  ["path", { d: "M11.5 15H7a4 4 0 0 0-4 4v2", key: "15lzij" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserPlus = createLucideIcon("UserPlus", [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "19", x2: "19", y1: "8", y2: "14", key: "1bvyxn" }],
  ["line", { x1: "22", x2: "16", y1: "11", y2: "11", key: "1shjgl" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundCheck = createLucideIcon("UserRoundCheck", [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundCog = createLucideIcon("UserRoundCog", [
  ["path", { d: "M2 21a8 8 0 0 1 10.434-7.62", key: "1yezr2" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["path", { d: "m19.5 14.3-.4.9", key: "1eb35c" }],
  ["path", { d: "m16.9 20.8-.4.9", key: "dfjc4z" }],
  ["path", { d: "m21.7 19.5-.9-.4", key: "q4dx6b" }],
  ["path", { d: "m15.2 16.9-.9-.4", key: "1r0w5f" }],
  ["path", { d: "m21.7 16.5-.9.4", key: "1knoei" }],
  ["path", { d: "m15.2 19.1-.9.4", key: "j188fs" }],
  ["path", { d: "m19.5 21.7-.4-.9", key: "1tonu5" }],
  ["path", { d: "m16.9 15.2-.4-.9", key: "699xu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundMinus = createLucideIcon("UserRoundMinus", [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M22 19h-6", key: "vcuq98" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundPen = createLucideIcon("UserRoundPen", [
  ["path", { d: "M2 21a8 8 0 0 1 10.821-7.487", key: "1c8h7z" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundPlus = createLucideIcon("UserRoundPlus", [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M22 19h-6", key: "vcuq98" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundSearch = createLucideIcon("UserRoundSearch", [
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M2 21a8 8 0 0 1 10.434-7.62", key: "1yezr2" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["path", { d: "m22 22-1.9-1.9", key: "1e5ubv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRoundX = createLucideIcon("UserRoundX", [
  ["path", { d: "M2 21a8 8 0 0 1 11.873-7", key: "74fkxq" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "m17 17 5 5", key: "p7ous7" }],
  ["path", { d: "m22 17-5 5", key: "gqnmv0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserRound = createLucideIcon("UserRound", [
  ["circle", { cx: "12", cy: "8", r: "5", key: "1hypcn" }],
  ["path", { d: "M20 21a8 8 0 0 0-16 0", key: "rfgkzh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserSearch = createLucideIcon("UserSearch", [
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }],
  ["path", { d: "M10.3 15H7a4 4 0 0 0-4 4v2", key: "3bnktk" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }],
  ["path", { d: "m21 21-1.9-1.9", key: "1g2n9r" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UserX = createLucideIcon("UserX", [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "17", x2: "22", y1: "8", y2: "13", key: "3nzzx3" }],
  ["line", { x1: "22", x2: "17", y1: "8", y2: "13", key: "1swrse" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const User = createLucideIcon("User", [
  ["path", { d: "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2", key: "975kel" }],
  ["circle", { cx: "12", cy: "7", r: "4", key: "17ys0d" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UsersRound = createLucideIcon("UsersRound", [
  ["path", { d: "M18 21a8 8 0 0 0-16 0", key: "3ypg7q" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3", key: "10s06x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Users = createLucideIcon("Users", [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["path", { d: "M22 21v-2a4 4 0 0 0-3-3.87", key: "kshegd" }],
  ["path", { d: "M16 3.13a4 4 0 0 1 0 7.75", key: "1da9ce" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UtensilsCrossed = createLucideIcon("UtensilsCrossed", [
  ["path", { d: "m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8", key: "n7qcjb" }],
  [
    "path",
    { d: "M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7", key: "d0u48b" }
  ],
  ["path", { d: "m2.1 21.8 6.4-6.3", key: "yn04lh" }],
  ["path", { d: "m19 5-7 7", key: "194lzd" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Utensils = createLucideIcon("Utensils", [
  ["path", { d: "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2", key: "cjf0a3" }],
  ["path", { d: "M7 2v20", key: "1473qp" }],
  ["path", { d: "M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7", key: "j28e5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const UtilityPole = createLucideIcon("UtilityPole", [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "M2 5h20", key: "1fs1ex" }],
  ["path", { d: "M3 3v2", key: "9imdir" }],
  ["path", { d: "M7 3v2", key: "n0os7" }],
  ["path", { d: "M17 3v2", key: "1l2re6" }],
  ["path", { d: "M21 3v2", key: "1duuac" }],
  ["path", { d: "m19 5-7 7-7-7", key: "133zxf" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Variable = createLucideIcon("Variable", [
  ["path", { d: "M8 21s-4-3-4-9 4-9 4-9", key: "uto9ud" }],
  ["path", { d: "M16 3s4 3 4 9-4 9-4 9", key: "4w2vsq" }],
  ["line", { x1: "15", x2: "9", y1: "9", y2: "15", key: "f7djnv" }],
  ["line", { x1: "9", x2: "15", y1: "9", y2: "15", key: "1shsy8" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Vault = createLucideIcon("Vault", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }],
  ["path", { d: "m7.9 7.9 2.7 2.7", key: "hpeyl3" }],
  ["circle", { cx: "16.5", cy: "7.5", r: ".5", fill: "currentColor", key: "w0ekpg" }],
  ["path", { d: "m13.4 10.6 2.7-2.7", key: "264c1n" }],
  ["circle", { cx: "7.5", cy: "16.5", r: ".5", fill: "currentColor", key: "nkw3mc" }],
  ["path", { d: "m7.9 16.1 2.7-2.7", key: "p81g5e" }],
  ["circle", { cx: "16.5", cy: "16.5", r: ".5", fill: "currentColor", key: "fubopw" }],
  ["path", { d: "m13.4 13.4 2.7 2.7", key: "abhel3" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Vegan = createLucideIcon("Vegan", [
  ["path", { d: "M16 8q6 0 6-6-6 0-6 6", key: "qsyyc4" }],
  ["path", { d: "M17.41 3.59a10 10 0 1 0 3 3", key: "41m9h7" }],
  ["path", { d: "M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14", key: "qiv7li" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const VenetianMask = createLucideIcon("VenetianMask", [
  ["path", { d: "M18 11c-1.5 0-2.5.5-3 2", key: "1fod00" }],
  [
    "path",
    {
      d: "M4 6a2 2 0 0 0-2 2v4a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V8a2 2 0 0 0-2-2h-3a8 8 0 0 0-5 2 8 8 0 0 0-5-2z",
      key: "d70hit"
    }
  ],
  ["path", { d: "M6 11c1.5 0 2.5.5 3 2", key: "136fht" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const VibrateOff = createLucideIcon("VibrateOff", [
  ["path", { d: "m2 8 2 2-2 2 2 2-2 2", key: "sv1b1" }],
  ["path", { d: "m22 8-2 2 2 2-2 2 2 2", key: "101i4y" }],
  ["path", { d: "M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2", key: "1hbad5" }],
  ["path", { d: "M16 10.34V6c0-.55-.45-1-1-1h-4.34", key: "1x5tf0" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Vibrate = createLucideIcon("Vibrate", [
  ["path", { d: "m2 8 2 2-2 2 2 2-2 2", key: "sv1b1" }],
  ["path", { d: "m22 8-2 2 2 2-2 2 2 2", key: "101i4y" }],
  ["rect", { width: "8", height: "14", x: "8", y: "5", rx: "1", key: "1oyrl4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const VideoOff = createLucideIcon("VideoOff", [
  [
    "path",
    { d: "M10.66 6H14a2 2 0 0 1 2 2v2.5l5.248-3.062A.5.5 0 0 1 22 7.87v8.196", key: "w8jjjt" }
  ],
  ["path", { d: "M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2", key: "1xawa7" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Video = createLucideIcon("Video", [
  [
    "path",
    {
      d: "m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5",
      key: "ftymec"
    }
  ],
  ["rect", { x: "2", y: "6", width: "14", height: "12", rx: "2", key: "158x01" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Videotape = createLucideIcon("Videotape", [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["circle", { cx: "8", cy: "14", r: "2", key: "1k2qr5" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["circle", { cx: "16", cy: "14", r: "2", key: "14k7lr" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const View = createLucideIcon("View", [
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2", key: "mrq65r" }],
  ["path", { d: "M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2", key: "be3xqs" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0",
      key: "11ak4c"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Voicemail = createLucideIcon("Voicemail", [
  ["circle", { cx: "6", cy: "12", r: "4", key: "1ehtga" }],
  ["circle", { cx: "18", cy: "12", r: "4", key: "4vafl8" }],
  ["line", { x1: "6", x2: "18", y1: "16", y2: "16", key: "pmt8us" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Volleyball = createLucideIcon("Volleyball", [
  ["path", { d: "M11.1 7.1a16.55 16.55 0 0 1 10.9 4", key: "2880wi" }],
  ["path", { d: "M12 12a12.6 12.6 0 0 1-8.7 5", key: "113sja" }],
  ["path", { d: "M16.8 13.6a16.55 16.55 0 0 1-9 7.5", key: "1qmsgl" }],
  ["path", { d: "M20.7 17a12.8 12.8 0 0 0-8.7-5 13.3 13.3 0 0 1 0-10", key: "1bmeqp" }],
  ["path", { d: "M6.3 3.8a16.55 16.55 0 0 0 1.9 11.5", key: "iekzv9" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Volume1 = createLucideIcon("Volume1", [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["path", { d: "M16 9a5 5 0 0 1 0 6", key: "1q6k2b" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Volume2 = createLucideIcon("Volume2", [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["path", { d: "M16 9a5 5 0 0 1 0 6", key: "1q6k2b" }],
  ["path", { d: "M19.364 18.364a9 9 0 0 0 0-12.728", key: "ijwkga" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const VolumeOff = createLucideIcon("VolumeOff", [
  ["path", { d: "M16 9a5 5 0 0 1 .95 2.293", key: "1fgyg8" }],
  ["path", { d: "M19.364 5.636a9 9 0 0 1 1.889 9.96", key: "l3zxae" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "m7 7-.587.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298V11",
      key: "1gbwow"
    }
  ],
  ["path", { d: "M9.828 4.172A.686.686 0 0 1 11 4.657v.686", key: "s2je0y" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const VolumeX = createLucideIcon("VolumeX", [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["line", { x1: "22", x2: "16", y1: "9", y2: "15", key: "1ewh16" }],
  ["line", { x1: "16", x2: "22", y1: "9", y2: "15", key: "5ykzw1" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Volume = createLucideIcon("Volume", [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Vote = createLucideIcon("Vote", [
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }],
  ["path", { d: "M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z", key: "1ezoue" }],
  ["path", { d: "M22 19H2", key: "nuriw5" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WalletCards = createLucideIcon("WalletCards", [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2", key: "4125el" }],
  [
    "path",
    {
      d: "M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21",
      key: "1dpki6"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WalletMinimal = createLucideIcon("WalletMinimal", [
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  [
    "path",
    {
      d: "M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14",
      key: "u1rqew"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wallet = createLucideIcon("Wallet", [
  [
    "path",
    {
      d: "M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1",
      key: "18etb6"
    }
  ],
  ["path", { d: "M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4", key: "xoc0q4" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wallpaper = createLucideIcon("Wallpaper", [
  ["circle", { cx: "8", cy: "9", r: "2", key: "gjzl9d" }],
  [
    "path",
    {
      d: "m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2",
      key: "69xh40"
    }
  ],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WandSparkles = createLucideIcon("WandSparkles", [
  [
    "path",
    {
      d: "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72",
      key: "ul74o6"
    }
  ],
  ["path", { d: "m14 7 3 3", key: "1r5n42" }],
  ["path", { d: "M5 6v4", key: "ilb8ba" }],
  ["path", { d: "M19 14v4", key: "blhpug" }],
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M7 8H3", key: "zfb6yr" }],
  ["path", { d: "M21 16h-4", key: "1cnmox" }],
  ["path", { d: "M11 3H9", key: "1obp7u" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wand = createLucideIcon("Wand", [
  ["path", { d: "M15 4V2", key: "z1p9b7" }],
  ["path", { d: "M15 16v-2", key: "px0unx" }],
  ["path", { d: "M8 9h2", key: "1g203m" }],
  ["path", { d: "M20 9h2", key: "19tzq7" }],
  ["path", { d: "M17.8 11.8 19 13", key: "yihg8r" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }],
  ["path", { d: "M17.8 6.2 19 5", key: "fd4us0" }],
  ["path", { d: "m3 21 9-9", key: "1jfql5" }],
  ["path", { d: "M12.2 6.2 11 5", key: "i3da3b" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Warehouse = createLucideIcon("Warehouse", [
  [
    "path",
    {
      d: "M22 8.35V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8.35A2 2 0 0 1 3.26 6.5l8-3.2a2 2 0 0 1 1.48 0l8 3.2A2 2 0 0 1 22 8.35Z",
      key: "gksnxg"
    }
  ],
  ["path", { d: "M6 18h12", key: "9pbo8z" }],
  ["path", { d: "M6 14h12", key: "4cwo0f" }],
  ["rect", { width: "12", height: "12", x: "6", y: "10", key: "apd30q" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WashingMachine = createLucideIcon("WashingMachine", [
  ["path", { d: "M3 6h3", key: "155dbl" }],
  ["path", { d: "M17 6h.01", key: "e2y6kg" }],
  ["rect", { width: "18", height: "20", x: "3", y: "2", rx: "2", key: "od3kk9" }],
  ["circle", { cx: "12", cy: "13", r: "5", key: "nlbqau" }],
  ["path", { d: "M12 18a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 1 0-5", key: "17lach" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Watch = createLucideIcon("Watch", [
  ["circle", { cx: "12", cy: "12", r: "6", key: "1vlfrh" }],
  ["polyline", { points: "12 10 12 12 13 13", key: "19dquz" }],
  [
    "path",
    { d: "m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05", key: "18k57s" }
  ],
  ["path", { d: "m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05", key: "16ny36" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Waves = createLucideIcon("Waves", [
  [
    "path",
    {
      d: "M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "knzxuh"
    }
  ],
  [
    "path",
    {
      d: "M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "2jd2cc"
    }
  ],
  [
    "path",
    {
      d: "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "rd2r6e"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Waypoints = createLucideIcon("Waypoints", [
  ["circle", { cx: "12", cy: "4.5", r: "2.5", key: "r5ysbb" }],
  ["path", { d: "m10.2 6.3-3.9 3.9", key: "1nzqf6" }],
  ["circle", { cx: "4.5", cy: "12", r: "2.5", key: "jydg6v" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["circle", { cx: "19.5", cy: "12", r: "2.5", key: "1piiel" }],
  ["path", { d: "m13.8 17.7 3.9-3.9", key: "1wyg1y" }],
  ["circle", { cx: "12", cy: "19.5", r: "2.5", key: "13o1pw" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Webcam = createLucideIcon("Webcam", [
  ["circle", { cx: "12", cy: "10", r: "8", key: "1gshiw" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 22h10", key: "10w4w3" }],
  ["path", { d: "M12 22v-4", key: "1utk9m" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WebhookOff = createLucideIcon("WebhookOff", [
  ["path", { d: "M17 17h-5c-1.09-.02-1.94.92-2.5 1.9A3 3 0 1 1 2.57 15", key: "1tvl6x" }],
  ["path", { d: "M9 3.4a4 4 0 0 1 6.52.66", key: "q04jfq" }],
  ["path", { d: "m6 17 3.1-5.8a2.5 2.5 0 0 0 .057-2.05", key: "azowf0" }],
  ["path", { d: "M20.3 20.3a4 4 0 0 1-2.3.7", key: "5joiws" }],
  ["path", { d: "M18.6 13a4 4 0 0 1 3.357 3.414", key: "cangb8" }],
  ["path", { d: "m12 6 .6 1", key: "tpjl1n" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Webhook = createLucideIcon("Webhook", [
  [
    "path",
    {
      d: "M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2",
      key: "q3hayz"
    }
  ],
  ["path", { d: "m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06", key: "1go1hn" }],
  ["path", { d: "m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8", key: "qlwsc0" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Weight = createLucideIcon("Weight", [
  ["circle", { cx: "12", cy: "5", r: "3", key: "rqqgnr" }],
  [
    "path",
    {
      d: "M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z",
      key: "56o5sh"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WheatOff = createLucideIcon("WheatOff", [
  ["path", { d: "m2 22 10-10", key: "28ilpk" }],
  ["path", { d: "m16 8-1.17 1.17", key: "1qqm82" }],
  [
    "path",
    {
      d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1rdhi6"
    }
  ],
  [
    "path",
    { d: "m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97", key: "4wz8re" }
  ],
  [
    "path",
    { d: "M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62", key: "rves66" }
  ],
  ["path", { d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z", key: "19rau1" }],
  [
    "path",
    {
      d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "tc8ph9"
    }
  ],
  [
    "path",
    {
      d: "m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98",
      key: "ak46r"
    }
  ],
  [
    "path",
    {
      d: "M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28",
      key: "1tw520"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wheat = createLucideIcon("Wheat", [
  ["path", { d: "M2 22 16 8", key: "60hf96" }],
  [
    "path",
    {
      d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1rdhi6"
    }
  ],
  [
    "path",
    {
      d: "M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1sdzmb"
    }
  ],
  [
    "path",
    {
      d: "M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "eoatbi"
    }
  ],
  ["path", { d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z", key: "19rau1" }],
  [
    "path",
    {
      d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "tc8ph9"
    }
  ],
  [
    "path",
    {
      d: "M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "2m8kc5"
    }
  ],
  [
    "path",
    {
      d: "M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "vex3ng"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WholeWord = createLucideIcon("WholeWord", [
  ["circle", { cx: "7", cy: "12", r: "3", key: "12clwm" }],
  ["path", { d: "M10 9v6", key: "17i7lo" }],
  ["circle", { cx: "17", cy: "12", r: "3", key: "gl7c2s" }],
  ["path", { d: "M14 7v8", key: "dl84cr" }],
  ["path", { d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1", key: "lt2kga" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WifiHigh = createLucideIcon("WifiHigh", [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 14 0", key: "1x1e6c" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WifiLow = createLucideIcon("WifiLow", [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WifiOff = createLucideIcon("WifiOff", [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 5.17-2.69", key: "1dl1wf" }],
  ["path", { d: "M19 12.859a10 10 0 0 0-2.007-1.523", key: "4k23kn" }],
  ["path", { d: "M2 8.82a15 15 0 0 1 4.177-2.643", key: "1grhjp" }],
  ["path", { d: "M22 8.82a15 15 0 0 0-11.288-3.764", key: "z3jwby" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WifiZero = createLucideIcon("WifiZero", [["path", { d: "M12 20h.01", key: "zekei9" }]]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wifi = createLucideIcon("Wifi", [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M2 8.82a15 15 0 0 1 20 0", key: "dnpr2z" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 14 0", key: "1x1e6c" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WindArrowDown = createLucideIcon("WindArrowDown", [
  ["path", { d: "M10 2v8", key: "d4bbey" }],
  ["path", { d: "M12.8 21.6A2 2 0 1 0 14 18H2", key: "19kp1d" }],
  ["path", { d: "M17.5 10a2.5 2.5 0 1 1 2 4H2", key: "19kpjc" }],
  ["path", { d: "m6 6 4 4 4-4", key: "k13n16" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wind = createLucideIcon("Wind", [
  ["path", { d: "M12.8 19.6A2 2 0 1 0 14 16H2", key: "148xed" }],
  ["path", { d: "M17.5 8a2.5 2.5 0 1 1 2 4H2", key: "1u4tom" }],
  ["path", { d: "M9.8 4.4A2 2 0 1 1 11 8H2", key: "75valh" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WineOff = createLucideIcon("WineOff", [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M7 10h3m7 0h-1.343", key: "v48bem" }],
  ["path", { d: "M12 15v7", key: "t2xh3l" }],
  [
    "path",
    {
      d: "M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198",
      key: "1ymjlu"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wine = createLucideIcon("Wine", [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M12 15v7", key: "t2xh3l" }],
  [
    "path",
    { d: "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z", key: "10ffi3" }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Workflow = createLucideIcon("Workflow", [
  ["rect", { width: "8", height: "8", x: "3", y: "3", rx: "2", key: "by2w9f" }],
  ["path", { d: "M7 11v4a2 2 0 0 0 2 2h4", key: "xkn7yn" }],
  ["rect", { width: "8", height: "8", x: "13", y: "13", rx: "2", key: "1cgmvn" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Worm = createLucideIcon("Worm", [
  ["path", { d: "m19 12-1.5 3", key: "9bcu4o" }],
  ["path", { d: "M19.63 18.81 22 20", key: "121v98" }],
  [
    "path",
    {
      d: "M6.47 8.23a1.68 1.68 0 0 1 2.44 1.93l-.64 2.08a6.76 6.76 0 0 0 10.16 7.67l.42-.27a1 1 0 1 0-2.73-4.21l-.42.27a1.76 1.76 0 0 1-2.63-1.99l.64-2.08A6.66 6.66 0 0 0 3.94 3.9l-.7.4a1 1 0 1 0 2.55 4.34z",
      key: "1tij6q"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const WrapText = createLucideIcon("WrapText", [
  ["line", { x1: "3", x2: "21", y1: "6", y2: "6", key: "4m8b97" }],
  ["path", { d: "M3 12h15a3 3 0 1 1 0 6h-4", key: "1cl7v7" }],
  ["polyline", { points: "16 16 14 18 16 20", key: "1jznyi" }],
  ["line", { x1: "3", x2: "10", y1: "18", y2: "18", key: "1h33wv" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Wrench = createLucideIcon("Wrench", [
  [
    "path",
    {
      d: "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z",
      key: "cbrjhi"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const X = createLucideIcon("X", [
  ["path", { d: "M18 6 6 18", key: "1bl5f8" }],
  ["path", { d: "m6 6 12 12", key: "d8bk6v" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Youtube = createLucideIcon("Youtube", [
  [
    "path",
    {
      d: "M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17",
      key: "1q2vi4"
    }
  ],
  ["path", { d: "m10 15 5-3-5-3z", key: "1jp15x" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ZapOff = createLucideIcon("ZapOff", [
  ["path", { d: "M10.513 4.856 13.12 2.17a.5.5 0 0 1 .86.46l-1.377 4.317", key: "193nxd" }],
  ["path", { d: "M15.656 10H20a1 1 0 0 1 .78 1.63l-1.72 1.773", key: "27a7lr" }],
  [
    "path",
    {
      d: "M16.273 16.273 10.88 21.83a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14H4a1 1 0 0 1-.78-1.63l4.507-4.643",
      key: "1e0qe9"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const Zap = createLucideIcon("Zap", [
  [
    "path",
    {
      d: "M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",
      key: "1xq2db"
    }
  ]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ZoomIn = createLucideIcon("ZoomIn", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["line", { x1: "21", x2: "16.65", y1: "21", y2: "16.65", key: "13gj7c" }],
  ["line", { x1: "11", x2: "11", y1: "8", y2: "14", key: "1vmskp" }],
  ["line", { x1: "8", x2: "14", y1: "11", y2: "11", key: "durymu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */


const ZoomOut = createLucideIcon("ZoomOut", [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["line", { x1: "21", x2: "16.65", y1: "21", y2: "16.65", key: "13gj7c" }],
  ["line", { x1: "8", x2: "14", y1: "11", y2: "11", key: "durymu" }]
]);

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */

var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    AArrowDown: AArrowDown,
    AArrowUp: AArrowUp,
    ALargeSmall: ALargeSmall,
    Accessibility: Accessibility,
    Activity: Activity,
    AirVent: AirVent,
    Airplay: Airplay,
    AlarmClock: AlarmClock,
    AlarmClockCheck: AlarmClockCheck,
    AlarmClockMinus: AlarmClockMinus,
    AlarmClockOff: AlarmClockOff,
    AlarmClockPlus: AlarmClockPlus,
    AlarmSmoke: AlarmSmoke,
    Album: Album,
    AlignCenter: AlignCenter,
    AlignCenterHorizontal: AlignCenterHorizontal,
    AlignCenterVertical: AlignCenterVertical,
    AlignEndHorizontal: AlignEndHorizontal,
    AlignEndVertical: AlignEndVertical,
    AlignHorizontalDistributeCenter: AlignHorizontalDistributeCenter,
    AlignHorizontalDistributeEnd: AlignHorizontalDistributeEnd,
    AlignHorizontalDistributeStart: AlignHorizontalDistributeStart,
    AlignHorizontalJustifyCenter: AlignHorizontalJustifyCenter,
    AlignHorizontalJustifyEnd: AlignHorizontalJustifyEnd,
    AlignHorizontalJustifyStart: AlignHorizontalJustifyStart,
    AlignHorizontalSpaceAround: AlignHorizontalSpaceAround,
    AlignHorizontalSpaceBetween: AlignHorizontalSpaceBetween,
    AlignJustify: AlignJustify,
    AlignLeft: AlignLeft,
    AlignRight: AlignRight,
    AlignStartHorizontal: AlignStartHorizontal,
    AlignStartVertical: AlignStartVertical,
    AlignVerticalDistributeCenter: AlignVerticalDistributeCenter,
    AlignVerticalDistributeEnd: AlignVerticalDistributeEnd,
    AlignVerticalDistributeStart: AlignVerticalDistributeStart,
    AlignVerticalJustifyCenter: AlignVerticalJustifyCenter,
    AlignVerticalJustifyEnd: AlignVerticalJustifyEnd,
    AlignVerticalJustifyStart: AlignVerticalJustifyStart,
    AlignVerticalSpaceAround: AlignVerticalSpaceAround,
    AlignVerticalSpaceBetween: AlignVerticalSpaceBetween,
    Ambulance: Ambulance,
    Ampersand: Ampersand,
    Ampersands: Ampersands,
    Amphora: Amphora,
    Anchor: Anchor,
    Angry: Angry,
    Annoyed: Annoyed,
    Antenna: Antenna,
    Anvil: Anvil,
    Aperture: Aperture,
    AppWindow: AppWindow,
    AppWindowMac: AppWindowMac,
    Apple: Apple,
    Archive: Archive,
    ArchiveRestore: ArchiveRestore,
    ArchiveX: ArchiveX,
    Armchair: Armchair,
    ArrowBigDown: ArrowBigDown,
    ArrowBigDownDash: ArrowBigDownDash,
    ArrowBigLeft: ArrowBigLeft,
    ArrowBigLeftDash: ArrowBigLeftDash,
    ArrowBigRight: ArrowBigRight,
    ArrowBigRightDash: ArrowBigRightDash,
    ArrowBigUp: ArrowBigUp,
    ArrowBigUpDash: ArrowBigUpDash,
    ArrowDown: ArrowDown,
    ArrowDown01: ArrowDown01,
    ArrowDown10: ArrowDown10,
    ArrowDownAZ: ArrowDownAZ,
    ArrowDownFromLine: ArrowDownFromLine,
    ArrowDownLeft: ArrowDownLeft,
    ArrowDownNarrowWide: ArrowDownNarrowWide,
    ArrowDownRight: ArrowDownRight,
    ArrowDownToDot: ArrowDownToDot,
    ArrowDownToLine: ArrowDownToLine,
    ArrowDownUp: ArrowDownUp,
    ArrowDownWideNarrow: ArrowDownWideNarrow,
    ArrowDownZA: ArrowDownZA,
    ArrowLeft: ArrowLeft,
    ArrowLeftFromLine: ArrowLeftFromLine,
    ArrowLeftRight: ArrowLeftRight,
    ArrowLeftToLine: ArrowLeftToLine,
    ArrowRight: ArrowRight,
    ArrowRightFromLine: ArrowRightFromLine,
    ArrowRightLeft: ArrowRightLeft,
    ArrowRightToLine: ArrowRightToLine,
    ArrowUp: ArrowUp,
    ArrowUp01: ArrowUp01,
    ArrowUp10: ArrowUp10,
    ArrowUpAZ: ArrowUpAZ,
    ArrowUpDown: ArrowUpDown,
    ArrowUpFromDot: ArrowUpFromDot,
    ArrowUpFromLine: ArrowUpFromLine,
    ArrowUpLeft: ArrowUpLeft,
    ArrowUpNarrowWide: ArrowUpNarrowWide,
    ArrowUpRight: ArrowUpRight,
    ArrowUpToLine: ArrowUpToLine,
    ArrowUpWideNarrow: ArrowUpWideNarrow,
    ArrowUpZA: ArrowUpZA,
    ArrowsUpFromLine: ArrowsUpFromLine,
    Asterisk: Asterisk,
    AtSign: AtSign,
    Atom: Atom,
    AudioLines: AudioLines,
    AudioWaveform: AudioWaveform,
    Award: Award,
    Axe: Axe,
    Axis3d: Axis3d,
    Baby: Baby,
    Backpack: Backpack,
    Badge: Badge$1,
    BadgeAlert: BadgeAlert,
    BadgeCent: BadgeCent,
    BadgeCheck: BadgeCheck,
    BadgeDollarSign: BadgeDollarSign,
    BadgeEuro: BadgeEuro,
    BadgeHelp: BadgeHelp,
    BadgeIndianRupee: BadgeIndianRupee,
    BadgeInfo: BadgeInfo,
    BadgeJapaneseYen: BadgeJapaneseYen,
    BadgeMinus: BadgeMinus,
    BadgePercent: BadgePercent,
    BadgePlus: BadgePlus,
    BadgePoundSterling: BadgePoundSterling,
    BadgeRussianRuble: BadgeRussianRuble,
    BadgeSwissFranc: BadgeSwissFranc,
    BadgeX: BadgeX,
    BaggageClaim: BaggageClaim,
    Ban: Ban,
    Banana: Banana,
    Bandage: Bandage,
    Banknote: Banknote,
    Barcode: Barcode,
    Baseline: Baseline,
    Bath: Bath,
    Battery: Battery,
    BatteryCharging: BatteryCharging,
    BatteryFull: BatteryFull,
    BatteryLow: BatteryLow,
    BatteryMedium: BatteryMedium,
    BatteryWarning: BatteryWarning,
    Beaker: Beaker,
    Bean: Bean,
    BeanOff: BeanOff,
    Bed: Bed,
    BedDouble: BedDouble,
    BedSingle: BedSingle,
    Beef: Beef,
    Beer: Beer,
    BeerOff: BeerOff,
    Bell: Bell,
    BellDot: BellDot,
    BellElectric: BellElectric,
    BellMinus: BellMinus,
    BellOff: BellOff,
    BellPlus: BellPlus,
    BellRing: BellRing,
    BetweenHorizontalEnd: BetweenHorizontalEnd,
    BetweenHorizontalStart: BetweenHorizontalStart,
    BetweenVerticalEnd: BetweenVerticalEnd,
    BetweenVerticalStart: BetweenVerticalStart,
    BicepsFlexed: BicepsFlexed,
    Bike: Bike,
    Binary: Binary,
    Binoculars: Binoculars,
    Biohazard: Biohazard,
    Bird: Bird,
    Bitcoin: Bitcoin,
    Blend: Blend,
    Blinds: Blinds,
    Blocks: Blocks,
    Bluetooth: Bluetooth,
    BluetoothConnected: BluetoothConnected,
    BluetoothOff: BluetoothOff,
    BluetoothSearching: BluetoothSearching,
    Bold: Bold,
    Bolt: Bolt,
    Bomb: Bomb,
    Bone: Bone,
    Book: Book,
    BookA: BookA,
    BookAudio: BookAudio,
    BookCheck: BookCheck,
    BookCopy: BookCopy,
    BookDashed: BookDashed,
    BookDown: BookDown,
    BookHeadphones: BookHeadphones,
    BookHeart: BookHeart,
    BookImage: BookImage,
    BookKey: BookKey,
    BookLock: BookLock,
    BookMarked: BookMarked,
    BookMinus: BookMinus,
    BookOpen: BookOpen,
    BookOpenCheck: BookOpenCheck,
    BookOpenText: BookOpenText,
    BookPlus: BookPlus,
    BookText: BookText,
    BookType: BookType,
    BookUp: BookUp,
    BookUp2: BookUp2,
    BookUser: BookUser,
    BookX: BookX,
    Bookmark: Bookmark,
    BookmarkCheck: BookmarkCheck,
    BookmarkMinus: BookmarkMinus,
    BookmarkPlus: BookmarkPlus,
    BookmarkX: BookmarkX,
    BoomBox: BoomBox,
    Bot: Bot,
    BotMessageSquare: BotMessageSquare,
    BotOff: BotOff,
    Box: Box,
    Boxes: Boxes,
    Braces: Braces,
    Brackets: Brackets,
    Brain: Brain,
    BrainCircuit: BrainCircuit,
    BrainCog: BrainCog,
    BrickWall: BrickWall,
    Briefcase: Briefcase,
    BriefcaseBusiness: BriefcaseBusiness,
    BriefcaseConveyorBelt: BriefcaseConveyorBelt,
    BriefcaseMedical: BriefcaseMedical,
    BringToFront: BringToFront,
    Brush: Brush,
    Bug: Bug,
    BugOff: BugOff,
    BugPlay: BugPlay,
    Building: Building,
    Building2: Building2,
    Bus: Bus,
    BusFront: BusFront,
    Cable: Cable,
    CableCar: CableCar,
    Cake: Cake,
    CakeSlice: CakeSlice,
    Calculator: Calculator,
    Calendar: Calendar$1,
    Calendar1: Calendar1,
    CalendarArrowDown: CalendarArrowDown,
    CalendarArrowUp: CalendarArrowUp,
    CalendarCheck: CalendarCheck,
    CalendarCheck2: CalendarCheck2,
    CalendarClock: CalendarClock,
    CalendarCog: CalendarCog,
    CalendarDays: CalendarDays,
    CalendarFold: CalendarFold,
    CalendarHeart: CalendarHeart,
    CalendarMinus: CalendarMinus,
    CalendarMinus2: CalendarMinus2,
    CalendarOff: CalendarOff,
    CalendarPlus: CalendarPlus,
    CalendarPlus2: CalendarPlus2,
    CalendarRange: CalendarRange,
    CalendarSearch: CalendarSearch,
    CalendarSync: CalendarSync,
    CalendarX: CalendarX,
    CalendarX2: CalendarX2,
    Camera: Camera,
    CameraOff: CameraOff,
    Candy: Candy,
    CandyCane: CandyCane,
    CandyOff: CandyOff,
    Cannabis: Cannabis,
    Captions: Captions,
    CaptionsOff: CaptionsOff,
    Car: Car,
    CarFront: CarFront,
    CarTaxiFront: CarTaxiFront,
    Caravan: Caravan,
    Carrot: Carrot,
    CaseLower: CaseLower,
    CaseSensitive: CaseSensitive,
    CaseUpper: CaseUpper,
    CassetteTape: CassetteTape,
    Cast: Cast,
    Castle: Castle,
    Cat: Cat,
    Cctv: Cctv,
    ChartArea: ChartArea,
    ChartBar: ChartBar,
    ChartBarBig: ChartBarBig,
    ChartBarDecreasing: ChartBarDecreasing,
    ChartBarIncreasing: ChartBarIncreasing,
    ChartBarStacked: ChartBarStacked,
    ChartCandlestick: ChartCandlestick,
    ChartColumn: ChartColumn,
    ChartColumnBig: ChartColumnBig,
    ChartColumnDecreasing: ChartColumnDecreasing,
    ChartColumnIncreasing: ChartColumnIncreasing,
    ChartColumnStacked: ChartColumnStacked,
    ChartGantt: ChartGantt,
    ChartLine: ChartLine,
    ChartNetwork: ChartNetwork,
    ChartNoAxesColumn: ChartNoAxesColumn,
    ChartNoAxesColumnDecreasing: ChartNoAxesColumnDecreasing,
    ChartNoAxesColumnIncreasing: ChartNoAxesColumnIncreasing,
    ChartNoAxesCombined: ChartNoAxesCombined,
    ChartNoAxesGantt: ChartNoAxesGantt,
    ChartPie: ChartPie,
    ChartScatter: ChartScatter,
    ChartSpline: ChartSpline,
    Check: Check,
    CheckCheck: CheckCheck,
    ChefHat: ChefHat,
    Cherry: Cherry,
    ChevronDown: ChevronDown,
    ChevronFirst: ChevronFirst,
    ChevronLast: ChevronLast,
    ChevronLeft: ChevronLeft,
    ChevronRight: ChevronRight,
    ChevronUp: ChevronUp,
    ChevronsDown: ChevronsDown,
    ChevronsDownUp: ChevronsDownUp,
    ChevronsLeft: ChevronsLeft,
    ChevronsLeftRight: ChevronsLeftRight,
    ChevronsLeftRightEllipsis: ChevronsLeftRightEllipsis,
    ChevronsRight: ChevronsRight,
    ChevronsRightLeft: ChevronsRightLeft,
    ChevronsUp: ChevronsUp,
    ChevronsUpDown: ChevronsUpDown,
    Chrome: Chrome,
    Church: Church,
    Cigarette: Cigarette,
    CigaretteOff: CigaretteOff,
    Circle: Circle,
    CircleAlert: CircleAlert,
    CircleArrowDown: CircleArrowDown,
    CircleArrowLeft: CircleArrowLeft,
    CircleArrowOutDownLeft: CircleArrowOutDownLeft,
    CircleArrowOutDownRight: CircleArrowOutDownRight,
    CircleArrowOutUpLeft: CircleArrowOutUpLeft,
    CircleArrowOutUpRight: CircleArrowOutUpRight,
    CircleArrowRight: CircleArrowRight,
    CircleArrowUp: CircleArrowUp,
    CircleCheck: CircleCheck,
    CircleCheckBig: CircleCheckBig,
    CircleChevronDown: CircleChevronDown,
    CircleChevronLeft: CircleChevronLeft,
    CircleChevronRight: CircleChevronRight,
    CircleChevronUp: CircleChevronUp,
    CircleDashed: CircleDashed,
    CircleDivide: CircleDivide,
    CircleDollarSign: CircleDollarSign,
    CircleDot: CircleDot,
    CircleDotDashed: CircleDotDashed,
    CircleEllipsis: CircleEllipsis,
    CircleEqual: CircleEqual,
    CircleFadingArrowUp: CircleFadingArrowUp,
    CircleFadingPlus: CircleFadingPlus,
    CircleGauge: CircleGauge,
    CircleHelp: CircleHelp,
    CircleMinus: CircleMinus,
    CircleOff: CircleOff,
    CircleParking: CircleParking,
    CircleParkingOff: CircleParkingOff,
    CirclePause: CirclePause,
    CirclePercent: CirclePercent,
    CirclePlay: CirclePlay,
    CirclePlus: CirclePlus,
    CirclePower: CirclePower,
    CircleSlash: CircleSlash,
    CircleSlash2: CircleSlash2,
    CircleStop: CircleStop,
    CircleUser: CircleUser,
    CircleUserRound: CircleUserRound,
    CircleX: CircleX,
    CircuitBoard: CircuitBoard,
    Citrus: Citrus,
    Clapperboard: Clapperboard,
    Clipboard: Clipboard,
    ClipboardCheck: ClipboardCheck,
    ClipboardCopy: ClipboardCopy,
    ClipboardList: ClipboardList,
    ClipboardMinus: ClipboardMinus,
    ClipboardPaste: ClipboardPaste,
    ClipboardPen: ClipboardPen,
    ClipboardPenLine: ClipboardPenLine,
    ClipboardPlus: ClipboardPlus,
    ClipboardType: ClipboardType,
    ClipboardX: ClipboardX,
    Clock: Clock,
    Clock1: Clock1,
    Clock10: Clock10,
    Clock11: Clock11,
    Clock12: Clock12,
    Clock2: Clock2,
    Clock3: Clock3,
    Clock4: Clock4,
    Clock5: Clock5,
    Clock6: Clock6,
    Clock7: Clock7,
    Clock8: Clock8,
    Clock9: Clock9,
    ClockAlert: ClockAlert,
    ClockArrowDown: ClockArrowDown,
    ClockArrowUp: ClockArrowUp,
    Cloud: Cloud,
    CloudAlert: CloudAlert,
    CloudCog: CloudCog,
    CloudDownload: CloudDownload,
    CloudDrizzle: CloudDrizzle,
    CloudFog: CloudFog,
    CloudHail: CloudHail,
    CloudLightning: CloudLightning,
    CloudMoon: CloudMoon,
    CloudMoonRain: CloudMoonRain,
    CloudOff: CloudOff,
    CloudRain: CloudRain,
    CloudRainWind: CloudRainWind,
    CloudSnow: CloudSnow,
    CloudSun: CloudSun,
    CloudSunRain: CloudSunRain,
    CloudUpload: CloudUpload,
    Cloudy: Cloudy,
    Clover: Clover,
    Club: Club,
    Code: Code,
    CodeXml: CodeXml,
    Codepen: Codepen,
    Codesandbox: Codesandbox,
    Coffee: Coffee,
    Cog: Cog,
    Coins: Coins,
    Columns2: Columns2,
    Columns3: Columns3,
    Columns4: Columns4,
    Combine: Combine,
    Command: Command$1,
    Compass: Compass,
    Component: Component,
    Computer: Computer,
    ConciergeBell: ConciergeBell,
    Cone: Cone,
    Construction: Construction,
    Contact: Contact,
    ContactRound: ContactRound,
    Container: Container$1,
    Contrast: Contrast,
    Cookie: Cookie,
    CookingPot: CookingPot,
    Copy: Copy,
    CopyCheck: CopyCheck,
    CopyMinus: CopyMinus,
    CopyPlus: CopyPlus,
    CopySlash: CopySlash,
    CopyX: CopyX,
    Copyleft: Copyleft,
    Copyright: Copyright,
    CornerDownLeft: CornerDownLeft,
    CornerDownRight: CornerDownRight,
    CornerLeftDown: CornerLeftDown,
    CornerLeftUp: CornerLeftUp,
    CornerRightDown: CornerRightDown,
    CornerRightUp: CornerRightUp,
    CornerUpLeft: CornerUpLeft,
    CornerUpRight: CornerUpRight,
    Cpu: Cpu,
    CreativeCommons: CreativeCommons,
    CreditCard: CreditCard,
    Croissant: Croissant,
    Crop: Crop,
    Cross: Cross,
    Crosshair: Crosshair,
    Crown: Crown,
    Cuboid: Cuboid,
    CupSoda: CupSoda,
    Currency: Currency,
    Cylinder: Cylinder,
    Dam: Dam,
    Database: Database,
    DatabaseBackup: DatabaseBackup,
    DatabaseZap: DatabaseZap,
    Delete: Delete,
    Dessert: Dessert,
    Diameter: Diameter,
    Diamond: Diamond,
    DiamondMinus: DiamondMinus,
    DiamondPercent: DiamondPercent,
    DiamondPlus: DiamondPlus,
    Dice1: Dice1,
    Dice2: Dice2,
    Dice3: Dice3,
    Dice4: Dice4,
    Dice5: Dice5,
    Dice6: Dice6,
    Dices: Dices,
    Diff: Diff,
    Disc: Disc,
    Disc2: Disc2,
    Disc3: Disc3,
    DiscAlbum: DiscAlbum,
    Divide: Divide,
    Dna: Dna,
    DnaOff: DnaOff,
    Dock: Dock,
    Dog: Dog,
    DollarSign: DollarSign,
    Donut: Donut,
    DoorClosed: DoorClosed,
    DoorOpen: DoorOpen,
    Dot: Dot,
    Download: Download,
    DraftingCompass: DraftingCompass,
    Drama: Drama,
    Dribbble: Dribbble,
    Drill: Drill,
    Droplet: Droplet,
    Droplets: Droplets,
    Drum: Drum,
    Drumstick: Drumstick,
    Dumbbell: Dumbbell,
    Ear: Ear,
    EarOff: EarOff,
    Earth: Earth,
    EarthLock: EarthLock,
    Eclipse: Eclipse,
    Egg: Egg,
    EggFried: EggFried,
    EggOff: EggOff,
    Ellipsis: Ellipsis,
    EllipsisVertical: EllipsisVertical,
    Equal: Equal,
    EqualApproximately: EqualApproximately,
    EqualNot: EqualNot,
    Eraser: Eraser,
    EthernetPort: EthernetPort,
    Euro: Euro,
    Expand: Expand,
    ExternalLink: ExternalLink,
    Eye: Eye,
    EyeClosed: EyeClosed,
    EyeOff: EyeOff,
    Facebook: Facebook,
    Factory: Factory,
    Fan: Fan,
    FastForward: FastForward,
    Feather: Feather,
    Fence: Fence,
    FerrisWheel: FerrisWheel,
    Figma: Figma,
    File: File,
    FileArchive: FileArchive,
    FileAudio: FileAudio,
    FileAudio2: FileAudio2,
    FileAxis3d: FileAxis3d,
    FileBadge: FileBadge,
    FileBadge2: FileBadge2,
    FileBox: FileBox,
    FileChartColumn: FileChartColumn,
    FileChartColumnIncreasing: FileChartColumnIncreasing,
    FileChartLine: FileChartLine,
    FileChartPie: FileChartPie,
    FileCheck: FileCheck,
    FileCheck2: FileCheck2,
    FileClock: FileClock,
    FileCode: FileCode,
    FileCode2: FileCode2,
    FileCog: FileCog,
    FileDiff: FileDiff,
    FileDigit: FileDigit,
    FileDown: FileDown,
    FileHeart: FileHeart,
    FileImage: FileImage,
    FileInput: FileInput,
    FileJson: FileJson,
    FileJson2: FileJson2,
    FileKey: FileKey,
    FileKey2: FileKey2,
    FileLock: FileLock,
    FileLock2: FileLock2,
    FileMinus: FileMinus,
    FileMinus2: FileMinus2,
    FileMusic: FileMusic,
    FileOutput: FileOutput,
    FilePen: FilePen,
    FilePenLine: FilePenLine,
    FilePlus: FilePlus,
    FilePlus2: FilePlus2,
    FileQuestion: FileQuestion,
    FileScan: FileScan,
    FileSearch: FileSearch,
    FileSearch2: FileSearch2,
    FileSliders: FileSliders,
    FileSpreadsheet: FileSpreadsheet,
    FileStack: FileStack,
    FileSymlink: FileSymlink,
    FileTerminal: FileTerminal,
    FileText: FileText,
    FileType: FileType,
    FileType2: FileType2,
    FileUp: FileUp,
    FileUser: FileUser,
    FileVideo: FileVideo,
    FileVideo2: FileVideo2,
    FileVolume: FileVolume,
    FileVolume2: FileVolume2,
    FileWarning: FileWarning,
    FileX: FileX,
    FileX2: FileX2,
    Files: Files,
    Film: Film,
    Filter: Filter$1,
    FilterX: FilterX,
    Fingerprint: Fingerprint,
    FireExtinguisher: FireExtinguisher,
    Fish: Fish,
    FishOff: FishOff,
    FishSymbol: FishSymbol,
    Flag: Flag,
    FlagOff: FlagOff,
    FlagTriangleLeft: FlagTriangleLeft,
    FlagTriangleRight: FlagTriangleRight,
    Flame: Flame,
    FlameKindling: FlameKindling,
    Flashlight: Flashlight,
    FlashlightOff: FlashlightOff,
    FlaskConical: FlaskConical,
    FlaskConicalOff: FlaskConicalOff,
    FlaskRound: FlaskRound,
    FlipHorizontal: FlipHorizontal,
    FlipHorizontal2: FlipHorizontal2,
    FlipVertical: FlipVertical,
    FlipVertical2: FlipVertical2,
    Flower: Flower,
    Flower2: Flower2,
    Focus: Focus,
    FoldHorizontal: FoldHorizontal,
    FoldVertical: FoldVertical,
    Folder: Folder,
    FolderArchive: FolderArchive,
    FolderCheck: FolderCheck,
    FolderClock: FolderClock,
    FolderClosed: FolderClosed,
    FolderCode: FolderCode,
    FolderCog: FolderCog,
    FolderDot: FolderDot,
    FolderDown: FolderDown,
    FolderGit: FolderGit,
    FolderGit2: FolderGit2,
    FolderHeart: FolderHeart,
    FolderInput: FolderInput,
    FolderKanban: FolderKanban,
    FolderKey: FolderKey,
    FolderLock: FolderLock,
    FolderMinus: FolderMinus,
    FolderOpen: FolderOpen,
    FolderOpenDot: FolderOpenDot,
    FolderOutput: FolderOutput,
    FolderPen: FolderPen,
    FolderPlus: FolderPlus,
    FolderRoot: FolderRoot,
    FolderSearch: FolderSearch,
    FolderSearch2: FolderSearch2,
    FolderSymlink: FolderSymlink,
    FolderSync: FolderSync,
    FolderTree: FolderTree,
    FolderUp: FolderUp,
    FolderX: FolderX,
    Folders: Folders,
    Footprints: Footprints,
    Forklift: Forklift,
    Forward: Forward,
    Frame: Frame,
    Framer: Framer,
    Frown: Frown,
    Fuel: Fuel,
    Fullscreen: Fullscreen,
    GalleryHorizontal: GalleryHorizontal,
    GalleryHorizontalEnd: GalleryHorizontalEnd,
    GalleryThumbnails: GalleryThumbnails,
    GalleryVertical: GalleryVertical,
    GalleryVerticalEnd: GalleryVerticalEnd,
    Gamepad: Gamepad,
    Gamepad2: Gamepad2,
    Gauge: Gauge,
    Gavel: Gavel,
    Gem: Gem,
    Ghost: Ghost,
    Gift: Gift,
    GitBranch: GitBranch,
    GitBranchPlus: GitBranchPlus,
    GitCommitHorizontal: GitCommitHorizontal,
    GitCommitVertical: GitCommitVertical,
    GitCompare: GitCompare,
    GitCompareArrows: GitCompareArrows,
    GitFork: GitFork,
    GitGraph: GitGraph,
    GitMerge: GitMerge,
    GitPullRequest: GitPullRequest,
    GitPullRequestArrow: GitPullRequestArrow,
    GitPullRequestClosed: GitPullRequestClosed,
    GitPullRequestCreate: GitPullRequestCreate,
    GitPullRequestCreateArrow: GitPullRequestCreateArrow,
    GitPullRequestDraft: GitPullRequestDraft,
    Github: Github,
    Gitlab: Gitlab,
    GlassWater: GlassWater,
    Glasses: Glasses,
    Globe: Globe,
    GlobeLock: GlobeLock,
    Goal: Goal,
    Grab: Grab,
    GraduationCap: GraduationCap,
    Grape: Grape,
    Grid2x2: Grid2x2,
    Grid2x2Check: Grid2x2Check,
    Grid2x2Plus: Grid2x2Plus,
    Grid2x2X: Grid2x2X,
    Grid3x3: Grid3x3,
    Grip: Grip,
    GripHorizontal: GripHorizontal,
    GripVertical: GripVertical,
    Group: Group,
    Guitar: Guitar,
    Ham: Ham,
    Hammer: Hammer,
    Hand: Hand,
    HandCoins: HandCoins,
    HandHeart: HandHeart,
    HandHelping: HandHelping,
    HandMetal: HandMetal,
    HandPlatter: HandPlatter,
    Handshake: Handshake,
    HardDrive: HardDrive,
    HardDriveDownload: HardDriveDownload,
    HardDriveUpload: HardDriveUpload,
    HardHat: HardHat,
    Hash: Hash,
    Haze: Haze,
    HdmiPort: HdmiPort,
    Heading: Heading,
    Heading1: Heading1,
    Heading2: Heading2,
    Heading3: Heading3,
    Heading4: Heading4,
    Heading5: Heading5,
    Heading6: Heading6,
    HeadphoneOff: HeadphoneOff,
    Headphones: Headphones,
    Headset: Headset,
    Heart: Heart,
    HeartCrack: HeartCrack,
    HeartHandshake: HeartHandshake,
    HeartOff: HeartOff,
    HeartPulse: HeartPulse,
    Heater: Heater,
    Hexagon: Hexagon,
    Highlighter: Highlighter,
    History: History,
    Hop: Hop,
    HopOff: HopOff,
    Hospital: Hospital,
    Hotel: Hotel,
    Hourglass: Hourglass,
    House: House,
    HousePlug: HousePlug,
    HousePlus: HousePlus,
    IceCreamBowl: IceCreamBowl,
    IceCreamCone: IceCreamCone,
    IdCard: IdCard,
    Image: Image,
    ImageDown: ImageDown,
    ImageMinus: ImageMinus,
    ImageOff: ImageOff,
    ImagePlay: ImagePlay,
    ImagePlus: ImagePlus,
    ImageUp: ImageUp,
    ImageUpscale: ImageUpscale,
    Images: Images,
    Import: Import,
    Inbox: Inbox,
    IndentDecrease: IndentDecrease,
    IndentIncrease: IndentIncrease,
    IndianRupee: IndianRupee,
    Infinity: Infinity,
    Info: Info,
    InspectionPanel: InspectionPanel,
    Instagram: Instagram,
    Italic: Italic,
    IterationCcw: IterationCcw,
    IterationCw: IterationCw,
    JapaneseYen: JapaneseYen,
    Joystick: Joystick,
    Kanban: Kanban,
    Key: Key,
    KeyRound: KeyRound,
    KeySquare: KeySquare,
    Keyboard: Keyboard,
    KeyboardMusic: KeyboardMusic,
    KeyboardOff: KeyboardOff,
    Lamp: Lamp,
    LampCeiling: LampCeiling,
    LampDesk: LampDesk,
    LampFloor: LampFloor,
    LampWallDown: LampWallDown,
    LampWallUp: LampWallUp,
    LandPlot: LandPlot,
    Landmark: Landmark,
    Languages: Languages,
    Laptop: Laptop,
    LaptopMinimal: LaptopMinimal,
    LaptopMinimalCheck: LaptopMinimalCheck,
    Lasso: Lasso,
    LassoSelect: LassoSelect,
    Laugh: Laugh,
    Layers: Layers,
    Layers2: Layers2,
    Layers3: Layers3,
    LayoutDashboard: LayoutDashboard,
    LayoutGrid: LayoutGrid,
    LayoutList: LayoutList,
    LayoutPanelLeft: LayoutPanelLeft,
    LayoutPanelTop: LayoutPanelTop,
    LayoutTemplate: LayoutTemplate,
    Leaf: Leaf,
    LeafyGreen: LeafyGreen,
    Lectern: Lectern,
    LetterText: LetterText,
    Library: Library,
    LibraryBig: LibraryBig,
    LifeBuoy: LifeBuoy,
    Ligature: Ligature,
    Lightbulb: Lightbulb,
    LightbulbOff: LightbulbOff,
    Link: Link$1,
    Link2: Link2,
    Link2Off: Link2Off,
    Linkedin: Linkedin,
    List: List$1,
    ListCheck: ListCheck,
    ListChecks: ListChecks,
    ListCollapse: ListCollapse,
    ListEnd: ListEnd,
    ListFilter: ListFilter,
    ListMinus: ListMinus,
    ListMusic: ListMusic,
    ListOrdered: ListOrdered,
    ListPlus: ListPlus,
    ListRestart: ListRestart,
    ListStart: ListStart,
    ListTodo: ListTodo,
    ListTree: ListTree,
    ListVideo: ListVideo,
    ListX: ListX,
    Loader: Loader,
    LoaderCircle: LoaderCircle,
    LoaderPinwheel: LoaderPinwheel,
    Locate: Locate,
    LocateFixed: LocateFixed,
    LocateOff: LocateOff,
    Lock: Lock,
    LockKeyhole: LockKeyhole,
    LockKeyholeOpen: LockKeyholeOpen,
    LockOpen: LockOpen,
    LogIn: LogIn,
    LogOut: LogOut,
    Logs: Logs,
    Lollipop: Lollipop,
    Luggage: Luggage,
    Magnet: Magnet,
    Mail: Mail,
    MailCheck: MailCheck,
    MailMinus: MailMinus,
    MailOpen: MailOpen,
    MailPlus: MailPlus,
    MailQuestion: MailQuestion,
    MailSearch: MailSearch,
    MailWarning: MailWarning,
    MailX: MailX,
    Mailbox: Mailbox,
    Mails: Mails,
    Map: Map$1,
    MapPin: MapPin,
    MapPinCheck: MapPinCheck,
    MapPinCheckInside: MapPinCheckInside,
    MapPinHouse: MapPinHouse,
    MapPinMinus: MapPinMinus,
    MapPinMinusInside: MapPinMinusInside,
    MapPinOff: MapPinOff,
    MapPinPlus: MapPinPlus,
    MapPinPlusInside: MapPinPlusInside,
    MapPinX: MapPinX,
    MapPinXInside: MapPinXInside,
    MapPinned: MapPinned,
    Martini: Martini,
    Maximize: Maximize,
    Maximize2: Maximize2,
    Medal: Medal,
    Megaphone: Megaphone,
    MegaphoneOff: MegaphoneOff,
    Meh: Meh,
    MemoryStick: MemoryStick,
    Menu: Menu$1,
    Merge: Merge,
    MessageCircle: MessageCircle,
    MessageCircleCode: MessageCircleCode,
    MessageCircleDashed: MessageCircleDashed,
    MessageCircleHeart: MessageCircleHeart,
    MessageCircleMore: MessageCircleMore,
    MessageCircleOff: MessageCircleOff,
    MessageCirclePlus: MessageCirclePlus,
    MessageCircleQuestion: MessageCircleQuestion,
    MessageCircleReply: MessageCircleReply,
    MessageCircleWarning: MessageCircleWarning,
    MessageCircleX: MessageCircleX,
    MessageSquare: MessageSquare,
    MessageSquareCode: MessageSquareCode,
    MessageSquareDashed: MessageSquareDashed,
    MessageSquareDiff: MessageSquareDiff,
    MessageSquareDot: MessageSquareDot,
    MessageSquareHeart: MessageSquareHeart,
    MessageSquareLock: MessageSquareLock,
    MessageSquareMore: MessageSquareMore,
    MessageSquareOff: MessageSquareOff,
    MessageSquarePlus: MessageSquarePlus,
    MessageSquareQuote: MessageSquareQuote,
    MessageSquareReply: MessageSquareReply,
    MessageSquareShare: MessageSquareShare,
    MessageSquareText: MessageSquareText,
    MessageSquareWarning: MessageSquareWarning,
    MessageSquareX: MessageSquareX,
    MessagesSquare: MessagesSquare,
    Mic: Mic,
    MicOff: MicOff,
    MicVocal: MicVocal,
    Microchip: Microchip,
    Microscope: Microscope,
    Microwave: Microwave,
    Milestone: Milestone,
    Milk: Milk,
    MilkOff: MilkOff,
    Minimize: Minimize,
    Minimize2: Minimize2,
    Minus: Minus,
    Monitor: Monitor,
    MonitorCheck: MonitorCheck,
    MonitorCog: MonitorCog,
    MonitorDot: MonitorDot,
    MonitorDown: MonitorDown,
    MonitorOff: MonitorOff,
    MonitorPause: MonitorPause,
    MonitorPlay: MonitorPlay,
    MonitorSmartphone: MonitorSmartphone,
    MonitorSpeaker: MonitorSpeaker,
    MonitorStop: MonitorStop,
    MonitorUp: MonitorUp,
    MonitorX: MonitorX,
    Moon: Moon,
    MoonStar: MoonStar,
    Mountain: Mountain,
    MountainSnow: MountainSnow,
    Mouse: Mouse,
    MouseOff: MouseOff,
    MousePointer: MousePointer,
    MousePointer2: MousePointer2,
    MousePointerBan: MousePointerBan,
    MousePointerClick: MousePointerClick,
    Move: Move,
    Move3d: Move3d,
    MoveDiagonal: MoveDiagonal,
    MoveDiagonal2: MoveDiagonal2,
    MoveDown: MoveDown,
    MoveDownLeft: MoveDownLeft,
    MoveDownRight: MoveDownRight,
    MoveHorizontal: MoveHorizontal,
    MoveLeft: MoveLeft,
    MoveRight: MoveRight,
    MoveUp: MoveUp,
    MoveUpLeft: MoveUpLeft,
    MoveUpRight: MoveUpRight,
    MoveVertical: MoveVertical,
    Music: Music,
    Music2: Music2,
    Music3: Music3,
    Music4: Music4,
    Navigation: Navigation$1,
    Navigation2: Navigation2,
    Navigation2Off: Navigation2Off,
    NavigationOff: NavigationOff,
    Network: Network,
    Newspaper: Newspaper,
    Nfc: Nfc,
    Notebook: Notebook,
    NotebookPen: NotebookPen,
    NotebookTabs: NotebookTabs,
    NotebookText: NotebookText,
    NotepadText: NotepadText,
    NotepadTextDashed: NotepadTextDashed,
    Nut: Nut,
    NutOff: NutOff,
    Octagon: Octagon,
    OctagonAlert: OctagonAlert,
    OctagonMinus: OctagonMinus,
    OctagonPause: OctagonPause,
    OctagonX: OctagonX,
    Omega: Omega,
    Option: Option,
    Orbit: Orbit,
    Origami: Origami,
    Package: Package,
    Package2: Package2,
    PackageCheck: PackageCheck,
    PackageMinus: PackageMinus,
    PackageOpen: PackageOpen,
    PackagePlus: PackagePlus,
    PackageSearch: PackageSearch,
    PackageX: PackageX,
    PaintBucket: PaintBucket,
    PaintRoller: PaintRoller,
    Paintbrush: Paintbrush,
    PaintbrushVertical: PaintbrushVertical,
    Palette: Palette,
    PanelBottom: PanelBottom,
    PanelBottomClose: PanelBottomClose,
    PanelBottomDashed: PanelBottomDashed,
    PanelBottomOpen: PanelBottomOpen,
    PanelLeft: PanelLeft,
    PanelLeftClose: PanelLeftClose,
    PanelLeftDashed: PanelLeftDashed,
    PanelLeftOpen: PanelLeftOpen,
    PanelRight: PanelRight,
    PanelRightClose: PanelRightClose,
    PanelRightDashed: PanelRightDashed,
    PanelRightOpen: PanelRightOpen,
    PanelTop: PanelTop,
    PanelTopClose: PanelTopClose,
    PanelTopDashed: PanelTopDashed,
    PanelTopOpen: PanelTopOpen,
    PanelsLeftBottom: PanelsLeftBottom,
    PanelsRightBottom: PanelsRightBottom,
    PanelsTopLeft: PanelsTopLeft,
    Paperclip: Paperclip,
    Parentheses: Parentheses,
    ParkingMeter: ParkingMeter,
    PartyPopper: PartyPopper,
    Pause: Pause,
    PawPrint: PawPrint,
    PcCase: PcCase,
    Pen: Pen,
    PenLine: PenLine,
    PenOff: PenOff,
    PenTool: PenTool,
    Pencil: Pencil,
    PencilLine: PencilLine,
    PencilOff: PencilOff,
    PencilRuler: PencilRuler,
    Pentagon: Pentagon,
    Percent: Percent,
    PersonStanding: PersonStanding,
    PhilippinePeso: PhilippinePeso,
    Phone: Phone,
    PhoneCall: PhoneCall,
    PhoneForwarded: PhoneForwarded,
    PhoneIncoming: PhoneIncoming,
    PhoneMissed: PhoneMissed,
    PhoneOff: PhoneOff,
    PhoneOutgoing: PhoneOutgoing,
    Pi: Pi,
    Piano: Piano,
    Pickaxe: Pickaxe,
    PictureInPicture: PictureInPicture,
    PictureInPicture2: PictureInPicture2,
    PiggyBank: PiggyBank,
    Pilcrow: Pilcrow,
    PilcrowLeft: PilcrowLeft,
    PilcrowRight: PilcrowRight,
    Pill: Pill,
    PillBottle: PillBottle,
    Pin: Pin,
    PinOff: PinOff,
    Pipette: Pipette,
    Pizza: Pizza,
    Plane: Plane,
    PlaneLanding: PlaneLanding,
    PlaneTakeoff: PlaneTakeoff,
    Play: Play,
    Plug: Plug,
    Plug2: Plug2,
    PlugZap: PlugZap,
    Plus: Plus,
    Pocket: Pocket,
    PocketKnife: PocketKnife,
    Podcast: Podcast,
    Pointer: Pointer,
    PointerOff: PointerOff,
    Popcorn: Popcorn,
    Popsicle: Popsicle,
    PoundSterling: PoundSterling,
    Power: Power,
    PowerOff: PowerOff,
    Presentation: Presentation,
    Printer: Printer,
    PrinterCheck: PrinterCheck,
    Projector: Projector,
    Proportions: Proportions,
    Puzzle: Puzzle,
    Pyramid: Pyramid,
    QrCode: QrCode,
    Quote: Quote,
    Rabbit: Rabbit,
    Radar: Radar,
    Radiation: Radiation,
    Radical: Radical,
    Radio: Radio,
    RadioReceiver: RadioReceiver,
    RadioTower: RadioTower,
    Radius: Radius,
    RailSymbol: RailSymbol,
    Rainbow: Rainbow,
    Rat: Rat,
    Ratio: Ratio,
    Receipt: Receipt,
    ReceiptCent: ReceiptCent,
    ReceiptEuro: ReceiptEuro,
    ReceiptIndianRupee: ReceiptIndianRupee,
    ReceiptJapaneseYen: ReceiptJapaneseYen,
    ReceiptPoundSterling: ReceiptPoundSterling,
    ReceiptRussianRuble: ReceiptRussianRuble,
    ReceiptSwissFranc: ReceiptSwissFranc,
    ReceiptText: ReceiptText,
    RectangleEllipsis: RectangleEllipsis,
    RectangleHorizontal: RectangleHorizontal,
    RectangleVertical: RectangleVertical,
    Recycle: Recycle,
    Redo: Redo,
    Redo2: Redo2,
    RedoDot: RedoDot,
    RefreshCcw: RefreshCcw,
    RefreshCcwDot: RefreshCcwDot,
    RefreshCw: RefreshCw,
    RefreshCwOff: RefreshCwOff,
    Refrigerator: Refrigerator,
    Regex: Regex,
    RemoveFormatting: RemoveFormatting,
    Repeat: Repeat,
    Repeat1: Repeat1,
    Repeat2: Repeat2,
    Replace: Replace,
    ReplaceAll: ReplaceAll,
    Reply: Reply,
    ReplyAll: ReplyAll,
    Rewind: Rewind,
    Ribbon: Ribbon,
    Rocket: Rocket,
    RockingChair: RockingChair,
    RollerCoaster: RollerCoaster,
    Rotate3d: Rotate3d,
    RotateCcw: RotateCcw,
    RotateCcwSquare: RotateCcwSquare,
    RotateCw: RotateCw,
    RotateCwSquare: RotateCwSquare,
    Route: Route,
    RouteOff: RouteOff,
    Router: Router,
    Rows2: Rows2,
    Rows3: Rows3,
    Rows4: Rows4,
    Rss: Rss,
    Ruler: Ruler,
    RussianRuble: RussianRuble,
    Sailboat: Sailboat,
    Salad: Salad,
    Sandwich: Sandwich,
    Satellite: Satellite,
    SatelliteDish: SatelliteDish,
    Save: Save,
    SaveAll: SaveAll,
    SaveOff: SaveOff,
    Scale: Scale,
    Scale3d: Scale3d,
    Scaling: Scaling,
    Scan: Scan,
    ScanBarcode: ScanBarcode,
    ScanEye: ScanEye,
    ScanFace: ScanFace,
    ScanLine: ScanLine,
    ScanQrCode: ScanQrCode,
    ScanSearch: ScanSearch,
    ScanText: ScanText,
    School: School,
    Scissors: Scissors,
    ScissorsLineDashed: ScissorsLineDashed,
    ScreenShare: ScreenShare,
    ScreenShareOff: ScreenShareOff,
    Scroll: Scroll,
    ScrollText: ScrollText,
    Search: Search,
    SearchCheck: SearchCheck,
    SearchCode: SearchCode,
    SearchSlash: SearchSlash,
    SearchX: SearchX,
    Section: Section,
    Send: Send,
    SendHorizontal: SendHorizontal,
    SendToBack: SendToBack,
    SeparatorHorizontal: SeparatorHorizontal,
    SeparatorVertical: SeparatorVertical,
    Server: Server,
    ServerCog: ServerCog,
    ServerCrash: ServerCrash,
    ServerOff: ServerOff,
    Settings: Settings,
    Settings2: Settings2,
    Shapes: Shapes,
    Share: Share,
    Share2: Share2,
    Sheet: Sheet$1,
    Shell: Shell,
    Shield: Shield,
    ShieldAlert: ShieldAlert,
    ShieldBan: ShieldBan,
    ShieldCheck: ShieldCheck,
    ShieldEllipsis: ShieldEllipsis,
    ShieldHalf: ShieldHalf,
    ShieldMinus: ShieldMinus,
    ShieldOff: ShieldOff,
    ShieldPlus: ShieldPlus,
    ShieldQuestion: ShieldQuestion,
    ShieldX: ShieldX,
    Ship: Ship,
    ShipWheel: ShipWheel,
    Shirt: Shirt,
    ShoppingBag: ShoppingBag,
    ShoppingBasket: ShoppingBasket,
    ShoppingCart: ShoppingCart,
    Shovel: Shovel,
    ShowerHead: ShowerHead,
    Shrink: Shrink,
    Shrub: Shrub,
    Shuffle: Shuffle,
    Sigma: Sigma,
    Signal: Signal,
    SignalHigh: SignalHigh,
    SignalLow: SignalLow,
    SignalMedium: SignalMedium,
    SignalZero: SignalZero,
    Signature: Signature,
    Signpost: Signpost,
    SignpostBig: SignpostBig,
    Siren: Siren,
    SkipBack: SkipBack,
    SkipForward: SkipForward,
    Skull: Skull,
    Slack: Slack,
    Slash: Slash,
    Slice: Slice,
    SlidersHorizontal: SlidersHorizontal,
    SlidersVertical: SlidersVertical,
    Smartphone: Smartphone,
    SmartphoneCharging: SmartphoneCharging,
    SmartphoneNfc: SmartphoneNfc,
    Smile: Smile,
    SmilePlus: SmilePlus,
    Snail: Snail,
    Snowflake: Snowflake,
    Sofa: Sofa,
    Soup: Soup,
    Space: Space,
    Spade: Spade,
    Sparkle: Sparkle,
    Sparkles: Sparkles,
    Speaker: Speaker,
    Speech: Speech,
    SpellCheck: SpellCheck,
    SpellCheck2: SpellCheck2,
    Spline: Spline,
    Split: Split,
    SprayCan: SprayCan,
    Sprout: Sprout,
    Square: Square,
    SquareActivity: SquareActivity,
    SquareArrowDown: SquareArrowDown,
    SquareArrowDownLeft: SquareArrowDownLeft,
    SquareArrowDownRight: SquareArrowDownRight,
    SquareArrowLeft: SquareArrowLeft,
    SquareArrowOutDownLeft: SquareArrowOutDownLeft,
    SquareArrowOutDownRight: SquareArrowOutDownRight,
    SquareArrowOutUpLeft: SquareArrowOutUpLeft,
    SquareArrowOutUpRight: SquareArrowOutUpRight,
    SquareArrowRight: SquareArrowRight,
    SquareArrowUp: SquareArrowUp,
    SquareArrowUpLeft: SquareArrowUpLeft,
    SquareArrowUpRight: SquareArrowUpRight,
    SquareAsterisk: SquareAsterisk,
    SquareBottomDashedScissors: SquareBottomDashedScissors,
    SquareChartGantt: SquareChartGantt,
    SquareCheck: SquareCheck,
    SquareCheckBig: SquareCheckBig,
    SquareChevronDown: SquareChevronDown,
    SquareChevronLeft: SquareChevronLeft,
    SquareChevronRight: SquareChevronRight,
    SquareChevronUp: SquareChevronUp,
    SquareCode: SquareCode,
    SquareDashed: SquareDashed,
    SquareDashedBottom: SquareDashedBottom,
    SquareDashedBottomCode: SquareDashedBottomCode,
    SquareDashedKanban: SquareDashedKanban,
    SquareDashedMousePointer: SquareDashedMousePointer,
    SquareDivide: SquareDivide,
    SquareDot: SquareDot,
    SquareEqual: SquareEqual,
    SquareFunction: SquareFunction,
    SquareKanban: SquareKanban,
    SquareLibrary: SquareLibrary,
    SquareM: SquareM,
    SquareMenu: SquareMenu,
    SquareMinus: SquareMinus,
    SquareMousePointer: SquareMousePointer,
    SquareParking: SquareParking,
    SquareParkingOff: SquareParkingOff,
    SquarePen: SquarePen,
    SquarePercent: SquarePercent,
    SquarePi: SquarePi,
    SquarePilcrow: SquarePilcrow,
    SquarePlay: SquarePlay,
    SquarePlus: SquarePlus,
    SquarePower: SquarePower,
    SquareRadical: SquareRadical,
    SquareScissors: SquareScissors,
    SquareSigma: SquareSigma,
    SquareSlash: SquareSlash,
    SquareSplitHorizontal: SquareSplitHorizontal,
    SquareSplitVertical: SquareSplitVertical,
    SquareSquare: SquareSquare,
    SquareStack: SquareStack,
    SquareTerminal: SquareTerminal,
    SquareUser: SquareUser,
    SquareUserRound: SquareUserRound,
    SquareX: SquareX,
    Squircle: Squircle,
    Squirrel: Squirrel,
    Stamp: Stamp,
    Star: Star,
    StarHalf: StarHalf,
    StarOff: StarOff,
    StepBack: StepBack,
    StepForward: StepForward,
    Stethoscope: Stethoscope,
    Sticker: Sticker,
    StickyNote: StickyNote,
    Store: Store,
    StretchHorizontal: StretchHorizontal,
    StretchVertical: StretchVertical,
    Strikethrough: Strikethrough,
    Subscript: Subscript,
    Sun: Sun,
    SunDim: SunDim,
    SunMedium: SunMedium,
    SunMoon: SunMoon,
    SunSnow: SunSnow,
    Sunrise: Sunrise,
    Sunset: Sunset,
    Superscript: Superscript,
    SwatchBook: SwatchBook,
    SwissFranc: SwissFranc,
    SwitchCamera: SwitchCamera,
    Sword: Sword,
    Swords: Swords,
    Syringe: Syringe,
    Table: Table$1,
    Table2: Table2,
    TableCellsMerge: TableCellsMerge,
    TableCellsSplit: TableCellsSplit,
    TableColumnsSplit: TableColumnsSplit,
    TableOfContents: TableOfContents,
    TableProperties: TableProperties,
    TableRowsSplit: TableRowsSplit,
    Tablet: Tablet,
    TabletSmartphone: TabletSmartphone,
    Tablets: Tablets,
    Tag: Tag$1,
    Tags: Tags,
    Tally1: Tally1,
    Tally2: Tally2,
    Tally3: Tally3,
    Tally4: Tally4,
    Tally5: Tally5,
    Tangent: Tangent,
    Target: Target,
    Telescope: Telescope,
    Tent: Tent,
    TentTree: TentTree,
    Terminal: Terminal,
    TestTube: TestTube,
    TestTubeDiagonal: TestTubeDiagonal,
    TestTubes: TestTubes,
    Text: Text,
    TextCursor: TextCursor,
    TextCursorInput: TextCursorInput,
    TextQuote: TextQuote,
    TextSearch: TextSearch,
    TextSelect: TextSelect,
    Theater: Theater,
    Thermometer: Thermometer,
    ThermometerSnowflake: ThermometerSnowflake,
    ThermometerSun: ThermometerSun,
    ThumbsDown: ThumbsDown,
    ThumbsUp: ThumbsUp,
    Ticket: Ticket,
    TicketCheck: TicketCheck,
    TicketMinus: TicketMinus,
    TicketPercent: TicketPercent,
    TicketPlus: TicketPlus,
    TicketSlash: TicketSlash,
    TicketX: TicketX,
    Tickets: Tickets,
    TicketsPlane: TicketsPlane,
    Timer: Timer,
    TimerOff: TimerOff,
    TimerReset: TimerReset,
    ToggleLeft: ToggleLeft,
    ToggleRight: ToggleRight,
    Toilet: Toilet,
    Tornado: Tornado,
    Torus: Torus,
    Touchpad: Touchpad,
    TouchpadOff: TouchpadOff,
    TowerControl: TowerControl,
    ToyBrick: ToyBrick,
    Tractor: Tractor,
    TrafficCone: TrafficCone,
    TrainFront: TrainFront,
    TrainFrontTunnel: TrainFrontTunnel,
    TrainTrack: TrainTrack,
    TramFront: TramFront,
    Trash: Trash,
    Trash2: Trash2,
    TreeDeciduous: TreeDeciduous,
    TreePalm: TreePalm,
    TreePine: TreePine,
    Trees: Trees,
    Trello: Trello,
    TrendingDown: TrendingDown,
    TrendingUp: TrendingUp,
    TrendingUpDown: TrendingUpDown,
    Triangle: Triangle,
    TriangleAlert: TriangleAlert,
    TriangleRight: TriangleRight,
    Trophy: Trophy,
    Truck: Truck,
    Turtle: Turtle,
    Tv: Tv,
    TvMinimal: TvMinimal,
    TvMinimalPlay: TvMinimalPlay,
    Twitch: Twitch,
    Twitter: Twitter,
    Type: Type,
    TypeOutline: TypeOutline,
    Umbrella: Umbrella,
    UmbrellaOff: UmbrellaOff,
    Underline: Underline,
    Undo: Undo,
    Undo2: Undo2,
    UndoDot: UndoDot,
    UnfoldHorizontal: UnfoldHorizontal,
    UnfoldVertical: UnfoldVertical,
    Ungroup: Ungroup,
    University: University,
    Unlink: Unlink,
    Unlink2: Unlink2,
    Unplug: Unplug,
    Upload: Upload,
    Usb: Usb,
    User: User,
    UserCheck: UserCheck,
    UserCog: UserCog,
    UserMinus: UserMinus,
    UserPen: UserPen,
    UserPlus: UserPlus,
    UserRound: UserRound,
    UserRoundCheck: UserRoundCheck,
    UserRoundCog: UserRoundCog,
    UserRoundMinus: UserRoundMinus,
    UserRoundPen: UserRoundPen,
    UserRoundPlus: UserRoundPlus,
    UserRoundSearch: UserRoundSearch,
    UserRoundX: UserRoundX,
    UserSearch: UserSearch,
    UserX: UserX,
    Users: Users,
    UsersRound: UsersRound,
    Utensils: Utensils,
    UtensilsCrossed: UtensilsCrossed,
    UtilityPole: UtilityPole,
    Variable: Variable,
    Vault: Vault,
    Vegan: Vegan,
    VenetianMask: VenetianMask,
    Vibrate: Vibrate,
    VibrateOff: VibrateOff,
    Video: Video,
    VideoOff: VideoOff,
    Videotape: Videotape,
    View: View,
    Voicemail: Voicemail,
    Volleyball: Volleyball,
    Volume: Volume,
    Volume1: Volume1,
    Volume2: Volume2,
    VolumeOff: VolumeOff,
    VolumeX: VolumeX,
    Vote: Vote,
    Wallet: Wallet,
    WalletCards: WalletCards,
    WalletMinimal: WalletMinimal,
    Wallpaper: Wallpaper,
    Wand: Wand,
    WandSparkles: WandSparkles,
    Warehouse: Warehouse,
    WashingMachine: WashingMachine,
    Watch: Watch,
    Waves: Waves,
    Waypoints: Waypoints,
    Webcam: Webcam,
    Webhook: Webhook,
    WebhookOff: WebhookOff,
    Weight: Weight,
    Wheat: Wheat,
    WheatOff: WheatOff,
    WholeWord: WholeWord,
    Wifi: Wifi,
    WifiHigh: WifiHigh,
    WifiLow: WifiLow,
    WifiOff: WifiOff,
    WifiZero: WifiZero,
    Wind: Wind,
    WindArrowDown: WindArrowDown,
    Wine: Wine,
    WineOff: WineOff,
    Workflow: Workflow,
    Worm: Worm,
    WrapText: WrapText,
    Wrench: Wrench,
    X: X,
    Youtube: Youtube,
    Zap: Zap,
    ZapOff: ZapOff,
    ZoomIn: ZoomIn,
    ZoomOut: ZoomOut
});

/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */

var LucideIcons = /*#__PURE__*/Object.freeze({
    __proto__: null,
    AArrowDown: AArrowDown,
    AArrowDownIcon: AArrowDown,
    AArrowUp: AArrowUp,
    AArrowUpIcon: AArrowUp,
    ALargeSmall: ALargeSmall,
    ALargeSmallIcon: ALargeSmall,
    Accessibility: Accessibility,
    AccessibilityIcon: Accessibility,
    Activity: Activity,
    ActivityIcon: Activity,
    ActivitySquare: SquareActivity,
    ActivitySquareIcon: SquareActivity,
    AirVent: AirVent,
    AirVentIcon: AirVent,
    Airplay: Airplay,
    AirplayIcon: Airplay,
    AlarmCheck: AlarmClockCheck,
    AlarmCheckIcon: AlarmClockCheck,
    AlarmClock: AlarmClock,
    AlarmClockCheck: AlarmClockCheck,
    AlarmClockCheckIcon: AlarmClockCheck,
    AlarmClockIcon: AlarmClock,
    AlarmClockMinus: AlarmClockMinus,
    AlarmClockMinusIcon: AlarmClockMinus,
    AlarmClockOff: AlarmClockOff,
    AlarmClockOffIcon: AlarmClockOff,
    AlarmClockPlus: AlarmClockPlus,
    AlarmClockPlusIcon: AlarmClockPlus,
    AlarmMinus: AlarmClockMinus,
    AlarmMinusIcon: AlarmClockMinus,
    AlarmPlus: AlarmClockPlus,
    AlarmPlusIcon: AlarmClockPlus,
    AlarmSmoke: AlarmSmoke,
    AlarmSmokeIcon: AlarmSmoke,
    Album: Album,
    AlbumIcon: Album,
    AlertCircle: CircleAlert,
    AlertCircleIcon: CircleAlert,
    AlertOctagon: OctagonAlert,
    AlertOctagonIcon: OctagonAlert,
    AlertTriangle: TriangleAlert,
    AlertTriangleIcon: TriangleAlert,
    AlignCenter: AlignCenter,
    AlignCenterHorizontal: AlignCenterHorizontal,
    AlignCenterHorizontalIcon: AlignCenterHorizontal,
    AlignCenterIcon: AlignCenter,
    AlignCenterVertical: AlignCenterVertical,
    AlignCenterVerticalIcon: AlignCenterVertical,
    AlignEndHorizontal: AlignEndHorizontal,
    AlignEndHorizontalIcon: AlignEndHorizontal,
    AlignEndVertical: AlignEndVertical,
    AlignEndVerticalIcon: AlignEndVertical,
    AlignHorizontalDistributeCenter: AlignHorizontalDistributeCenter,
    AlignHorizontalDistributeCenterIcon: AlignHorizontalDistributeCenter,
    AlignHorizontalDistributeEnd: AlignHorizontalDistributeEnd,
    AlignHorizontalDistributeEndIcon: AlignHorizontalDistributeEnd,
    AlignHorizontalDistributeStart: AlignHorizontalDistributeStart,
    AlignHorizontalDistributeStartIcon: AlignHorizontalDistributeStart,
    AlignHorizontalJustifyCenter: AlignHorizontalJustifyCenter,
    AlignHorizontalJustifyCenterIcon: AlignHorizontalJustifyCenter,
    AlignHorizontalJustifyEnd: AlignHorizontalJustifyEnd,
    AlignHorizontalJustifyEndIcon: AlignHorizontalJustifyEnd,
    AlignHorizontalJustifyStart: AlignHorizontalJustifyStart,
    AlignHorizontalJustifyStartIcon: AlignHorizontalJustifyStart,
    AlignHorizontalSpaceAround: AlignHorizontalSpaceAround,
    AlignHorizontalSpaceAroundIcon: AlignHorizontalSpaceAround,
    AlignHorizontalSpaceBetween: AlignHorizontalSpaceBetween,
    AlignHorizontalSpaceBetweenIcon: AlignHorizontalSpaceBetween,
    AlignJustify: AlignJustify,
    AlignJustifyIcon: AlignJustify,
    AlignLeft: AlignLeft,
    AlignLeftIcon: AlignLeft,
    AlignRight: AlignRight,
    AlignRightIcon: AlignRight,
    AlignStartHorizontal: AlignStartHorizontal,
    AlignStartHorizontalIcon: AlignStartHorizontal,
    AlignStartVertical: AlignStartVertical,
    AlignStartVerticalIcon: AlignStartVertical,
    AlignVerticalDistributeCenter: AlignVerticalDistributeCenter,
    AlignVerticalDistributeCenterIcon: AlignVerticalDistributeCenter,
    AlignVerticalDistributeEnd: AlignVerticalDistributeEnd,
    AlignVerticalDistributeEndIcon: AlignVerticalDistributeEnd,
    AlignVerticalDistributeStart: AlignVerticalDistributeStart,
    AlignVerticalDistributeStartIcon: AlignVerticalDistributeStart,
    AlignVerticalJustifyCenter: AlignVerticalJustifyCenter,
    AlignVerticalJustifyCenterIcon: AlignVerticalJustifyCenter,
    AlignVerticalJustifyEnd: AlignVerticalJustifyEnd,
    AlignVerticalJustifyEndIcon: AlignVerticalJustifyEnd,
    AlignVerticalJustifyStart: AlignVerticalJustifyStart,
    AlignVerticalJustifyStartIcon: AlignVerticalJustifyStart,
    AlignVerticalSpaceAround: AlignVerticalSpaceAround,
    AlignVerticalSpaceAroundIcon: AlignVerticalSpaceAround,
    AlignVerticalSpaceBetween: AlignVerticalSpaceBetween,
    AlignVerticalSpaceBetweenIcon: AlignVerticalSpaceBetween,
    Ambulance: Ambulance,
    AmbulanceIcon: Ambulance,
    Ampersand: Ampersand,
    AmpersandIcon: Ampersand,
    Ampersands: Ampersands,
    AmpersandsIcon: Ampersands,
    Amphora: Amphora,
    AmphoraIcon: Amphora,
    Anchor: Anchor,
    AnchorIcon: Anchor,
    Angry: Angry,
    AngryIcon: Angry,
    Annoyed: Annoyed,
    AnnoyedIcon: Annoyed,
    Antenna: Antenna,
    AntennaIcon: Antenna,
    Anvil: Anvil,
    AnvilIcon: Anvil,
    Aperture: Aperture,
    ApertureIcon: Aperture,
    AppWindow: AppWindow,
    AppWindowIcon: AppWindow,
    AppWindowMac: AppWindowMac,
    AppWindowMacIcon: AppWindowMac,
    Apple: Apple,
    AppleIcon: Apple,
    Archive: Archive,
    ArchiveIcon: Archive,
    ArchiveRestore: ArchiveRestore,
    ArchiveRestoreIcon: ArchiveRestore,
    ArchiveX: ArchiveX,
    ArchiveXIcon: ArchiveX,
    AreaChart: ChartArea,
    AreaChartIcon: ChartArea,
    Armchair: Armchair,
    ArmchairIcon: Armchair,
    ArrowBigDown: ArrowBigDown,
    ArrowBigDownDash: ArrowBigDownDash,
    ArrowBigDownDashIcon: ArrowBigDownDash,
    ArrowBigDownIcon: ArrowBigDown,
    ArrowBigLeft: ArrowBigLeft,
    ArrowBigLeftDash: ArrowBigLeftDash,
    ArrowBigLeftDashIcon: ArrowBigLeftDash,
    ArrowBigLeftIcon: ArrowBigLeft,
    ArrowBigRight: ArrowBigRight,
    ArrowBigRightDash: ArrowBigRightDash,
    ArrowBigRightDashIcon: ArrowBigRightDash,
    ArrowBigRightIcon: ArrowBigRight,
    ArrowBigUp: ArrowBigUp,
    ArrowBigUpDash: ArrowBigUpDash,
    ArrowBigUpDashIcon: ArrowBigUpDash,
    ArrowBigUpIcon: ArrowBigUp,
    ArrowDown: ArrowDown,
    ArrowDown01: ArrowDown01,
    ArrowDown01Icon: ArrowDown01,
    ArrowDown10: ArrowDown10,
    ArrowDown10Icon: ArrowDown10,
    ArrowDownAZ: ArrowDownAZ,
    ArrowDownAZIcon: ArrowDownAZ,
    ArrowDownAz: ArrowDownAZ,
    ArrowDownAzIcon: ArrowDownAZ,
    ArrowDownCircle: CircleArrowDown,
    ArrowDownCircleIcon: CircleArrowDown,
    ArrowDownFromLine: ArrowDownFromLine,
    ArrowDownFromLineIcon: ArrowDownFromLine,
    ArrowDownIcon: ArrowDown,
    ArrowDownLeft: ArrowDownLeft,
    ArrowDownLeftFromCircle: CircleArrowOutDownLeft,
    ArrowDownLeftFromCircleIcon: CircleArrowOutDownLeft,
    ArrowDownLeftFromSquare: SquareArrowOutDownLeft,
    ArrowDownLeftFromSquareIcon: SquareArrowOutDownLeft,
    ArrowDownLeftIcon: ArrowDownLeft,
    ArrowDownLeftSquare: SquareArrowDownLeft,
    ArrowDownLeftSquareIcon: SquareArrowDownLeft,
    ArrowDownNarrowWide: ArrowDownNarrowWide,
    ArrowDownNarrowWideIcon: ArrowDownNarrowWide,
    ArrowDownRight: ArrowDownRight,
    ArrowDownRightFromCircle: CircleArrowOutDownRight,
    ArrowDownRightFromCircleIcon: CircleArrowOutDownRight,
    ArrowDownRightFromSquare: SquareArrowOutDownRight,
    ArrowDownRightFromSquareIcon: SquareArrowOutDownRight,
    ArrowDownRightIcon: ArrowDownRight,
    ArrowDownRightSquare: SquareArrowDownRight,
    ArrowDownRightSquareIcon: SquareArrowDownRight,
    ArrowDownSquare: SquareArrowDown,
    ArrowDownSquareIcon: SquareArrowDown,
    ArrowDownToDot: ArrowDownToDot,
    ArrowDownToDotIcon: ArrowDownToDot,
    ArrowDownToLine: ArrowDownToLine,
    ArrowDownToLineIcon: ArrowDownToLine,
    ArrowDownUp: ArrowDownUp,
    ArrowDownUpIcon: ArrowDownUp,
    ArrowDownWideNarrow: ArrowDownWideNarrow,
    ArrowDownWideNarrowIcon: ArrowDownWideNarrow,
    ArrowDownZA: ArrowDownZA,
    ArrowDownZAIcon: ArrowDownZA,
    ArrowDownZa: ArrowDownZA,
    ArrowDownZaIcon: ArrowDownZA,
    ArrowLeft: ArrowLeft,
    ArrowLeftCircle: CircleArrowLeft,
    ArrowLeftCircleIcon: CircleArrowLeft,
    ArrowLeftFromLine: ArrowLeftFromLine,
    ArrowLeftFromLineIcon: ArrowLeftFromLine,
    ArrowLeftIcon: ArrowLeft,
    ArrowLeftRight: ArrowLeftRight,
    ArrowLeftRightIcon: ArrowLeftRight,
    ArrowLeftSquare: SquareArrowLeft,
    ArrowLeftSquareIcon: SquareArrowLeft,
    ArrowLeftToLine: ArrowLeftToLine,
    ArrowLeftToLineIcon: ArrowLeftToLine,
    ArrowRight: ArrowRight,
    ArrowRightCircle: CircleArrowRight,
    ArrowRightCircleIcon: CircleArrowRight,
    ArrowRightFromLine: ArrowRightFromLine,
    ArrowRightFromLineIcon: ArrowRightFromLine,
    ArrowRightIcon: ArrowRight,
    ArrowRightLeft: ArrowRightLeft,
    ArrowRightLeftIcon: ArrowRightLeft,
    ArrowRightSquare: SquareArrowRight,
    ArrowRightSquareIcon: SquareArrowRight,
    ArrowRightToLine: ArrowRightToLine,
    ArrowRightToLineIcon: ArrowRightToLine,
    ArrowUp: ArrowUp,
    ArrowUp01: ArrowUp01,
    ArrowUp01Icon: ArrowUp01,
    ArrowUp10: ArrowUp10,
    ArrowUp10Icon: ArrowUp10,
    ArrowUpAZ: ArrowUpAZ,
    ArrowUpAZIcon: ArrowUpAZ,
    ArrowUpAz: ArrowUpAZ,
    ArrowUpAzIcon: ArrowUpAZ,
    ArrowUpCircle: CircleArrowUp,
    ArrowUpCircleIcon: CircleArrowUp,
    ArrowUpDown: ArrowUpDown,
    ArrowUpDownIcon: ArrowUpDown,
    ArrowUpFromDot: ArrowUpFromDot,
    ArrowUpFromDotIcon: ArrowUpFromDot,
    ArrowUpFromLine: ArrowUpFromLine,
    ArrowUpFromLineIcon: ArrowUpFromLine,
    ArrowUpIcon: ArrowUp,
    ArrowUpLeft: ArrowUpLeft,
    ArrowUpLeftFromCircle: CircleArrowOutUpLeft,
    ArrowUpLeftFromCircleIcon: CircleArrowOutUpLeft,
    ArrowUpLeftFromSquare: SquareArrowOutUpLeft,
    ArrowUpLeftFromSquareIcon: SquareArrowOutUpLeft,
    ArrowUpLeftIcon: ArrowUpLeft,
    ArrowUpLeftSquare: SquareArrowUpLeft,
    ArrowUpLeftSquareIcon: SquareArrowUpLeft,
    ArrowUpNarrowWide: ArrowUpNarrowWide,
    ArrowUpNarrowWideIcon: ArrowUpNarrowWide,
    ArrowUpRight: ArrowUpRight,
    ArrowUpRightFromCircle: CircleArrowOutUpRight,
    ArrowUpRightFromCircleIcon: CircleArrowOutUpRight,
    ArrowUpRightFromSquare: SquareArrowOutUpRight,
    ArrowUpRightFromSquareIcon: SquareArrowOutUpRight,
    ArrowUpRightIcon: ArrowUpRight,
    ArrowUpRightSquare: SquareArrowUpRight,
    ArrowUpRightSquareIcon: SquareArrowUpRight,
    ArrowUpSquare: SquareArrowUp,
    ArrowUpSquareIcon: SquareArrowUp,
    ArrowUpToLine: ArrowUpToLine,
    ArrowUpToLineIcon: ArrowUpToLine,
    ArrowUpWideNarrow: ArrowUpWideNarrow,
    ArrowUpWideNarrowIcon: ArrowUpWideNarrow,
    ArrowUpZA: ArrowUpZA,
    ArrowUpZAIcon: ArrowUpZA,
    ArrowUpZa: ArrowUpZA,
    ArrowUpZaIcon: ArrowUpZA,
    ArrowsUpFromLine: ArrowsUpFromLine,
    ArrowsUpFromLineIcon: ArrowsUpFromLine,
    Asterisk: Asterisk,
    AsteriskIcon: Asterisk,
    AsteriskSquare: SquareAsterisk,
    AsteriskSquareIcon: SquareAsterisk,
    AtSign: AtSign,
    AtSignIcon: AtSign,
    Atom: Atom,
    AtomIcon: Atom,
    AudioLines: AudioLines,
    AudioLinesIcon: AudioLines,
    AudioWaveform: AudioWaveform,
    AudioWaveformIcon: AudioWaveform,
    Award: Award,
    AwardIcon: Award,
    Axe: Axe,
    AxeIcon: Axe,
    Axis3D: Axis3d,
    Axis3DIcon: Axis3d,
    Axis3d: Axis3d,
    Axis3dIcon: Axis3d,
    Baby: Baby,
    BabyIcon: Baby,
    Backpack: Backpack,
    BackpackIcon: Backpack,
    Badge: Badge$1,
    BadgeAlert: BadgeAlert,
    BadgeAlertIcon: BadgeAlert,
    BadgeCent: BadgeCent,
    BadgeCentIcon: BadgeCent,
    BadgeCheck: BadgeCheck,
    BadgeCheckIcon: BadgeCheck,
    BadgeDollarSign: BadgeDollarSign,
    BadgeDollarSignIcon: BadgeDollarSign,
    BadgeEuro: BadgeEuro,
    BadgeEuroIcon: BadgeEuro,
    BadgeHelp: BadgeHelp,
    BadgeHelpIcon: BadgeHelp,
    BadgeIcon: Badge$1,
    BadgeIndianRupee: BadgeIndianRupee,
    BadgeIndianRupeeIcon: BadgeIndianRupee,
    BadgeInfo: BadgeInfo,
    BadgeInfoIcon: BadgeInfo,
    BadgeJapaneseYen: BadgeJapaneseYen,
    BadgeJapaneseYenIcon: BadgeJapaneseYen,
    BadgeMinus: BadgeMinus,
    BadgeMinusIcon: BadgeMinus,
    BadgePercent: BadgePercent,
    BadgePercentIcon: BadgePercent,
    BadgePlus: BadgePlus,
    BadgePlusIcon: BadgePlus,
    BadgePoundSterling: BadgePoundSterling,
    BadgePoundSterlingIcon: BadgePoundSterling,
    BadgeRussianRuble: BadgeRussianRuble,
    BadgeRussianRubleIcon: BadgeRussianRuble,
    BadgeSwissFranc: BadgeSwissFranc,
    BadgeSwissFrancIcon: BadgeSwissFranc,
    BadgeX: BadgeX,
    BadgeXIcon: BadgeX,
    BaggageClaim: BaggageClaim,
    BaggageClaimIcon: BaggageClaim,
    Ban: Ban,
    BanIcon: Ban,
    Banana: Banana,
    BananaIcon: Banana,
    Bandage: Bandage,
    BandageIcon: Bandage,
    Banknote: Banknote,
    BanknoteIcon: Banknote,
    BarChart: ChartNoAxesColumnIncreasing,
    BarChart2: ChartNoAxesColumn,
    BarChart2Icon: ChartNoAxesColumn,
    BarChart3: ChartColumn,
    BarChart3Icon: ChartColumn,
    BarChart4: ChartColumnIncreasing,
    BarChart4Icon: ChartColumnIncreasing,
    BarChartBig: ChartColumnBig,
    BarChartBigIcon: ChartColumnBig,
    BarChartHorizontal: ChartBar,
    BarChartHorizontalBig: ChartBarBig,
    BarChartHorizontalBigIcon: ChartBarBig,
    BarChartHorizontalIcon: ChartBar,
    BarChartIcon: ChartNoAxesColumnIncreasing,
    Barcode: Barcode,
    BarcodeIcon: Barcode,
    Baseline: Baseline,
    BaselineIcon: Baseline,
    Bath: Bath,
    BathIcon: Bath,
    Battery: Battery,
    BatteryCharging: BatteryCharging,
    BatteryChargingIcon: BatteryCharging,
    BatteryFull: BatteryFull,
    BatteryFullIcon: BatteryFull,
    BatteryIcon: Battery,
    BatteryLow: BatteryLow,
    BatteryLowIcon: BatteryLow,
    BatteryMedium: BatteryMedium,
    BatteryMediumIcon: BatteryMedium,
    BatteryWarning: BatteryWarning,
    BatteryWarningIcon: BatteryWarning,
    Beaker: Beaker,
    BeakerIcon: Beaker,
    Bean: Bean,
    BeanIcon: Bean,
    BeanOff: BeanOff,
    BeanOffIcon: BeanOff,
    Bed: Bed,
    BedDouble: BedDouble,
    BedDoubleIcon: BedDouble,
    BedIcon: Bed,
    BedSingle: BedSingle,
    BedSingleIcon: BedSingle,
    Beef: Beef,
    BeefIcon: Beef,
    Beer: Beer,
    BeerIcon: Beer,
    BeerOff: BeerOff,
    BeerOffIcon: BeerOff,
    Bell: Bell,
    BellDot: BellDot,
    BellDotIcon: BellDot,
    BellElectric: BellElectric,
    BellElectricIcon: BellElectric,
    BellIcon: Bell,
    BellMinus: BellMinus,
    BellMinusIcon: BellMinus,
    BellOff: BellOff,
    BellOffIcon: BellOff,
    BellPlus: BellPlus,
    BellPlusIcon: BellPlus,
    BellRing: BellRing,
    BellRingIcon: BellRing,
    BetweenHorizonalEnd: BetweenHorizontalEnd,
    BetweenHorizonalEndIcon: BetweenHorizontalEnd,
    BetweenHorizonalStart: BetweenHorizontalStart,
    BetweenHorizonalStartIcon: BetweenHorizontalStart,
    BetweenHorizontalEnd: BetweenHorizontalEnd,
    BetweenHorizontalEndIcon: BetweenHorizontalEnd,
    BetweenHorizontalStart: BetweenHorizontalStart,
    BetweenHorizontalStartIcon: BetweenHorizontalStart,
    BetweenVerticalEnd: BetweenVerticalEnd,
    BetweenVerticalEndIcon: BetweenVerticalEnd,
    BetweenVerticalStart: BetweenVerticalStart,
    BetweenVerticalStartIcon: BetweenVerticalStart,
    BicepsFlexed: BicepsFlexed,
    BicepsFlexedIcon: BicepsFlexed,
    Bike: Bike,
    BikeIcon: Bike,
    Binary: Binary,
    BinaryIcon: Binary,
    Binoculars: Binoculars,
    BinocularsIcon: Binoculars,
    Biohazard: Biohazard,
    BiohazardIcon: Biohazard,
    Bird: Bird,
    BirdIcon: Bird,
    Bitcoin: Bitcoin,
    BitcoinIcon: Bitcoin,
    Blend: Blend,
    BlendIcon: Blend,
    Blinds: Blinds,
    BlindsIcon: Blinds,
    Blocks: Blocks,
    BlocksIcon: Blocks,
    Bluetooth: Bluetooth,
    BluetoothConnected: BluetoothConnected,
    BluetoothConnectedIcon: BluetoothConnected,
    BluetoothIcon: Bluetooth,
    BluetoothOff: BluetoothOff,
    BluetoothOffIcon: BluetoothOff,
    BluetoothSearching: BluetoothSearching,
    BluetoothSearchingIcon: BluetoothSearching,
    Bold: Bold,
    BoldIcon: Bold,
    Bolt: Bolt,
    BoltIcon: Bolt,
    Bomb: Bomb,
    BombIcon: Bomb,
    Bone: Bone,
    BoneIcon: Bone,
    Book: Book,
    BookA: BookA,
    BookAIcon: BookA,
    BookAudio: BookAudio,
    BookAudioIcon: BookAudio,
    BookCheck: BookCheck,
    BookCheckIcon: BookCheck,
    BookCopy: BookCopy,
    BookCopyIcon: BookCopy,
    BookDashed: BookDashed,
    BookDashedIcon: BookDashed,
    BookDown: BookDown,
    BookDownIcon: BookDown,
    BookHeadphones: BookHeadphones,
    BookHeadphonesIcon: BookHeadphones,
    BookHeart: BookHeart,
    BookHeartIcon: BookHeart,
    BookIcon: Book,
    BookImage: BookImage,
    BookImageIcon: BookImage,
    BookKey: BookKey,
    BookKeyIcon: BookKey,
    BookLock: BookLock,
    BookLockIcon: BookLock,
    BookMarked: BookMarked,
    BookMarkedIcon: BookMarked,
    BookMinus: BookMinus,
    BookMinusIcon: BookMinus,
    BookOpen: BookOpen,
    BookOpenCheck: BookOpenCheck,
    BookOpenCheckIcon: BookOpenCheck,
    BookOpenIcon: BookOpen,
    BookOpenText: BookOpenText,
    BookOpenTextIcon: BookOpenText,
    BookPlus: BookPlus,
    BookPlusIcon: BookPlus,
    BookTemplate: BookDashed,
    BookTemplateIcon: BookDashed,
    BookText: BookText,
    BookTextIcon: BookText,
    BookType: BookType,
    BookTypeIcon: BookType,
    BookUp: BookUp,
    BookUp2: BookUp2,
    BookUp2Icon: BookUp2,
    BookUpIcon: BookUp,
    BookUser: BookUser,
    BookUserIcon: BookUser,
    BookX: BookX,
    BookXIcon: BookX,
    Bookmark: Bookmark,
    BookmarkCheck: BookmarkCheck,
    BookmarkCheckIcon: BookmarkCheck,
    BookmarkIcon: Bookmark,
    BookmarkMinus: BookmarkMinus,
    BookmarkMinusIcon: BookmarkMinus,
    BookmarkPlus: BookmarkPlus,
    BookmarkPlusIcon: BookmarkPlus,
    BookmarkX: BookmarkX,
    BookmarkXIcon: BookmarkX,
    BoomBox: BoomBox,
    BoomBoxIcon: BoomBox,
    Bot: Bot,
    BotIcon: Bot,
    BotMessageSquare: BotMessageSquare,
    BotMessageSquareIcon: BotMessageSquare,
    BotOff: BotOff,
    BotOffIcon: BotOff,
    Box: Box,
    BoxIcon: Box,
    BoxSelect: SquareDashed,
    BoxSelectIcon: SquareDashed,
    Boxes: Boxes,
    BoxesIcon: Boxes,
    Braces: Braces,
    BracesIcon: Braces,
    Brackets: Brackets,
    BracketsIcon: Brackets,
    Brain: Brain,
    BrainCircuit: BrainCircuit,
    BrainCircuitIcon: BrainCircuit,
    BrainCog: BrainCog,
    BrainCogIcon: BrainCog,
    BrainIcon: Brain,
    BrickWall: BrickWall,
    BrickWallIcon: BrickWall,
    Briefcase: Briefcase,
    BriefcaseBusiness: BriefcaseBusiness,
    BriefcaseBusinessIcon: BriefcaseBusiness,
    BriefcaseConveyorBelt: BriefcaseConveyorBelt,
    BriefcaseConveyorBeltIcon: BriefcaseConveyorBelt,
    BriefcaseIcon: Briefcase,
    BriefcaseMedical: BriefcaseMedical,
    BriefcaseMedicalIcon: BriefcaseMedical,
    BringToFront: BringToFront,
    BringToFrontIcon: BringToFront,
    Brush: Brush,
    BrushIcon: Brush,
    Bug: Bug,
    BugIcon: Bug,
    BugOff: BugOff,
    BugOffIcon: BugOff,
    BugPlay: BugPlay,
    BugPlayIcon: BugPlay,
    Building: Building,
    Building2: Building2,
    Building2Icon: Building2,
    BuildingIcon: Building,
    Bus: Bus,
    BusFront: BusFront,
    BusFrontIcon: BusFront,
    BusIcon: Bus,
    Cable: Cable,
    CableCar: CableCar,
    CableCarIcon: CableCar,
    CableIcon: Cable,
    Cake: Cake,
    CakeIcon: Cake,
    CakeSlice: CakeSlice,
    CakeSliceIcon: CakeSlice,
    Calculator: Calculator,
    CalculatorIcon: Calculator,
    Calendar: Calendar$1,
    Calendar1: Calendar1,
    Calendar1Icon: Calendar1,
    CalendarArrowDown: CalendarArrowDown,
    CalendarArrowDownIcon: CalendarArrowDown,
    CalendarArrowUp: CalendarArrowUp,
    CalendarArrowUpIcon: CalendarArrowUp,
    CalendarCheck: CalendarCheck,
    CalendarCheck2: CalendarCheck2,
    CalendarCheck2Icon: CalendarCheck2,
    CalendarCheckIcon: CalendarCheck,
    CalendarClock: CalendarClock,
    CalendarClockIcon: CalendarClock,
    CalendarCog: CalendarCog,
    CalendarCogIcon: CalendarCog,
    CalendarDays: CalendarDays,
    CalendarDaysIcon: CalendarDays,
    CalendarFold: CalendarFold,
    CalendarFoldIcon: CalendarFold,
    CalendarHeart: CalendarHeart,
    CalendarHeartIcon: CalendarHeart,
    CalendarIcon: Calendar$1,
    CalendarMinus: CalendarMinus,
    CalendarMinus2: CalendarMinus2,
    CalendarMinus2Icon: CalendarMinus2,
    CalendarMinusIcon: CalendarMinus,
    CalendarOff: CalendarOff,
    CalendarOffIcon: CalendarOff,
    CalendarPlus: CalendarPlus,
    CalendarPlus2: CalendarPlus2,
    CalendarPlus2Icon: CalendarPlus2,
    CalendarPlusIcon: CalendarPlus,
    CalendarRange: CalendarRange,
    CalendarRangeIcon: CalendarRange,
    CalendarSearch: CalendarSearch,
    CalendarSearchIcon: CalendarSearch,
    CalendarSync: CalendarSync,
    CalendarSyncIcon: CalendarSync,
    CalendarX: CalendarX,
    CalendarX2: CalendarX2,
    CalendarX2Icon: CalendarX2,
    CalendarXIcon: CalendarX,
    Camera: Camera,
    CameraIcon: Camera,
    CameraOff: CameraOff,
    CameraOffIcon: CameraOff,
    CandlestickChart: ChartCandlestick,
    CandlestickChartIcon: ChartCandlestick,
    Candy: Candy,
    CandyCane: CandyCane,
    CandyCaneIcon: CandyCane,
    CandyIcon: Candy,
    CandyOff: CandyOff,
    CandyOffIcon: CandyOff,
    Cannabis: Cannabis,
    CannabisIcon: Cannabis,
    Captions: Captions,
    CaptionsIcon: Captions,
    CaptionsOff: CaptionsOff,
    CaptionsOffIcon: CaptionsOff,
    Car: Car,
    CarFront: CarFront,
    CarFrontIcon: CarFront,
    CarIcon: Car,
    CarTaxiFront: CarTaxiFront,
    CarTaxiFrontIcon: CarTaxiFront,
    Caravan: Caravan,
    CaravanIcon: Caravan,
    Carrot: Carrot,
    CarrotIcon: Carrot,
    CaseLower: CaseLower,
    CaseLowerIcon: CaseLower,
    CaseSensitive: CaseSensitive,
    CaseSensitiveIcon: CaseSensitive,
    CaseUpper: CaseUpper,
    CaseUpperIcon: CaseUpper,
    CassetteTape: CassetteTape,
    CassetteTapeIcon: CassetteTape,
    Cast: Cast,
    CastIcon: Cast,
    Castle: Castle,
    CastleIcon: Castle,
    Cat: Cat,
    CatIcon: Cat,
    Cctv: Cctv,
    CctvIcon: Cctv,
    ChartArea: ChartArea,
    ChartAreaIcon: ChartArea,
    ChartBar: ChartBar,
    ChartBarBig: ChartBarBig,
    ChartBarBigIcon: ChartBarBig,
    ChartBarDecreasing: ChartBarDecreasing,
    ChartBarDecreasingIcon: ChartBarDecreasing,
    ChartBarIcon: ChartBar,
    ChartBarIncreasing: ChartBarIncreasing,
    ChartBarIncreasingIcon: ChartBarIncreasing,
    ChartBarStacked: ChartBarStacked,
    ChartBarStackedIcon: ChartBarStacked,
    ChartCandlestick: ChartCandlestick,
    ChartCandlestickIcon: ChartCandlestick,
    ChartColumn: ChartColumn,
    ChartColumnBig: ChartColumnBig,
    ChartColumnBigIcon: ChartColumnBig,
    ChartColumnDecreasing: ChartColumnDecreasing,
    ChartColumnDecreasingIcon: ChartColumnDecreasing,
    ChartColumnIcon: ChartColumn,
    ChartColumnIncreasing: ChartColumnIncreasing,
    ChartColumnIncreasingIcon: ChartColumnIncreasing,
    ChartColumnStacked: ChartColumnStacked,
    ChartColumnStackedIcon: ChartColumnStacked,
    ChartGantt: ChartGantt,
    ChartGanttIcon: ChartGantt,
    ChartLine: ChartLine,
    ChartLineIcon: ChartLine,
    ChartNetwork: ChartNetwork,
    ChartNetworkIcon: ChartNetwork,
    ChartNoAxesColumn: ChartNoAxesColumn,
    ChartNoAxesColumnDecreasing: ChartNoAxesColumnDecreasing,
    ChartNoAxesColumnDecreasingIcon: ChartNoAxesColumnDecreasing,
    ChartNoAxesColumnIcon: ChartNoAxesColumn,
    ChartNoAxesColumnIncreasing: ChartNoAxesColumnIncreasing,
    ChartNoAxesColumnIncreasingIcon: ChartNoAxesColumnIncreasing,
    ChartNoAxesCombined: ChartNoAxesCombined,
    ChartNoAxesCombinedIcon: ChartNoAxesCombined,
    ChartNoAxesGantt: ChartNoAxesGantt,
    ChartNoAxesGanttIcon: ChartNoAxesGantt,
    ChartPie: ChartPie,
    ChartPieIcon: ChartPie,
    ChartScatter: ChartScatter,
    ChartScatterIcon: ChartScatter,
    ChartSpline: ChartSpline,
    ChartSplineIcon: ChartSpline,
    Check: Check,
    CheckCheck: CheckCheck,
    CheckCheckIcon: CheckCheck,
    CheckCircle: CircleCheckBig,
    CheckCircle2: CircleCheck,
    CheckCircle2Icon: CircleCheck,
    CheckCircleIcon: CircleCheckBig,
    CheckIcon: Check,
    CheckSquare: SquareCheckBig,
    CheckSquare2: SquareCheck,
    CheckSquare2Icon: SquareCheck,
    CheckSquareIcon: SquareCheckBig,
    ChefHat: ChefHat,
    ChefHatIcon: ChefHat,
    Cherry: Cherry,
    CherryIcon: Cherry,
    ChevronDown: ChevronDown,
    ChevronDownCircle: CircleChevronDown,
    ChevronDownCircleIcon: CircleChevronDown,
    ChevronDownIcon: ChevronDown,
    ChevronDownSquare: SquareChevronDown,
    ChevronDownSquareIcon: SquareChevronDown,
    ChevronFirst: ChevronFirst,
    ChevronFirstIcon: ChevronFirst,
    ChevronLast: ChevronLast,
    ChevronLastIcon: ChevronLast,
    ChevronLeft: ChevronLeft,
    ChevronLeftCircle: CircleChevronLeft,
    ChevronLeftCircleIcon: CircleChevronLeft,
    ChevronLeftIcon: ChevronLeft,
    ChevronLeftSquare: SquareChevronLeft,
    ChevronLeftSquareIcon: SquareChevronLeft,
    ChevronRight: ChevronRight,
    ChevronRightCircle: CircleChevronRight,
    ChevronRightCircleIcon: CircleChevronRight,
    ChevronRightIcon: ChevronRight,
    ChevronRightSquare: SquareChevronRight,
    ChevronRightSquareIcon: SquareChevronRight,
    ChevronUp: ChevronUp,
    ChevronUpCircle: CircleChevronUp,
    ChevronUpCircleIcon: CircleChevronUp,
    ChevronUpIcon: ChevronUp,
    ChevronUpSquare: SquareChevronUp,
    ChevronUpSquareIcon: SquareChevronUp,
    ChevronsDown: ChevronsDown,
    ChevronsDownIcon: ChevronsDown,
    ChevronsDownUp: ChevronsDownUp,
    ChevronsDownUpIcon: ChevronsDownUp,
    ChevronsLeft: ChevronsLeft,
    ChevronsLeftIcon: ChevronsLeft,
    ChevronsLeftRight: ChevronsLeftRight,
    ChevronsLeftRightEllipsis: ChevronsLeftRightEllipsis,
    ChevronsLeftRightEllipsisIcon: ChevronsLeftRightEllipsis,
    ChevronsLeftRightIcon: ChevronsLeftRight,
    ChevronsRight: ChevronsRight,
    ChevronsRightIcon: ChevronsRight,
    ChevronsRightLeft: ChevronsRightLeft,
    ChevronsRightLeftIcon: ChevronsRightLeft,
    ChevronsUp: ChevronsUp,
    ChevronsUpDown: ChevronsUpDown,
    ChevronsUpDownIcon: ChevronsUpDown,
    ChevronsUpIcon: ChevronsUp,
    Chrome: Chrome,
    ChromeIcon: Chrome,
    Church: Church,
    ChurchIcon: Church,
    Cigarette: Cigarette,
    CigaretteIcon: Cigarette,
    CigaretteOff: CigaretteOff,
    CigaretteOffIcon: CigaretteOff,
    Circle: Circle,
    CircleAlert: CircleAlert,
    CircleAlertIcon: CircleAlert,
    CircleArrowDown: CircleArrowDown,
    CircleArrowDownIcon: CircleArrowDown,
    CircleArrowLeft: CircleArrowLeft,
    CircleArrowLeftIcon: CircleArrowLeft,
    CircleArrowOutDownLeft: CircleArrowOutDownLeft,
    CircleArrowOutDownLeftIcon: CircleArrowOutDownLeft,
    CircleArrowOutDownRight: CircleArrowOutDownRight,
    CircleArrowOutDownRightIcon: CircleArrowOutDownRight,
    CircleArrowOutUpLeft: CircleArrowOutUpLeft,
    CircleArrowOutUpLeftIcon: CircleArrowOutUpLeft,
    CircleArrowOutUpRight: CircleArrowOutUpRight,
    CircleArrowOutUpRightIcon: CircleArrowOutUpRight,
    CircleArrowRight: CircleArrowRight,
    CircleArrowRightIcon: CircleArrowRight,
    CircleArrowUp: CircleArrowUp,
    CircleArrowUpIcon: CircleArrowUp,
    CircleCheck: CircleCheck,
    CircleCheckBig: CircleCheckBig,
    CircleCheckBigIcon: CircleCheckBig,
    CircleCheckIcon: CircleCheck,
    CircleChevronDown: CircleChevronDown,
    CircleChevronDownIcon: CircleChevronDown,
    CircleChevronLeft: CircleChevronLeft,
    CircleChevronLeftIcon: CircleChevronLeft,
    CircleChevronRight: CircleChevronRight,
    CircleChevronRightIcon: CircleChevronRight,
    CircleChevronUp: CircleChevronUp,
    CircleChevronUpIcon: CircleChevronUp,
    CircleDashed: CircleDashed,
    CircleDashedIcon: CircleDashed,
    CircleDivide: CircleDivide,
    CircleDivideIcon: CircleDivide,
    CircleDollarSign: CircleDollarSign,
    CircleDollarSignIcon: CircleDollarSign,
    CircleDot: CircleDot,
    CircleDotDashed: CircleDotDashed,
    CircleDotDashedIcon: CircleDotDashed,
    CircleDotIcon: CircleDot,
    CircleEllipsis: CircleEllipsis,
    CircleEllipsisIcon: CircleEllipsis,
    CircleEqual: CircleEqual,
    CircleEqualIcon: CircleEqual,
    CircleFadingArrowUp: CircleFadingArrowUp,
    CircleFadingArrowUpIcon: CircleFadingArrowUp,
    CircleFadingPlus: CircleFadingPlus,
    CircleFadingPlusIcon: CircleFadingPlus,
    CircleGauge: CircleGauge,
    CircleGaugeIcon: CircleGauge,
    CircleHelp: CircleHelp,
    CircleHelpIcon: CircleHelp,
    CircleIcon: Circle,
    CircleMinus: CircleMinus,
    CircleMinusIcon: CircleMinus,
    CircleOff: CircleOff,
    CircleOffIcon: CircleOff,
    CircleParking: CircleParking,
    CircleParkingIcon: CircleParking,
    CircleParkingOff: CircleParkingOff,
    CircleParkingOffIcon: CircleParkingOff,
    CirclePause: CirclePause,
    CirclePauseIcon: CirclePause,
    CirclePercent: CirclePercent,
    CirclePercentIcon: CirclePercent,
    CirclePlay: CirclePlay,
    CirclePlayIcon: CirclePlay,
    CirclePlus: CirclePlus,
    CirclePlusIcon: CirclePlus,
    CirclePower: CirclePower,
    CirclePowerIcon: CirclePower,
    CircleSlash: CircleSlash,
    CircleSlash2: CircleSlash2,
    CircleSlash2Icon: CircleSlash2,
    CircleSlashIcon: CircleSlash,
    CircleSlashed: CircleSlash2,
    CircleSlashedIcon: CircleSlash2,
    CircleStop: CircleStop,
    CircleStopIcon: CircleStop,
    CircleUser: CircleUser,
    CircleUserIcon: CircleUser,
    CircleUserRound: CircleUserRound,
    CircleUserRoundIcon: CircleUserRound,
    CircleX: CircleX,
    CircleXIcon: CircleX,
    CircuitBoard: CircuitBoard,
    CircuitBoardIcon: CircuitBoard,
    Citrus: Citrus,
    CitrusIcon: Citrus,
    Clapperboard: Clapperboard,
    ClapperboardIcon: Clapperboard,
    Clipboard: Clipboard,
    ClipboardCheck: ClipboardCheck,
    ClipboardCheckIcon: ClipboardCheck,
    ClipboardCopy: ClipboardCopy,
    ClipboardCopyIcon: ClipboardCopy,
    ClipboardEdit: ClipboardPen,
    ClipboardEditIcon: ClipboardPen,
    ClipboardIcon: Clipboard,
    ClipboardList: ClipboardList,
    ClipboardListIcon: ClipboardList,
    ClipboardMinus: ClipboardMinus,
    ClipboardMinusIcon: ClipboardMinus,
    ClipboardPaste: ClipboardPaste,
    ClipboardPasteIcon: ClipboardPaste,
    ClipboardPen: ClipboardPen,
    ClipboardPenIcon: ClipboardPen,
    ClipboardPenLine: ClipboardPenLine,
    ClipboardPenLineIcon: ClipboardPenLine,
    ClipboardPlus: ClipboardPlus,
    ClipboardPlusIcon: ClipboardPlus,
    ClipboardSignature: ClipboardPenLine,
    ClipboardSignatureIcon: ClipboardPenLine,
    ClipboardType: ClipboardType,
    ClipboardTypeIcon: ClipboardType,
    ClipboardX: ClipboardX,
    ClipboardXIcon: ClipboardX,
    Clock: Clock,
    Clock1: Clock1,
    Clock10: Clock10,
    Clock10Icon: Clock10,
    Clock11: Clock11,
    Clock11Icon: Clock11,
    Clock12: Clock12,
    Clock12Icon: Clock12,
    Clock1Icon: Clock1,
    Clock2: Clock2,
    Clock2Icon: Clock2,
    Clock3: Clock3,
    Clock3Icon: Clock3,
    Clock4: Clock4,
    Clock4Icon: Clock4,
    Clock5: Clock5,
    Clock5Icon: Clock5,
    Clock6: Clock6,
    Clock6Icon: Clock6,
    Clock7: Clock7,
    Clock7Icon: Clock7,
    Clock8: Clock8,
    Clock8Icon: Clock8,
    Clock9: Clock9,
    Clock9Icon: Clock9,
    ClockAlert: ClockAlert,
    ClockAlertIcon: ClockAlert,
    ClockArrowDown: ClockArrowDown,
    ClockArrowDownIcon: ClockArrowDown,
    ClockArrowUp: ClockArrowUp,
    ClockArrowUpIcon: ClockArrowUp,
    ClockIcon: Clock,
    Cloud: Cloud,
    CloudAlert: CloudAlert,
    CloudAlertIcon: CloudAlert,
    CloudCog: CloudCog,
    CloudCogIcon: CloudCog,
    CloudDownload: CloudDownload,
    CloudDownloadIcon: CloudDownload,
    CloudDrizzle: CloudDrizzle,
    CloudDrizzleIcon: CloudDrizzle,
    CloudFog: CloudFog,
    CloudFogIcon: CloudFog,
    CloudHail: CloudHail,
    CloudHailIcon: CloudHail,
    CloudIcon: Cloud,
    CloudLightning: CloudLightning,
    CloudLightningIcon: CloudLightning,
    CloudMoon: CloudMoon,
    CloudMoonIcon: CloudMoon,
    CloudMoonRain: CloudMoonRain,
    CloudMoonRainIcon: CloudMoonRain,
    CloudOff: CloudOff,
    CloudOffIcon: CloudOff,
    CloudRain: CloudRain,
    CloudRainIcon: CloudRain,
    CloudRainWind: CloudRainWind,
    CloudRainWindIcon: CloudRainWind,
    CloudSnow: CloudSnow,
    CloudSnowIcon: CloudSnow,
    CloudSun: CloudSun,
    CloudSunIcon: CloudSun,
    CloudSunRain: CloudSunRain,
    CloudSunRainIcon: CloudSunRain,
    CloudUpload: CloudUpload,
    CloudUploadIcon: CloudUpload,
    Cloudy: Cloudy,
    CloudyIcon: Cloudy,
    Clover: Clover,
    CloverIcon: Clover,
    Club: Club,
    ClubIcon: Club,
    Code: Code,
    Code2: CodeXml,
    Code2Icon: CodeXml,
    CodeIcon: Code,
    CodeSquare: SquareCode,
    CodeSquareIcon: SquareCode,
    CodeXml: CodeXml,
    CodeXmlIcon: CodeXml,
    Codepen: Codepen,
    CodepenIcon: Codepen,
    Codesandbox: Codesandbox,
    CodesandboxIcon: Codesandbox,
    Coffee: Coffee,
    CoffeeIcon: Coffee,
    Cog: Cog,
    CogIcon: Cog,
    Coins: Coins,
    CoinsIcon: Coins,
    Columns: Columns2,
    Columns2: Columns2,
    Columns2Icon: Columns2,
    Columns3: Columns3,
    Columns3Icon: Columns3,
    Columns4: Columns4,
    Columns4Icon: Columns4,
    ColumnsIcon: Columns2,
    Combine: Combine,
    CombineIcon: Combine,
    Command: Command$1,
    CommandIcon: Command$1,
    Compass: Compass,
    CompassIcon: Compass,
    Component: Component,
    ComponentIcon: Component,
    Computer: Computer,
    ComputerIcon: Computer,
    ConciergeBell: ConciergeBell,
    ConciergeBellIcon: ConciergeBell,
    Cone: Cone,
    ConeIcon: Cone,
    Construction: Construction,
    ConstructionIcon: Construction,
    Contact: Contact,
    Contact2: ContactRound,
    Contact2Icon: ContactRound,
    ContactIcon: Contact,
    ContactRound: ContactRound,
    ContactRoundIcon: ContactRound,
    Container: Container$1,
    ContainerIcon: Container$1,
    Contrast: Contrast,
    ContrastIcon: Contrast,
    Cookie: Cookie,
    CookieIcon: Cookie,
    CookingPot: CookingPot,
    CookingPotIcon: CookingPot,
    Copy: Copy,
    CopyCheck: CopyCheck,
    CopyCheckIcon: CopyCheck,
    CopyIcon: Copy,
    CopyMinus: CopyMinus,
    CopyMinusIcon: CopyMinus,
    CopyPlus: CopyPlus,
    CopyPlusIcon: CopyPlus,
    CopySlash: CopySlash,
    CopySlashIcon: CopySlash,
    CopyX: CopyX,
    CopyXIcon: CopyX,
    Copyleft: Copyleft,
    CopyleftIcon: Copyleft,
    Copyright: Copyright,
    CopyrightIcon: Copyright,
    CornerDownLeft: CornerDownLeft,
    CornerDownLeftIcon: CornerDownLeft,
    CornerDownRight: CornerDownRight,
    CornerDownRightIcon: CornerDownRight,
    CornerLeftDown: CornerLeftDown,
    CornerLeftDownIcon: CornerLeftDown,
    CornerLeftUp: CornerLeftUp,
    CornerLeftUpIcon: CornerLeftUp,
    CornerRightDown: CornerRightDown,
    CornerRightDownIcon: CornerRightDown,
    CornerRightUp: CornerRightUp,
    CornerRightUpIcon: CornerRightUp,
    CornerUpLeft: CornerUpLeft,
    CornerUpLeftIcon: CornerUpLeft,
    CornerUpRight: CornerUpRight,
    CornerUpRightIcon: CornerUpRight,
    Cpu: Cpu,
    CpuIcon: Cpu,
    CreativeCommons: CreativeCommons,
    CreativeCommonsIcon: CreativeCommons,
    CreditCard: CreditCard,
    CreditCardIcon: CreditCard,
    Croissant: Croissant,
    CroissantIcon: Croissant,
    Crop: Crop,
    CropIcon: Crop,
    Cross: Cross,
    CrossIcon: Cross,
    Crosshair: Crosshair,
    CrosshairIcon: Crosshair,
    Crown: Crown,
    CrownIcon: Crown,
    Cuboid: Cuboid,
    CuboidIcon: Cuboid,
    CupSoda: CupSoda,
    CupSodaIcon: CupSoda,
    CurlyBraces: Braces,
    CurlyBracesIcon: Braces,
    Currency: Currency,
    CurrencyIcon: Currency,
    Cylinder: Cylinder,
    CylinderIcon: Cylinder,
    Dam: Dam,
    DamIcon: Dam,
    Database: Database,
    DatabaseBackup: DatabaseBackup,
    DatabaseBackupIcon: DatabaseBackup,
    DatabaseIcon: Database,
    DatabaseZap: DatabaseZap,
    DatabaseZapIcon: DatabaseZap,
    Delete: Delete,
    DeleteIcon: Delete,
    Dessert: Dessert,
    DessertIcon: Dessert,
    Diameter: Diameter,
    DiameterIcon: Diameter,
    Diamond: Diamond,
    DiamondIcon: Diamond,
    DiamondMinus: DiamondMinus,
    DiamondMinusIcon: DiamondMinus,
    DiamondPercent: DiamondPercent,
    DiamondPercentIcon: DiamondPercent,
    DiamondPlus: DiamondPlus,
    DiamondPlusIcon: DiamondPlus,
    Dice1: Dice1,
    Dice1Icon: Dice1,
    Dice2: Dice2,
    Dice2Icon: Dice2,
    Dice3: Dice3,
    Dice3Icon: Dice3,
    Dice4: Dice4,
    Dice4Icon: Dice4,
    Dice5: Dice5,
    Dice5Icon: Dice5,
    Dice6: Dice6,
    Dice6Icon: Dice6,
    Dices: Dices,
    DicesIcon: Dices,
    Diff: Diff,
    DiffIcon: Diff,
    Disc: Disc,
    Disc2: Disc2,
    Disc2Icon: Disc2,
    Disc3: Disc3,
    Disc3Icon: Disc3,
    DiscAlbum: DiscAlbum,
    DiscAlbumIcon: DiscAlbum,
    DiscIcon: Disc,
    Divide: Divide,
    DivideCircle: CircleDivide,
    DivideCircleIcon: CircleDivide,
    DivideIcon: Divide,
    DivideSquare: SquareDivide,
    DivideSquareIcon: SquareDivide,
    Dna: Dna,
    DnaIcon: Dna,
    DnaOff: DnaOff,
    DnaOffIcon: DnaOff,
    Dock: Dock,
    DockIcon: Dock,
    Dog: Dog,
    DogIcon: Dog,
    DollarSign: DollarSign,
    DollarSignIcon: DollarSign,
    Donut: Donut,
    DonutIcon: Donut,
    DoorClosed: DoorClosed,
    DoorClosedIcon: DoorClosed,
    DoorOpen: DoorOpen,
    DoorOpenIcon: DoorOpen,
    Dot: Dot,
    DotIcon: Dot,
    DotSquare: SquareDot,
    DotSquareIcon: SquareDot,
    Download: Download,
    DownloadCloud: CloudDownload,
    DownloadCloudIcon: CloudDownload,
    DownloadIcon: Download,
    DraftingCompass: DraftingCompass,
    DraftingCompassIcon: DraftingCompass,
    Drama: Drama,
    DramaIcon: Drama,
    Dribbble: Dribbble,
    DribbbleIcon: Dribbble,
    Drill: Drill,
    DrillIcon: Drill,
    Droplet: Droplet,
    DropletIcon: Droplet,
    Droplets: Droplets,
    DropletsIcon: Droplets,
    Drum: Drum,
    DrumIcon: Drum,
    Drumstick: Drumstick,
    DrumstickIcon: Drumstick,
    Dumbbell: Dumbbell,
    DumbbellIcon: Dumbbell,
    Ear: Ear,
    EarIcon: Ear,
    EarOff: EarOff,
    EarOffIcon: EarOff,
    Earth: Earth,
    EarthIcon: Earth,
    EarthLock: EarthLock,
    EarthLockIcon: EarthLock,
    Eclipse: Eclipse,
    EclipseIcon: Eclipse,
    Edit: SquarePen,
    Edit2: Pen,
    Edit2Icon: Pen,
    Edit3: PenLine,
    Edit3Icon: PenLine,
    EditIcon: SquarePen,
    Egg: Egg,
    EggFried: EggFried,
    EggFriedIcon: EggFried,
    EggIcon: Egg,
    EggOff: EggOff,
    EggOffIcon: EggOff,
    Ellipsis: Ellipsis,
    EllipsisIcon: Ellipsis,
    EllipsisVertical: EllipsisVertical,
    EllipsisVerticalIcon: EllipsisVertical,
    Equal: Equal,
    EqualApproximately: EqualApproximately,
    EqualApproximatelyIcon: EqualApproximately,
    EqualIcon: Equal,
    EqualNot: EqualNot,
    EqualNotIcon: EqualNot,
    EqualSquare: SquareEqual,
    EqualSquareIcon: SquareEqual,
    Eraser: Eraser,
    EraserIcon: Eraser,
    EthernetPort: EthernetPort,
    EthernetPortIcon: EthernetPort,
    Euro: Euro,
    EuroIcon: Euro,
    Expand: Expand,
    ExpandIcon: Expand,
    ExternalLink: ExternalLink,
    ExternalLinkIcon: ExternalLink,
    Eye: Eye,
    EyeClosed: EyeClosed,
    EyeClosedIcon: EyeClosed,
    EyeIcon: Eye,
    EyeOff: EyeOff,
    EyeOffIcon: EyeOff,
    Facebook: Facebook,
    FacebookIcon: Facebook,
    Factory: Factory,
    FactoryIcon: Factory,
    Fan: Fan,
    FanIcon: Fan,
    FastForward: FastForward,
    FastForwardIcon: FastForward,
    Feather: Feather,
    FeatherIcon: Feather,
    Fence: Fence,
    FenceIcon: Fence,
    FerrisWheel: FerrisWheel,
    FerrisWheelIcon: FerrisWheel,
    Figma: Figma,
    FigmaIcon: Figma,
    File: File,
    FileArchive: FileArchive,
    FileArchiveIcon: FileArchive,
    FileAudio: FileAudio,
    FileAudio2: FileAudio2,
    FileAudio2Icon: FileAudio2,
    FileAudioIcon: FileAudio,
    FileAxis3D: FileAxis3d,
    FileAxis3DIcon: FileAxis3d,
    FileAxis3d: FileAxis3d,
    FileAxis3dIcon: FileAxis3d,
    FileBadge: FileBadge,
    FileBadge2: FileBadge2,
    FileBadge2Icon: FileBadge2,
    FileBadgeIcon: FileBadge,
    FileBarChart: FileChartColumnIncreasing,
    FileBarChart2: FileChartColumn,
    FileBarChart2Icon: FileChartColumn,
    FileBarChartIcon: FileChartColumnIncreasing,
    FileBox: FileBox,
    FileBoxIcon: FileBox,
    FileChartColumn: FileChartColumn,
    FileChartColumnIcon: FileChartColumn,
    FileChartColumnIncreasing: FileChartColumnIncreasing,
    FileChartColumnIncreasingIcon: FileChartColumnIncreasing,
    FileChartLine: FileChartLine,
    FileChartLineIcon: FileChartLine,
    FileChartPie: FileChartPie,
    FileChartPieIcon: FileChartPie,
    FileCheck: FileCheck,
    FileCheck2: FileCheck2,
    FileCheck2Icon: FileCheck2,
    FileCheckIcon: FileCheck,
    FileClock: FileClock,
    FileClockIcon: FileClock,
    FileCode: FileCode,
    FileCode2: FileCode2,
    FileCode2Icon: FileCode2,
    FileCodeIcon: FileCode,
    FileCog: FileCog,
    FileCog2: FileCog,
    FileCog2Icon: FileCog,
    FileCogIcon: FileCog,
    FileDiff: FileDiff,
    FileDiffIcon: FileDiff,
    FileDigit: FileDigit,
    FileDigitIcon: FileDigit,
    FileDown: FileDown,
    FileDownIcon: FileDown,
    FileEdit: FilePen,
    FileEditIcon: FilePen,
    FileHeart: FileHeart,
    FileHeartIcon: FileHeart,
    FileIcon: File,
    FileImage: FileImage,
    FileImageIcon: FileImage,
    FileInput: FileInput,
    FileInputIcon: FileInput,
    FileJson: FileJson,
    FileJson2: FileJson2,
    FileJson2Icon: FileJson2,
    FileJsonIcon: FileJson,
    FileKey: FileKey,
    FileKey2: FileKey2,
    FileKey2Icon: FileKey2,
    FileKeyIcon: FileKey,
    FileLineChart: FileChartLine,
    FileLineChartIcon: FileChartLine,
    FileLock: FileLock,
    FileLock2: FileLock2,
    FileLock2Icon: FileLock2,
    FileLockIcon: FileLock,
    FileMinus: FileMinus,
    FileMinus2: FileMinus2,
    FileMinus2Icon: FileMinus2,
    FileMinusIcon: FileMinus,
    FileMusic: FileMusic,
    FileMusicIcon: FileMusic,
    FileOutput: FileOutput,
    FileOutputIcon: FileOutput,
    FilePen: FilePen,
    FilePenIcon: FilePen,
    FilePenLine: FilePenLine,
    FilePenLineIcon: FilePenLine,
    FilePieChart: FileChartPie,
    FilePieChartIcon: FileChartPie,
    FilePlus: FilePlus,
    FilePlus2: FilePlus2,
    FilePlus2Icon: FilePlus2,
    FilePlusIcon: FilePlus,
    FileQuestion: FileQuestion,
    FileQuestionIcon: FileQuestion,
    FileScan: FileScan,
    FileScanIcon: FileScan,
    FileSearch: FileSearch,
    FileSearch2: FileSearch2,
    FileSearch2Icon: FileSearch2,
    FileSearchIcon: FileSearch,
    FileSignature: FilePenLine,
    FileSignatureIcon: FilePenLine,
    FileSliders: FileSliders,
    FileSlidersIcon: FileSliders,
    FileSpreadsheet: FileSpreadsheet,
    FileSpreadsheetIcon: FileSpreadsheet,
    FileStack: FileStack,
    FileStackIcon: FileStack,
    FileSymlink: FileSymlink,
    FileSymlinkIcon: FileSymlink,
    FileTerminal: FileTerminal,
    FileTerminalIcon: FileTerminal,
    FileText: FileText,
    FileTextIcon: FileText,
    FileType: FileType,
    FileType2: FileType2,
    FileType2Icon: FileType2,
    FileTypeIcon: FileType,
    FileUp: FileUp,
    FileUpIcon: FileUp,
    FileUser: FileUser,
    FileUserIcon: FileUser,
    FileVideo: FileVideo,
    FileVideo2: FileVideo2,
    FileVideo2Icon: FileVideo2,
    FileVideoIcon: FileVideo,
    FileVolume: FileVolume,
    FileVolume2: FileVolume2,
    FileVolume2Icon: FileVolume2,
    FileVolumeIcon: FileVolume,
    FileWarning: FileWarning,
    FileWarningIcon: FileWarning,
    FileX: FileX,
    FileX2: FileX2,
    FileX2Icon: FileX2,
    FileXIcon: FileX,
    Files: Files,
    FilesIcon: Files,
    Film: Film,
    FilmIcon: Film,
    Filter: Filter$1,
    FilterIcon: Filter$1,
    FilterX: FilterX,
    FilterXIcon: FilterX,
    Fingerprint: Fingerprint,
    FingerprintIcon: Fingerprint,
    FireExtinguisher: FireExtinguisher,
    FireExtinguisherIcon: FireExtinguisher,
    Fish: Fish,
    FishIcon: Fish,
    FishOff: FishOff,
    FishOffIcon: FishOff,
    FishSymbol: FishSymbol,
    FishSymbolIcon: FishSymbol,
    Flag: Flag,
    FlagIcon: Flag,
    FlagOff: FlagOff,
    FlagOffIcon: FlagOff,
    FlagTriangleLeft: FlagTriangleLeft,
    FlagTriangleLeftIcon: FlagTriangleLeft,
    FlagTriangleRight: FlagTriangleRight,
    FlagTriangleRightIcon: FlagTriangleRight,
    Flame: Flame,
    FlameIcon: Flame,
    FlameKindling: FlameKindling,
    FlameKindlingIcon: FlameKindling,
    Flashlight: Flashlight,
    FlashlightIcon: Flashlight,
    FlashlightOff: FlashlightOff,
    FlashlightOffIcon: FlashlightOff,
    FlaskConical: FlaskConical,
    FlaskConicalIcon: FlaskConical,
    FlaskConicalOff: FlaskConicalOff,
    FlaskConicalOffIcon: FlaskConicalOff,
    FlaskRound: FlaskRound,
    FlaskRoundIcon: FlaskRound,
    FlipHorizontal: FlipHorizontal,
    FlipHorizontal2: FlipHorizontal2,
    FlipHorizontal2Icon: FlipHorizontal2,
    FlipHorizontalIcon: FlipHorizontal,
    FlipVertical: FlipVertical,
    FlipVertical2: FlipVertical2,
    FlipVertical2Icon: FlipVertical2,
    FlipVerticalIcon: FlipVertical,
    Flower: Flower,
    Flower2: Flower2,
    Flower2Icon: Flower2,
    FlowerIcon: Flower,
    Focus: Focus,
    FocusIcon: Focus,
    FoldHorizontal: FoldHorizontal,
    FoldHorizontalIcon: FoldHorizontal,
    FoldVertical: FoldVertical,
    FoldVerticalIcon: FoldVertical,
    Folder: Folder,
    FolderArchive: FolderArchive,
    FolderArchiveIcon: FolderArchive,
    FolderCheck: FolderCheck,
    FolderCheckIcon: FolderCheck,
    FolderClock: FolderClock,
    FolderClockIcon: FolderClock,
    FolderClosed: FolderClosed,
    FolderClosedIcon: FolderClosed,
    FolderCode: FolderCode,
    FolderCodeIcon: FolderCode,
    FolderCog: FolderCog,
    FolderCog2: FolderCog,
    FolderCog2Icon: FolderCog,
    FolderCogIcon: FolderCog,
    FolderDot: FolderDot,
    FolderDotIcon: FolderDot,
    FolderDown: FolderDown,
    FolderDownIcon: FolderDown,
    FolderEdit: FolderPen,
    FolderEditIcon: FolderPen,
    FolderGit: FolderGit,
    FolderGit2: FolderGit2,
    FolderGit2Icon: FolderGit2,
    FolderGitIcon: FolderGit,
    FolderHeart: FolderHeart,
    FolderHeartIcon: FolderHeart,
    FolderIcon: Folder,
    FolderInput: FolderInput,
    FolderInputIcon: FolderInput,
    FolderKanban: FolderKanban,
    FolderKanbanIcon: FolderKanban,
    FolderKey: FolderKey,
    FolderKeyIcon: FolderKey,
    FolderLock: FolderLock,
    FolderLockIcon: FolderLock,
    FolderMinus: FolderMinus,
    FolderMinusIcon: FolderMinus,
    FolderOpen: FolderOpen,
    FolderOpenDot: FolderOpenDot,
    FolderOpenDotIcon: FolderOpenDot,
    FolderOpenIcon: FolderOpen,
    FolderOutput: FolderOutput,
    FolderOutputIcon: FolderOutput,
    FolderPen: FolderPen,
    FolderPenIcon: FolderPen,
    FolderPlus: FolderPlus,
    FolderPlusIcon: FolderPlus,
    FolderRoot: FolderRoot,
    FolderRootIcon: FolderRoot,
    FolderSearch: FolderSearch,
    FolderSearch2: FolderSearch2,
    FolderSearch2Icon: FolderSearch2,
    FolderSearchIcon: FolderSearch,
    FolderSymlink: FolderSymlink,
    FolderSymlinkIcon: FolderSymlink,
    FolderSync: FolderSync,
    FolderSyncIcon: FolderSync,
    FolderTree: FolderTree,
    FolderTreeIcon: FolderTree,
    FolderUp: FolderUp,
    FolderUpIcon: FolderUp,
    FolderX: FolderX,
    FolderXIcon: FolderX,
    Folders: Folders,
    FoldersIcon: Folders,
    Footprints: Footprints,
    FootprintsIcon: Footprints,
    ForkKnife: Utensils,
    ForkKnifeCrossed: UtensilsCrossed,
    ForkKnifeCrossedIcon: UtensilsCrossed,
    ForkKnifeIcon: Utensils,
    Forklift: Forklift,
    ForkliftIcon: Forklift,
    FormInput: RectangleEllipsis,
    FormInputIcon: RectangleEllipsis,
    Forward: Forward,
    ForwardIcon: Forward,
    Frame: Frame,
    FrameIcon: Frame,
    Framer: Framer,
    FramerIcon: Framer,
    Frown: Frown,
    FrownIcon: Frown,
    Fuel: Fuel,
    FuelIcon: Fuel,
    Fullscreen: Fullscreen,
    FullscreenIcon: Fullscreen,
    FunctionSquare: SquareFunction,
    FunctionSquareIcon: SquareFunction,
    GalleryHorizontal: GalleryHorizontal,
    GalleryHorizontalEnd: GalleryHorizontalEnd,
    GalleryHorizontalEndIcon: GalleryHorizontalEnd,
    GalleryHorizontalIcon: GalleryHorizontal,
    GalleryThumbnails: GalleryThumbnails,
    GalleryThumbnailsIcon: GalleryThumbnails,
    GalleryVertical: GalleryVertical,
    GalleryVerticalEnd: GalleryVerticalEnd,
    GalleryVerticalEndIcon: GalleryVerticalEnd,
    GalleryVerticalIcon: GalleryVertical,
    Gamepad: Gamepad,
    Gamepad2: Gamepad2,
    Gamepad2Icon: Gamepad2,
    GamepadIcon: Gamepad,
    GanttChart: ChartNoAxesGantt,
    GanttChartIcon: ChartNoAxesGantt,
    GanttChartSquare: SquareChartGantt,
    GanttChartSquareIcon: SquareChartGantt,
    Gauge: Gauge,
    GaugeCircle: CircleGauge,
    GaugeCircleIcon: CircleGauge,
    GaugeIcon: Gauge,
    Gavel: Gavel,
    GavelIcon: Gavel,
    Gem: Gem,
    GemIcon: Gem,
    Ghost: Ghost,
    GhostIcon: Ghost,
    Gift: Gift,
    GiftIcon: Gift,
    GitBranch: GitBranch,
    GitBranchIcon: GitBranch,
    GitBranchPlus: GitBranchPlus,
    GitBranchPlusIcon: GitBranchPlus,
    GitCommit: GitCommitHorizontal,
    GitCommitHorizontal: GitCommitHorizontal,
    GitCommitHorizontalIcon: GitCommitHorizontal,
    GitCommitIcon: GitCommitHorizontal,
    GitCommitVertical: GitCommitVertical,
    GitCommitVerticalIcon: GitCommitVertical,
    GitCompare: GitCompare,
    GitCompareArrows: GitCompareArrows,
    GitCompareArrowsIcon: GitCompareArrows,
    GitCompareIcon: GitCompare,
    GitFork: GitFork,
    GitForkIcon: GitFork,
    GitGraph: GitGraph,
    GitGraphIcon: GitGraph,
    GitMerge: GitMerge,
    GitMergeIcon: GitMerge,
    GitPullRequest: GitPullRequest,
    GitPullRequestArrow: GitPullRequestArrow,
    GitPullRequestArrowIcon: GitPullRequestArrow,
    GitPullRequestClosed: GitPullRequestClosed,
    GitPullRequestClosedIcon: GitPullRequestClosed,
    GitPullRequestCreate: GitPullRequestCreate,
    GitPullRequestCreateArrow: GitPullRequestCreateArrow,
    GitPullRequestCreateArrowIcon: GitPullRequestCreateArrow,
    GitPullRequestCreateIcon: GitPullRequestCreate,
    GitPullRequestDraft: GitPullRequestDraft,
    GitPullRequestDraftIcon: GitPullRequestDraft,
    GitPullRequestIcon: GitPullRequest,
    Github: Github,
    GithubIcon: Github,
    Gitlab: Gitlab,
    GitlabIcon: Gitlab,
    GlassWater: GlassWater,
    GlassWaterIcon: GlassWater,
    Glasses: Glasses,
    GlassesIcon: Glasses,
    Globe: Globe,
    Globe2: Earth,
    Globe2Icon: Earth,
    GlobeIcon: Globe,
    GlobeLock: GlobeLock,
    GlobeLockIcon: GlobeLock,
    Goal: Goal,
    GoalIcon: Goal,
    Grab: Grab,
    GrabIcon: Grab,
    GraduationCap: GraduationCap,
    GraduationCapIcon: GraduationCap,
    Grape: Grape,
    GrapeIcon: Grape,
    Grid: Grid3x3,
    Grid2X2: Grid2x2,
    Grid2X2Icon: Grid2x2,
    Grid2X2Plus: Grid2x2Plus,
    Grid2X2PlusIcon: Grid2x2Plus,
    Grid2x2: Grid2x2,
    Grid2x2Check: Grid2x2Check,
    Grid2x2CheckIcon: Grid2x2Check,
    Grid2x2Icon: Grid2x2,
    Grid2x2Plus: Grid2x2Plus,
    Grid2x2PlusIcon: Grid2x2Plus,
    Grid2x2X: Grid2x2X,
    Grid2x2XIcon: Grid2x2X,
    Grid3X3: Grid3x3,
    Grid3X3Icon: Grid3x3,
    Grid3x3: Grid3x3,
    Grid3x3Icon: Grid3x3,
    GridIcon: Grid3x3,
    Grip: Grip,
    GripHorizontal: GripHorizontal,
    GripHorizontalIcon: GripHorizontal,
    GripIcon: Grip,
    GripVertical: GripVertical,
    GripVerticalIcon: GripVertical,
    Group: Group,
    GroupIcon: Group,
    Guitar: Guitar,
    GuitarIcon: Guitar,
    Ham: Ham,
    HamIcon: Ham,
    Hammer: Hammer,
    HammerIcon: Hammer,
    Hand: Hand,
    HandCoins: HandCoins,
    HandCoinsIcon: HandCoins,
    HandHeart: HandHeart,
    HandHeartIcon: HandHeart,
    HandHelping: HandHelping,
    HandHelpingIcon: HandHelping,
    HandIcon: Hand,
    HandMetal: HandMetal,
    HandMetalIcon: HandMetal,
    HandPlatter: HandPlatter,
    HandPlatterIcon: HandPlatter,
    Handshake: Handshake,
    HandshakeIcon: Handshake,
    HardDrive: HardDrive,
    HardDriveDownload: HardDriveDownload,
    HardDriveDownloadIcon: HardDriveDownload,
    HardDriveIcon: HardDrive,
    HardDriveUpload: HardDriveUpload,
    HardDriveUploadIcon: HardDriveUpload,
    HardHat: HardHat,
    HardHatIcon: HardHat,
    Hash: Hash,
    HashIcon: Hash,
    Haze: Haze,
    HazeIcon: Haze,
    HdmiPort: HdmiPort,
    HdmiPortIcon: HdmiPort,
    Heading: Heading,
    Heading1: Heading1,
    Heading1Icon: Heading1,
    Heading2: Heading2,
    Heading2Icon: Heading2,
    Heading3: Heading3,
    Heading3Icon: Heading3,
    Heading4: Heading4,
    Heading4Icon: Heading4,
    Heading5: Heading5,
    Heading5Icon: Heading5,
    Heading6: Heading6,
    Heading6Icon: Heading6,
    HeadingIcon: Heading,
    HeadphoneOff: HeadphoneOff,
    HeadphoneOffIcon: HeadphoneOff,
    Headphones: Headphones,
    HeadphonesIcon: Headphones,
    Headset: Headset,
    HeadsetIcon: Headset,
    Heart: Heart,
    HeartCrack: HeartCrack,
    HeartCrackIcon: HeartCrack,
    HeartHandshake: HeartHandshake,
    HeartHandshakeIcon: HeartHandshake,
    HeartIcon: Heart,
    HeartOff: HeartOff,
    HeartOffIcon: HeartOff,
    HeartPulse: HeartPulse,
    HeartPulseIcon: HeartPulse,
    Heater: Heater,
    HeaterIcon: Heater,
    HelpCircle: CircleHelp,
    HelpCircleIcon: CircleHelp,
    HelpingHand: HandHelping,
    HelpingHandIcon: HandHelping,
    Hexagon: Hexagon,
    HexagonIcon: Hexagon,
    Highlighter: Highlighter,
    HighlighterIcon: Highlighter,
    History: History,
    HistoryIcon: History,
    Home: House,
    HomeIcon: House,
    Hop: Hop,
    HopIcon: Hop,
    HopOff: HopOff,
    HopOffIcon: HopOff,
    Hospital: Hospital,
    HospitalIcon: Hospital,
    Hotel: Hotel,
    HotelIcon: Hotel,
    Hourglass: Hourglass,
    HourglassIcon: Hourglass,
    House: House,
    HouseIcon: House,
    HousePlug: HousePlug,
    HousePlugIcon: HousePlug,
    HousePlus: HousePlus,
    HousePlusIcon: HousePlus,
    IceCream: IceCreamCone,
    IceCream2: IceCreamBowl,
    IceCream2Icon: IceCreamBowl,
    IceCreamBowl: IceCreamBowl,
    IceCreamBowlIcon: IceCreamBowl,
    IceCreamCone: IceCreamCone,
    IceCreamConeIcon: IceCreamCone,
    IceCreamIcon: IceCreamCone,
    Icon: Icon,
    IdCard: IdCard,
    IdCardIcon: IdCard,
    Image: Image,
    ImageDown: ImageDown,
    ImageDownIcon: ImageDown,
    ImageIcon: Image,
    ImageMinus: ImageMinus,
    ImageMinusIcon: ImageMinus,
    ImageOff: ImageOff,
    ImageOffIcon: ImageOff,
    ImagePlay: ImagePlay,
    ImagePlayIcon: ImagePlay,
    ImagePlus: ImagePlus,
    ImagePlusIcon: ImagePlus,
    ImageUp: ImageUp,
    ImageUpIcon: ImageUp,
    ImageUpscale: ImageUpscale,
    ImageUpscaleIcon: ImageUpscale,
    Images: Images,
    ImagesIcon: Images,
    Import: Import,
    ImportIcon: Import,
    Inbox: Inbox,
    InboxIcon: Inbox,
    Indent: IndentIncrease,
    IndentDecrease: IndentDecrease,
    IndentDecreaseIcon: IndentDecrease,
    IndentIcon: IndentIncrease,
    IndentIncrease: IndentIncrease,
    IndentIncreaseIcon: IndentIncrease,
    IndianRupee: IndianRupee,
    IndianRupeeIcon: IndianRupee,
    Infinity: Infinity,
    InfinityIcon: Infinity,
    Info: Info,
    InfoIcon: Info,
    Inspect: SquareMousePointer,
    InspectIcon: SquareMousePointer,
    InspectionPanel: InspectionPanel,
    InspectionPanelIcon: InspectionPanel,
    Instagram: Instagram,
    InstagramIcon: Instagram,
    Italic: Italic,
    ItalicIcon: Italic,
    IterationCcw: IterationCcw,
    IterationCcwIcon: IterationCcw,
    IterationCw: IterationCw,
    IterationCwIcon: IterationCw,
    JapaneseYen: JapaneseYen,
    JapaneseYenIcon: JapaneseYen,
    Joystick: Joystick,
    JoystickIcon: Joystick,
    Kanban: Kanban,
    KanbanIcon: Kanban,
    KanbanSquare: SquareKanban,
    KanbanSquareDashed: SquareDashedKanban,
    KanbanSquareDashedIcon: SquareDashedKanban,
    KanbanSquareIcon: SquareKanban,
    Key: Key,
    KeyIcon: Key,
    KeyRound: KeyRound,
    KeyRoundIcon: KeyRound,
    KeySquare: KeySquare,
    KeySquareIcon: KeySquare,
    Keyboard: Keyboard,
    KeyboardIcon: Keyboard,
    KeyboardMusic: KeyboardMusic,
    KeyboardMusicIcon: KeyboardMusic,
    KeyboardOff: KeyboardOff,
    KeyboardOffIcon: KeyboardOff,
    Lamp: Lamp,
    LampCeiling: LampCeiling,
    LampCeilingIcon: LampCeiling,
    LampDesk: LampDesk,
    LampDeskIcon: LampDesk,
    LampFloor: LampFloor,
    LampFloorIcon: LampFloor,
    LampIcon: Lamp,
    LampWallDown: LampWallDown,
    LampWallDownIcon: LampWallDown,
    LampWallUp: LampWallUp,
    LampWallUpIcon: LampWallUp,
    LandPlot: LandPlot,
    LandPlotIcon: LandPlot,
    Landmark: Landmark,
    LandmarkIcon: Landmark,
    Languages: Languages,
    LanguagesIcon: Languages,
    Laptop: Laptop,
    Laptop2: LaptopMinimal,
    Laptop2Icon: LaptopMinimal,
    LaptopIcon: Laptop,
    LaptopMinimal: LaptopMinimal,
    LaptopMinimalCheck: LaptopMinimalCheck,
    LaptopMinimalCheckIcon: LaptopMinimalCheck,
    LaptopMinimalIcon: LaptopMinimal,
    Lasso: Lasso,
    LassoIcon: Lasso,
    LassoSelect: LassoSelect,
    LassoSelectIcon: LassoSelect,
    Laugh: Laugh,
    LaughIcon: Laugh,
    Layers: Layers,
    Layers2: Layers2,
    Layers2Icon: Layers2,
    Layers3: Layers3,
    Layers3Icon: Layers3,
    LayersIcon: Layers,
    Layout: PanelsTopLeft,
    LayoutDashboard: LayoutDashboard,
    LayoutDashboardIcon: LayoutDashboard,
    LayoutGrid: LayoutGrid,
    LayoutGridIcon: LayoutGrid,
    LayoutIcon: PanelsTopLeft,
    LayoutList: LayoutList,
    LayoutListIcon: LayoutList,
    LayoutPanelLeft: LayoutPanelLeft,
    LayoutPanelLeftIcon: LayoutPanelLeft,
    LayoutPanelTop: LayoutPanelTop,
    LayoutPanelTopIcon: LayoutPanelTop,
    LayoutTemplate: LayoutTemplate,
    LayoutTemplateIcon: LayoutTemplate,
    Leaf: Leaf,
    LeafIcon: Leaf,
    LeafyGreen: LeafyGreen,
    LeafyGreenIcon: LeafyGreen,
    Lectern: Lectern,
    LecternIcon: Lectern,
    LetterText: LetterText,
    LetterTextIcon: LetterText,
    Library: Library,
    LibraryBig: LibraryBig,
    LibraryBigIcon: LibraryBig,
    LibraryIcon: Library,
    LibrarySquare: SquareLibrary,
    LibrarySquareIcon: SquareLibrary,
    LifeBuoy: LifeBuoy,
    LifeBuoyIcon: LifeBuoy,
    Ligature: Ligature,
    LigatureIcon: Ligature,
    Lightbulb: Lightbulb,
    LightbulbIcon: Lightbulb,
    LightbulbOff: LightbulbOff,
    LightbulbOffIcon: LightbulbOff,
    LineChart: ChartLine,
    LineChartIcon: ChartLine,
    Link: Link$1,
    Link2: Link2,
    Link2Icon: Link2,
    Link2Off: Link2Off,
    Link2OffIcon: Link2Off,
    LinkIcon: Link$1,
    Linkedin: Linkedin,
    LinkedinIcon: Linkedin,
    List: List$1,
    ListCheck: ListCheck,
    ListCheckIcon: ListCheck,
    ListChecks: ListChecks,
    ListChecksIcon: ListChecks,
    ListCollapse: ListCollapse,
    ListCollapseIcon: ListCollapse,
    ListEnd: ListEnd,
    ListEndIcon: ListEnd,
    ListFilter: ListFilter,
    ListFilterIcon: ListFilter,
    ListIcon: List$1,
    ListMinus: ListMinus,
    ListMinusIcon: ListMinus,
    ListMusic: ListMusic,
    ListMusicIcon: ListMusic,
    ListOrdered: ListOrdered,
    ListOrderedIcon: ListOrdered,
    ListPlus: ListPlus,
    ListPlusIcon: ListPlus,
    ListRestart: ListRestart,
    ListRestartIcon: ListRestart,
    ListStart: ListStart,
    ListStartIcon: ListStart,
    ListTodo: ListTodo,
    ListTodoIcon: ListTodo,
    ListTree: ListTree,
    ListTreeIcon: ListTree,
    ListVideo: ListVideo,
    ListVideoIcon: ListVideo,
    ListX: ListX,
    ListXIcon: ListX,
    Loader: Loader,
    Loader2: LoaderCircle,
    Loader2Icon: LoaderCircle,
    LoaderCircle: LoaderCircle,
    LoaderCircleIcon: LoaderCircle,
    LoaderIcon: Loader,
    LoaderPinwheel: LoaderPinwheel,
    LoaderPinwheelIcon: LoaderPinwheel,
    Locate: Locate,
    LocateFixed: LocateFixed,
    LocateFixedIcon: LocateFixed,
    LocateIcon: Locate,
    LocateOff: LocateOff,
    LocateOffIcon: LocateOff,
    Lock: Lock,
    LockIcon: Lock,
    LockKeyhole: LockKeyhole,
    LockKeyholeIcon: LockKeyhole,
    LockKeyholeOpen: LockKeyholeOpen,
    LockKeyholeOpenIcon: LockKeyholeOpen,
    LockOpen: LockOpen,
    LockOpenIcon: LockOpen,
    LogIn: LogIn,
    LogInIcon: LogIn,
    LogOut: LogOut,
    LogOutIcon: LogOut,
    Logs: Logs,
    LogsIcon: Logs,
    Lollipop: Lollipop,
    LollipopIcon: Lollipop,
    LucideAArrowDown: AArrowDown,
    LucideAArrowUp: AArrowUp,
    LucideALargeSmall: ALargeSmall,
    LucideAccessibility: Accessibility,
    LucideActivity: Activity,
    LucideActivitySquare: SquareActivity,
    LucideAirVent: AirVent,
    LucideAirplay: Airplay,
    LucideAlarmCheck: AlarmClockCheck,
    LucideAlarmClock: AlarmClock,
    LucideAlarmClockCheck: AlarmClockCheck,
    LucideAlarmClockMinus: AlarmClockMinus,
    LucideAlarmClockOff: AlarmClockOff,
    LucideAlarmClockPlus: AlarmClockPlus,
    LucideAlarmMinus: AlarmClockMinus,
    LucideAlarmPlus: AlarmClockPlus,
    LucideAlarmSmoke: AlarmSmoke,
    LucideAlbum: Album,
    LucideAlertCircle: CircleAlert,
    LucideAlertOctagon: OctagonAlert,
    LucideAlertTriangle: TriangleAlert,
    LucideAlignCenter: AlignCenter,
    LucideAlignCenterHorizontal: AlignCenterHorizontal,
    LucideAlignCenterVertical: AlignCenterVertical,
    LucideAlignEndHorizontal: AlignEndHorizontal,
    LucideAlignEndVertical: AlignEndVertical,
    LucideAlignHorizontalDistributeCenter: AlignHorizontalDistributeCenter,
    LucideAlignHorizontalDistributeEnd: AlignHorizontalDistributeEnd,
    LucideAlignHorizontalDistributeStart: AlignHorizontalDistributeStart,
    LucideAlignHorizontalJustifyCenter: AlignHorizontalJustifyCenter,
    LucideAlignHorizontalJustifyEnd: AlignHorizontalJustifyEnd,
    LucideAlignHorizontalJustifyStart: AlignHorizontalJustifyStart,
    LucideAlignHorizontalSpaceAround: AlignHorizontalSpaceAround,
    LucideAlignHorizontalSpaceBetween: AlignHorizontalSpaceBetween,
    LucideAlignJustify: AlignJustify,
    LucideAlignLeft: AlignLeft,
    LucideAlignRight: AlignRight,
    LucideAlignStartHorizontal: AlignStartHorizontal,
    LucideAlignStartVertical: AlignStartVertical,
    LucideAlignVerticalDistributeCenter: AlignVerticalDistributeCenter,
    LucideAlignVerticalDistributeEnd: AlignVerticalDistributeEnd,
    LucideAlignVerticalDistributeStart: AlignVerticalDistributeStart,
    LucideAlignVerticalJustifyCenter: AlignVerticalJustifyCenter,
    LucideAlignVerticalJustifyEnd: AlignVerticalJustifyEnd,
    LucideAlignVerticalJustifyStart: AlignVerticalJustifyStart,
    LucideAlignVerticalSpaceAround: AlignVerticalSpaceAround,
    LucideAlignVerticalSpaceBetween: AlignVerticalSpaceBetween,
    LucideAmbulance: Ambulance,
    LucideAmpersand: Ampersand,
    LucideAmpersands: Ampersands,
    LucideAmphora: Amphora,
    LucideAnchor: Anchor,
    LucideAngry: Angry,
    LucideAnnoyed: Annoyed,
    LucideAntenna: Antenna,
    LucideAnvil: Anvil,
    LucideAperture: Aperture,
    LucideAppWindow: AppWindow,
    LucideAppWindowMac: AppWindowMac,
    LucideApple: Apple,
    LucideArchive: Archive,
    LucideArchiveRestore: ArchiveRestore,
    LucideArchiveX: ArchiveX,
    LucideAreaChart: ChartArea,
    LucideArmchair: Armchair,
    LucideArrowBigDown: ArrowBigDown,
    LucideArrowBigDownDash: ArrowBigDownDash,
    LucideArrowBigLeft: ArrowBigLeft,
    LucideArrowBigLeftDash: ArrowBigLeftDash,
    LucideArrowBigRight: ArrowBigRight,
    LucideArrowBigRightDash: ArrowBigRightDash,
    LucideArrowBigUp: ArrowBigUp,
    LucideArrowBigUpDash: ArrowBigUpDash,
    LucideArrowDown: ArrowDown,
    LucideArrowDown01: ArrowDown01,
    LucideArrowDown10: ArrowDown10,
    LucideArrowDownAZ: ArrowDownAZ,
    LucideArrowDownAz: ArrowDownAZ,
    LucideArrowDownCircle: CircleArrowDown,
    LucideArrowDownFromLine: ArrowDownFromLine,
    LucideArrowDownLeft: ArrowDownLeft,
    LucideArrowDownLeftFromCircle: CircleArrowOutDownLeft,
    LucideArrowDownLeftFromSquare: SquareArrowOutDownLeft,
    LucideArrowDownLeftSquare: SquareArrowDownLeft,
    LucideArrowDownNarrowWide: ArrowDownNarrowWide,
    LucideArrowDownRight: ArrowDownRight,
    LucideArrowDownRightFromCircle: CircleArrowOutDownRight,
    LucideArrowDownRightFromSquare: SquareArrowOutDownRight,
    LucideArrowDownRightSquare: SquareArrowDownRight,
    LucideArrowDownSquare: SquareArrowDown,
    LucideArrowDownToDot: ArrowDownToDot,
    LucideArrowDownToLine: ArrowDownToLine,
    LucideArrowDownUp: ArrowDownUp,
    LucideArrowDownWideNarrow: ArrowDownWideNarrow,
    LucideArrowDownZA: ArrowDownZA,
    LucideArrowDownZa: ArrowDownZA,
    LucideArrowLeft: ArrowLeft,
    LucideArrowLeftCircle: CircleArrowLeft,
    LucideArrowLeftFromLine: ArrowLeftFromLine,
    LucideArrowLeftRight: ArrowLeftRight,
    LucideArrowLeftSquare: SquareArrowLeft,
    LucideArrowLeftToLine: ArrowLeftToLine,
    LucideArrowRight: ArrowRight,
    LucideArrowRightCircle: CircleArrowRight,
    LucideArrowRightFromLine: ArrowRightFromLine,
    LucideArrowRightLeft: ArrowRightLeft,
    LucideArrowRightSquare: SquareArrowRight,
    LucideArrowRightToLine: ArrowRightToLine,
    LucideArrowUp: ArrowUp,
    LucideArrowUp01: ArrowUp01,
    LucideArrowUp10: ArrowUp10,
    LucideArrowUpAZ: ArrowUpAZ,
    LucideArrowUpAz: ArrowUpAZ,
    LucideArrowUpCircle: CircleArrowUp,
    LucideArrowUpDown: ArrowUpDown,
    LucideArrowUpFromDot: ArrowUpFromDot,
    LucideArrowUpFromLine: ArrowUpFromLine,
    LucideArrowUpLeft: ArrowUpLeft,
    LucideArrowUpLeftFromCircle: CircleArrowOutUpLeft,
    LucideArrowUpLeftFromSquare: SquareArrowOutUpLeft,
    LucideArrowUpLeftSquare: SquareArrowUpLeft,
    LucideArrowUpNarrowWide: ArrowUpNarrowWide,
    LucideArrowUpRight: ArrowUpRight,
    LucideArrowUpRightFromCircle: CircleArrowOutUpRight,
    LucideArrowUpRightFromSquare: SquareArrowOutUpRight,
    LucideArrowUpRightSquare: SquareArrowUpRight,
    LucideArrowUpSquare: SquareArrowUp,
    LucideArrowUpToLine: ArrowUpToLine,
    LucideArrowUpWideNarrow: ArrowUpWideNarrow,
    LucideArrowUpZA: ArrowUpZA,
    LucideArrowUpZa: ArrowUpZA,
    LucideArrowsUpFromLine: ArrowsUpFromLine,
    LucideAsterisk: Asterisk,
    LucideAsteriskSquare: SquareAsterisk,
    LucideAtSign: AtSign,
    LucideAtom: Atom,
    LucideAudioLines: AudioLines,
    LucideAudioWaveform: AudioWaveform,
    LucideAward: Award,
    LucideAxe: Axe,
    LucideAxis3D: Axis3d,
    LucideAxis3d: Axis3d,
    LucideBaby: Baby,
    LucideBackpack: Backpack,
    LucideBadge: Badge$1,
    LucideBadgeAlert: BadgeAlert,
    LucideBadgeCent: BadgeCent,
    LucideBadgeCheck: BadgeCheck,
    LucideBadgeDollarSign: BadgeDollarSign,
    LucideBadgeEuro: BadgeEuro,
    LucideBadgeHelp: BadgeHelp,
    LucideBadgeIndianRupee: BadgeIndianRupee,
    LucideBadgeInfo: BadgeInfo,
    LucideBadgeJapaneseYen: BadgeJapaneseYen,
    LucideBadgeMinus: BadgeMinus,
    LucideBadgePercent: BadgePercent,
    LucideBadgePlus: BadgePlus,
    LucideBadgePoundSterling: BadgePoundSterling,
    LucideBadgeRussianRuble: BadgeRussianRuble,
    LucideBadgeSwissFranc: BadgeSwissFranc,
    LucideBadgeX: BadgeX,
    LucideBaggageClaim: BaggageClaim,
    LucideBan: Ban,
    LucideBanana: Banana,
    LucideBandage: Bandage,
    LucideBanknote: Banknote,
    LucideBarChart: ChartNoAxesColumnIncreasing,
    LucideBarChart2: ChartNoAxesColumn,
    LucideBarChart3: ChartColumn,
    LucideBarChart4: ChartColumnIncreasing,
    LucideBarChartBig: ChartColumnBig,
    LucideBarChartHorizontal: ChartBar,
    LucideBarChartHorizontalBig: ChartBarBig,
    LucideBarcode: Barcode,
    LucideBaseline: Baseline,
    LucideBath: Bath,
    LucideBattery: Battery,
    LucideBatteryCharging: BatteryCharging,
    LucideBatteryFull: BatteryFull,
    LucideBatteryLow: BatteryLow,
    LucideBatteryMedium: BatteryMedium,
    LucideBatteryWarning: BatteryWarning,
    LucideBeaker: Beaker,
    LucideBean: Bean,
    LucideBeanOff: BeanOff,
    LucideBed: Bed,
    LucideBedDouble: BedDouble,
    LucideBedSingle: BedSingle,
    LucideBeef: Beef,
    LucideBeer: Beer,
    LucideBeerOff: BeerOff,
    LucideBell: Bell,
    LucideBellDot: BellDot,
    LucideBellElectric: BellElectric,
    LucideBellMinus: BellMinus,
    LucideBellOff: BellOff,
    LucideBellPlus: BellPlus,
    LucideBellRing: BellRing,
    LucideBetweenHorizonalEnd: BetweenHorizontalEnd,
    LucideBetweenHorizonalStart: BetweenHorizontalStart,
    LucideBetweenHorizontalEnd: BetweenHorizontalEnd,
    LucideBetweenHorizontalStart: BetweenHorizontalStart,
    LucideBetweenVerticalEnd: BetweenVerticalEnd,
    LucideBetweenVerticalStart: BetweenVerticalStart,
    LucideBicepsFlexed: BicepsFlexed,
    LucideBike: Bike,
    LucideBinary: Binary,
    LucideBinoculars: Binoculars,
    LucideBiohazard: Biohazard,
    LucideBird: Bird,
    LucideBitcoin: Bitcoin,
    LucideBlend: Blend,
    LucideBlinds: Blinds,
    LucideBlocks: Blocks,
    LucideBluetooth: Bluetooth,
    LucideBluetoothConnected: BluetoothConnected,
    LucideBluetoothOff: BluetoothOff,
    LucideBluetoothSearching: BluetoothSearching,
    LucideBold: Bold,
    LucideBolt: Bolt,
    LucideBomb: Bomb,
    LucideBone: Bone,
    LucideBook: Book,
    LucideBookA: BookA,
    LucideBookAudio: BookAudio,
    LucideBookCheck: BookCheck,
    LucideBookCopy: BookCopy,
    LucideBookDashed: BookDashed,
    LucideBookDown: BookDown,
    LucideBookHeadphones: BookHeadphones,
    LucideBookHeart: BookHeart,
    LucideBookImage: BookImage,
    LucideBookKey: BookKey,
    LucideBookLock: BookLock,
    LucideBookMarked: BookMarked,
    LucideBookMinus: BookMinus,
    LucideBookOpen: BookOpen,
    LucideBookOpenCheck: BookOpenCheck,
    LucideBookOpenText: BookOpenText,
    LucideBookPlus: BookPlus,
    LucideBookTemplate: BookDashed,
    LucideBookText: BookText,
    LucideBookType: BookType,
    LucideBookUp: BookUp,
    LucideBookUp2: BookUp2,
    LucideBookUser: BookUser,
    LucideBookX: BookX,
    LucideBookmark: Bookmark,
    LucideBookmarkCheck: BookmarkCheck,
    LucideBookmarkMinus: BookmarkMinus,
    LucideBookmarkPlus: BookmarkPlus,
    LucideBookmarkX: BookmarkX,
    LucideBoomBox: BoomBox,
    LucideBot: Bot,
    LucideBotMessageSquare: BotMessageSquare,
    LucideBotOff: BotOff,
    LucideBox: Box,
    LucideBoxSelect: SquareDashed,
    LucideBoxes: Boxes,
    LucideBraces: Braces,
    LucideBrackets: Brackets,
    LucideBrain: Brain,
    LucideBrainCircuit: BrainCircuit,
    LucideBrainCog: BrainCog,
    LucideBrickWall: BrickWall,
    LucideBriefcase: Briefcase,
    LucideBriefcaseBusiness: BriefcaseBusiness,
    LucideBriefcaseConveyorBelt: BriefcaseConveyorBelt,
    LucideBriefcaseMedical: BriefcaseMedical,
    LucideBringToFront: BringToFront,
    LucideBrush: Brush,
    LucideBug: Bug,
    LucideBugOff: BugOff,
    LucideBugPlay: BugPlay,
    LucideBuilding: Building,
    LucideBuilding2: Building2,
    LucideBus: Bus,
    LucideBusFront: BusFront,
    LucideCable: Cable,
    LucideCableCar: CableCar,
    LucideCake: Cake,
    LucideCakeSlice: CakeSlice,
    LucideCalculator: Calculator,
    LucideCalendar: Calendar$1,
    LucideCalendar1: Calendar1,
    LucideCalendarArrowDown: CalendarArrowDown,
    LucideCalendarArrowUp: CalendarArrowUp,
    LucideCalendarCheck: CalendarCheck,
    LucideCalendarCheck2: CalendarCheck2,
    LucideCalendarClock: CalendarClock,
    LucideCalendarCog: CalendarCog,
    LucideCalendarDays: CalendarDays,
    LucideCalendarFold: CalendarFold,
    LucideCalendarHeart: CalendarHeart,
    LucideCalendarMinus: CalendarMinus,
    LucideCalendarMinus2: CalendarMinus2,
    LucideCalendarOff: CalendarOff,
    LucideCalendarPlus: CalendarPlus,
    LucideCalendarPlus2: CalendarPlus2,
    LucideCalendarRange: CalendarRange,
    LucideCalendarSearch: CalendarSearch,
    LucideCalendarSync: CalendarSync,
    LucideCalendarX: CalendarX,
    LucideCalendarX2: CalendarX2,
    LucideCamera: Camera,
    LucideCameraOff: CameraOff,
    LucideCandlestickChart: ChartCandlestick,
    LucideCandy: Candy,
    LucideCandyCane: CandyCane,
    LucideCandyOff: CandyOff,
    LucideCannabis: Cannabis,
    LucideCaptions: Captions,
    LucideCaptionsOff: CaptionsOff,
    LucideCar: Car,
    LucideCarFront: CarFront,
    LucideCarTaxiFront: CarTaxiFront,
    LucideCaravan: Caravan,
    LucideCarrot: Carrot,
    LucideCaseLower: CaseLower,
    LucideCaseSensitive: CaseSensitive,
    LucideCaseUpper: CaseUpper,
    LucideCassetteTape: CassetteTape,
    LucideCast: Cast,
    LucideCastle: Castle,
    LucideCat: Cat,
    LucideCctv: Cctv,
    LucideChartArea: ChartArea,
    LucideChartBar: ChartBar,
    LucideChartBarBig: ChartBarBig,
    LucideChartBarDecreasing: ChartBarDecreasing,
    LucideChartBarIncreasing: ChartBarIncreasing,
    LucideChartBarStacked: ChartBarStacked,
    LucideChartCandlestick: ChartCandlestick,
    LucideChartColumn: ChartColumn,
    LucideChartColumnBig: ChartColumnBig,
    LucideChartColumnDecreasing: ChartColumnDecreasing,
    LucideChartColumnIncreasing: ChartColumnIncreasing,
    LucideChartColumnStacked: ChartColumnStacked,
    LucideChartGantt: ChartGantt,
    LucideChartLine: ChartLine,
    LucideChartNetwork: ChartNetwork,
    LucideChartNoAxesColumn: ChartNoAxesColumn,
    LucideChartNoAxesColumnDecreasing: ChartNoAxesColumnDecreasing,
    LucideChartNoAxesColumnIncreasing: ChartNoAxesColumnIncreasing,
    LucideChartNoAxesCombined: ChartNoAxesCombined,
    LucideChartNoAxesGantt: ChartNoAxesGantt,
    LucideChartPie: ChartPie,
    LucideChartScatter: ChartScatter,
    LucideChartSpline: ChartSpline,
    LucideCheck: Check,
    LucideCheckCheck: CheckCheck,
    LucideCheckCircle: CircleCheckBig,
    LucideCheckCircle2: CircleCheck,
    LucideCheckSquare: SquareCheckBig,
    LucideCheckSquare2: SquareCheck,
    LucideChefHat: ChefHat,
    LucideCherry: Cherry,
    LucideChevronDown: ChevronDown,
    LucideChevronDownCircle: CircleChevronDown,
    LucideChevronDownSquare: SquareChevronDown,
    LucideChevronFirst: ChevronFirst,
    LucideChevronLast: ChevronLast,
    LucideChevronLeft: ChevronLeft,
    LucideChevronLeftCircle: CircleChevronLeft,
    LucideChevronLeftSquare: SquareChevronLeft,
    LucideChevronRight: ChevronRight,
    LucideChevronRightCircle: CircleChevronRight,
    LucideChevronRightSquare: SquareChevronRight,
    LucideChevronUp: ChevronUp,
    LucideChevronUpCircle: CircleChevronUp,
    LucideChevronUpSquare: SquareChevronUp,
    LucideChevronsDown: ChevronsDown,
    LucideChevronsDownUp: ChevronsDownUp,
    LucideChevronsLeft: ChevronsLeft,
    LucideChevronsLeftRight: ChevronsLeftRight,
    LucideChevronsLeftRightEllipsis: ChevronsLeftRightEllipsis,
    LucideChevronsRight: ChevronsRight,
    LucideChevronsRightLeft: ChevronsRightLeft,
    LucideChevronsUp: ChevronsUp,
    LucideChevronsUpDown: ChevronsUpDown,
    LucideChrome: Chrome,
    LucideChurch: Church,
    LucideCigarette: Cigarette,
    LucideCigaretteOff: CigaretteOff,
    LucideCircle: Circle,
    LucideCircleAlert: CircleAlert,
    LucideCircleArrowDown: CircleArrowDown,
    LucideCircleArrowLeft: CircleArrowLeft,
    LucideCircleArrowOutDownLeft: CircleArrowOutDownLeft,
    LucideCircleArrowOutDownRight: CircleArrowOutDownRight,
    LucideCircleArrowOutUpLeft: CircleArrowOutUpLeft,
    LucideCircleArrowOutUpRight: CircleArrowOutUpRight,
    LucideCircleArrowRight: CircleArrowRight,
    LucideCircleArrowUp: CircleArrowUp,
    LucideCircleCheck: CircleCheck,
    LucideCircleCheckBig: CircleCheckBig,
    LucideCircleChevronDown: CircleChevronDown,
    LucideCircleChevronLeft: CircleChevronLeft,
    LucideCircleChevronRight: CircleChevronRight,
    LucideCircleChevronUp: CircleChevronUp,
    LucideCircleDashed: CircleDashed,
    LucideCircleDivide: CircleDivide,
    LucideCircleDollarSign: CircleDollarSign,
    LucideCircleDot: CircleDot,
    LucideCircleDotDashed: CircleDotDashed,
    LucideCircleEllipsis: CircleEllipsis,
    LucideCircleEqual: CircleEqual,
    LucideCircleFadingArrowUp: CircleFadingArrowUp,
    LucideCircleFadingPlus: CircleFadingPlus,
    LucideCircleGauge: CircleGauge,
    LucideCircleHelp: CircleHelp,
    LucideCircleMinus: CircleMinus,
    LucideCircleOff: CircleOff,
    LucideCircleParking: CircleParking,
    LucideCircleParkingOff: CircleParkingOff,
    LucideCirclePause: CirclePause,
    LucideCirclePercent: CirclePercent,
    LucideCirclePlay: CirclePlay,
    LucideCirclePlus: CirclePlus,
    LucideCirclePower: CirclePower,
    LucideCircleSlash: CircleSlash,
    LucideCircleSlash2: CircleSlash2,
    LucideCircleSlashed: CircleSlash2,
    LucideCircleStop: CircleStop,
    LucideCircleUser: CircleUser,
    LucideCircleUserRound: CircleUserRound,
    LucideCircleX: CircleX,
    LucideCircuitBoard: CircuitBoard,
    LucideCitrus: Citrus,
    LucideClapperboard: Clapperboard,
    LucideClipboard: Clipboard,
    LucideClipboardCheck: ClipboardCheck,
    LucideClipboardCopy: ClipboardCopy,
    LucideClipboardEdit: ClipboardPen,
    LucideClipboardList: ClipboardList,
    LucideClipboardMinus: ClipboardMinus,
    LucideClipboardPaste: ClipboardPaste,
    LucideClipboardPen: ClipboardPen,
    LucideClipboardPenLine: ClipboardPenLine,
    LucideClipboardPlus: ClipboardPlus,
    LucideClipboardSignature: ClipboardPenLine,
    LucideClipboardType: ClipboardType,
    LucideClipboardX: ClipboardX,
    LucideClock: Clock,
    LucideClock1: Clock1,
    LucideClock10: Clock10,
    LucideClock11: Clock11,
    LucideClock12: Clock12,
    LucideClock2: Clock2,
    LucideClock3: Clock3,
    LucideClock4: Clock4,
    LucideClock5: Clock5,
    LucideClock6: Clock6,
    LucideClock7: Clock7,
    LucideClock8: Clock8,
    LucideClock9: Clock9,
    LucideClockAlert: ClockAlert,
    LucideClockArrowDown: ClockArrowDown,
    LucideClockArrowUp: ClockArrowUp,
    LucideCloud: Cloud,
    LucideCloudAlert: CloudAlert,
    LucideCloudCog: CloudCog,
    LucideCloudDownload: CloudDownload,
    LucideCloudDrizzle: CloudDrizzle,
    LucideCloudFog: CloudFog,
    LucideCloudHail: CloudHail,
    LucideCloudLightning: CloudLightning,
    LucideCloudMoon: CloudMoon,
    LucideCloudMoonRain: CloudMoonRain,
    LucideCloudOff: CloudOff,
    LucideCloudRain: CloudRain,
    LucideCloudRainWind: CloudRainWind,
    LucideCloudSnow: CloudSnow,
    LucideCloudSun: CloudSun,
    LucideCloudSunRain: CloudSunRain,
    LucideCloudUpload: CloudUpload,
    LucideCloudy: Cloudy,
    LucideClover: Clover,
    LucideClub: Club,
    LucideCode: Code,
    LucideCode2: CodeXml,
    LucideCodeSquare: SquareCode,
    LucideCodeXml: CodeXml,
    LucideCodepen: Codepen,
    LucideCodesandbox: Codesandbox,
    LucideCoffee: Coffee,
    LucideCog: Cog,
    LucideCoins: Coins,
    LucideColumns: Columns2,
    LucideColumns2: Columns2,
    LucideColumns3: Columns3,
    LucideColumns4: Columns4,
    LucideCombine: Combine,
    LucideCommand: Command$1,
    LucideCompass: Compass,
    LucideComponent: Component,
    LucideComputer: Computer,
    LucideConciergeBell: ConciergeBell,
    LucideCone: Cone,
    LucideConstruction: Construction,
    LucideContact: Contact,
    LucideContact2: ContactRound,
    LucideContactRound: ContactRound,
    LucideContainer: Container$1,
    LucideContrast: Contrast,
    LucideCookie: Cookie,
    LucideCookingPot: CookingPot,
    LucideCopy: Copy,
    LucideCopyCheck: CopyCheck,
    LucideCopyMinus: CopyMinus,
    LucideCopyPlus: CopyPlus,
    LucideCopySlash: CopySlash,
    LucideCopyX: CopyX,
    LucideCopyleft: Copyleft,
    LucideCopyright: Copyright,
    LucideCornerDownLeft: CornerDownLeft,
    LucideCornerDownRight: CornerDownRight,
    LucideCornerLeftDown: CornerLeftDown,
    LucideCornerLeftUp: CornerLeftUp,
    LucideCornerRightDown: CornerRightDown,
    LucideCornerRightUp: CornerRightUp,
    LucideCornerUpLeft: CornerUpLeft,
    LucideCornerUpRight: CornerUpRight,
    LucideCpu: Cpu,
    LucideCreativeCommons: CreativeCommons,
    LucideCreditCard: CreditCard,
    LucideCroissant: Croissant,
    LucideCrop: Crop,
    LucideCross: Cross,
    LucideCrosshair: Crosshair,
    LucideCrown: Crown,
    LucideCuboid: Cuboid,
    LucideCupSoda: CupSoda,
    LucideCurlyBraces: Braces,
    LucideCurrency: Currency,
    LucideCylinder: Cylinder,
    LucideDam: Dam,
    LucideDatabase: Database,
    LucideDatabaseBackup: DatabaseBackup,
    LucideDatabaseZap: DatabaseZap,
    LucideDelete: Delete,
    LucideDessert: Dessert,
    LucideDiameter: Diameter,
    LucideDiamond: Diamond,
    LucideDiamondMinus: DiamondMinus,
    LucideDiamondPercent: DiamondPercent,
    LucideDiamondPlus: DiamondPlus,
    LucideDice1: Dice1,
    LucideDice2: Dice2,
    LucideDice3: Dice3,
    LucideDice4: Dice4,
    LucideDice5: Dice5,
    LucideDice6: Dice6,
    LucideDices: Dices,
    LucideDiff: Diff,
    LucideDisc: Disc,
    LucideDisc2: Disc2,
    LucideDisc3: Disc3,
    LucideDiscAlbum: DiscAlbum,
    LucideDivide: Divide,
    LucideDivideCircle: CircleDivide,
    LucideDivideSquare: SquareDivide,
    LucideDna: Dna,
    LucideDnaOff: DnaOff,
    LucideDock: Dock,
    LucideDog: Dog,
    LucideDollarSign: DollarSign,
    LucideDonut: Donut,
    LucideDoorClosed: DoorClosed,
    LucideDoorOpen: DoorOpen,
    LucideDot: Dot,
    LucideDotSquare: SquareDot,
    LucideDownload: Download,
    LucideDownloadCloud: CloudDownload,
    LucideDraftingCompass: DraftingCompass,
    LucideDrama: Drama,
    LucideDribbble: Dribbble,
    LucideDrill: Drill,
    LucideDroplet: Droplet,
    LucideDroplets: Droplets,
    LucideDrum: Drum,
    LucideDrumstick: Drumstick,
    LucideDumbbell: Dumbbell,
    LucideEar: Ear,
    LucideEarOff: EarOff,
    LucideEarth: Earth,
    LucideEarthLock: EarthLock,
    LucideEclipse: Eclipse,
    LucideEdit: SquarePen,
    LucideEdit2: Pen,
    LucideEdit3: PenLine,
    LucideEgg: Egg,
    LucideEggFried: EggFried,
    LucideEggOff: EggOff,
    LucideEllipsis: Ellipsis,
    LucideEllipsisVertical: EllipsisVertical,
    LucideEqual: Equal,
    LucideEqualApproximately: EqualApproximately,
    LucideEqualNot: EqualNot,
    LucideEqualSquare: SquareEqual,
    LucideEraser: Eraser,
    LucideEthernetPort: EthernetPort,
    LucideEuro: Euro,
    LucideExpand: Expand,
    LucideExternalLink: ExternalLink,
    LucideEye: Eye,
    LucideEyeClosed: EyeClosed,
    LucideEyeOff: EyeOff,
    LucideFacebook: Facebook,
    LucideFactory: Factory,
    LucideFan: Fan,
    LucideFastForward: FastForward,
    LucideFeather: Feather,
    LucideFence: Fence,
    LucideFerrisWheel: FerrisWheel,
    LucideFigma: Figma,
    LucideFile: File,
    LucideFileArchive: FileArchive,
    LucideFileAudio: FileAudio,
    LucideFileAudio2: FileAudio2,
    LucideFileAxis3D: FileAxis3d,
    LucideFileAxis3d: FileAxis3d,
    LucideFileBadge: FileBadge,
    LucideFileBadge2: FileBadge2,
    LucideFileBarChart: FileChartColumnIncreasing,
    LucideFileBarChart2: FileChartColumn,
    LucideFileBox: FileBox,
    LucideFileChartColumn: FileChartColumn,
    LucideFileChartColumnIncreasing: FileChartColumnIncreasing,
    LucideFileChartLine: FileChartLine,
    LucideFileChartPie: FileChartPie,
    LucideFileCheck: FileCheck,
    LucideFileCheck2: FileCheck2,
    LucideFileClock: FileClock,
    LucideFileCode: FileCode,
    LucideFileCode2: FileCode2,
    LucideFileCog: FileCog,
    LucideFileCog2: FileCog,
    LucideFileDiff: FileDiff,
    LucideFileDigit: FileDigit,
    LucideFileDown: FileDown,
    LucideFileEdit: FilePen,
    LucideFileHeart: FileHeart,
    LucideFileImage: FileImage,
    LucideFileInput: FileInput,
    LucideFileJson: FileJson,
    LucideFileJson2: FileJson2,
    LucideFileKey: FileKey,
    LucideFileKey2: FileKey2,
    LucideFileLineChart: FileChartLine,
    LucideFileLock: FileLock,
    LucideFileLock2: FileLock2,
    LucideFileMinus: FileMinus,
    LucideFileMinus2: FileMinus2,
    LucideFileMusic: FileMusic,
    LucideFileOutput: FileOutput,
    LucideFilePen: FilePen,
    LucideFilePenLine: FilePenLine,
    LucideFilePieChart: FileChartPie,
    LucideFilePlus: FilePlus,
    LucideFilePlus2: FilePlus2,
    LucideFileQuestion: FileQuestion,
    LucideFileScan: FileScan,
    LucideFileSearch: FileSearch,
    LucideFileSearch2: FileSearch2,
    LucideFileSignature: FilePenLine,
    LucideFileSliders: FileSliders,
    LucideFileSpreadsheet: FileSpreadsheet,
    LucideFileStack: FileStack,
    LucideFileSymlink: FileSymlink,
    LucideFileTerminal: FileTerminal,
    LucideFileText: FileText,
    LucideFileType: FileType,
    LucideFileType2: FileType2,
    LucideFileUp: FileUp,
    LucideFileUser: FileUser,
    LucideFileVideo: FileVideo,
    LucideFileVideo2: FileVideo2,
    LucideFileVolume: FileVolume,
    LucideFileVolume2: FileVolume2,
    LucideFileWarning: FileWarning,
    LucideFileX: FileX,
    LucideFileX2: FileX2,
    LucideFiles: Files,
    LucideFilm: Film,
    LucideFilter: Filter$1,
    LucideFilterX: FilterX,
    LucideFingerprint: Fingerprint,
    LucideFireExtinguisher: FireExtinguisher,
    LucideFish: Fish,
    LucideFishOff: FishOff,
    LucideFishSymbol: FishSymbol,
    LucideFlag: Flag,
    LucideFlagOff: FlagOff,
    LucideFlagTriangleLeft: FlagTriangleLeft,
    LucideFlagTriangleRight: FlagTriangleRight,
    LucideFlame: Flame,
    LucideFlameKindling: FlameKindling,
    LucideFlashlight: Flashlight,
    LucideFlashlightOff: FlashlightOff,
    LucideFlaskConical: FlaskConical,
    LucideFlaskConicalOff: FlaskConicalOff,
    LucideFlaskRound: FlaskRound,
    LucideFlipHorizontal: FlipHorizontal,
    LucideFlipHorizontal2: FlipHorizontal2,
    LucideFlipVertical: FlipVertical,
    LucideFlipVertical2: FlipVertical2,
    LucideFlower: Flower,
    LucideFlower2: Flower2,
    LucideFocus: Focus,
    LucideFoldHorizontal: FoldHorizontal,
    LucideFoldVertical: FoldVertical,
    LucideFolder: Folder,
    LucideFolderArchive: FolderArchive,
    LucideFolderCheck: FolderCheck,
    LucideFolderClock: FolderClock,
    LucideFolderClosed: FolderClosed,
    LucideFolderCode: FolderCode,
    LucideFolderCog: FolderCog,
    LucideFolderCog2: FolderCog,
    LucideFolderDot: FolderDot,
    LucideFolderDown: FolderDown,
    LucideFolderEdit: FolderPen,
    LucideFolderGit: FolderGit,
    LucideFolderGit2: FolderGit2,
    LucideFolderHeart: FolderHeart,
    LucideFolderInput: FolderInput,
    LucideFolderKanban: FolderKanban,
    LucideFolderKey: FolderKey,
    LucideFolderLock: FolderLock,
    LucideFolderMinus: FolderMinus,
    LucideFolderOpen: FolderOpen,
    LucideFolderOpenDot: FolderOpenDot,
    LucideFolderOutput: FolderOutput,
    LucideFolderPen: FolderPen,
    LucideFolderPlus: FolderPlus,
    LucideFolderRoot: FolderRoot,
    LucideFolderSearch: FolderSearch,
    LucideFolderSearch2: FolderSearch2,
    LucideFolderSymlink: FolderSymlink,
    LucideFolderSync: FolderSync,
    LucideFolderTree: FolderTree,
    LucideFolderUp: FolderUp,
    LucideFolderX: FolderX,
    LucideFolders: Folders,
    LucideFootprints: Footprints,
    LucideForkKnife: Utensils,
    LucideForkKnifeCrossed: UtensilsCrossed,
    LucideForklift: Forklift,
    LucideFormInput: RectangleEllipsis,
    LucideForward: Forward,
    LucideFrame: Frame,
    LucideFramer: Framer,
    LucideFrown: Frown,
    LucideFuel: Fuel,
    LucideFullscreen: Fullscreen,
    LucideFunctionSquare: SquareFunction,
    LucideGalleryHorizontal: GalleryHorizontal,
    LucideGalleryHorizontalEnd: GalleryHorizontalEnd,
    LucideGalleryThumbnails: GalleryThumbnails,
    LucideGalleryVertical: GalleryVertical,
    LucideGalleryVerticalEnd: GalleryVerticalEnd,
    LucideGamepad: Gamepad,
    LucideGamepad2: Gamepad2,
    LucideGanttChart: ChartNoAxesGantt,
    LucideGanttChartSquare: SquareChartGantt,
    LucideGauge: Gauge,
    LucideGaugeCircle: CircleGauge,
    LucideGavel: Gavel,
    LucideGem: Gem,
    LucideGhost: Ghost,
    LucideGift: Gift,
    LucideGitBranch: GitBranch,
    LucideGitBranchPlus: GitBranchPlus,
    LucideGitCommit: GitCommitHorizontal,
    LucideGitCommitHorizontal: GitCommitHorizontal,
    LucideGitCommitVertical: GitCommitVertical,
    LucideGitCompare: GitCompare,
    LucideGitCompareArrows: GitCompareArrows,
    LucideGitFork: GitFork,
    LucideGitGraph: GitGraph,
    LucideGitMerge: GitMerge,
    LucideGitPullRequest: GitPullRequest,
    LucideGitPullRequestArrow: GitPullRequestArrow,
    LucideGitPullRequestClosed: GitPullRequestClosed,
    LucideGitPullRequestCreate: GitPullRequestCreate,
    LucideGitPullRequestCreateArrow: GitPullRequestCreateArrow,
    LucideGitPullRequestDraft: GitPullRequestDraft,
    LucideGithub: Github,
    LucideGitlab: Gitlab,
    LucideGlassWater: GlassWater,
    LucideGlasses: Glasses,
    LucideGlobe: Globe,
    LucideGlobe2: Earth,
    LucideGlobeLock: GlobeLock,
    LucideGoal: Goal,
    LucideGrab: Grab,
    LucideGraduationCap: GraduationCap,
    LucideGrape: Grape,
    LucideGrid: Grid3x3,
    LucideGrid2X2: Grid2x2,
    LucideGrid2X2Plus: Grid2x2Plus,
    LucideGrid2x2: Grid2x2,
    LucideGrid2x2Check: Grid2x2Check,
    LucideGrid2x2Plus: Grid2x2Plus,
    LucideGrid2x2X: Grid2x2X,
    LucideGrid3X3: Grid3x3,
    LucideGrid3x3: Grid3x3,
    LucideGrip: Grip,
    LucideGripHorizontal: GripHorizontal,
    LucideGripVertical: GripVertical,
    LucideGroup: Group,
    LucideGuitar: Guitar,
    LucideHam: Ham,
    LucideHammer: Hammer,
    LucideHand: Hand,
    LucideHandCoins: HandCoins,
    LucideHandHeart: HandHeart,
    LucideHandHelping: HandHelping,
    LucideHandMetal: HandMetal,
    LucideHandPlatter: HandPlatter,
    LucideHandshake: Handshake,
    LucideHardDrive: HardDrive,
    LucideHardDriveDownload: HardDriveDownload,
    LucideHardDriveUpload: HardDriveUpload,
    LucideHardHat: HardHat,
    LucideHash: Hash,
    LucideHaze: Haze,
    LucideHdmiPort: HdmiPort,
    LucideHeading: Heading,
    LucideHeading1: Heading1,
    LucideHeading2: Heading2,
    LucideHeading3: Heading3,
    LucideHeading4: Heading4,
    LucideHeading5: Heading5,
    LucideHeading6: Heading6,
    LucideHeadphoneOff: HeadphoneOff,
    LucideHeadphones: Headphones,
    LucideHeadset: Headset,
    LucideHeart: Heart,
    LucideHeartCrack: HeartCrack,
    LucideHeartHandshake: HeartHandshake,
    LucideHeartOff: HeartOff,
    LucideHeartPulse: HeartPulse,
    LucideHeater: Heater,
    LucideHelpCircle: CircleHelp,
    LucideHelpingHand: HandHelping,
    LucideHexagon: Hexagon,
    LucideHighlighter: Highlighter,
    LucideHistory: History,
    LucideHome: House,
    LucideHop: Hop,
    LucideHopOff: HopOff,
    LucideHospital: Hospital,
    LucideHotel: Hotel,
    LucideHourglass: Hourglass,
    LucideHouse: House,
    LucideHousePlug: HousePlug,
    LucideHousePlus: HousePlus,
    LucideIceCream: IceCreamCone,
    LucideIceCream2: IceCreamBowl,
    LucideIceCreamBowl: IceCreamBowl,
    LucideIceCreamCone: IceCreamCone,
    LucideIdCard: IdCard,
    LucideImage: Image,
    LucideImageDown: ImageDown,
    LucideImageMinus: ImageMinus,
    LucideImageOff: ImageOff,
    LucideImagePlay: ImagePlay,
    LucideImagePlus: ImagePlus,
    LucideImageUp: ImageUp,
    LucideImageUpscale: ImageUpscale,
    LucideImages: Images,
    LucideImport: Import,
    LucideInbox: Inbox,
    LucideIndent: IndentIncrease,
    LucideIndentDecrease: IndentDecrease,
    LucideIndentIncrease: IndentIncrease,
    LucideIndianRupee: IndianRupee,
    LucideInfinity: Infinity,
    LucideInfo: Info,
    LucideInspect: SquareMousePointer,
    LucideInspectionPanel: InspectionPanel,
    LucideInstagram: Instagram,
    LucideItalic: Italic,
    LucideIterationCcw: IterationCcw,
    LucideIterationCw: IterationCw,
    LucideJapaneseYen: JapaneseYen,
    LucideJoystick: Joystick,
    LucideKanban: Kanban,
    LucideKanbanSquare: SquareKanban,
    LucideKanbanSquareDashed: SquareDashedKanban,
    LucideKey: Key,
    LucideKeyRound: KeyRound,
    LucideKeySquare: KeySquare,
    LucideKeyboard: Keyboard,
    LucideKeyboardMusic: KeyboardMusic,
    LucideKeyboardOff: KeyboardOff,
    LucideLamp: Lamp,
    LucideLampCeiling: LampCeiling,
    LucideLampDesk: LampDesk,
    LucideLampFloor: LampFloor,
    LucideLampWallDown: LampWallDown,
    LucideLampWallUp: LampWallUp,
    LucideLandPlot: LandPlot,
    LucideLandmark: Landmark,
    LucideLanguages: Languages,
    LucideLaptop: Laptop,
    LucideLaptop2: LaptopMinimal,
    LucideLaptopMinimal: LaptopMinimal,
    LucideLaptopMinimalCheck: LaptopMinimalCheck,
    LucideLasso: Lasso,
    LucideLassoSelect: LassoSelect,
    LucideLaugh: Laugh,
    LucideLayers: Layers,
    LucideLayers2: Layers2,
    LucideLayers3: Layers3,
    LucideLayout: PanelsTopLeft,
    LucideLayoutDashboard: LayoutDashboard,
    LucideLayoutGrid: LayoutGrid,
    LucideLayoutList: LayoutList,
    LucideLayoutPanelLeft: LayoutPanelLeft,
    LucideLayoutPanelTop: LayoutPanelTop,
    LucideLayoutTemplate: LayoutTemplate,
    LucideLeaf: Leaf,
    LucideLeafyGreen: LeafyGreen,
    LucideLectern: Lectern,
    LucideLetterText: LetterText,
    LucideLibrary: Library,
    LucideLibraryBig: LibraryBig,
    LucideLibrarySquare: SquareLibrary,
    LucideLifeBuoy: LifeBuoy,
    LucideLigature: Ligature,
    LucideLightbulb: Lightbulb,
    LucideLightbulbOff: LightbulbOff,
    LucideLineChart: ChartLine,
    LucideLink: Link$1,
    LucideLink2: Link2,
    LucideLink2Off: Link2Off,
    LucideLinkedin: Linkedin,
    LucideList: List$1,
    LucideListCheck: ListCheck,
    LucideListChecks: ListChecks,
    LucideListCollapse: ListCollapse,
    LucideListEnd: ListEnd,
    LucideListFilter: ListFilter,
    LucideListMinus: ListMinus,
    LucideListMusic: ListMusic,
    LucideListOrdered: ListOrdered,
    LucideListPlus: ListPlus,
    LucideListRestart: ListRestart,
    LucideListStart: ListStart,
    LucideListTodo: ListTodo,
    LucideListTree: ListTree,
    LucideListVideo: ListVideo,
    LucideListX: ListX,
    LucideLoader: Loader,
    LucideLoader2: LoaderCircle,
    LucideLoaderCircle: LoaderCircle,
    LucideLoaderPinwheel: LoaderPinwheel,
    LucideLocate: Locate,
    LucideLocateFixed: LocateFixed,
    LucideLocateOff: LocateOff,
    LucideLock: Lock,
    LucideLockKeyhole: LockKeyhole,
    LucideLockKeyholeOpen: LockKeyholeOpen,
    LucideLockOpen: LockOpen,
    LucideLogIn: LogIn,
    LucideLogOut: LogOut,
    LucideLogs: Logs,
    LucideLollipop: Lollipop,
    LucideLuggage: Luggage,
    LucideMSquare: SquareM,
    LucideMagnet: Magnet,
    LucideMail: Mail,
    LucideMailCheck: MailCheck,
    LucideMailMinus: MailMinus,
    LucideMailOpen: MailOpen,
    LucideMailPlus: MailPlus,
    LucideMailQuestion: MailQuestion,
    LucideMailSearch: MailSearch,
    LucideMailWarning: MailWarning,
    LucideMailX: MailX,
    LucideMailbox: Mailbox,
    LucideMails: Mails,
    LucideMap: Map$1,
    LucideMapPin: MapPin,
    LucideMapPinCheck: MapPinCheck,
    LucideMapPinCheckInside: MapPinCheckInside,
    LucideMapPinHouse: MapPinHouse,
    LucideMapPinMinus: MapPinMinus,
    LucideMapPinMinusInside: MapPinMinusInside,
    LucideMapPinOff: MapPinOff,
    LucideMapPinPlus: MapPinPlus,
    LucideMapPinPlusInside: MapPinPlusInside,
    LucideMapPinX: MapPinX,
    LucideMapPinXInside: MapPinXInside,
    LucideMapPinned: MapPinned,
    LucideMartini: Martini,
    LucideMaximize: Maximize,
    LucideMaximize2: Maximize2,
    LucideMedal: Medal,
    LucideMegaphone: Megaphone,
    LucideMegaphoneOff: MegaphoneOff,
    LucideMeh: Meh,
    LucideMemoryStick: MemoryStick,
    LucideMenu: Menu$1,
    LucideMenuSquare: SquareMenu,
    LucideMerge: Merge,
    LucideMessageCircle: MessageCircle,
    LucideMessageCircleCode: MessageCircleCode,
    LucideMessageCircleDashed: MessageCircleDashed,
    LucideMessageCircleHeart: MessageCircleHeart,
    LucideMessageCircleMore: MessageCircleMore,
    LucideMessageCircleOff: MessageCircleOff,
    LucideMessageCirclePlus: MessageCirclePlus,
    LucideMessageCircleQuestion: MessageCircleQuestion,
    LucideMessageCircleReply: MessageCircleReply,
    LucideMessageCircleWarning: MessageCircleWarning,
    LucideMessageCircleX: MessageCircleX,
    LucideMessageSquare: MessageSquare,
    LucideMessageSquareCode: MessageSquareCode,
    LucideMessageSquareDashed: MessageSquareDashed,
    LucideMessageSquareDiff: MessageSquareDiff,
    LucideMessageSquareDot: MessageSquareDot,
    LucideMessageSquareHeart: MessageSquareHeart,
    LucideMessageSquareLock: MessageSquareLock,
    LucideMessageSquareMore: MessageSquareMore,
    LucideMessageSquareOff: MessageSquareOff,
    LucideMessageSquarePlus: MessageSquarePlus,
    LucideMessageSquareQuote: MessageSquareQuote,
    LucideMessageSquareReply: MessageSquareReply,
    LucideMessageSquareShare: MessageSquareShare,
    LucideMessageSquareText: MessageSquareText,
    LucideMessageSquareWarning: MessageSquareWarning,
    LucideMessageSquareX: MessageSquareX,
    LucideMessagesSquare: MessagesSquare,
    LucideMic: Mic,
    LucideMic2: MicVocal,
    LucideMicOff: MicOff,
    LucideMicVocal: MicVocal,
    LucideMicrochip: Microchip,
    LucideMicroscope: Microscope,
    LucideMicrowave: Microwave,
    LucideMilestone: Milestone,
    LucideMilk: Milk,
    LucideMilkOff: MilkOff,
    LucideMinimize: Minimize,
    LucideMinimize2: Minimize2,
    LucideMinus: Minus,
    LucideMinusCircle: CircleMinus,
    LucideMinusSquare: SquareMinus,
    LucideMonitor: Monitor,
    LucideMonitorCheck: MonitorCheck,
    LucideMonitorCog: MonitorCog,
    LucideMonitorDot: MonitorDot,
    LucideMonitorDown: MonitorDown,
    LucideMonitorOff: MonitorOff,
    LucideMonitorPause: MonitorPause,
    LucideMonitorPlay: MonitorPlay,
    LucideMonitorSmartphone: MonitorSmartphone,
    LucideMonitorSpeaker: MonitorSpeaker,
    LucideMonitorStop: MonitorStop,
    LucideMonitorUp: MonitorUp,
    LucideMonitorX: MonitorX,
    LucideMoon: Moon,
    LucideMoonStar: MoonStar,
    LucideMoreHorizontal: Ellipsis,
    LucideMoreVertical: EllipsisVertical,
    LucideMountain: Mountain,
    LucideMountainSnow: MountainSnow,
    LucideMouse: Mouse,
    LucideMouseOff: MouseOff,
    LucideMousePointer: MousePointer,
    LucideMousePointer2: MousePointer2,
    LucideMousePointerBan: MousePointerBan,
    LucideMousePointerClick: MousePointerClick,
    LucideMousePointerSquareDashed: SquareDashedMousePointer,
    LucideMove: Move,
    LucideMove3D: Move3d,
    LucideMove3d: Move3d,
    LucideMoveDiagonal: MoveDiagonal,
    LucideMoveDiagonal2: MoveDiagonal2,
    LucideMoveDown: MoveDown,
    LucideMoveDownLeft: MoveDownLeft,
    LucideMoveDownRight: MoveDownRight,
    LucideMoveHorizontal: MoveHorizontal,
    LucideMoveLeft: MoveLeft,
    LucideMoveRight: MoveRight,
    LucideMoveUp: MoveUp,
    LucideMoveUpLeft: MoveUpLeft,
    LucideMoveUpRight: MoveUpRight,
    LucideMoveVertical: MoveVertical,
    LucideMusic: Music,
    LucideMusic2: Music2,
    LucideMusic3: Music3,
    LucideMusic4: Music4,
    LucideNavigation: Navigation$1,
    LucideNavigation2: Navigation2,
    LucideNavigation2Off: Navigation2Off,
    LucideNavigationOff: NavigationOff,
    LucideNetwork: Network,
    LucideNewspaper: Newspaper,
    LucideNfc: Nfc,
    LucideNotebook: Notebook,
    LucideNotebookPen: NotebookPen,
    LucideNotebookTabs: NotebookTabs,
    LucideNotebookText: NotebookText,
    LucideNotepadText: NotepadText,
    LucideNotepadTextDashed: NotepadTextDashed,
    LucideNut: Nut,
    LucideNutOff: NutOff,
    LucideOctagon: Octagon,
    LucideOctagonAlert: OctagonAlert,
    LucideOctagonMinus: OctagonMinus,
    LucideOctagonPause: OctagonPause,
    LucideOctagonX: OctagonX,
    LucideOmega: Omega,
    LucideOption: Option,
    LucideOrbit: Orbit,
    LucideOrigami: Origami,
    LucideOutdent: IndentDecrease,
    LucidePackage: Package,
    LucidePackage2: Package2,
    LucidePackageCheck: PackageCheck,
    LucidePackageMinus: PackageMinus,
    LucidePackageOpen: PackageOpen,
    LucidePackagePlus: PackagePlus,
    LucidePackageSearch: PackageSearch,
    LucidePackageX: PackageX,
    LucidePaintBucket: PaintBucket,
    LucidePaintRoller: PaintRoller,
    LucidePaintbrush: Paintbrush,
    LucidePaintbrush2: PaintbrushVertical,
    LucidePaintbrushVertical: PaintbrushVertical,
    LucidePalette: Palette,
    LucidePalmtree: TreePalm,
    LucidePanelBottom: PanelBottom,
    LucidePanelBottomClose: PanelBottomClose,
    LucidePanelBottomDashed: PanelBottomDashed,
    LucidePanelBottomInactive: PanelBottomDashed,
    LucidePanelBottomOpen: PanelBottomOpen,
    LucidePanelLeft: PanelLeft,
    LucidePanelLeftClose: PanelLeftClose,
    LucidePanelLeftDashed: PanelLeftDashed,
    LucidePanelLeftInactive: PanelLeftDashed,
    LucidePanelLeftOpen: PanelLeftOpen,
    LucidePanelRight: PanelRight,
    LucidePanelRightClose: PanelRightClose,
    LucidePanelRightDashed: PanelRightDashed,
    LucidePanelRightInactive: PanelRightDashed,
    LucidePanelRightOpen: PanelRightOpen,
    LucidePanelTop: PanelTop,
    LucidePanelTopClose: PanelTopClose,
    LucidePanelTopDashed: PanelTopDashed,
    LucidePanelTopInactive: PanelTopDashed,
    LucidePanelTopOpen: PanelTopOpen,
    LucidePanelsLeftBottom: PanelsLeftBottom,
    LucidePanelsLeftRight: Columns3,
    LucidePanelsRightBottom: PanelsRightBottom,
    LucidePanelsTopBottom: Rows3,
    LucidePanelsTopLeft: PanelsTopLeft,
    LucidePaperclip: Paperclip,
    LucideParentheses: Parentheses,
    LucideParkingCircle: CircleParking,
    LucideParkingCircleOff: CircleParkingOff,
    LucideParkingMeter: ParkingMeter,
    LucideParkingSquare: SquareParking,
    LucideParkingSquareOff: SquareParkingOff,
    LucidePartyPopper: PartyPopper,
    LucidePause: Pause,
    LucidePauseCircle: CirclePause,
    LucidePauseOctagon: OctagonPause,
    LucidePawPrint: PawPrint,
    LucidePcCase: PcCase,
    LucidePen: Pen,
    LucidePenBox: SquarePen,
    LucidePenLine: PenLine,
    LucidePenOff: PenOff,
    LucidePenSquare: SquarePen,
    LucidePenTool: PenTool,
    LucidePencil: Pencil,
    LucidePencilLine: PencilLine,
    LucidePencilOff: PencilOff,
    LucidePencilRuler: PencilRuler,
    LucidePentagon: Pentagon,
    LucidePercent: Percent,
    LucidePercentCircle: CirclePercent,
    LucidePercentDiamond: DiamondPercent,
    LucidePercentSquare: SquarePercent,
    LucidePersonStanding: PersonStanding,
    LucidePhilippinePeso: PhilippinePeso,
    LucidePhone: Phone,
    LucidePhoneCall: PhoneCall,
    LucidePhoneForwarded: PhoneForwarded,
    LucidePhoneIncoming: PhoneIncoming,
    LucidePhoneMissed: PhoneMissed,
    LucidePhoneOff: PhoneOff,
    LucidePhoneOutgoing: PhoneOutgoing,
    LucidePi: Pi,
    LucidePiSquare: SquarePi,
    LucidePiano: Piano,
    LucidePickaxe: Pickaxe,
    LucidePictureInPicture: PictureInPicture,
    LucidePictureInPicture2: PictureInPicture2,
    LucidePieChart: ChartPie,
    LucidePiggyBank: PiggyBank,
    LucidePilcrow: Pilcrow,
    LucidePilcrowLeft: PilcrowLeft,
    LucidePilcrowRight: PilcrowRight,
    LucidePilcrowSquare: SquarePilcrow,
    LucidePill: Pill,
    LucidePillBottle: PillBottle,
    LucidePin: Pin,
    LucidePinOff: PinOff,
    LucidePipette: Pipette,
    LucidePizza: Pizza,
    LucidePlane: Plane,
    LucidePlaneLanding: PlaneLanding,
    LucidePlaneTakeoff: PlaneTakeoff,
    LucidePlay: Play,
    LucidePlayCircle: CirclePlay,
    LucidePlaySquare: SquarePlay,
    LucidePlug: Plug,
    LucidePlug2: Plug2,
    LucidePlugZap: PlugZap,
    LucidePlugZap2: PlugZap,
    LucidePlus: Plus,
    LucidePlusCircle: CirclePlus,
    LucidePlusSquare: SquarePlus,
    LucidePocket: Pocket,
    LucidePocketKnife: PocketKnife,
    LucidePodcast: Podcast,
    LucidePointer: Pointer,
    LucidePointerOff: PointerOff,
    LucidePopcorn: Popcorn,
    LucidePopsicle: Popsicle,
    LucidePoundSterling: PoundSterling,
    LucidePower: Power,
    LucidePowerCircle: CirclePower,
    LucidePowerOff: PowerOff,
    LucidePowerSquare: SquarePower,
    LucidePresentation: Presentation,
    LucidePrinter: Printer,
    LucidePrinterCheck: PrinterCheck,
    LucideProjector: Projector,
    LucideProportions: Proportions,
    LucidePuzzle: Puzzle,
    LucidePyramid: Pyramid,
    LucideQrCode: QrCode,
    LucideQuote: Quote,
    LucideRabbit: Rabbit,
    LucideRadar: Radar,
    LucideRadiation: Radiation,
    LucideRadical: Radical,
    LucideRadio: Radio,
    LucideRadioReceiver: RadioReceiver,
    LucideRadioTower: RadioTower,
    LucideRadius: Radius,
    LucideRailSymbol: RailSymbol,
    LucideRainbow: Rainbow,
    LucideRat: Rat,
    LucideRatio: Ratio,
    LucideReceipt: Receipt,
    LucideReceiptCent: ReceiptCent,
    LucideReceiptEuro: ReceiptEuro,
    LucideReceiptIndianRupee: ReceiptIndianRupee,
    LucideReceiptJapaneseYen: ReceiptJapaneseYen,
    LucideReceiptPoundSterling: ReceiptPoundSterling,
    LucideReceiptRussianRuble: ReceiptRussianRuble,
    LucideReceiptSwissFranc: ReceiptSwissFranc,
    LucideReceiptText: ReceiptText,
    LucideRectangleEllipsis: RectangleEllipsis,
    LucideRectangleHorizontal: RectangleHorizontal,
    LucideRectangleVertical: RectangleVertical,
    LucideRecycle: Recycle,
    LucideRedo: Redo,
    LucideRedo2: Redo2,
    LucideRedoDot: RedoDot,
    LucideRefreshCcw: RefreshCcw,
    LucideRefreshCcwDot: RefreshCcwDot,
    LucideRefreshCw: RefreshCw,
    LucideRefreshCwOff: RefreshCwOff,
    LucideRefrigerator: Refrigerator,
    LucideRegex: Regex,
    LucideRemoveFormatting: RemoveFormatting,
    LucideRepeat: Repeat,
    LucideRepeat1: Repeat1,
    LucideRepeat2: Repeat2,
    LucideReplace: Replace,
    LucideReplaceAll: ReplaceAll,
    LucideReply: Reply,
    LucideReplyAll: ReplyAll,
    LucideRewind: Rewind,
    LucideRibbon: Ribbon,
    LucideRocket: Rocket,
    LucideRockingChair: RockingChair,
    LucideRollerCoaster: RollerCoaster,
    LucideRotate3D: Rotate3d,
    LucideRotate3d: Rotate3d,
    LucideRotateCcw: RotateCcw,
    LucideRotateCcwSquare: RotateCcwSquare,
    LucideRotateCw: RotateCw,
    LucideRotateCwSquare: RotateCwSquare,
    LucideRoute: Route,
    LucideRouteOff: RouteOff,
    LucideRouter: Router,
    LucideRows: Rows2,
    LucideRows2: Rows2,
    LucideRows3: Rows3,
    LucideRows4: Rows4,
    LucideRss: Rss,
    LucideRuler: Ruler,
    LucideRussianRuble: RussianRuble,
    LucideSailboat: Sailboat,
    LucideSalad: Salad,
    LucideSandwich: Sandwich,
    LucideSatellite: Satellite,
    LucideSatelliteDish: SatelliteDish,
    LucideSave: Save,
    LucideSaveAll: SaveAll,
    LucideSaveOff: SaveOff,
    LucideScale: Scale,
    LucideScale3D: Scale3d,
    LucideScale3d: Scale3d,
    LucideScaling: Scaling,
    LucideScan: Scan,
    LucideScanBarcode: ScanBarcode,
    LucideScanEye: ScanEye,
    LucideScanFace: ScanFace,
    LucideScanLine: ScanLine,
    LucideScanQrCode: ScanQrCode,
    LucideScanSearch: ScanSearch,
    LucideScanText: ScanText,
    LucideScatterChart: ChartScatter,
    LucideSchool: School,
    LucideSchool2: University,
    LucideScissors: Scissors,
    LucideScissorsLineDashed: ScissorsLineDashed,
    LucideScissorsSquare: SquareScissors,
    LucideScissorsSquareDashedBottom: SquareBottomDashedScissors,
    LucideScreenShare: ScreenShare,
    LucideScreenShareOff: ScreenShareOff,
    LucideScroll: Scroll,
    LucideScrollText: ScrollText,
    LucideSearch: Search,
    LucideSearchCheck: SearchCheck,
    LucideSearchCode: SearchCode,
    LucideSearchSlash: SearchSlash,
    LucideSearchX: SearchX,
    LucideSection: Section,
    LucideSend: Send,
    LucideSendHorizonal: SendHorizontal,
    LucideSendHorizontal: SendHorizontal,
    LucideSendToBack: SendToBack,
    LucideSeparatorHorizontal: SeparatorHorizontal,
    LucideSeparatorVertical: SeparatorVertical,
    LucideServer: Server,
    LucideServerCog: ServerCog,
    LucideServerCrash: ServerCrash,
    LucideServerOff: ServerOff,
    LucideSettings: Settings,
    LucideSettings2: Settings2,
    LucideShapes: Shapes,
    LucideShare: Share,
    LucideShare2: Share2,
    LucideSheet: Sheet$1,
    LucideShell: Shell,
    LucideShield: Shield,
    LucideShieldAlert: ShieldAlert,
    LucideShieldBan: ShieldBan,
    LucideShieldCheck: ShieldCheck,
    LucideShieldClose: ShieldX,
    LucideShieldEllipsis: ShieldEllipsis,
    LucideShieldHalf: ShieldHalf,
    LucideShieldMinus: ShieldMinus,
    LucideShieldOff: ShieldOff,
    LucideShieldPlus: ShieldPlus,
    LucideShieldQuestion: ShieldQuestion,
    LucideShieldX: ShieldX,
    LucideShip: Ship,
    LucideShipWheel: ShipWheel,
    LucideShirt: Shirt,
    LucideShoppingBag: ShoppingBag,
    LucideShoppingBasket: ShoppingBasket,
    LucideShoppingCart: ShoppingCart,
    LucideShovel: Shovel,
    LucideShowerHead: ShowerHead,
    LucideShrink: Shrink,
    LucideShrub: Shrub,
    LucideShuffle: Shuffle,
    LucideSidebar: PanelLeft,
    LucideSidebarClose: PanelLeftClose,
    LucideSidebarOpen: PanelLeftOpen,
    LucideSigma: Sigma,
    LucideSigmaSquare: SquareSigma,
    LucideSignal: Signal,
    LucideSignalHigh: SignalHigh,
    LucideSignalLow: SignalLow,
    LucideSignalMedium: SignalMedium,
    LucideSignalZero: SignalZero,
    LucideSignature: Signature,
    LucideSignpost: Signpost,
    LucideSignpostBig: SignpostBig,
    LucideSiren: Siren,
    LucideSkipBack: SkipBack,
    LucideSkipForward: SkipForward,
    LucideSkull: Skull,
    LucideSlack: Slack,
    LucideSlash: Slash,
    LucideSlashSquare: SquareSlash,
    LucideSlice: Slice,
    LucideSliders: SlidersVertical,
    LucideSlidersHorizontal: SlidersHorizontal,
    LucideSlidersVertical: SlidersVertical,
    LucideSmartphone: Smartphone,
    LucideSmartphoneCharging: SmartphoneCharging,
    LucideSmartphoneNfc: SmartphoneNfc,
    LucideSmile: Smile,
    LucideSmilePlus: SmilePlus,
    LucideSnail: Snail,
    LucideSnowflake: Snowflake,
    LucideSofa: Sofa,
    LucideSortAsc: ArrowUpNarrowWide,
    LucideSortDesc: ArrowDownWideNarrow,
    LucideSoup: Soup,
    LucideSpace: Space,
    LucideSpade: Spade,
    LucideSparkle: Sparkle,
    LucideSparkles: Sparkles,
    LucideSpeaker: Speaker,
    LucideSpeech: Speech,
    LucideSpellCheck: SpellCheck,
    LucideSpellCheck2: SpellCheck2,
    LucideSpline: Spline,
    LucideSplit: Split,
    LucideSplitSquareHorizontal: SquareSplitHorizontal,
    LucideSplitSquareVertical: SquareSplitVertical,
    LucideSprayCan: SprayCan,
    LucideSprout: Sprout,
    LucideSquare: Square,
    LucideSquareActivity: SquareActivity,
    LucideSquareArrowDown: SquareArrowDown,
    LucideSquareArrowDownLeft: SquareArrowDownLeft,
    LucideSquareArrowDownRight: SquareArrowDownRight,
    LucideSquareArrowLeft: SquareArrowLeft,
    LucideSquareArrowOutDownLeft: SquareArrowOutDownLeft,
    LucideSquareArrowOutDownRight: SquareArrowOutDownRight,
    LucideSquareArrowOutUpLeft: SquareArrowOutUpLeft,
    LucideSquareArrowOutUpRight: SquareArrowOutUpRight,
    LucideSquareArrowRight: SquareArrowRight,
    LucideSquareArrowUp: SquareArrowUp,
    LucideSquareArrowUpLeft: SquareArrowUpLeft,
    LucideSquareArrowUpRight: SquareArrowUpRight,
    LucideSquareAsterisk: SquareAsterisk,
    LucideSquareBottomDashedScissors: SquareBottomDashedScissors,
    LucideSquareChartGantt: SquareChartGantt,
    LucideSquareCheck: SquareCheck,
    LucideSquareCheckBig: SquareCheckBig,
    LucideSquareChevronDown: SquareChevronDown,
    LucideSquareChevronLeft: SquareChevronLeft,
    LucideSquareChevronRight: SquareChevronRight,
    LucideSquareChevronUp: SquareChevronUp,
    LucideSquareCode: SquareCode,
    LucideSquareDashed: SquareDashed,
    LucideSquareDashedBottom: SquareDashedBottom,
    LucideSquareDashedBottomCode: SquareDashedBottomCode,
    LucideSquareDashedKanban: SquareDashedKanban,
    LucideSquareDashedMousePointer: SquareDashedMousePointer,
    LucideSquareDivide: SquareDivide,
    LucideSquareDot: SquareDot,
    LucideSquareEqual: SquareEqual,
    LucideSquareFunction: SquareFunction,
    LucideSquareGanttChart: SquareChartGantt,
    LucideSquareKanban: SquareKanban,
    LucideSquareLibrary: SquareLibrary,
    LucideSquareM: SquareM,
    LucideSquareMenu: SquareMenu,
    LucideSquareMinus: SquareMinus,
    LucideSquareMousePointer: SquareMousePointer,
    LucideSquareParking: SquareParking,
    LucideSquareParkingOff: SquareParkingOff,
    LucideSquarePen: SquarePen,
    LucideSquarePercent: SquarePercent,
    LucideSquarePi: SquarePi,
    LucideSquarePilcrow: SquarePilcrow,
    LucideSquarePlay: SquarePlay,
    LucideSquarePlus: SquarePlus,
    LucideSquarePower: SquarePower,
    LucideSquareRadical: SquareRadical,
    LucideSquareScissors: SquareScissors,
    LucideSquareSigma: SquareSigma,
    LucideSquareSlash: SquareSlash,
    LucideSquareSplitHorizontal: SquareSplitHorizontal,
    LucideSquareSplitVertical: SquareSplitVertical,
    LucideSquareSquare: SquareSquare,
    LucideSquareStack: SquareStack,
    LucideSquareTerminal: SquareTerminal,
    LucideSquareUser: SquareUser,
    LucideSquareUserRound: SquareUserRound,
    LucideSquareX: SquareX,
    LucideSquircle: Squircle,
    LucideSquirrel: Squirrel,
    LucideStamp: Stamp,
    LucideStar: Star,
    LucideStarHalf: StarHalf,
    LucideStarOff: StarOff,
    LucideStars: Sparkles,
    LucideStepBack: StepBack,
    LucideStepForward: StepForward,
    LucideStethoscope: Stethoscope,
    LucideSticker: Sticker,
    LucideStickyNote: StickyNote,
    LucideStopCircle: CircleStop,
    LucideStore: Store,
    LucideStretchHorizontal: StretchHorizontal,
    LucideStretchVertical: StretchVertical,
    LucideStrikethrough: Strikethrough,
    LucideSubscript: Subscript,
    LucideSubtitles: Captions,
    LucideSun: Sun,
    LucideSunDim: SunDim,
    LucideSunMedium: SunMedium,
    LucideSunMoon: SunMoon,
    LucideSunSnow: SunSnow,
    LucideSunrise: Sunrise,
    LucideSunset: Sunset,
    LucideSuperscript: Superscript,
    LucideSwatchBook: SwatchBook,
    LucideSwissFranc: SwissFranc,
    LucideSwitchCamera: SwitchCamera,
    LucideSword: Sword,
    LucideSwords: Swords,
    LucideSyringe: Syringe,
    LucideTable: Table$1,
    LucideTable2: Table2,
    LucideTableCellsMerge: TableCellsMerge,
    LucideTableCellsSplit: TableCellsSplit,
    LucideTableColumnsSplit: TableColumnsSplit,
    LucideTableOfContents: TableOfContents,
    LucideTableProperties: TableProperties,
    LucideTableRowsSplit: TableRowsSplit,
    LucideTablet: Tablet,
    LucideTabletSmartphone: TabletSmartphone,
    LucideTablets: Tablets,
    LucideTag: Tag$1,
    LucideTags: Tags,
    LucideTally1: Tally1,
    LucideTally2: Tally2,
    LucideTally3: Tally3,
    LucideTally4: Tally4,
    LucideTally5: Tally5,
    LucideTangent: Tangent,
    LucideTarget: Target,
    LucideTelescope: Telescope,
    LucideTent: Tent,
    LucideTentTree: TentTree,
    LucideTerminal: Terminal,
    LucideTerminalSquare: SquareTerminal,
    LucideTestTube: TestTube,
    LucideTestTube2: TestTubeDiagonal,
    LucideTestTubeDiagonal: TestTubeDiagonal,
    LucideTestTubes: TestTubes,
    LucideText: Text,
    LucideTextCursor: TextCursor,
    LucideTextCursorInput: TextCursorInput,
    LucideTextQuote: TextQuote,
    LucideTextSearch: TextSearch,
    LucideTextSelect: TextSelect,
    LucideTextSelection: TextSelect,
    LucideTheater: Theater,
    LucideThermometer: Thermometer,
    LucideThermometerSnowflake: ThermometerSnowflake,
    LucideThermometerSun: ThermometerSun,
    LucideThumbsDown: ThumbsDown,
    LucideThumbsUp: ThumbsUp,
    LucideTicket: Ticket,
    LucideTicketCheck: TicketCheck,
    LucideTicketMinus: TicketMinus,
    LucideTicketPercent: TicketPercent,
    LucideTicketPlus: TicketPlus,
    LucideTicketSlash: TicketSlash,
    LucideTicketX: TicketX,
    LucideTickets: Tickets,
    LucideTicketsPlane: TicketsPlane,
    LucideTimer: Timer,
    LucideTimerOff: TimerOff,
    LucideTimerReset: TimerReset,
    LucideToggleLeft: ToggleLeft,
    LucideToggleRight: ToggleRight,
    LucideToilet: Toilet,
    LucideTornado: Tornado,
    LucideTorus: Torus,
    LucideTouchpad: Touchpad,
    LucideTouchpadOff: TouchpadOff,
    LucideTowerControl: TowerControl,
    LucideToyBrick: ToyBrick,
    LucideTractor: Tractor,
    LucideTrafficCone: TrafficCone,
    LucideTrain: TramFront,
    LucideTrainFront: TrainFront,
    LucideTrainFrontTunnel: TrainFrontTunnel,
    LucideTrainTrack: TrainTrack,
    LucideTramFront: TramFront,
    LucideTrash: Trash,
    LucideTrash2: Trash2,
    LucideTreeDeciduous: TreeDeciduous,
    LucideTreePalm: TreePalm,
    LucideTreePine: TreePine,
    LucideTrees: Trees,
    LucideTrello: Trello,
    LucideTrendingDown: TrendingDown,
    LucideTrendingUp: TrendingUp,
    LucideTrendingUpDown: TrendingUpDown,
    LucideTriangle: Triangle,
    LucideTriangleAlert: TriangleAlert,
    LucideTriangleRight: TriangleRight,
    LucideTrophy: Trophy,
    LucideTruck: Truck,
    LucideTurtle: Turtle,
    LucideTv: Tv,
    LucideTv2: TvMinimal,
    LucideTvMinimal: TvMinimal,
    LucideTvMinimalPlay: TvMinimalPlay,
    LucideTwitch: Twitch,
    LucideTwitter: Twitter,
    LucideType: Type,
    LucideTypeOutline: TypeOutline,
    LucideUmbrella: Umbrella,
    LucideUmbrellaOff: UmbrellaOff,
    LucideUnderline: Underline,
    LucideUndo: Undo,
    LucideUndo2: Undo2,
    LucideUndoDot: UndoDot,
    LucideUnfoldHorizontal: UnfoldHorizontal,
    LucideUnfoldVertical: UnfoldVertical,
    LucideUngroup: Ungroup,
    LucideUniversity: University,
    LucideUnlink: Unlink,
    LucideUnlink2: Unlink2,
    LucideUnlock: LockOpen,
    LucideUnlockKeyhole: LockKeyholeOpen,
    LucideUnplug: Unplug,
    LucideUpload: Upload,
    LucideUploadCloud: CloudUpload,
    LucideUsb: Usb,
    LucideUser: User,
    LucideUser2: UserRound,
    LucideUserCheck: UserCheck,
    LucideUserCheck2: UserRoundCheck,
    LucideUserCircle: CircleUser,
    LucideUserCircle2: CircleUserRound,
    LucideUserCog: UserCog,
    LucideUserCog2: UserRoundCog,
    LucideUserMinus: UserMinus,
    LucideUserMinus2: UserRoundMinus,
    LucideUserPen: UserPen,
    LucideUserPlus: UserPlus,
    LucideUserPlus2: UserRoundPlus,
    LucideUserRound: UserRound,
    LucideUserRoundCheck: UserRoundCheck,
    LucideUserRoundCog: UserRoundCog,
    LucideUserRoundMinus: UserRoundMinus,
    LucideUserRoundPen: UserRoundPen,
    LucideUserRoundPlus: UserRoundPlus,
    LucideUserRoundSearch: UserRoundSearch,
    LucideUserRoundX: UserRoundX,
    LucideUserSearch: UserSearch,
    LucideUserSquare: SquareUser,
    LucideUserSquare2: SquareUserRound,
    LucideUserX: UserX,
    LucideUserX2: UserRoundX,
    LucideUsers: Users,
    LucideUsers2: UsersRound,
    LucideUsersRound: UsersRound,
    LucideUtensils: Utensils,
    LucideUtensilsCrossed: UtensilsCrossed,
    LucideUtilityPole: UtilityPole,
    LucideVariable: Variable,
    LucideVault: Vault,
    LucideVegan: Vegan,
    LucideVenetianMask: VenetianMask,
    LucideVerified: BadgeCheck,
    LucideVibrate: Vibrate,
    LucideVibrateOff: VibrateOff,
    LucideVideo: Video,
    LucideVideoOff: VideoOff,
    LucideVideotape: Videotape,
    LucideView: View,
    LucideVoicemail: Voicemail,
    LucideVolleyball: Volleyball,
    LucideVolume: Volume,
    LucideVolume1: Volume1,
    LucideVolume2: Volume2,
    LucideVolumeOff: VolumeOff,
    LucideVolumeX: VolumeX,
    LucideVote: Vote,
    LucideWallet: Wallet,
    LucideWallet2: WalletMinimal,
    LucideWalletCards: WalletCards,
    LucideWalletMinimal: WalletMinimal,
    LucideWallpaper: Wallpaper,
    LucideWand: Wand,
    LucideWand2: WandSparkles,
    LucideWandSparkles: WandSparkles,
    LucideWarehouse: Warehouse,
    LucideWashingMachine: WashingMachine,
    LucideWatch: Watch,
    LucideWaves: Waves,
    LucideWaypoints: Waypoints,
    LucideWebcam: Webcam,
    LucideWebhook: Webhook,
    LucideWebhookOff: WebhookOff,
    LucideWeight: Weight,
    LucideWheat: Wheat,
    LucideWheatOff: WheatOff,
    LucideWholeWord: WholeWord,
    LucideWifi: Wifi,
    LucideWifiHigh: WifiHigh,
    LucideWifiLow: WifiLow,
    LucideWifiOff: WifiOff,
    LucideWifiZero: WifiZero,
    LucideWind: Wind,
    LucideWindArrowDown: WindArrowDown,
    LucideWine: Wine,
    LucideWineOff: WineOff,
    LucideWorkflow: Workflow,
    LucideWorm: Worm,
    LucideWrapText: WrapText,
    LucideWrench: Wrench,
    LucideX: X,
    LucideXCircle: CircleX,
    LucideXOctagon: OctagonX,
    LucideXSquare: SquareX,
    LucideYoutube: Youtube,
    LucideZap: Zap,
    LucideZapOff: ZapOff,
    LucideZoomIn: ZoomIn,
    LucideZoomOut: ZoomOut,
    Luggage: Luggage,
    LuggageIcon: Luggage,
    MSquare: SquareM,
    MSquareIcon: SquareM,
    Magnet: Magnet,
    MagnetIcon: Magnet,
    Mail: Mail,
    MailCheck: MailCheck,
    MailCheckIcon: MailCheck,
    MailIcon: Mail,
    MailMinus: MailMinus,
    MailMinusIcon: MailMinus,
    MailOpen: MailOpen,
    MailOpenIcon: MailOpen,
    MailPlus: MailPlus,
    MailPlusIcon: MailPlus,
    MailQuestion: MailQuestion,
    MailQuestionIcon: MailQuestion,
    MailSearch: MailSearch,
    MailSearchIcon: MailSearch,
    MailWarning: MailWarning,
    MailWarningIcon: MailWarning,
    MailX: MailX,
    MailXIcon: MailX,
    Mailbox: Mailbox,
    MailboxIcon: Mailbox,
    Mails: Mails,
    MailsIcon: Mails,
    Map: Map$1,
    MapIcon: Map$1,
    MapPin: MapPin,
    MapPinCheck: MapPinCheck,
    MapPinCheckIcon: MapPinCheck,
    MapPinCheckInside: MapPinCheckInside,
    MapPinCheckInsideIcon: MapPinCheckInside,
    MapPinHouse: MapPinHouse,
    MapPinHouseIcon: MapPinHouse,
    MapPinIcon: MapPin,
    MapPinMinus: MapPinMinus,
    MapPinMinusIcon: MapPinMinus,
    MapPinMinusInside: MapPinMinusInside,
    MapPinMinusInsideIcon: MapPinMinusInside,
    MapPinOff: MapPinOff,
    MapPinOffIcon: MapPinOff,
    MapPinPlus: MapPinPlus,
    MapPinPlusIcon: MapPinPlus,
    MapPinPlusInside: MapPinPlusInside,
    MapPinPlusInsideIcon: MapPinPlusInside,
    MapPinX: MapPinX,
    MapPinXIcon: MapPinX,
    MapPinXInside: MapPinXInside,
    MapPinXInsideIcon: MapPinXInside,
    MapPinned: MapPinned,
    MapPinnedIcon: MapPinned,
    Martini: Martini,
    MartiniIcon: Martini,
    Maximize: Maximize,
    Maximize2: Maximize2,
    Maximize2Icon: Maximize2,
    MaximizeIcon: Maximize,
    Medal: Medal,
    MedalIcon: Medal,
    Megaphone: Megaphone,
    MegaphoneIcon: Megaphone,
    MegaphoneOff: MegaphoneOff,
    MegaphoneOffIcon: MegaphoneOff,
    Meh: Meh,
    MehIcon: Meh,
    MemoryStick: MemoryStick,
    MemoryStickIcon: MemoryStick,
    Menu: Menu$1,
    MenuIcon: Menu$1,
    MenuSquare: SquareMenu,
    MenuSquareIcon: SquareMenu,
    Merge: Merge,
    MergeIcon: Merge,
    MessageCircle: MessageCircle,
    MessageCircleCode: MessageCircleCode,
    MessageCircleCodeIcon: MessageCircleCode,
    MessageCircleDashed: MessageCircleDashed,
    MessageCircleDashedIcon: MessageCircleDashed,
    MessageCircleHeart: MessageCircleHeart,
    MessageCircleHeartIcon: MessageCircleHeart,
    MessageCircleIcon: MessageCircle,
    MessageCircleMore: MessageCircleMore,
    MessageCircleMoreIcon: MessageCircleMore,
    MessageCircleOff: MessageCircleOff,
    MessageCircleOffIcon: MessageCircleOff,
    MessageCirclePlus: MessageCirclePlus,
    MessageCirclePlusIcon: MessageCirclePlus,
    MessageCircleQuestion: MessageCircleQuestion,
    MessageCircleQuestionIcon: MessageCircleQuestion,
    MessageCircleReply: MessageCircleReply,
    MessageCircleReplyIcon: MessageCircleReply,
    MessageCircleWarning: MessageCircleWarning,
    MessageCircleWarningIcon: MessageCircleWarning,
    MessageCircleX: MessageCircleX,
    MessageCircleXIcon: MessageCircleX,
    MessageSquare: MessageSquare,
    MessageSquareCode: MessageSquareCode,
    MessageSquareCodeIcon: MessageSquareCode,
    MessageSquareDashed: MessageSquareDashed,
    MessageSquareDashedIcon: MessageSquareDashed,
    MessageSquareDiff: MessageSquareDiff,
    MessageSquareDiffIcon: MessageSquareDiff,
    MessageSquareDot: MessageSquareDot,
    MessageSquareDotIcon: MessageSquareDot,
    MessageSquareHeart: MessageSquareHeart,
    MessageSquareHeartIcon: MessageSquareHeart,
    MessageSquareIcon: MessageSquare,
    MessageSquareLock: MessageSquareLock,
    MessageSquareLockIcon: MessageSquareLock,
    MessageSquareMore: MessageSquareMore,
    MessageSquareMoreIcon: MessageSquareMore,
    MessageSquareOff: MessageSquareOff,
    MessageSquareOffIcon: MessageSquareOff,
    MessageSquarePlus: MessageSquarePlus,
    MessageSquarePlusIcon: MessageSquarePlus,
    MessageSquareQuote: MessageSquareQuote,
    MessageSquareQuoteIcon: MessageSquareQuote,
    MessageSquareReply: MessageSquareReply,
    MessageSquareReplyIcon: MessageSquareReply,
    MessageSquareShare: MessageSquareShare,
    MessageSquareShareIcon: MessageSquareShare,
    MessageSquareText: MessageSquareText,
    MessageSquareTextIcon: MessageSquareText,
    MessageSquareWarning: MessageSquareWarning,
    MessageSquareWarningIcon: MessageSquareWarning,
    MessageSquareX: MessageSquareX,
    MessageSquareXIcon: MessageSquareX,
    MessagesSquare: MessagesSquare,
    MessagesSquareIcon: MessagesSquare,
    Mic: Mic,
    Mic2: MicVocal,
    Mic2Icon: MicVocal,
    MicIcon: Mic,
    MicOff: MicOff,
    MicOffIcon: MicOff,
    MicVocal: MicVocal,
    MicVocalIcon: MicVocal,
    Microchip: Microchip,
    MicrochipIcon: Microchip,
    Microscope: Microscope,
    MicroscopeIcon: Microscope,
    Microwave: Microwave,
    MicrowaveIcon: Microwave,
    Milestone: Milestone,
    MilestoneIcon: Milestone,
    Milk: Milk,
    MilkIcon: Milk,
    MilkOff: MilkOff,
    MilkOffIcon: MilkOff,
    Minimize: Minimize,
    Minimize2: Minimize2,
    Minimize2Icon: Minimize2,
    MinimizeIcon: Minimize,
    Minus: Minus,
    MinusCircle: CircleMinus,
    MinusCircleIcon: CircleMinus,
    MinusIcon: Minus,
    MinusSquare: SquareMinus,
    MinusSquareIcon: SquareMinus,
    Monitor: Monitor,
    MonitorCheck: MonitorCheck,
    MonitorCheckIcon: MonitorCheck,
    MonitorCog: MonitorCog,
    MonitorCogIcon: MonitorCog,
    MonitorDot: MonitorDot,
    MonitorDotIcon: MonitorDot,
    MonitorDown: MonitorDown,
    MonitorDownIcon: MonitorDown,
    MonitorIcon: Monitor,
    MonitorOff: MonitorOff,
    MonitorOffIcon: MonitorOff,
    MonitorPause: MonitorPause,
    MonitorPauseIcon: MonitorPause,
    MonitorPlay: MonitorPlay,
    MonitorPlayIcon: MonitorPlay,
    MonitorSmartphone: MonitorSmartphone,
    MonitorSmartphoneIcon: MonitorSmartphone,
    MonitorSpeaker: MonitorSpeaker,
    MonitorSpeakerIcon: MonitorSpeaker,
    MonitorStop: MonitorStop,
    MonitorStopIcon: MonitorStop,
    MonitorUp: MonitorUp,
    MonitorUpIcon: MonitorUp,
    MonitorX: MonitorX,
    MonitorXIcon: MonitorX,
    Moon: Moon,
    MoonIcon: Moon,
    MoonStar: MoonStar,
    MoonStarIcon: MoonStar,
    MoreHorizontal: Ellipsis,
    MoreHorizontalIcon: Ellipsis,
    MoreVertical: EllipsisVertical,
    MoreVerticalIcon: EllipsisVertical,
    Mountain: Mountain,
    MountainIcon: Mountain,
    MountainSnow: MountainSnow,
    MountainSnowIcon: MountainSnow,
    Mouse: Mouse,
    MouseIcon: Mouse,
    MouseOff: MouseOff,
    MouseOffIcon: MouseOff,
    MousePointer: MousePointer,
    MousePointer2: MousePointer2,
    MousePointer2Icon: MousePointer2,
    MousePointerBan: MousePointerBan,
    MousePointerBanIcon: MousePointerBan,
    MousePointerClick: MousePointerClick,
    MousePointerClickIcon: MousePointerClick,
    MousePointerIcon: MousePointer,
    MousePointerSquareDashed: SquareDashedMousePointer,
    MousePointerSquareDashedIcon: SquareDashedMousePointer,
    Move: Move,
    Move3D: Move3d,
    Move3DIcon: Move3d,
    Move3d: Move3d,
    Move3dIcon: Move3d,
    MoveDiagonal: MoveDiagonal,
    MoveDiagonal2: MoveDiagonal2,
    MoveDiagonal2Icon: MoveDiagonal2,
    MoveDiagonalIcon: MoveDiagonal,
    MoveDown: MoveDown,
    MoveDownIcon: MoveDown,
    MoveDownLeft: MoveDownLeft,
    MoveDownLeftIcon: MoveDownLeft,
    MoveDownRight: MoveDownRight,
    MoveDownRightIcon: MoveDownRight,
    MoveHorizontal: MoveHorizontal,
    MoveHorizontalIcon: MoveHorizontal,
    MoveIcon: Move,
    MoveLeft: MoveLeft,
    MoveLeftIcon: MoveLeft,
    MoveRight: MoveRight,
    MoveRightIcon: MoveRight,
    MoveUp: MoveUp,
    MoveUpIcon: MoveUp,
    MoveUpLeft: MoveUpLeft,
    MoveUpLeftIcon: MoveUpLeft,
    MoveUpRight: MoveUpRight,
    MoveUpRightIcon: MoveUpRight,
    MoveVertical: MoveVertical,
    MoveVerticalIcon: MoveVertical,
    Music: Music,
    Music2: Music2,
    Music2Icon: Music2,
    Music3: Music3,
    Music3Icon: Music3,
    Music4: Music4,
    Music4Icon: Music4,
    MusicIcon: Music,
    Navigation: Navigation$1,
    Navigation2: Navigation2,
    Navigation2Icon: Navigation2,
    Navigation2Off: Navigation2Off,
    Navigation2OffIcon: Navigation2Off,
    NavigationIcon: Navigation$1,
    NavigationOff: NavigationOff,
    NavigationOffIcon: NavigationOff,
    Network: Network,
    NetworkIcon: Network,
    Newspaper: Newspaper,
    NewspaperIcon: Newspaper,
    Nfc: Nfc,
    NfcIcon: Nfc,
    Notebook: Notebook,
    NotebookIcon: Notebook,
    NotebookPen: NotebookPen,
    NotebookPenIcon: NotebookPen,
    NotebookTabs: NotebookTabs,
    NotebookTabsIcon: NotebookTabs,
    NotebookText: NotebookText,
    NotebookTextIcon: NotebookText,
    NotepadText: NotepadText,
    NotepadTextDashed: NotepadTextDashed,
    NotepadTextDashedIcon: NotepadTextDashed,
    NotepadTextIcon: NotepadText,
    Nut: Nut,
    NutIcon: Nut,
    NutOff: NutOff,
    NutOffIcon: NutOff,
    Octagon: Octagon,
    OctagonAlert: OctagonAlert,
    OctagonAlertIcon: OctagonAlert,
    OctagonIcon: Octagon,
    OctagonMinus: OctagonMinus,
    OctagonMinusIcon: OctagonMinus,
    OctagonPause: OctagonPause,
    OctagonPauseIcon: OctagonPause,
    OctagonX: OctagonX,
    OctagonXIcon: OctagonX,
    Omega: Omega,
    OmegaIcon: Omega,
    Option: Option,
    OptionIcon: Option,
    Orbit: Orbit,
    OrbitIcon: Orbit,
    Origami: Origami,
    OrigamiIcon: Origami,
    Outdent: IndentDecrease,
    OutdentIcon: IndentDecrease,
    Package: Package,
    Package2: Package2,
    Package2Icon: Package2,
    PackageCheck: PackageCheck,
    PackageCheckIcon: PackageCheck,
    PackageIcon: Package,
    PackageMinus: PackageMinus,
    PackageMinusIcon: PackageMinus,
    PackageOpen: PackageOpen,
    PackageOpenIcon: PackageOpen,
    PackagePlus: PackagePlus,
    PackagePlusIcon: PackagePlus,
    PackageSearch: PackageSearch,
    PackageSearchIcon: PackageSearch,
    PackageX: PackageX,
    PackageXIcon: PackageX,
    PaintBucket: PaintBucket,
    PaintBucketIcon: PaintBucket,
    PaintRoller: PaintRoller,
    PaintRollerIcon: PaintRoller,
    Paintbrush: Paintbrush,
    Paintbrush2: PaintbrushVertical,
    Paintbrush2Icon: PaintbrushVertical,
    PaintbrushIcon: Paintbrush,
    PaintbrushVertical: PaintbrushVertical,
    PaintbrushVerticalIcon: PaintbrushVertical,
    Palette: Palette,
    PaletteIcon: Palette,
    Palmtree: TreePalm,
    PalmtreeIcon: TreePalm,
    PanelBottom: PanelBottom,
    PanelBottomClose: PanelBottomClose,
    PanelBottomCloseIcon: PanelBottomClose,
    PanelBottomDashed: PanelBottomDashed,
    PanelBottomDashedIcon: PanelBottomDashed,
    PanelBottomIcon: PanelBottom,
    PanelBottomInactive: PanelBottomDashed,
    PanelBottomInactiveIcon: PanelBottomDashed,
    PanelBottomOpen: PanelBottomOpen,
    PanelBottomOpenIcon: PanelBottomOpen,
    PanelLeft: PanelLeft,
    PanelLeftClose: PanelLeftClose,
    PanelLeftCloseIcon: PanelLeftClose,
    PanelLeftDashed: PanelLeftDashed,
    PanelLeftDashedIcon: PanelLeftDashed,
    PanelLeftIcon: PanelLeft,
    PanelLeftInactive: PanelLeftDashed,
    PanelLeftInactiveIcon: PanelLeftDashed,
    PanelLeftOpen: PanelLeftOpen,
    PanelLeftOpenIcon: PanelLeftOpen,
    PanelRight: PanelRight,
    PanelRightClose: PanelRightClose,
    PanelRightCloseIcon: PanelRightClose,
    PanelRightDashed: PanelRightDashed,
    PanelRightDashedIcon: PanelRightDashed,
    PanelRightIcon: PanelRight,
    PanelRightInactive: PanelRightDashed,
    PanelRightInactiveIcon: PanelRightDashed,
    PanelRightOpen: PanelRightOpen,
    PanelRightOpenIcon: PanelRightOpen,
    PanelTop: PanelTop,
    PanelTopClose: PanelTopClose,
    PanelTopCloseIcon: PanelTopClose,
    PanelTopDashed: PanelTopDashed,
    PanelTopDashedIcon: PanelTopDashed,
    PanelTopIcon: PanelTop,
    PanelTopInactive: PanelTopDashed,
    PanelTopInactiveIcon: PanelTopDashed,
    PanelTopOpen: PanelTopOpen,
    PanelTopOpenIcon: PanelTopOpen,
    PanelsLeftBottom: PanelsLeftBottom,
    PanelsLeftBottomIcon: PanelsLeftBottom,
    PanelsLeftRight: Columns3,
    PanelsLeftRightIcon: Columns3,
    PanelsRightBottom: PanelsRightBottom,
    PanelsRightBottomIcon: PanelsRightBottom,
    PanelsTopBottom: Rows3,
    PanelsTopBottomIcon: Rows3,
    PanelsTopLeft: PanelsTopLeft,
    PanelsTopLeftIcon: PanelsTopLeft,
    Paperclip: Paperclip,
    PaperclipIcon: Paperclip,
    Parentheses: Parentheses,
    ParenthesesIcon: Parentheses,
    ParkingCircle: CircleParking,
    ParkingCircleIcon: CircleParking,
    ParkingCircleOff: CircleParkingOff,
    ParkingCircleOffIcon: CircleParkingOff,
    ParkingMeter: ParkingMeter,
    ParkingMeterIcon: ParkingMeter,
    ParkingSquare: SquareParking,
    ParkingSquareIcon: SquareParking,
    ParkingSquareOff: SquareParkingOff,
    ParkingSquareOffIcon: SquareParkingOff,
    PartyPopper: PartyPopper,
    PartyPopperIcon: PartyPopper,
    Pause: Pause,
    PauseCircle: CirclePause,
    PauseCircleIcon: CirclePause,
    PauseIcon: Pause,
    PauseOctagon: OctagonPause,
    PauseOctagonIcon: OctagonPause,
    PawPrint: PawPrint,
    PawPrintIcon: PawPrint,
    PcCase: PcCase,
    PcCaseIcon: PcCase,
    Pen: Pen,
    PenBox: SquarePen,
    PenBoxIcon: SquarePen,
    PenIcon: Pen,
    PenLine: PenLine,
    PenLineIcon: PenLine,
    PenOff: PenOff,
    PenOffIcon: PenOff,
    PenSquare: SquarePen,
    PenSquareIcon: SquarePen,
    PenTool: PenTool,
    PenToolIcon: PenTool,
    Pencil: Pencil,
    PencilIcon: Pencil,
    PencilLine: PencilLine,
    PencilLineIcon: PencilLine,
    PencilOff: PencilOff,
    PencilOffIcon: PencilOff,
    PencilRuler: PencilRuler,
    PencilRulerIcon: PencilRuler,
    Pentagon: Pentagon,
    PentagonIcon: Pentagon,
    Percent: Percent,
    PercentCircle: CirclePercent,
    PercentCircleIcon: CirclePercent,
    PercentDiamond: DiamondPercent,
    PercentDiamondIcon: DiamondPercent,
    PercentIcon: Percent,
    PercentSquare: SquarePercent,
    PercentSquareIcon: SquarePercent,
    PersonStanding: PersonStanding,
    PersonStandingIcon: PersonStanding,
    PhilippinePeso: PhilippinePeso,
    PhilippinePesoIcon: PhilippinePeso,
    Phone: Phone,
    PhoneCall: PhoneCall,
    PhoneCallIcon: PhoneCall,
    PhoneForwarded: PhoneForwarded,
    PhoneForwardedIcon: PhoneForwarded,
    PhoneIcon: Phone,
    PhoneIncoming: PhoneIncoming,
    PhoneIncomingIcon: PhoneIncoming,
    PhoneMissed: PhoneMissed,
    PhoneMissedIcon: PhoneMissed,
    PhoneOff: PhoneOff,
    PhoneOffIcon: PhoneOff,
    PhoneOutgoing: PhoneOutgoing,
    PhoneOutgoingIcon: PhoneOutgoing,
    Pi: Pi,
    PiIcon: Pi,
    PiSquare: SquarePi,
    PiSquareIcon: SquarePi,
    Piano: Piano,
    PianoIcon: Piano,
    Pickaxe: Pickaxe,
    PickaxeIcon: Pickaxe,
    PictureInPicture: PictureInPicture,
    PictureInPicture2: PictureInPicture2,
    PictureInPicture2Icon: PictureInPicture2,
    PictureInPictureIcon: PictureInPicture,
    PieChart: ChartPie,
    PieChartIcon: ChartPie,
    PiggyBank: PiggyBank,
    PiggyBankIcon: PiggyBank,
    Pilcrow: Pilcrow,
    PilcrowIcon: Pilcrow,
    PilcrowLeft: PilcrowLeft,
    PilcrowLeftIcon: PilcrowLeft,
    PilcrowRight: PilcrowRight,
    PilcrowRightIcon: PilcrowRight,
    PilcrowSquare: SquarePilcrow,
    PilcrowSquareIcon: SquarePilcrow,
    Pill: Pill,
    PillBottle: PillBottle,
    PillBottleIcon: PillBottle,
    PillIcon: Pill,
    Pin: Pin,
    PinIcon: Pin,
    PinOff: PinOff,
    PinOffIcon: PinOff,
    Pipette: Pipette,
    PipetteIcon: Pipette,
    Pizza: Pizza,
    PizzaIcon: Pizza,
    Plane: Plane,
    PlaneIcon: Plane,
    PlaneLanding: PlaneLanding,
    PlaneLandingIcon: PlaneLanding,
    PlaneTakeoff: PlaneTakeoff,
    PlaneTakeoffIcon: PlaneTakeoff,
    Play: Play,
    PlayCircle: CirclePlay,
    PlayCircleIcon: CirclePlay,
    PlayIcon: Play,
    PlaySquare: SquarePlay,
    PlaySquareIcon: SquarePlay,
    Plug: Plug,
    Plug2: Plug2,
    Plug2Icon: Plug2,
    PlugIcon: Plug,
    PlugZap: PlugZap,
    PlugZap2: PlugZap,
    PlugZap2Icon: PlugZap,
    PlugZapIcon: PlugZap,
    Plus: Plus,
    PlusCircle: CirclePlus,
    PlusCircleIcon: CirclePlus,
    PlusIcon: Plus,
    PlusSquare: SquarePlus,
    PlusSquareIcon: SquarePlus,
    Pocket: Pocket,
    PocketIcon: Pocket,
    PocketKnife: PocketKnife,
    PocketKnifeIcon: PocketKnife,
    Podcast: Podcast,
    PodcastIcon: Podcast,
    Pointer: Pointer,
    PointerIcon: Pointer,
    PointerOff: PointerOff,
    PointerOffIcon: PointerOff,
    Popcorn: Popcorn,
    PopcornIcon: Popcorn,
    Popsicle: Popsicle,
    PopsicleIcon: Popsicle,
    PoundSterling: PoundSterling,
    PoundSterlingIcon: PoundSterling,
    Power: Power,
    PowerCircle: CirclePower,
    PowerCircleIcon: CirclePower,
    PowerIcon: Power,
    PowerOff: PowerOff,
    PowerOffIcon: PowerOff,
    PowerSquare: SquarePower,
    PowerSquareIcon: SquarePower,
    Presentation: Presentation,
    PresentationIcon: Presentation,
    Printer: Printer,
    PrinterCheck: PrinterCheck,
    PrinterCheckIcon: PrinterCheck,
    PrinterIcon: Printer,
    Projector: Projector,
    ProjectorIcon: Projector,
    Proportions: Proportions,
    ProportionsIcon: Proportions,
    Puzzle: Puzzle,
    PuzzleIcon: Puzzle,
    Pyramid: Pyramid,
    PyramidIcon: Pyramid,
    QrCode: QrCode,
    QrCodeIcon: QrCode,
    Quote: Quote,
    QuoteIcon: Quote,
    Rabbit: Rabbit,
    RabbitIcon: Rabbit,
    Radar: Radar,
    RadarIcon: Radar,
    Radiation: Radiation,
    RadiationIcon: Radiation,
    Radical: Radical,
    RadicalIcon: Radical,
    Radio: Radio,
    RadioIcon: Radio,
    RadioReceiver: RadioReceiver,
    RadioReceiverIcon: RadioReceiver,
    RadioTower: RadioTower,
    RadioTowerIcon: RadioTower,
    Radius: Radius,
    RadiusIcon: Radius,
    RailSymbol: RailSymbol,
    RailSymbolIcon: RailSymbol,
    Rainbow: Rainbow,
    RainbowIcon: Rainbow,
    Rat: Rat,
    RatIcon: Rat,
    Ratio: Ratio,
    RatioIcon: Ratio,
    Receipt: Receipt,
    ReceiptCent: ReceiptCent,
    ReceiptCentIcon: ReceiptCent,
    ReceiptEuro: ReceiptEuro,
    ReceiptEuroIcon: ReceiptEuro,
    ReceiptIcon: Receipt,
    ReceiptIndianRupee: ReceiptIndianRupee,
    ReceiptIndianRupeeIcon: ReceiptIndianRupee,
    ReceiptJapaneseYen: ReceiptJapaneseYen,
    ReceiptJapaneseYenIcon: ReceiptJapaneseYen,
    ReceiptPoundSterling: ReceiptPoundSterling,
    ReceiptPoundSterlingIcon: ReceiptPoundSterling,
    ReceiptRussianRuble: ReceiptRussianRuble,
    ReceiptRussianRubleIcon: ReceiptRussianRuble,
    ReceiptSwissFranc: ReceiptSwissFranc,
    ReceiptSwissFrancIcon: ReceiptSwissFranc,
    ReceiptText: ReceiptText,
    ReceiptTextIcon: ReceiptText,
    RectangleEllipsis: RectangleEllipsis,
    RectangleEllipsisIcon: RectangleEllipsis,
    RectangleHorizontal: RectangleHorizontal,
    RectangleHorizontalIcon: RectangleHorizontal,
    RectangleVertical: RectangleVertical,
    RectangleVerticalIcon: RectangleVertical,
    Recycle: Recycle,
    RecycleIcon: Recycle,
    Redo: Redo,
    Redo2: Redo2,
    Redo2Icon: Redo2,
    RedoDot: RedoDot,
    RedoDotIcon: RedoDot,
    RedoIcon: Redo,
    RefreshCcw: RefreshCcw,
    RefreshCcwDot: RefreshCcwDot,
    RefreshCcwDotIcon: RefreshCcwDot,
    RefreshCcwIcon: RefreshCcw,
    RefreshCw: RefreshCw,
    RefreshCwIcon: RefreshCw,
    RefreshCwOff: RefreshCwOff,
    RefreshCwOffIcon: RefreshCwOff,
    Refrigerator: Refrigerator,
    RefrigeratorIcon: Refrigerator,
    Regex: Regex,
    RegexIcon: Regex,
    RemoveFormatting: RemoveFormatting,
    RemoveFormattingIcon: RemoveFormatting,
    Repeat: Repeat,
    Repeat1: Repeat1,
    Repeat1Icon: Repeat1,
    Repeat2: Repeat2,
    Repeat2Icon: Repeat2,
    RepeatIcon: Repeat,
    Replace: Replace,
    ReplaceAll: ReplaceAll,
    ReplaceAllIcon: ReplaceAll,
    ReplaceIcon: Replace,
    Reply: Reply,
    ReplyAll: ReplyAll,
    ReplyAllIcon: ReplyAll,
    ReplyIcon: Reply,
    Rewind: Rewind,
    RewindIcon: Rewind,
    Ribbon: Ribbon,
    RibbonIcon: Ribbon,
    Rocket: Rocket,
    RocketIcon: Rocket,
    RockingChair: RockingChair,
    RockingChairIcon: RockingChair,
    RollerCoaster: RollerCoaster,
    RollerCoasterIcon: RollerCoaster,
    Rotate3D: Rotate3d,
    Rotate3DIcon: Rotate3d,
    Rotate3d: Rotate3d,
    Rotate3dIcon: Rotate3d,
    RotateCcw: RotateCcw,
    RotateCcwIcon: RotateCcw,
    RotateCcwSquare: RotateCcwSquare,
    RotateCcwSquareIcon: RotateCcwSquare,
    RotateCw: RotateCw,
    RotateCwIcon: RotateCw,
    RotateCwSquare: RotateCwSquare,
    RotateCwSquareIcon: RotateCwSquare,
    Route: Route,
    RouteIcon: Route,
    RouteOff: RouteOff,
    RouteOffIcon: RouteOff,
    Router: Router,
    RouterIcon: Router,
    Rows: Rows2,
    Rows2: Rows2,
    Rows2Icon: Rows2,
    Rows3: Rows3,
    Rows3Icon: Rows3,
    Rows4: Rows4,
    Rows4Icon: Rows4,
    RowsIcon: Rows2,
    Rss: Rss,
    RssIcon: Rss,
    Ruler: Ruler,
    RulerIcon: Ruler,
    RussianRuble: RussianRuble,
    RussianRubleIcon: RussianRuble,
    Sailboat: Sailboat,
    SailboatIcon: Sailboat,
    Salad: Salad,
    SaladIcon: Salad,
    Sandwich: Sandwich,
    SandwichIcon: Sandwich,
    Satellite: Satellite,
    SatelliteDish: SatelliteDish,
    SatelliteDishIcon: SatelliteDish,
    SatelliteIcon: Satellite,
    Save: Save,
    SaveAll: SaveAll,
    SaveAllIcon: SaveAll,
    SaveIcon: Save,
    SaveOff: SaveOff,
    SaveOffIcon: SaveOff,
    Scale: Scale,
    Scale3D: Scale3d,
    Scale3DIcon: Scale3d,
    Scale3d: Scale3d,
    Scale3dIcon: Scale3d,
    ScaleIcon: Scale,
    Scaling: Scaling,
    ScalingIcon: Scaling,
    Scan: Scan,
    ScanBarcode: ScanBarcode,
    ScanBarcodeIcon: ScanBarcode,
    ScanEye: ScanEye,
    ScanEyeIcon: ScanEye,
    ScanFace: ScanFace,
    ScanFaceIcon: ScanFace,
    ScanIcon: Scan,
    ScanLine: ScanLine,
    ScanLineIcon: ScanLine,
    ScanQrCode: ScanQrCode,
    ScanQrCodeIcon: ScanQrCode,
    ScanSearch: ScanSearch,
    ScanSearchIcon: ScanSearch,
    ScanText: ScanText,
    ScanTextIcon: ScanText,
    ScatterChart: ChartScatter,
    ScatterChartIcon: ChartScatter,
    School: School,
    School2: University,
    School2Icon: University,
    SchoolIcon: School,
    Scissors: Scissors,
    ScissorsIcon: Scissors,
    ScissorsLineDashed: ScissorsLineDashed,
    ScissorsLineDashedIcon: ScissorsLineDashed,
    ScissorsSquare: SquareScissors,
    ScissorsSquareDashedBottom: SquareBottomDashedScissors,
    ScissorsSquareDashedBottomIcon: SquareBottomDashedScissors,
    ScissorsSquareIcon: SquareScissors,
    ScreenShare: ScreenShare,
    ScreenShareIcon: ScreenShare,
    ScreenShareOff: ScreenShareOff,
    ScreenShareOffIcon: ScreenShareOff,
    Scroll: Scroll,
    ScrollIcon: Scroll,
    ScrollText: ScrollText,
    ScrollTextIcon: ScrollText,
    Search: Search,
    SearchCheck: SearchCheck,
    SearchCheckIcon: SearchCheck,
    SearchCode: SearchCode,
    SearchCodeIcon: SearchCode,
    SearchIcon: Search,
    SearchSlash: SearchSlash,
    SearchSlashIcon: SearchSlash,
    SearchX: SearchX,
    SearchXIcon: SearchX,
    Section: Section,
    SectionIcon: Section,
    Send: Send,
    SendHorizonal: SendHorizontal,
    SendHorizonalIcon: SendHorizontal,
    SendHorizontal: SendHorizontal,
    SendHorizontalIcon: SendHorizontal,
    SendIcon: Send,
    SendToBack: SendToBack,
    SendToBackIcon: SendToBack,
    SeparatorHorizontal: SeparatorHorizontal,
    SeparatorHorizontalIcon: SeparatorHorizontal,
    SeparatorVertical: SeparatorVertical,
    SeparatorVerticalIcon: SeparatorVertical,
    Server: Server,
    ServerCog: ServerCog,
    ServerCogIcon: ServerCog,
    ServerCrash: ServerCrash,
    ServerCrashIcon: ServerCrash,
    ServerIcon: Server,
    ServerOff: ServerOff,
    ServerOffIcon: ServerOff,
    Settings: Settings,
    Settings2: Settings2,
    Settings2Icon: Settings2,
    SettingsIcon: Settings,
    Shapes: Shapes,
    ShapesIcon: Shapes,
    Share: Share,
    Share2: Share2,
    Share2Icon: Share2,
    ShareIcon: Share,
    Sheet: Sheet$1,
    SheetIcon: Sheet$1,
    Shell: Shell,
    ShellIcon: Shell,
    Shield: Shield,
    ShieldAlert: ShieldAlert,
    ShieldAlertIcon: ShieldAlert,
    ShieldBan: ShieldBan,
    ShieldBanIcon: ShieldBan,
    ShieldCheck: ShieldCheck,
    ShieldCheckIcon: ShieldCheck,
    ShieldClose: ShieldX,
    ShieldCloseIcon: ShieldX,
    ShieldEllipsis: ShieldEllipsis,
    ShieldEllipsisIcon: ShieldEllipsis,
    ShieldHalf: ShieldHalf,
    ShieldHalfIcon: ShieldHalf,
    ShieldIcon: Shield,
    ShieldMinus: ShieldMinus,
    ShieldMinusIcon: ShieldMinus,
    ShieldOff: ShieldOff,
    ShieldOffIcon: ShieldOff,
    ShieldPlus: ShieldPlus,
    ShieldPlusIcon: ShieldPlus,
    ShieldQuestion: ShieldQuestion,
    ShieldQuestionIcon: ShieldQuestion,
    ShieldX: ShieldX,
    ShieldXIcon: ShieldX,
    Ship: Ship,
    ShipIcon: Ship,
    ShipWheel: ShipWheel,
    ShipWheelIcon: ShipWheel,
    Shirt: Shirt,
    ShirtIcon: Shirt,
    ShoppingBag: ShoppingBag,
    ShoppingBagIcon: ShoppingBag,
    ShoppingBasket: ShoppingBasket,
    ShoppingBasketIcon: ShoppingBasket,
    ShoppingCart: ShoppingCart,
    ShoppingCartIcon: ShoppingCart,
    Shovel: Shovel,
    ShovelIcon: Shovel,
    ShowerHead: ShowerHead,
    ShowerHeadIcon: ShowerHead,
    Shrink: Shrink,
    ShrinkIcon: Shrink,
    Shrub: Shrub,
    ShrubIcon: Shrub,
    Shuffle: Shuffle,
    ShuffleIcon: Shuffle,
    Sidebar: PanelLeft,
    SidebarClose: PanelLeftClose,
    SidebarCloseIcon: PanelLeftClose,
    SidebarIcon: PanelLeft,
    SidebarOpen: PanelLeftOpen,
    SidebarOpenIcon: PanelLeftOpen,
    Sigma: Sigma,
    SigmaIcon: Sigma,
    SigmaSquare: SquareSigma,
    SigmaSquareIcon: SquareSigma,
    Signal: Signal,
    SignalHigh: SignalHigh,
    SignalHighIcon: SignalHigh,
    SignalIcon: Signal,
    SignalLow: SignalLow,
    SignalLowIcon: SignalLow,
    SignalMedium: SignalMedium,
    SignalMediumIcon: SignalMedium,
    SignalZero: SignalZero,
    SignalZeroIcon: SignalZero,
    Signature: Signature,
    SignatureIcon: Signature,
    Signpost: Signpost,
    SignpostBig: SignpostBig,
    SignpostBigIcon: SignpostBig,
    SignpostIcon: Signpost,
    Siren: Siren,
    SirenIcon: Siren,
    SkipBack: SkipBack,
    SkipBackIcon: SkipBack,
    SkipForward: SkipForward,
    SkipForwardIcon: SkipForward,
    Skull: Skull,
    SkullIcon: Skull,
    Slack: Slack,
    SlackIcon: Slack,
    Slash: Slash,
    SlashIcon: Slash,
    SlashSquare: SquareSlash,
    SlashSquareIcon: SquareSlash,
    Slice: Slice,
    SliceIcon: Slice,
    Sliders: SlidersVertical,
    SlidersHorizontal: SlidersHorizontal,
    SlidersHorizontalIcon: SlidersHorizontal,
    SlidersIcon: SlidersVertical,
    SlidersVertical: SlidersVertical,
    SlidersVerticalIcon: SlidersVertical,
    Smartphone: Smartphone,
    SmartphoneCharging: SmartphoneCharging,
    SmartphoneChargingIcon: SmartphoneCharging,
    SmartphoneIcon: Smartphone,
    SmartphoneNfc: SmartphoneNfc,
    SmartphoneNfcIcon: SmartphoneNfc,
    Smile: Smile,
    SmileIcon: Smile,
    SmilePlus: SmilePlus,
    SmilePlusIcon: SmilePlus,
    Snail: Snail,
    SnailIcon: Snail,
    Snowflake: Snowflake,
    SnowflakeIcon: Snowflake,
    Sofa: Sofa,
    SofaIcon: Sofa,
    SortAsc: ArrowUpNarrowWide,
    SortAscIcon: ArrowUpNarrowWide,
    SortDesc: ArrowDownWideNarrow,
    SortDescIcon: ArrowDownWideNarrow,
    Soup: Soup,
    SoupIcon: Soup,
    Space: Space,
    SpaceIcon: Space,
    Spade: Spade,
    SpadeIcon: Spade,
    Sparkle: Sparkle,
    SparkleIcon: Sparkle,
    Sparkles: Sparkles,
    SparklesIcon: Sparkles,
    Speaker: Speaker,
    SpeakerIcon: Speaker,
    Speech: Speech,
    SpeechIcon: Speech,
    SpellCheck: SpellCheck,
    SpellCheck2: SpellCheck2,
    SpellCheck2Icon: SpellCheck2,
    SpellCheckIcon: SpellCheck,
    Spline: Spline,
    SplineIcon: Spline,
    Split: Split,
    SplitIcon: Split,
    SplitSquareHorizontal: SquareSplitHorizontal,
    SplitSquareHorizontalIcon: SquareSplitHorizontal,
    SplitSquareVertical: SquareSplitVertical,
    SplitSquareVerticalIcon: SquareSplitVertical,
    SprayCan: SprayCan,
    SprayCanIcon: SprayCan,
    Sprout: Sprout,
    SproutIcon: Sprout,
    Square: Square,
    SquareActivity: SquareActivity,
    SquareActivityIcon: SquareActivity,
    SquareArrowDown: SquareArrowDown,
    SquareArrowDownIcon: SquareArrowDown,
    SquareArrowDownLeft: SquareArrowDownLeft,
    SquareArrowDownLeftIcon: SquareArrowDownLeft,
    SquareArrowDownRight: SquareArrowDownRight,
    SquareArrowDownRightIcon: SquareArrowDownRight,
    SquareArrowLeft: SquareArrowLeft,
    SquareArrowLeftIcon: SquareArrowLeft,
    SquareArrowOutDownLeft: SquareArrowOutDownLeft,
    SquareArrowOutDownLeftIcon: SquareArrowOutDownLeft,
    SquareArrowOutDownRight: SquareArrowOutDownRight,
    SquareArrowOutDownRightIcon: SquareArrowOutDownRight,
    SquareArrowOutUpLeft: SquareArrowOutUpLeft,
    SquareArrowOutUpLeftIcon: SquareArrowOutUpLeft,
    SquareArrowOutUpRight: SquareArrowOutUpRight,
    SquareArrowOutUpRightIcon: SquareArrowOutUpRight,
    SquareArrowRight: SquareArrowRight,
    SquareArrowRightIcon: SquareArrowRight,
    SquareArrowUp: SquareArrowUp,
    SquareArrowUpIcon: SquareArrowUp,
    SquareArrowUpLeft: SquareArrowUpLeft,
    SquareArrowUpLeftIcon: SquareArrowUpLeft,
    SquareArrowUpRight: SquareArrowUpRight,
    SquareArrowUpRightIcon: SquareArrowUpRight,
    SquareAsterisk: SquareAsterisk,
    SquareAsteriskIcon: SquareAsterisk,
    SquareBottomDashedScissors: SquareBottomDashedScissors,
    SquareBottomDashedScissorsIcon: SquareBottomDashedScissors,
    SquareChartGantt: SquareChartGantt,
    SquareChartGanttIcon: SquareChartGantt,
    SquareCheck: SquareCheck,
    SquareCheckBig: SquareCheckBig,
    SquareCheckBigIcon: SquareCheckBig,
    SquareCheckIcon: SquareCheck,
    SquareChevronDown: SquareChevronDown,
    SquareChevronDownIcon: SquareChevronDown,
    SquareChevronLeft: SquareChevronLeft,
    SquareChevronLeftIcon: SquareChevronLeft,
    SquareChevronRight: SquareChevronRight,
    SquareChevronRightIcon: SquareChevronRight,
    SquareChevronUp: SquareChevronUp,
    SquareChevronUpIcon: SquareChevronUp,
    SquareCode: SquareCode,
    SquareCodeIcon: SquareCode,
    SquareDashed: SquareDashed,
    SquareDashedBottom: SquareDashedBottom,
    SquareDashedBottomCode: SquareDashedBottomCode,
    SquareDashedBottomCodeIcon: SquareDashedBottomCode,
    SquareDashedBottomIcon: SquareDashedBottom,
    SquareDashedIcon: SquareDashed,
    SquareDashedKanban: SquareDashedKanban,
    SquareDashedKanbanIcon: SquareDashedKanban,
    SquareDashedMousePointer: SquareDashedMousePointer,
    SquareDashedMousePointerIcon: SquareDashedMousePointer,
    SquareDivide: SquareDivide,
    SquareDivideIcon: SquareDivide,
    SquareDot: SquareDot,
    SquareDotIcon: SquareDot,
    SquareEqual: SquareEqual,
    SquareEqualIcon: SquareEqual,
    SquareFunction: SquareFunction,
    SquareFunctionIcon: SquareFunction,
    SquareGanttChart: SquareChartGantt,
    SquareGanttChartIcon: SquareChartGantt,
    SquareIcon: Square,
    SquareKanban: SquareKanban,
    SquareKanbanIcon: SquareKanban,
    SquareLibrary: SquareLibrary,
    SquareLibraryIcon: SquareLibrary,
    SquareM: SquareM,
    SquareMIcon: SquareM,
    SquareMenu: SquareMenu,
    SquareMenuIcon: SquareMenu,
    SquareMinus: SquareMinus,
    SquareMinusIcon: SquareMinus,
    SquareMousePointer: SquareMousePointer,
    SquareMousePointerIcon: SquareMousePointer,
    SquareParking: SquareParking,
    SquareParkingIcon: SquareParking,
    SquareParkingOff: SquareParkingOff,
    SquareParkingOffIcon: SquareParkingOff,
    SquarePen: SquarePen,
    SquarePenIcon: SquarePen,
    SquarePercent: SquarePercent,
    SquarePercentIcon: SquarePercent,
    SquarePi: SquarePi,
    SquarePiIcon: SquarePi,
    SquarePilcrow: SquarePilcrow,
    SquarePilcrowIcon: SquarePilcrow,
    SquarePlay: SquarePlay,
    SquarePlayIcon: SquarePlay,
    SquarePlus: SquarePlus,
    SquarePlusIcon: SquarePlus,
    SquarePower: SquarePower,
    SquarePowerIcon: SquarePower,
    SquareRadical: SquareRadical,
    SquareRadicalIcon: SquareRadical,
    SquareScissors: SquareScissors,
    SquareScissorsIcon: SquareScissors,
    SquareSigma: SquareSigma,
    SquareSigmaIcon: SquareSigma,
    SquareSlash: SquareSlash,
    SquareSlashIcon: SquareSlash,
    SquareSplitHorizontal: SquareSplitHorizontal,
    SquareSplitHorizontalIcon: SquareSplitHorizontal,
    SquareSplitVertical: SquareSplitVertical,
    SquareSplitVerticalIcon: SquareSplitVertical,
    SquareSquare: SquareSquare,
    SquareSquareIcon: SquareSquare,
    SquareStack: SquareStack,
    SquareStackIcon: SquareStack,
    SquareTerminal: SquareTerminal,
    SquareTerminalIcon: SquareTerminal,
    SquareUser: SquareUser,
    SquareUserIcon: SquareUser,
    SquareUserRound: SquareUserRound,
    SquareUserRoundIcon: SquareUserRound,
    SquareX: SquareX,
    SquareXIcon: SquareX,
    Squircle: Squircle,
    SquircleIcon: Squircle,
    Squirrel: Squirrel,
    SquirrelIcon: Squirrel,
    Stamp: Stamp,
    StampIcon: Stamp,
    Star: Star,
    StarHalf: StarHalf,
    StarHalfIcon: StarHalf,
    StarIcon: Star,
    StarOff: StarOff,
    StarOffIcon: StarOff,
    Stars: Sparkles,
    StarsIcon: Sparkles,
    StepBack: StepBack,
    StepBackIcon: StepBack,
    StepForward: StepForward,
    StepForwardIcon: StepForward,
    Stethoscope: Stethoscope,
    StethoscopeIcon: Stethoscope,
    Sticker: Sticker,
    StickerIcon: Sticker,
    StickyNote: StickyNote,
    StickyNoteIcon: StickyNote,
    StopCircle: CircleStop,
    StopCircleIcon: CircleStop,
    Store: Store,
    StoreIcon: Store,
    StretchHorizontal: StretchHorizontal,
    StretchHorizontalIcon: StretchHorizontal,
    StretchVertical: StretchVertical,
    StretchVerticalIcon: StretchVertical,
    Strikethrough: Strikethrough,
    StrikethroughIcon: Strikethrough,
    Subscript: Subscript,
    SubscriptIcon: Subscript,
    Subtitles: Captions,
    SubtitlesIcon: Captions,
    Sun: Sun,
    SunDim: SunDim,
    SunDimIcon: SunDim,
    SunIcon: Sun,
    SunMedium: SunMedium,
    SunMediumIcon: SunMedium,
    SunMoon: SunMoon,
    SunMoonIcon: SunMoon,
    SunSnow: SunSnow,
    SunSnowIcon: SunSnow,
    Sunrise: Sunrise,
    SunriseIcon: Sunrise,
    Sunset: Sunset,
    SunsetIcon: Sunset,
    Superscript: Superscript,
    SuperscriptIcon: Superscript,
    SwatchBook: SwatchBook,
    SwatchBookIcon: SwatchBook,
    SwissFranc: SwissFranc,
    SwissFrancIcon: SwissFranc,
    SwitchCamera: SwitchCamera,
    SwitchCameraIcon: SwitchCamera,
    Sword: Sword,
    SwordIcon: Sword,
    Swords: Swords,
    SwordsIcon: Swords,
    Syringe: Syringe,
    SyringeIcon: Syringe,
    Table: Table$1,
    Table2: Table2,
    Table2Icon: Table2,
    TableCellsMerge: TableCellsMerge,
    TableCellsMergeIcon: TableCellsMerge,
    TableCellsSplit: TableCellsSplit,
    TableCellsSplitIcon: TableCellsSplit,
    TableColumnsSplit: TableColumnsSplit,
    TableColumnsSplitIcon: TableColumnsSplit,
    TableIcon: Table$1,
    TableOfContents: TableOfContents,
    TableOfContentsIcon: TableOfContents,
    TableProperties: TableProperties,
    TablePropertiesIcon: TableProperties,
    TableRowsSplit: TableRowsSplit,
    TableRowsSplitIcon: TableRowsSplit,
    Tablet: Tablet,
    TabletIcon: Tablet,
    TabletSmartphone: TabletSmartphone,
    TabletSmartphoneIcon: TabletSmartphone,
    Tablets: Tablets,
    TabletsIcon: Tablets,
    Tag: Tag$1,
    TagIcon: Tag$1,
    Tags: Tags,
    TagsIcon: Tags,
    Tally1: Tally1,
    Tally1Icon: Tally1,
    Tally2: Tally2,
    Tally2Icon: Tally2,
    Tally3: Tally3,
    Tally3Icon: Tally3,
    Tally4: Tally4,
    Tally4Icon: Tally4,
    Tally5: Tally5,
    Tally5Icon: Tally5,
    Tangent: Tangent,
    TangentIcon: Tangent,
    Target: Target,
    TargetIcon: Target,
    Telescope: Telescope,
    TelescopeIcon: Telescope,
    Tent: Tent,
    TentIcon: Tent,
    TentTree: TentTree,
    TentTreeIcon: TentTree,
    Terminal: Terminal,
    TerminalIcon: Terminal,
    TerminalSquare: SquareTerminal,
    TerminalSquareIcon: SquareTerminal,
    TestTube: TestTube,
    TestTube2: TestTubeDiagonal,
    TestTube2Icon: TestTubeDiagonal,
    TestTubeDiagonal: TestTubeDiagonal,
    TestTubeDiagonalIcon: TestTubeDiagonal,
    TestTubeIcon: TestTube,
    TestTubes: TestTubes,
    TestTubesIcon: TestTubes,
    Text: Text,
    TextCursor: TextCursor,
    TextCursorIcon: TextCursor,
    TextCursorInput: TextCursorInput,
    TextCursorInputIcon: TextCursorInput,
    TextIcon: Text,
    TextQuote: TextQuote,
    TextQuoteIcon: TextQuote,
    TextSearch: TextSearch,
    TextSearchIcon: TextSearch,
    TextSelect: TextSelect,
    TextSelectIcon: TextSelect,
    TextSelection: TextSelect,
    TextSelectionIcon: TextSelect,
    Theater: Theater,
    TheaterIcon: Theater,
    Thermometer: Thermometer,
    ThermometerIcon: Thermometer,
    ThermometerSnowflake: ThermometerSnowflake,
    ThermometerSnowflakeIcon: ThermometerSnowflake,
    ThermometerSun: ThermometerSun,
    ThermometerSunIcon: ThermometerSun,
    ThumbsDown: ThumbsDown,
    ThumbsDownIcon: ThumbsDown,
    ThumbsUp: ThumbsUp,
    ThumbsUpIcon: ThumbsUp,
    Ticket: Ticket,
    TicketCheck: TicketCheck,
    TicketCheckIcon: TicketCheck,
    TicketIcon: Ticket,
    TicketMinus: TicketMinus,
    TicketMinusIcon: TicketMinus,
    TicketPercent: TicketPercent,
    TicketPercentIcon: TicketPercent,
    TicketPlus: TicketPlus,
    TicketPlusIcon: TicketPlus,
    TicketSlash: TicketSlash,
    TicketSlashIcon: TicketSlash,
    TicketX: TicketX,
    TicketXIcon: TicketX,
    Tickets: Tickets,
    TicketsIcon: Tickets,
    TicketsPlane: TicketsPlane,
    TicketsPlaneIcon: TicketsPlane,
    Timer: Timer,
    TimerIcon: Timer,
    TimerOff: TimerOff,
    TimerOffIcon: TimerOff,
    TimerReset: TimerReset,
    TimerResetIcon: TimerReset,
    ToggleLeft: ToggleLeft,
    ToggleLeftIcon: ToggleLeft,
    ToggleRight: ToggleRight,
    ToggleRightIcon: ToggleRight,
    Toilet: Toilet,
    ToiletIcon: Toilet,
    Tornado: Tornado,
    TornadoIcon: Tornado,
    Torus: Torus,
    TorusIcon: Torus,
    Touchpad: Touchpad,
    TouchpadIcon: Touchpad,
    TouchpadOff: TouchpadOff,
    TouchpadOffIcon: TouchpadOff,
    TowerControl: TowerControl,
    TowerControlIcon: TowerControl,
    ToyBrick: ToyBrick,
    ToyBrickIcon: ToyBrick,
    Tractor: Tractor,
    TractorIcon: Tractor,
    TrafficCone: TrafficCone,
    TrafficConeIcon: TrafficCone,
    Train: TramFront,
    TrainFront: TrainFront,
    TrainFrontIcon: TrainFront,
    TrainFrontTunnel: TrainFrontTunnel,
    TrainFrontTunnelIcon: TrainFrontTunnel,
    TrainIcon: TramFront,
    TrainTrack: TrainTrack,
    TrainTrackIcon: TrainTrack,
    TramFront: TramFront,
    TramFrontIcon: TramFront,
    Trash: Trash,
    Trash2: Trash2,
    Trash2Icon: Trash2,
    TrashIcon: Trash,
    TreeDeciduous: TreeDeciduous,
    TreeDeciduousIcon: TreeDeciduous,
    TreePalm: TreePalm,
    TreePalmIcon: TreePalm,
    TreePine: TreePine,
    TreePineIcon: TreePine,
    Trees: Trees,
    TreesIcon: Trees,
    Trello: Trello,
    TrelloIcon: Trello,
    TrendingDown: TrendingDown,
    TrendingDownIcon: TrendingDown,
    TrendingUp: TrendingUp,
    TrendingUpDown: TrendingUpDown,
    TrendingUpDownIcon: TrendingUpDown,
    TrendingUpIcon: TrendingUp,
    Triangle: Triangle,
    TriangleAlert: TriangleAlert,
    TriangleAlertIcon: TriangleAlert,
    TriangleIcon: Triangle,
    TriangleRight: TriangleRight,
    TriangleRightIcon: TriangleRight,
    Trophy: Trophy,
    TrophyIcon: Trophy,
    Truck: Truck,
    TruckIcon: Truck,
    Turtle: Turtle,
    TurtleIcon: Turtle,
    Tv: Tv,
    Tv2: TvMinimal,
    Tv2Icon: TvMinimal,
    TvIcon: Tv,
    TvMinimal: TvMinimal,
    TvMinimalIcon: TvMinimal,
    TvMinimalPlay: TvMinimalPlay,
    TvMinimalPlayIcon: TvMinimalPlay,
    Twitch: Twitch,
    TwitchIcon: Twitch,
    Twitter: Twitter,
    TwitterIcon: Twitter,
    Type: Type,
    TypeIcon: Type,
    TypeOutline: TypeOutline,
    TypeOutlineIcon: TypeOutline,
    Umbrella: Umbrella,
    UmbrellaIcon: Umbrella,
    UmbrellaOff: UmbrellaOff,
    UmbrellaOffIcon: UmbrellaOff,
    Underline: Underline,
    UnderlineIcon: Underline,
    Undo: Undo,
    Undo2: Undo2,
    Undo2Icon: Undo2,
    UndoDot: UndoDot,
    UndoDotIcon: UndoDot,
    UndoIcon: Undo,
    UnfoldHorizontal: UnfoldHorizontal,
    UnfoldHorizontalIcon: UnfoldHorizontal,
    UnfoldVertical: UnfoldVertical,
    UnfoldVerticalIcon: UnfoldVertical,
    Ungroup: Ungroup,
    UngroupIcon: Ungroup,
    University: University,
    UniversityIcon: University,
    Unlink: Unlink,
    Unlink2: Unlink2,
    Unlink2Icon: Unlink2,
    UnlinkIcon: Unlink,
    Unlock: LockOpen,
    UnlockIcon: LockOpen,
    UnlockKeyhole: LockKeyholeOpen,
    UnlockKeyholeIcon: LockKeyholeOpen,
    Unplug: Unplug,
    UnplugIcon: Unplug,
    Upload: Upload,
    UploadCloud: CloudUpload,
    UploadCloudIcon: CloudUpload,
    UploadIcon: Upload,
    Usb: Usb,
    UsbIcon: Usb,
    User: User,
    User2: UserRound,
    User2Icon: UserRound,
    UserCheck: UserCheck,
    UserCheck2: UserRoundCheck,
    UserCheck2Icon: UserRoundCheck,
    UserCheckIcon: UserCheck,
    UserCircle: CircleUser,
    UserCircle2: CircleUserRound,
    UserCircle2Icon: CircleUserRound,
    UserCircleIcon: CircleUser,
    UserCog: UserCog,
    UserCog2: UserRoundCog,
    UserCog2Icon: UserRoundCog,
    UserCogIcon: UserCog,
    UserIcon: User,
    UserMinus: UserMinus,
    UserMinus2: UserRoundMinus,
    UserMinus2Icon: UserRoundMinus,
    UserMinusIcon: UserMinus,
    UserPen: UserPen,
    UserPenIcon: UserPen,
    UserPlus: UserPlus,
    UserPlus2: UserRoundPlus,
    UserPlus2Icon: UserRoundPlus,
    UserPlusIcon: UserPlus,
    UserRound: UserRound,
    UserRoundCheck: UserRoundCheck,
    UserRoundCheckIcon: UserRoundCheck,
    UserRoundCog: UserRoundCog,
    UserRoundCogIcon: UserRoundCog,
    UserRoundIcon: UserRound,
    UserRoundMinus: UserRoundMinus,
    UserRoundMinusIcon: UserRoundMinus,
    UserRoundPen: UserRoundPen,
    UserRoundPenIcon: UserRoundPen,
    UserRoundPlus: UserRoundPlus,
    UserRoundPlusIcon: UserRoundPlus,
    UserRoundSearch: UserRoundSearch,
    UserRoundSearchIcon: UserRoundSearch,
    UserRoundX: UserRoundX,
    UserRoundXIcon: UserRoundX,
    UserSearch: UserSearch,
    UserSearchIcon: UserSearch,
    UserSquare: SquareUser,
    UserSquare2: SquareUserRound,
    UserSquare2Icon: SquareUserRound,
    UserSquareIcon: SquareUser,
    UserX: UserX,
    UserX2: UserRoundX,
    UserX2Icon: UserRoundX,
    UserXIcon: UserX,
    Users: Users,
    Users2: UsersRound,
    Users2Icon: UsersRound,
    UsersIcon: Users,
    UsersRound: UsersRound,
    UsersRoundIcon: UsersRound,
    Utensils: Utensils,
    UtensilsCrossed: UtensilsCrossed,
    UtensilsCrossedIcon: UtensilsCrossed,
    UtensilsIcon: Utensils,
    UtilityPole: UtilityPole,
    UtilityPoleIcon: UtilityPole,
    Variable: Variable,
    VariableIcon: Variable,
    Vault: Vault,
    VaultIcon: Vault,
    Vegan: Vegan,
    VeganIcon: Vegan,
    VenetianMask: VenetianMask,
    VenetianMaskIcon: VenetianMask,
    Verified: BadgeCheck,
    VerifiedIcon: BadgeCheck,
    Vibrate: Vibrate,
    VibrateIcon: Vibrate,
    VibrateOff: VibrateOff,
    VibrateOffIcon: VibrateOff,
    Video: Video,
    VideoIcon: Video,
    VideoOff: VideoOff,
    VideoOffIcon: VideoOff,
    Videotape: Videotape,
    VideotapeIcon: Videotape,
    View: View,
    ViewIcon: View,
    Voicemail: Voicemail,
    VoicemailIcon: Voicemail,
    Volleyball: Volleyball,
    VolleyballIcon: Volleyball,
    Volume: Volume,
    Volume1: Volume1,
    Volume1Icon: Volume1,
    Volume2: Volume2,
    Volume2Icon: Volume2,
    VolumeIcon: Volume,
    VolumeOff: VolumeOff,
    VolumeOffIcon: VolumeOff,
    VolumeX: VolumeX,
    VolumeXIcon: VolumeX,
    Vote: Vote,
    VoteIcon: Vote,
    Wallet: Wallet,
    Wallet2: WalletMinimal,
    Wallet2Icon: WalletMinimal,
    WalletCards: WalletCards,
    WalletCardsIcon: WalletCards,
    WalletIcon: Wallet,
    WalletMinimal: WalletMinimal,
    WalletMinimalIcon: WalletMinimal,
    Wallpaper: Wallpaper,
    WallpaperIcon: Wallpaper,
    Wand: Wand,
    Wand2: WandSparkles,
    Wand2Icon: WandSparkles,
    WandIcon: Wand,
    WandSparkles: WandSparkles,
    WandSparklesIcon: WandSparkles,
    Warehouse: Warehouse,
    WarehouseIcon: Warehouse,
    WashingMachine: WashingMachine,
    WashingMachineIcon: WashingMachine,
    Watch: Watch,
    WatchIcon: Watch,
    Waves: Waves,
    WavesIcon: Waves,
    Waypoints: Waypoints,
    WaypointsIcon: Waypoints,
    Webcam: Webcam,
    WebcamIcon: Webcam,
    Webhook: Webhook,
    WebhookIcon: Webhook,
    WebhookOff: WebhookOff,
    WebhookOffIcon: WebhookOff,
    Weight: Weight,
    WeightIcon: Weight,
    Wheat: Wheat,
    WheatIcon: Wheat,
    WheatOff: WheatOff,
    WheatOffIcon: WheatOff,
    WholeWord: WholeWord,
    WholeWordIcon: WholeWord,
    Wifi: Wifi,
    WifiHigh: WifiHigh,
    WifiHighIcon: WifiHigh,
    WifiIcon: Wifi,
    WifiLow: WifiLow,
    WifiLowIcon: WifiLow,
    WifiOff: WifiOff,
    WifiOffIcon: WifiOff,
    WifiZero: WifiZero,
    WifiZeroIcon: WifiZero,
    Wind: Wind,
    WindArrowDown: WindArrowDown,
    WindArrowDownIcon: WindArrowDown,
    WindIcon: Wind,
    Wine: Wine,
    WineIcon: Wine,
    WineOff: WineOff,
    WineOffIcon: WineOff,
    Workflow: Workflow,
    WorkflowIcon: Workflow,
    Worm: Worm,
    WormIcon: Worm,
    WrapText: WrapText,
    WrapTextIcon: WrapText,
    Wrench: Wrench,
    WrenchIcon: Wrench,
    X: X,
    XCircle: CircleX,
    XCircleIcon: CircleX,
    XIcon: X,
    XOctagon: OctagonX,
    XOctagonIcon: OctagonX,
    XSquare: SquareX,
    XSquareIcon: SquareX,
    Youtube: Youtube,
    YoutubeIcon: Youtube,
    Zap: Zap,
    ZapIcon: Zap,
    ZapOff: ZapOff,
    ZapOffIcon: ZapOff,
    ZoomIn: ZoomIn,
    ZoomInIcon: ZoomIn,
    ZoomOut: ZoomOut,
    ZoomOutIcon: ZoomOut,
    createLucideIcon: createLucideIcon,
    icons: index
});

var switchSizes = {
  sm: {
    track: 'w-8 h-4',
    thumb: 'w-3 h-3',
    translate: 'translate-x-4',
    icon: 'w-2 h-2',
    gap: 'ml-8'
  },
  md: {
    track: 'w-11 h-6',
    thumb: 'w-5 h-5',
    translate: 'translate-x-5',
    icon: 'w-3 h-3',
    gap: 'ml-14'
  },
  lg: {
    track: 'w-14 h-8',
    thumb: 'w-6 h-6',
    translate: 'translate-x-6',
    icon: 'w-4 h-4',
    gap: 'ml-16'
  }
};
var switchVariants = {
  "default": {
    off: 'bg-mw-gray-200 dark:bg-mw-gray-700',
    on: 'bg-mw-blue-600',
    thumb: 'bg-white',
    focus: 'peer-focus:ring-mw-blue-500'
  },
  success: {
    off: 'bg-mw-gray-200 dark:bg-mw-gray-700',
    on: 'bg-green-600',
    thumb: 'bg-white',
    focus: 'peer-focus:ring-green-500'
  },
  warning: {
    off: 'bg-mw-gray-200 dark:bg-mw-gray-700',
    on: 'bg-yellow-600',
    thumb: 'bg-white',
    focus: 'peer-focus:ring-yellow-500'
  },
  danger: {
    off: 'bg-mw-gray-200 dark:bg-mw-gray-700',
    on: 'bg-red-600',
    thumb: 'bg-white',
    focus: 'peer-focus:ring-red-500'
  }
};
var Switch = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    description = _a.description,
    error = _a.error,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    _a$loading = _a.loading,
    loading = _a$loading === void 0 ? false : _a$loading,
    _a$showIcons = _a.showIcons,
    showIcons = _a$showIcons === void 0 ? false : _a$showIcons,
    onLabel = _a.onLabel,
    offLabel = _a.offLabel,
    thumbIcon = _a.thumbIcon,
    trackIcon = _a.trackIcon,
    _a$animate = _a.animate,
    animate = _a$animate === void 0 ? true : _a$animate,
    _a$immediate = _a.immediate,
    immediate = _a$immediate === void 0 ? false : _a$immediate,
    _a$checked = _a.checked,
    checked = _a$checked === void 0 ? false : _a$checked,
    onChange = _a.onChange,
    props = __rest(_a, ["className", "label", "description", "error", "size", "variant", "loading", "showIcons", "onLabel", "offLabel", "thumbIcon", "trackIcon", "animate", "immediate", "checked", "onChange"]);
  var sizeConfig = switchSizes[size];
  var variantConfig = switchVariants[variant];
  var handleChange = function handleChange(e) {
    if (loading) return;
    if (immediate) {
      onChange === null || onChange === void 0 ? void 0 : onChange(e);
    } else {
      // Simulate async operation
      setTimeout(function () {
        onChange === null || onChange === void 0 ? void 0 : onChange(e);
      }, 150);
    }
  };
  var renderThumbContent = function renderThumbContent() {
    if (loading) {
      return jsx(LoaderCircle, {
        className: clsx(sizeConfig.icon, 'animate-spin text-mw-gray-400')
      });
    }
    if (thumbIcon) {
      return thumbIcon;
    }
    if (showIcons) {
      return checked ? jsx(Check, {
        className: clsx(sizeConfig.icon, 'text-green-600')
      }) : jsx(X, {
        className: clsx(sizeConfig.icon, 'text-mw-gray-400')
      });
    }
    return null;
  };
  return jsxs("div", {
    className: "space-y-2",
    children: [jsxs("div", {
      className: "flex items-center justify-between",
      children: [jsxs("div", {
        className: "flex items-center space-x-3",
        children: [jsxs("div", {
          className: "relative inline-flex items-center",
          children: [jsx("input", Object.assign({
            type: "checkbox",
            ref: ref,
            className: "sr-only peer",
            checked: checked,
            onChange: handleChange,
            disabled: loading || props.disabled
          }, props)), jsxs("div", {
            className: clsx('relative rounded-full cursor-pointer', animate ? 'transition-colors duration-200' : '', 'peer-focus:ring-2 peer-focus:ring-offset-2', variantConfig.focus, 'peer-disabled:opacity-50 peer-disabled:cursor-not-allowed', error ? 'bg-red-200 peer-checked:bg-red-600' : checked ? variantConfig.on : variantConfig.off, sizeConfig.track, className),
            children: [trackIcon && jsx("div", {
              className: "absolute inset-0 flex items-center justify-center",
              children: trackIcon
            }), jsx("div", {
              className: clsx('absolute left-0.5 top-0.5 rounded-full flex items-center justify-center', animate ? 'transition-transform duration-200' : '', checked ? 'peer-checked:' + sizeConfig.translate : '', variantConfig.thumb, sizeConfig.thumb, loading && 'shadow-sm'),
              children: renderThumbContent()
            })]
          })]
        }), jsxs("div", {
          className: "flex flex-col",
          children: [label && jsx("label", {
            className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 cursor-pointer",
            children: label
          }), (onLabel || offLabel) && jsx("span", {
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
            children: checked ? onLabel : offLabel
          })]
        })]
      }), loading && jsxs("div", {
        className: "flex items-center space-x-2",
        children: [jsx(LoaderCircle, {
          className: "w-4 h-4 animate-spin text-mw-gray-400"
        }), jsx("span", {
          className: "text-xs text-mw-gray-500",
          children: "Updating..."
        })]
      })]
    }), description && !error && jsx("p", {
      className: clsx('text-sm text-mw-gray-500 dark:text-mw-gray-400', sizeConfig.gap),
      children: description
    }), error && jsx("p", {
      className: clsx('text-sm text-red-600 dark:text-red-400', sizeConfig.gap),
      children: error
    })]
  });
});
Switch.displayName = 'Switch';
function SwitchGroup(_ref) {
  var label = _ref.label,
    description = _ref.description,
    children = _ref.children,
    _ref$orientation = _ref.orientation,
    orientation = _ref$orientation === void 0 ? 'vertical' : _ref$orientation,
    className = _ref.className;
  return jsxs("div", {
    className: clsx('space-y-3', className),
    children: [label && jsxs("div", {
      className: "space-y-1",
      children: [jsx("h3", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white",
        children: label
      }), description && jsx("p", {
        className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
        children: description
      })]
    }), jsx("div", {
      className: clsx(orientation === 'horizontal' ? 'flex flex-wrap gap-6' : 'space-y-4'),
      children: children
    })]
  });
}

var Select = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    label = _a.label,
    description = _a.description,
    error = _a.error,
    options = _a.options,
    placeholder = _a.placeholder,
    props = __rest(_a, ["className", "label", "description", "error", "options", "placeholder"]);
  return jsxs("div", {
    className: "space-y-2",
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
      children: label
    }), jsxs("select", Object.assign({
      ref: ref,
      className: clsx('block w-full rounded-md border px-3 py-2 text-sm', 'border-mw-gray-300 dark:border-mw-gray-600', 'bg-white dark:bg-mw-gray-800', 'text-mw-gray-900 dark:text-mw-gray-100', 'focus:border-mw-blue-500 focus:ring-1 focus:ring-mw-blue-500', 'disabled:opacity-50 disabled:cursor-not-allowed', error && 'border-red-500 focus:border-red-500 focus:ring-red-500', className)
    }, props, {
      children: [placeholder && jsx("option", {
        value: "",
        disabled: true,
        children: placeholder
      }), options.map(function (option) {
        return jsx("option", {
          value: option.value,
          disabled: option.disabled,
          children: option.label
        }, option.value);
      })]
    })), description && !error && jsx("p", {
      className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
      children: description
    }), error && jsx("p", {
      className: "text-sm text-red-600 dark:text-red-400",
      children: error
    })]
  });
});
Select.displayName = 'Select';

function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c),
      u = i.value;
  } catch (n) {
    return void e(n);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function () {
    var t = this,
      e = arguments;
    return new Promise(function (r, o) {
      var a = n.apply(t, e);
      function _next(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
      }
      function _throw(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
      }
      _next(void 0);
    });
  };
}
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {
      t && (r = t);
      var n = 0,
        F = function () {};
      return {
        s: F,
        n: function () {
          return n >= r.length ? {
            done: true
          } : {
            done: false,
            value: r[n++]
          };
        },
        e: function (r) {
          throw r;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o,
    a = true,
    u = false;
  return {
    s: function () {
      t = t.call(r);
    },
    n: function () {
      var r = t.next();
      return a = r.done, r;
    },
    e: function (r) {
      u = true, o = r;
    },
    f: function () {
      try {
        a || null == t.return || t.return();
      } finally {
        if (u) throw o;
      }
    }
  };
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[r] = t, e;
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = true,
      o = false;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = true, n = r;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _regenerator() {
  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */
  var e,
    t,
    r = "function" == typeof Symbol ? Symbol : {},
    n = r.iterator || "@@iterator",
    o = r.toStringTag || "@@toStringTag";
  function i(r, n, o, i) {
    var c = n && n.prototype instanceof Generator ? n : Generator,
      u = Object.create(c.prototype);
    return _regeneratorDefine(u, "_invoke", function (r, n, o) {
      var i,
        c,
        u,
        f = 0,
        p = o || [],
        y = false,
        G = {
          p: 0,
          n: 0,
          v: e,
          a: d,
          f: d.bind(e, 4),
          d: function (t, r) {
            return i = t, c = 0, u = e, G.n = r, a;
          }
        };
      function d(r, n) {
        for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) {
          var o,
            i = p[t],
            d = G.p,
            l = i[2];
          r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0));
        }
        if (o || r > 1) return a;
        throw y = true, n;
      }
      return function (o, p, l) {
        if (f > 1) throw TypeError("Generator is already running");
        for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) {
          i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u);
          try {
            if (f = 2, i) {
              if (c || (o = "next"), t = i[o]) {
                if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object");
                if (!t.done) return t;
                u = t.value, c < 2 && (c = 0);
              } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1);
              i = e;
            } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break;
          } catch (t) {
            i = e, c = 1, u = t;
          } finally {
            f = 1;
          }
        }
        return {
          value: t,
          done: y
        };
      };
    }(r, o, i), true), u;
  }
  var a = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  t = Object.getPrototypeOf;
  var c = [][n] ? t(t([][n]())) : (_regeneratorDefine(t = {}, n, function () {
      return this;
    }), t),
    u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c);
  function f(e) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e;
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine(u), _regeneratorDefine(u, o, "Generator"), _regeneratorDefine(u, n, function () {
    return this;
  }), _regeneratorDefine(u, "toString", function () {
    return "[object Generator]";
  }), (_regenerator = function () {
    return {
      w: i,
      m: f
    };
  })();
}
function _regeneratorDefine(e, r, n, t) {
  var i = Object.defineProperty;
  try {
    i({}, "", {});
  } catch (e) {
    i = 0;
  }
  _regeneratorDefine = function (e, r, n, t) {
    function o(r, n) {
      _regeneratorDefine(e, r, function (e) {
        return this._invoke(r, n, e);
      });
    }
    r ? i ? i(e, r, {
      value: n,
      enumerable: !t,
      configurable: !t,
      writable: !t
    }) : e[r] = n : (o("next", 0), o("throw", 1), o("return", 2));
  }, _regeneratorDefine(e, r, n, t);
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r);
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}

function Slider(_a) {
  var className = _a.className,
    label = _a.label,
    _a$min = _a.min,
    min = _a$min === void 0 ? 0 : _a$min,
    _a$max = _a.max,
    max = _a$max === void 0 ? 100 : _a$max,
    _a$step = _a.step,
    step = _a$step === void 0 ? 1 : _a$step,
    value = _a.value,
    _a$defaultValue = _a.defaultValue,
    defaultValue = _a$defaultValue === void 0 ? min : _a$defaultValue,
    onChange = _a.onChange,
    _a$showValue = _a.showValue,
    showValue = _a$showValue === void 0 ? false : _a$showValue,
    _a$formatValue = _a.formatValue,
    formatValue = _a$formatValue === void 0 ? function (val) {
      return val.toString();
    } : _a$formatValue,
    disabled = _a.disabled,
    props = __rest(_a, ["className", "label", "min", "max", "step", "value", "defaultValue", "onChange", "showValue", "formatValue", "disabled"]);
  var _useState = useState(defaultValue),
    _useState2 = _slicedToArray(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var currentValue = value !== undefined ? value : internalValue;
  var handleChange = function handleChange(e) {
    var newValue = Number(e.target.value);
    if (value === undefined) {
      setInternalValue(newValue);
    }
    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  };
  var percentage = (currentValue - min) / (max - min) * 100;
  return jsxs("div", {
    className: "space-y-2",
    children: [(label || showValue) && jsxs("div", {
      className: "flex justify-between items-center",
      children: [label && jsx("label", {
        className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
        children: label
      }), showValue && jsx("span", {
        className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
        children: formatValue(currentValue)
      })]
    }), jsx("div", {
      className: "relative",
      children: jsx("input", Object.assign({
        type: "range",
        min: min,
        max: max,
        step: step,
        value: currentValue,
        onChange: handleChange,
        disabled: disabled,
        className: clsx('w-full h-2 bg-mw-gray-200 dark:bg-mw-gray-700 rounded-lg appearance-none cursor-pointer', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2', 'disabled:opacity-50 disabled:cursor-not-allowed', '[&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-5 [&::-webkit-slider-thumb]:h-5', '[&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-mw-blue-600', '[&::-webkit-slider-thumb]:cursor-pointer [&::-webkit-slider-thumb]:shadow-md', '[&::-webkit-slider-thumb]:border-2 [&::-webkit-slider-thumb]:border-white', '[&::-moz-range-thumb]:w-5 [&::-moz-range-thumb]:h-5 [&::-moz-range-thumb]:rounded-full', '[&::-moz-range-thumb]:bg-mw-blue-600 [&::-moz-range-thumb]:cursor-pointer', '[&::-moz-range-thumb]:border-2 [&::-moz-range-thumb]:border-white', '[&::-moz-range-thumb]:shadow-md [&::-moz-range-thumb]:border-none', className),
        style: {
          background: "linear-gradient(to right, #2563eb 0%, #2563eb ".concat(percentage, "%, #e5e7eb ").concat(percentage, "%, #e5e7eb 100%)")
        }
      }, props))
    })]
  });
}

var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
var daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
function DatePicker(_ref) {
  var value = _ref.value,
    onChange = _ref.onChange,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? 'Select date' : _ref$placeholder,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    className = _ref.className,
    label = _ref.label,
    error = _ref.error,
    minDate = _ref.minDate,
    maxDate = _ref.maxDate;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var _useState3 = useState(value || new Date()),
    _useState4 = _slicedToArray(_useState3, 2),
    viewDate = _useState4[0],
    setViewDate = _useState4[1];
  var formatDate = function formatDate(date) {
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };
  var getDaysInMonth = function getDaysInMonth(date) {
    var year = date.getFullYear();
    var month = date.getMonth();
    var firstDay = new Date(year, month, 1);
    var lastDay = new Date(year, month + 1, 0);
    var daysInMonth = lastDay.getDate();
    var startingDayOfWeek = firstDay.getDay();
    var days = [];
    // Add empty cells for days before the first day of the month
    for (var i = 0; i < startingDayOfWeek; i++) {
      days.push(null);
    }
    // Add all days of the month
    for (var day = 1; day <= daysInMonth; day++) {
      days.push(new Date(year, month, day));
    }
    return days;
  };
  var isDateDisabled = function isDateDisabled(date) {
    if (minDate && date < minDate) return true;
    if (maxDate && date > maxDate) return true;
    return false;
  };
  var handleDateSelect = function handleDateSelect(date) {
    if (!isDateDisabled(date)) {
      onChange === null || onChange === void 0 ? void 0 : onChange(date);
      setIsOpen(false);
    }
  };
  var navigateMonth = function navigateMonth(direction) {
    setViewDate(function (prev) {
      var newDate = new Date(prev);
      if (direction === 'prev') {
        newDate.setMonth(prev.getMonth() - 1);
      } else {
        newDate.setMonth(prev.getMonth() + 1);
      }
      return newDate;
    });
  };
  var days = getDaysInMonth(viewDate);
  return jsxs("div", {
    className: "relative",
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-2",
      children: label
    }), jsxs("button", {
      type: "button",
      onClick: function onClick() {
        return !disabled && setIsOpen(!isOpen);
      },
      disabled: disabled,
      className: clsx('w-full flex items-center justify-between px-3 py-2 border rounded-md shadow-sm', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', 'disabled:opacity-50 disabled:cursor-not-allowed', error ? 'border-red-300 text-red-900' : 'border-mw-gray-300 dark:border-mw-gray-600 text-mw-gray-900 dark:text-white', 'bg-white dark:bg-mw-gray-800', className),
      children: [jsx("span", {
        className: clsx(value ? 'text-mw-gray-900 dark:text-white' : 'text-mw-gray-500 dark:text-mw-gray-400'),
        children: value ? formatDate(value) : placeholder
      }), jsx(Calendar$1, {
        className: "w-4 h-4 text-mw-gray-400"
      })]
    }), error && jsx("p", {
      className: "mt-1 text-sm text-red-600 dark:text-red-400",
      children: error
    }), isOpen && jsxs("div", {
      className: "absolute z-50 mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-md shadow-lg p-4 min-w-[280px]",
      children: [jsxs("div", {
        className: "flex items-center justify-between mb-4",
        children: [jsx(Button, {
          variant: "ghost",
          size: "sm",
          onClick: function onClick() {
            return navigateMonth('prev');
          },
          children: jsx(ChevronLeft, {
            className: "w-4 h-4"
          })
        }), jsxs("h3", {
          className: "text-lg font-semibold text-mw-gray-900 dark:text-white",
          children: [months[viewDate.getMonth()], " ", viewDate.getFullYear()]
        }), jsx(Button, {
          variant: "ghost",
          size: "sm",
          onClick: function onClick() {
            return navigateMonth('next');
          },
          children: jsx(ChevronRight, {
            className: "w-4 h-4"
          })
        })]
      }), jsx("div", {
        className: "grid grid-cols-7 gap-1 mb-2",
        children: daysOfWeek.map(function (day) {
          return jsx("div", {
            className: "text-center text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400 py-2",
            children: day
          }, day);
        })
      }), jsx("div", {
        className: "grid grid-cols-7 gap-1",
        children: days.map(function (day, index) {
          return jsx("button", {
            type: "button",
            onClick: function onClick() {
              return day && handleDateSelect(day);
            },
            disabled: !day || isDateDisabled(day),
            className: clsx('w-8 h-8 text-sm rounded transition-colors', !day && 'invisible', day && !isDateDisabled(day) && 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700', day && value && day.toDateString() === value.toDateString() ? 'bg-mw-blue-600 text-white' : 'text-mw-gray-900 dark:text-white', day && isDateDisabled(day) && 'opacity-50 cursor-not-allowed'),
            children: day === null || day === void 0 ? void 0 : day.getDate()
          }, index);
        })
      })]
    })]
  });
}

function cn$m() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var defaultPresets$1 = [{
  label: 'Today',
  range: {
    from: new Date(),
    to: new Date()
  }
}, {
  label: 'Yesterday',
  range: {
    from: new Date(Date.now() - 24 * 60 * 60 * 1000),
    to: new Date(Date.now() - 24 * 60 * 60 * 1000)
  }
}, {
  label: 'Last 7 days',
  range: {
    from: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),
    to: new Date()
  }
}, {
  label: 'Last 30 days',
  range: {
    from: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),
    to: new Date()
  }
}, {
  label: 'This month',
  range: {
    from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),
    to: new Date()
  }
}, {
  label: 'Last month',
  range: {
    from: new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1),
    to: new Date(new Date().getFullYear(), new Date().getMonth(), 0)
  }
}];
function formatDate(date) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'MM/dd/yyyy';
  if (!date) return '';
  var month = String(date.getMonth() + 1).padStart(2, '0');
  var day = String(date.getDate()).padStart(2, '0');
  var year = date.getFullYear();
  return format.replace('MM', month).replace('dd', day).replace('yyyy', String(year));
}
function isSameDay(date1, date2) {
  if (!date1 || !date2) return false;
  return date1.toDateString() === date2.toDateString();
}
function isDateInRange(date, range) {
  if (!range.from) return false;
  if (!range.to) return isSameDay(date, range.from);
  return date >= range.from && date <= range.to;
}
function isDateBetween(date, start, end) {
  if (!start || !end) return false;
  return date > start && date < end;
}
function CalendarMonth(_ref) {
  var currentMonth = _ref.currentMonth,
    selectedRange = _ref.selectedRange,
    onDateSelect = _ref.onDateSelect,
    onMonthChange = _ref.onMonthChange,
    minDate = _ref.minDate,
    maxDate = _ref.maxDate;
    _ref.selectingStart;
  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  var weekDays = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
  var firstDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);
  var lastDayOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);
  var firstDayOfWeek = firstDayOfMonth.getDay();
  var daysInMonth = lastDayOfMonth.getDate();
  var days = [];
  // Previous month's trailing days
  for (var i = firstDayOfWeek - 1; i >= 0; i--) {
    var date = new Date(firstDayOfMonth);
    date.setDate(date.getDate() - (i + 1));
    days.push({
      date: date,
      isCurrentMonth: false
    });
  }
  // Current month's days
  for (var day = 1; day <= daysInMonth; day++) {
    var _date = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), day);
    days.push({
      date: _date,
      isCurrentMonth: true
    });
  }
  // Next month's leading days
  var totalCells = Math.ceil(days.length / 7) * 7;
  for (var _i = days.length; _i < totalCells; _i++) {
    var _date2 = new Date(lastDayOfMonth);
    _date2.setDate(_date2.getDate() + (_i - days.length + 1));
    days.push({
      date: _date2,
      isCurrentMonth: false
    });
  }
  return jsxs("div", {
    className: "p-3",
    children: [jsxs("div", {
      className: "flex items-center justify-between mb-4",
      children: [jsx("button", {
        onClick: function onClick() {
          var newMonth = new Date(currentMonth);
          newMonth.setMonth(newMonth.getMonth() - 1);
          onMonthChange(newMonth);
        },
        className: "p-1 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 rounded",
        children: jsx(ChevronLeft, {
          className: "w-4 h-4"
        })
      }), jsxs("div", {
        className: "text-sm font-medium",
        children: [monthNames[currentMonth.getMonth()], " ", currentMonth.getFullYear()]
      }), jsx("button", {
        onClick: function onClick() {
          var newMonth = new Date(currentMonth);
          newMonth.setMonth(newMonth.getMonth() + 1);
          onMonthChange(newMonth);
        },
        className: "p-1 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 rounded",
        children: jsx(ChevronRight, {
          className: "w-4 h-4"
        })
      })]
    }), jsx("div", {
      className: "grid grid-cols-7 gap-1 mb-2",
      children: weekDays.map(function (day) {
        return jsx("div", {
          className: "p-2 text-xs font-medium text-center text-mw-gray-500 dark:text-mw-gray-400",
          children: day
        }, day);
      })
    }), jsx("div", {
      className: "grid grid-cols-7 gap-1",
      children: days.map(function (_ref2, index) {
        var date = _ref2.date,
          isCurrentMonth = _ref2.isCurrentMonth;
        var isSelected = isSameDay(date, selectedRange.from) || isSameDay(date, selectedRange.to);
        isDateInRange(date, selectedRange);
        var isBetween = isDateBetween(date, selectedRange.from, selectedRange.to);
        var isDisabled = minDate && date < minDate || maxDate && date > maxDate;
        var isToday = isSameDay(date, new Date());
        return jsx("button", {
          onClick: function onClick() {
            return !isDisabled && onDateSelect(date);
          },
          disabled: isDisabled,
          className: cn$m('p-2 text-sm rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 transition-colors', !isCurrentMonth && 'text-mw-gray-400 dark:text-mw-gray-600', isCurrentMonth && 'text-mw-gray-900 dark:text-white', isSelected && 'bg-mw-blue-500 text-white hover:bg-mw-blue-600', isBetween && !isSelected && 'bg-mw-blue-100 dark:bg-mw-blue-900/20', isToday && !isSelected && 'bg-mw-blue-50 dark:bg-mw-blue-950 font-medium', isDisabled && 'opacity-50 cursor-not-allowed'),
          children: date.getDate()
        }, index);
      })
    })]
  });
}
function DateRangePicker(_ref3) {
  var value = _ref3.value,
    onChange = _ref3.onChange,
    _ref3$placeholder = _ref3.placeholder,
    placeholder = _ref3$placeholder === void 0 ? 'Select date range' : _ref3$placeholder,
    _ref3$disabled = _ref3.disabled,
    disabled = _ref3$disabled === void 0 ? false : _ref3$disabled;
    _ref3.required;
    var _ref3$clearable = _ref3.clearable,
    clearable = _ref3$clearable === void 0 ? true : _ref3$clearable,
    minDate = _ref3.minDate,
    maxDate = _ref3.maxDate,
    _ref3$numberOfMonths = _ref3.numberOfMonths,
    numberOfMonths = _ref3$numberOfMonths === void 0 ? 1 : _ref3$numberOfMonths,
    className = _ref3.className,
    _ref3$format = _ref3.format,
    format = _ref3$format === void 0 ? 'MM/dd/yyyy' : _ref3$format,
    _ref3$presets = _ref3.presets,
    presets = _ref3$presets === void 0 ? defaultPresets$1 : _ref3$presets;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var _useState3 = useState(value || {
      from: null,
      to: null
    }),
    _useState4 = _slicedToArray(_useState3, 2),
    selectedRange = _useState4[0],
    setSelectedRange = _useState4[1];
  var _useState5 = useState(new Date()),
    _useState6 = _slicedToArray(_useState5, 2),
    currentMonth = _useState6[0],
    setCurrentMonth = _useState6[1];
  var _useState7 = useState(true),
    _useState8 = _slicedToArray(_useState7, 2),
    selectingStart = _useState8[0],
    setSelectingStart = _useState8[1];
  var containerRef = useRef(null);
  useEffect(function () {
    if (value) {
      setSelectedRange(value);
    }
  }, [value]);
  useEffect(function () {
    function handleClickOutside(event) {
      if (containerRef.current && !containerRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var handleDateSelect = function handleDateSelect(date) {
    var newRange;
    if (selectingStart || !selectedRange.from) {
      newRange = {
        from: date,
        to: null
      };
      setSelectingStart(false);
    } else {
      if (date < selectedRange.from) {
        newRange = {
          from: date,
          to: selectedRange.from
        };
      } else {
        newRange = {
          from: selectedRange.from,
          to: date
        };
      }
      setSelectingStart(true);
    }
    setSelectedRange(newRange);
    onChange === null || onChange === void 0 ? void 0 : onChange(newRange);
    if (newRange.from && newRange.to) {
      setIsOpen(false);
    }
  };
  var handlePresetSelect = function handlePresetSelect(preset) {
    setSelectedRange(preset.range);
    onChange === null || onChange === void 0 ? void 0 : onChange(preset.range);
    setIsOpen(false);
  };
  var handleClear = function handleClear() {
    var clearedRange = {
      from: null,
      to: null
    };
    setSelectedRange(clearedRange);
    onChange === null || onChange === void 0 ? void 0 : onChange(clearedRange);
  };
  var formatDisplayValue = function formatDisplayValue() {
    if (!selectedRange.from && !selectedRange.to) return placeholder;
    if (selectedRange.from && !selectedRange.to) return formatDate(selectedRange.from, format);
    if (selectedRange.from && selectedRange.to) {
      if (isSameDay(selectedRange.from, selectedRange.to)) {
        return formatDate(selectedRange.from, format);
      }
      return "".concat(formatDate(selectedRange.from, format), " - ").concat(formatDate(selectedRange.to, format));
    }
    return placeholder;
  };
  return jsxs("div", {
    ref: containerRef,
    className: cn$m('relative', className),
    children: [jsxs("button", {
      type: "button",
      onClick: function onClick() {
        return !disabled && setIsOpen(!isOpen);
      },
      disabled: disabled,
      className: cn$m('w-full flex items-center justify-between px-3 py-2 text-left', 'border border-mw-gray-300 dark:border-mw-gray-600 rounded-md', 'bg-white dark:bg-mw-gray-800', 'text-mw-gray-900 dark:text-white', 'hover:border-mw-gray-400 dark:hover:border-mw-gray-500', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', disabled && 'opacity-50 cursor-not-allowed', !selectedRange.from && !selectedRange.to && 'text-mw-gray-500 dark:text-mw-gray-400'),
      children: [jsx("span", {
        className: "truncate",
        children: formatDisplayValue()
      }), jsxs("div", {
        className: "flex items-center gap-1 ml-2",
        children: [clearable && (selectedRange.from || selectedRange.to) && jsx("button", {
          onClick: function onClick(e) {
            e.stopPropagation();
            handleClear();
          },
          className: "p-1 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 rounded",
          children: jsx(X, {
            className: "w-3 h-3"
          })
        }), jsx(Calendar$1, {
          className: "w-4 h-4 text-mw-gray-400"
        })]
      })]
    }), isOpen && jsxs("div", {
      className: "absolute z-50 mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg shadow-lg",
      children: [jsxs("div", {
        className: "flex",
        children: [presets.length > 0 && jsxs("div", {
          className: "w-48 p-3 border-r border-mw-gray-200 dark:border-mw-gray-700",
          children: [jsx("h4", {
            className: "text-sm font-medium mb-2 text-mw-gray-900 dark:text-white",
            children: "Quick Select"
          }), jsx("div", {
            className: "space-y-1",
            children: presets.map(function (preset, index) {
              return jsx("button", {
                onClick: function onClick() {
                  return handlePresetSelect(preset);
                },
                className: "w-full text-left px-2 py-1 text-sm rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 text-mw-gray-700 dark:text-mw-gray-300",
                children: preset.label
              }, index);
            })
          })]
        }), jsxs("div", {
          className: "flex",
          children: [jsx(CalendarMonth, {
            currentMonth: currentMonth,
            selectedRange: selectedRange,
            onDateSelect: handleDateSelect,
            onMonthChange: setCurrentMonth,
            minDate: minDate,
            maxDate: maxDate,
            selectingStart: selectingStart
          }), numberOfMonths === 2 && jsx(CalendarMonth, {
            currentMonth: new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1),
            selectedRange: selectedRange,
            onDateSelect: handleDateSelect,
            onMonthChange: function onMonthChange(month) {
              var prevMonth = new Date(month);
              prevMonth.setMonth(prevMonth.getMonth() - 1);
              setCurrentMonth(prevMonth);
            },
            minDate: minDate,
            maxDate: maxDate,
            selectingStart: selectingStart
          })]
        })]
      }), jsxs("div", {
        className: "flex items-center justify-between p-3 border-t border-mw-gray-200 dark:border-mw-gray-700",
        children: [jsx("div", {
          className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
          children: selectingStart ? 'Select start date' : 'Select end date'
        }), jsxs("div", {
          className: "flex gap-2",
          children: [jsx("button", {
            onClick: function onClick() {
              return setIsOpen(false);
            },
            className: "px-3 py-1 text-sm text-mw-gray-600 dark:text-mw-gray-400 hover:text-mw-gray-900 dark:hover:text-white",
            children: "Cancel"
          }), jsx("button", {
            onClick: function onClick() {
              return setIsOpen(false);
            },
            disabled: !selectedRange.from,
            className: "px-3 py-1 text-sm bg-mw-blue-500 text-white rounded hover:bg-mw-blue-600 disabled:opacity-50 disabled:cursor-not-allowed",
            children: "Apply"
          })]
        })]
      })]
    })]
  });
}

function cn$l() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var timeInputSizes = {
  sm: 'h-8 text-sm',
  md: 'h-10 text-base',
  lg: 'h-12 text-lg'
};
function TimeInput(_ref) {
  var value = _ref.value,
    onChange = _ref.onChange,
    min = _ref.min,
    max = _ref.max,
    _ref$step = _ref.step,
    step = _ref$step === void 0 ? 1 : _ref$step,
    disabled = _ref.disabled,
    className = _ref.className;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isEditing = _useState2[0],
    setIsEditing = _useState2[1];
  var _useState3 = useState(value.toString().padStart(2, '0')),
    _useState4 = _slicedToArray(_useState3, 2),
    inputValue = _useState4[0],
    setInputValue = _useState4[1];
  var inputRef = useRef(null);
  useEffect(function () {
    if (!isEditing) {
      setInputValue(value.toString().padStart(2, '0'));
    }
  }, [value, isEditing]);
  var handleIncrement = function handleIncrement() {
    var newValue = Math.min(max, value + step);
    onChange(newValue);
  };
  var handleDecrement = function handleDecrement() {
    var newValue = Math.max(min, value - step);
    onChange(newValue);
  };
  var handleInputChange = function handleInputChange(e) {
    setInputValue(e.target.value);
  };
  var handleInputBlur = function handleInputBlur() {
    setIsEditing(false);
    var numValue = parseInt(inputValue, 10);
    if (!isNaN(numValue) && numValue >= min && numValue <= max) {
      onChange(numValue);
    } else {
      setInputValue(value.toString().padStart(2, '0'));
    }
  };
  var handleInputFocus = function handleInputFocus() {
    var _a;
    setIsEditing(true);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.select();
  };
  var handleKeyDown = function handleKeyDown(e) {
    var _a;
    if (e.key === 'ArrowUp') {
      e.preventDefault();
      handleIncrement();
    } else if (e.key === 'ArrowDown') {
      e.preventDefault();
      handleDecrement();
    } else if (e.key === 'Enter') {
      e.preventDefault();
      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    }
  };
  return jsxs("div", {
    className: cn$l('relative', className),
    children: [jsx("input", {
      ref: inputRef,
      type: "text",
      value: inputValue,
      onChange: handleInputChange,
      onBlur: handleInputBlur,
      onFocus: handleInputFocus,
      onKeyDown: handleKeyDown,
      disabled: disabled,
      className: "w-12 text-center bg-transparent border-none outline-none text-mw-gray-900 dark:text-white disabled:opacity-50",
      maxLength: 2
    }), jsxs("div", {
      className: "absolute right-0 top-0 h-full flex flex-col",
      children: [jsx("button", {
        type: "button",
        onClick: handleIncrement,
        disabled: disabled,
        className: "flex-1 px-1 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200 disabled:opacity-50",
        children: jsx(ChevronUp, {
          className: "w-3 h-3"
        })
      }), jsx("button", {
        type: "button",
        onClick: handleDecrement,
        disabled: disabled,
        className: "flex-1 px-1 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200 disabled:opacity-50",
        children: jsx(ChevronDown, {
          className: "w-3 h-3"
        })
      })]
    })]
  });
}
function parseTimeString(timeString) {
  var parts = timeString.split(':');
  return {
    hours: parseInt(parts[0] || '0', 10),
    minutes: parseInt(parts[1] || '0', 10),
    seconds: parseInt(parts[2] || '0', 10)
  };
}
function formatTime(hours, minutes, seconds, format, showSeconds) {
  if (format === '12h') {
    var ampm = hours >= 12 ? 'PM' : 'AM';
    var displayHours = hours % 12 || 12;
    var timeString = showSeconds ? "".concat(displayHours.toString().padStart(2, '0'), ":").concat(minutes.toString().padStart(2, '0'), ":").concat(seconds.toString().padStart(2, '0'), " ").concat(ampm) : "".concat(displayHours.toString().padStart(2, '0'), ":").concat(minutes.toString().padStart(2, '0'), " ").concat(ampm);
    return timeString;
  } else {
    return showSeconds ? "".concat(hours.toString().padStart(2, '0'), ":").concat(minutes.toString().padStart(2, '0'), ":").concat(seconds.toString().padStart(2, '0')) : "".concat(hours.toString().padStart(2, '0'), ":").concat(minutes.toString().padStart(2, '0'));
  }
}
function TimePicker(_ref2) {
  var _ref2$value = _ref2.value,
    value = _ref2$value === void 0 ? '' : _ref2$value,
    onChange = _ref2.onChange,
    _ref2$format = _ref2.format,
    format = _ref2$format === void 0 ? '24h' : _ref2$format,
    _ref2$showSeconds = _ref2.showSeconds,
    showSeconds = _ref2$showSeconds === void 0 ? false : _ref2$showSeconds,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    label = _ref2.label,
    error = _ref2.error,
    helpText = _ref2.helpText,
    _ref2$placeholder = _ref2.placeholder,
    placeholder = _ref2$placeholder === void 0 ? 'Select time' : _ref2$placeholder,
    className = _ref2.className,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? 'md' : _ref2$size,
    _ref2$step = _ref2.step,
    step = _ref2$step === void 0 ? 1 : _ref2$step;
  var _useState5 = useState(false),
    _useState6 = _slicedToArray(_useState5, 2),
    isOpen = _useState6[0],
    setIsOpen = _useState6[1];
  var _useState7 = useState(0),
    _useState8 = _slicedToArray(_useState7, 2),
    hours = _useState8[0],
    setHours = _useState8[1];
  var _useState9 = useState(0),
    _useState0 = _slicedToArray(_useState9, 2),
    minutes = _useState0[0],
    setMinutes = _useState0[1];
  var _useState1 = useState(0),
    _useState10 = _slicedToArray(_useState1, 2),
    seconds = _useState10[0],
    setSeconds = _useState10[1];
  var _useState11 = useState('AM'),
    _useState12 = _slicedToArray(_useState11, 2),
    ampm = _useState12[0],
    setAmpm = _useState12[1];
  var dropdownRef = useRef(null);
  // Parse initial value
  useEffect(function () {
    if (value) {
      var parsed = parseTimeString(value);
      setHours(parsed.hours);
      setMinutes(parsed.minutes);
      setSeconds(parsed.seconds);
      setAmpm(parsed.hours >= 12 ? 'PM' : 'AM');
    }
  }, [value]);
  // Handle clicks outside
  useEffect(function () {
    function handleClickOutside(event) {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var handleTimeChange = function handleTimeChange(newHours, newMinutes, newSeconds) {
    var finalHours = format === '12h' ? ampm === 'PM' && newHours !== 12 ? newHours + 12 : ampm === 'AM' && newHours === 12 ? 0 : newHours : newHours;
    var timeString = showSeconds ? "".concat(finalHours.toString().padStart(2, '0'), ":").concat(newMinutes.toString().padStart(2, '0'), ":").concat(newSeconds.toString().padStart(2, '0')) : "".concat(finalHours.toString().padStart(2, '0'), ":").concat(newMinutes.toString().padStart(2, '0'));
    onChange === null || onChange === void 0 ? void 0 : onChange(timeString);
  };
  var handleHoursChange = function handleHoursChange(newHours) {
    setHours(newHours);
    handleTimeChange(newHours, minutes, seconds);
  };
  var handleMinutesChange = function handleMinutesChange(newMinutes) {
    setMinutes(newMinutes);
    handleTimeChange(hours, newMinutes, seconds);
  };
  var handleSecondsChange = function handleSecondsChange(newSeconds) {
    setSeconds(newSeconds);
    handleTimeChange(hours, minutes, newSeconds);
  };
  var handleAmpmChange = function handleAmpmChange(newAmpm) {
    setAmpm(newAmpm);
    handleTimeChange(hours, minutes, seconds);
  };
  var displayValue = value ? formatTime(hours, minutes, seconds, format, showSeconds) : '';
  var displayHours = format === '12h' ? hours % 12 || 12 : hours;
  return jsxs("div", {
    className: className,
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-1",
      children: label
    }), jsxs("div", {
      className: "relative",
      ref: dropdownRef,
      children: [jsxs("button", {
        type: "button",
        onClick: function onClick() {
          return !disabled && setIsOpen(!isOpen);
        },
        disabled: disabled,
        className: cn$l('relative w-full pl-3 pr-10 text-left border rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed', timeInputSizes[size], error ? 'border-red-300 dark:border-red-600' : 'border-mw-gray-300 dark:border-mw-gray-600', 'bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white'),
        children: [jsx("span", {
          className: cn$l(!displayValue && 'text-mw-gray-500 dark:text-mw-gray-400'),
          children: displayValue || placeholder
        }), jsx("div", {
          className: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none",
          children: jsx(Clock, {
            className: "w-4 h-4 text-mw-gray-400"
          })
        })]
      }), isOpen && jsx("div", {
        className: "absolute z-50 w-full mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-md shadow-lg",
        children: jsx("div", {
          className: "p-4",
          children: jsxs("div", {
            className: "flex items-center justify-center space-x-2",
            children: [jsx(TimeInput, {
              value: displayHours,
              onChange: handleHoursChange,
              min: format === '12h' ? 1 : 0,
              max: format === '12h' ? 12 : 23,
              disabled: disabled
            }), jsx("span", {
              className: "text-mw-gray-500",
              children: ":"
            }), jsx(TimeInput, {
              value: minutes,
              onChange: handleMinutesChange,
              min: 0,
              max: 59,
              step: step,
              disabled: disabled
            }), showSeconds && jsxs(Fragment, {
              children: [jsx("span", {
                className: "text-mw-gray-500",
                children: ":"
              }), jsx(TimeInput, {
                value: seconds,
                onChange: handleSecondsChange,
                min: 0,
                max: 59,
                disabled: disabled
              })]
            }), format === '12h' && jsxs("div", {
              className: "ml-2 flex flex-col space-y-1",
              children: [jsx("button", {
                type: "button",
                onClick: function onClick() {
                  return handleAmpmChange('AM');
                },
                disabled: disabled,
                className: cn$l('px-2 py-1 text-xs rounded', ampm === 'AM' ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'text-mw-gray-600 dark:text-mw-gray-300 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
                children: "AM"
              }), jsx("button", {
                type: "button",
                onClick: function onClick() {
                  return handleAmpmChange('PM');
                },
                disabled: disabled,
                className: cn$l('px-2 py-1 text-xs rounded', ampm === 'PM' ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'text-mw-gray-600 dark:text-mw-gray-300 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
                children: "PM"
              })]
            })]
          })
        })
      })]
    }), helpText && !error && jsx("p", {
      className: "mt-1 text-xs text-mw-gray-500 dark:text-mw-gray-400",
      children: helpText
    }), error && jsxs("p", {
      className: "mt-1 text-xs text-red-600 dark:text-red-400 flex items-center gap-1",
      children: [jsx("svg", {
        className: "w-3 h-3",
        fill: "currentColor",
        viewBox: "0 0 20 20",
        children: jsx("path", {
          fillRule: "evenodd",
          d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
          clipRule: "evenodd"
        })
      }), error]
    })]
  });
}

function cn$k() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var defaultPresets = [{
  label: 'Morning (9AM - 12PM)',
  range: {
    from: '09:00',
    to: '12:00'
  }
}, {
  label: 'Afternoon (1PM - 5PM)',
  range: {
    from: '13:00',
    to: '17:00'
  }
}, {
  label: 'Evening (6PM - 9PM)',
  range: {
    from: '18:00',
    to: '21:00'
  }
}, {
  label: 'Business Hours (9AM - 5PM)',
  range: {
    from: '09:00',
    to: '17:00'
  }
}, {
  label: 'Full Day',
  range: {
    from: '00:00',
    to: '23:59'
  }
}];
function generateTimeOptions(format) {
  var minuteStep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;
  var times = [];
  for (var hour = 0; hour < 24; hour++) {
    for (var minute = 0; minute < 60; minute += minuteStep) {
      var time24 = "".concat(hour.toString().padStart(2, '0'), ":").concat(minute.toString().padStart(2, '0'));
      if (format === '24') {
        times.push(time24);
      } else {
        var hour12 = hour === 0 ? 12 : hour > 12 ? hour - 12 : hour;
        var ampm = hour < 12 ? 'AM' : 'PM';
        var time12 = "".concat(hour12, ":").concat(minute.toString().padStart(2, '0'), " ").concat(ampm);
        times.push(time12);
      }
    }
  }
  return times;
}
function convertTo24Hour(time12) {
  var _time12$split = time12.split(' '),
    _time12$split2 = _slicedToArray(_time12$split, 2),
    time = _time12$split2[0],
    modifier = _time12$split2[1];
  var _time$split = time.split(':'),
    _time$split2 = _slicedToArray(_time$split, 2),
    hours = _time$split2[0],
    minutes = _time$split2[1];
  if (hours === '12') {
    hours = '00';
  }
  if (modifier === 'PM') {
    hours = (parseInt(hours, 10) + 12).toString();
  }
  return "".concat(hours.padStart(2, '0'), ":").concat(minutes);
}
function convertTo12Hour(time24) {
  var _time24$split = time24.split(':'),
    _time24$split2 = _slicedToArray(_time24$split, 2),
    hours = _time24$split2[0],
    minutes = _time24$split2[1];
  var hour = parseInt(hours, 10);
  var hour12 = hour === 0 ? 12 : hour > 12 ? hour - 12 : hour;
  var ampm = hour < 12 ? 'AM' : 'PM';
  return "".concat(hour12, ":").concat(minutes, " ").concat(ampm);
}
function isTimeInRange(time, min, max) {
  if (!min && !max) return true;
  var timeMinutes = timeToMinutes(time);
  if (min && timeMinutes < timeToMinutes(min)) return false;
  if (max && timeMinutes > timeToMinutes(max)) return false;
  return true;
}
function timeToMinutes(time) {
  var _time$split$map = time.split(':').map(Number),
    _time$split$map2 = _slicedToArray(_time$split$map, 2),
    hours = _time$split$map2[0],
    minutes = _time$split$map2[1];
  return hours * 60 + minutes;
}
function isValidTimeRange(fromTime, toTime) {
  if (!fromTime || !toTime) return true;
  return timeToMinutes(fromTime) < timeToMinutes(toTime);
}
function TimeSelect(_ref) {
  var value = _ref.value,
    onChange = _ref.onChange,
    options = _ref.options,
    format = _ref.format,
    placeholder = _ref.placeholder,
    disabled = _ref.disabled,
    minTime = _ref.minTime,
    maxTime = _ref.maxTime;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var _useState3 = useState(''),
    _useState4 = _slicedToArray(_useState3, 2),
    searchTerm = _useState4[0],
    setSearchTerm = _useState4[1];
  var selectRef = useRef(null);
  useEffect(function () {
    function handleClickOutside(event) {
      if (selectRef.current && !selectRef.current.contains(event.target)) {
        setIsOpen(false);
        setSearchTerm('');
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var filteredOptions = options.filter(function (option) {
    var time24 = format === '12' ? convertTo24Hour(option) : option;
    // Filter by search term
    if (searchTerm && !option.toLowerCase().includes(searchTerm.toLowerCase())) {
      return false;
    }
    // Filter by time range
    if (!isTimeInRange(time24, minTime, maxTime)) {
      return false;
    }
    return true;
  });
  var displayValue = value || placeholder;
  return jsxs("div", {
    ref: selectRef,
    className: "relative",
    children: [jsxs("button", {
      type: "button",
      onClick: function onClick() {
        return !disabled && setIsOpen(!isOpen);
      },
      disabled: disabled,
      className: cn$k('w-full flex items-center justify-between px-3 py-2 text-left', 'border border-mw-gray-300 dark:border-mw-gray-600 rounded-md', 'bg-white dark:bg-mw-gray-800', 'text-mw-gray-900 dark:text-white', 'hover:border-mw-gray-400 dark:hover:border-mw-gray-500', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', disabled && 'opacity-50 cursor-not-allowed', !value && 'text-mw-gray-500 dark:text-mw-gray-400'),
      children: [jsx("span", {
        className: "truncate",
        children: displayValue
      }), jsx(ChevronDown, {
        className: "w-4 h-4 text-mw-gray-400 ml-2"
      })]
    }), isOpen && jsxs("div", {
      className: "absolute z-50 mt-1 w-full bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-md shadow-lg max-h-60 overflow-hidden",
      children: [jsx("div", {
        className: "p-2 border-b border-mw-gray-200 dark:border-mw-gray-700",
        children: jsx("input", {
          type: "text",
          placeholder: "Search time...",
          value: searchTerm,
          onChange: function onChange(e) {
            return setSearchTerm(e.target.value);
          },
          className: "w-full px-2 py-1 text-sm border border-mw-gray-300 dark:border-mw-gray-600 rounded bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white placeholder-mw-gray-500 dark:placeholder-mw-gray-400 focus:outline-none focus:ring-1 focus:ring-mw-blue-500"
        })
      }), jsx("div", {
        className: "overflow-y-auto max-h-44",
        children: filteredOptions.length > 0 ? filteredOptions.map(function (option, index) {
          return jsx("button", {
            onClick: function onClick() {
              onChange(option);
              setIsOpen(false);
              setSearchTerm('');
            },
            className: cn$k('w-full px-3 py-2 text-left text-sm hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700', value === option && 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300'),
            children: option
          }, index);
        }) : jsx("div", {
          className: "px-3 py-2 text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: "No times found"
        })
      })]
    })]
  });
}
function TimeRangePicker(_ref2) {
  var value = _ref2.value,
    onChange = _ref2.onChange,
    _ref2$placeholder = _ref2.placeholder,
    placeholder = _ref2$placeholder === void 0 ? 'Select time range' : _ref2$placeholder,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled;
    _ref2.required;
    var _ref2$clearable = _ref2.clearable,
    clearable = _ref2$clearable === void 0 ? true : _ref2$clearable,
    _ref2$format = _ref2.format,
    format = _ref2$format === void 0 ? '12' : _ref2$format,
    _ref2$minuteStep = _ref2.minuteStep,
    minuteStep = _ref2$minuteStep === void 0 ? 15 : _ref2$minuteStep,
    minTime = _ref2.minTime,
    maxTime = _ref2.maxTime,
    className = _ref2.className,
    _ref2$presets = _ref2.presets,
    presets = _ref2$presets === void 0 ? defaultPresets : _ref2$presets;
  var _useState5 = useState(value || {
      from: null,
      to: null
    }),
    _useState6 = _slicedToArray(_useState5, 2),
    selectedRange = _useState6[0],
    setSelectedRange = _useState6[1];
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    isOpen = _useState8[0],
    setIsOpen = _useState8[1];
  var containerRef = useRef(null);
  var timeOptions = generateTimeOptions(format, minuteStep);
  useEffect(function () {
    if (value) {
      setSelectedRange(value);
    }
  }, [value]);
  useEffect(function () {
    function handleClickOutside(event) {
      if (containerRef.current && !containerRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var handleRangeChange = function handleRangeChange(newRange) {
    setSelectedRange(newRange);
    onChange === null || onChange === void 0 ? void 0 : onChange(newRange);
  };
  var handleFromTimeChange = function handleFromTimeChange(time) {
    var newRange = Object.assign(Object.assign({}, selectedRange), {
      from: time
    });
    // Validate that from time is before to time
    if (newRange.to && !isValidTimeRange(time, newRange.to)) {
      newRange.to = null;
    }
    handleRangeChange(newRange);
  };
  var handleToTimeChange = function handleToTimeChange(time) {
    var newRange = Object.assign(Object.assign({}, selectedRange), {
      to: time
    });
    handleRangeChange(newRange);
  };
  var handlePresetSelect = function handlePresetSelect(preset) {
    var presetRange = preset.range;
    // Convert preset times to the correct format
    if (format === '12' && presetRange.from && presetRange.to) {
      presetRange = {
        from: convertTo12Hour(presetRange.from),
        to: convertTo12Hour(presetRange.to)
      };
    }
    handleRangeChange(presetRange);
    setIsOpen(false);
  };
  var handleClear = function handleClear() {
    var clearedRange = {
      from: null,
      to: null
    };
    handleRangeChange(clearedRange);
  };
  var formatDisplayValue = function formatDisplayValue() {
    if (!selectedRange.from && !selectedRange.to) return placeholder;
    if (selectedRange.from && !selectedRange.to) return selectedRange.from;
    if (selectedRange.from && selectedRange.to) {
      return "".concat(selectedRange.from, " - ").concat(selectedRange.to);
    }
    return placeholder;
  };
  var isRangeValid = isValidTimeRange(selectedRange.from, selectedRange.to);
  return jsxs("div", {
    ref: containerRef,
    className: cn$k('relative', className),
    children: [jsxs("button", {
      type: "button",
      onClick: function onClick() {
        return !disabled && setIsOpen(!isOpen);
      },
      disabled: disabled,
      className: cn$k('w-full flex items-center justify-between px-3 py-2 text-left', 'border border-mw-gray-300 dark:border-mw-gray-600 rounded-md', 'bg-white dark:bg-mw-gray-800', 'text-mw-gray-900 dark:text-white', 'hover:border-mw-gray-400 dark:hover:border-mw-gray-500', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', disabled && 'opacity-50 cursor-not-allowed', !selectedRange.from && !selectedRange.to && 'text-mw-gray-500 dark:text-mw-gray-400', !isRangeValid && 'border-mw-red-300 dark:border-mw-red-600'),
      children: [jsx("span", {
        className: "truncate",
        children: formatDisplayValue()
      }), jsxs("div", {
        className: "flex items-center gap-1 ml-2",
        children: [clearable && (selectedRange.from || selectedRange.to) && jsx("button", {
          onClick: function onClick(e) {
            e.stopPropagation();
            handleClear();
          },
          className: "p-1 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 rounded",
          children: jsx(X, {
            className: "w-3 h-3"
          })
        }), jsx(Clock, {
          className: "w-4 h-4 text-mw-gray-400"
        })]
      })]
    }), !isRangeValid && selectedRange.from && selectedRange.to && jsx("p", {
      className: "mt-1 text-xs text-mw-red-600 dark:text-mw-red-400",
      children: "Start time must be before end time"
    }), isOpen && jsx("div", {
      className: "absolute z-50 mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg shadow-lg",
      children: jsxs("div", {
        className: "flex",
        children: [presets.length > 0 && jsxs("div", {
          className: "w-48 p-3 border-r border-mw-gray-200 dark:border-mw-gray-700",
          children: [jsx("h4", {
            className: "text-sm font-medium mb-2 text-mw-gray-900 dark:text-white",
            children: "Quick Select"
          }), jsx("div", {
            className: "space-y-1",
            children: presets.map(function (preset, index) {
              return jsx("button", {
                onClick: function onClick() {
                  return handlePresetSelect(preset);
                },
                className: "w-full text-left px-2 py-1 text-sm rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 text-mw-gray-700 dark:text-mw-gray-300",
                children: preset.label
              }, index);
            })
          })]
        }), jsxs("div", {
          className: "p-4 min-w-[320px]",
          children: [jsxs("div", {
            className: "space-y-4",
            children: [jsxs("div", {
              children: [jsx("label", {
                className: "block text-sm font-medium mb-2 text-mw-gray-900 dark:text-white",
                children: "From Time"
              }), jsx(TimeSelect, {
                value: selectedRange.from,
                onChange: handleFromTimeChange,
                options: timeOptions,
                format: format,
                placeholder: "Select start time",
                disabled: disabled,
                minTime: minTime,
                maxTime: selectedRange.to ? format === '12' ? convertTo24Hour(selectedRange.to) : selectedRange.to : maxTime
              })]
            }), jsxs("div", {
              children: [jsx("label", {
                className: "block text-sm font-medium mb-2 text-mw-gray-900 dark:text-white",
                children: "To Time"
              }), jsx(TimeSelect, {
                value: selectedRange.to,
                onChange: handleToTimeChange,
                options: timeOptions,
                format: format,
                placeholder: "Select end time",
                disabled: disabled || !selectedRange.from,
                minTime: selectedRange.from ? format === '12' ? convertTo24Hour(selectedRange.from) : selectedRange.from : minTime,
                maxTime: maxTime
              })]
            })]
          }), jsxs("div", {
            className: "flex items-center justify-between pt-4 mt-4 border-t border-mw-gray-200 dark:border-mw-gray-700",
            children: [jsx("div", {
              className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
              children: format === '12' ? '12-hour format' : '24-hour format'
            }), jsxs("div", {
              className: "flex gap-2",
              children: [jsx("button", {
                onClick: function onClick() {
                  return setIsOpen(false);
                },
                className: "px-3 py-1 text-sm text-mw-gray-600 dark:text-mw-gray-400 hover:text-mw-gray-900 dark:hover:text-white",
                children: "Cancel"
              }), jsx("button", {
                onClick: function onClick() {
                  return setIsOpen(false);
                },
                disabled: !selectedRange.from || !isRangeValid,
                className: "px-3 py-1 text-sm bg-mw-blue-500 text-white rounded hover:bg-mw-blue-600 disabled:opacity-50 disabled:cursor-not-allowed",
                children: "Apply"
              })]
            })]
          })]
        })]
      })
    })]
  });
}

var ratingSizes = {
  sm: 'w-4 h-4',
  md: 'w-5 h-5',
  lg: 'w-6 h-6'
};
function Rating(_ref) {
  var _ref$value = _ref.value,
    value = _ref$value === void 0 ? 0 : _ref$value,
    _ref$max = _ref.max,
    max = _ref$max === void 0 ? 5 : _ref$max,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$readonly = _ref.readonly,
    readonly = _ref$readonly === void 0 ? false : _ref$readonly,
    _ref$allowHalf = _ref.allowHalf,
    allowHalf = _ref$allowHalf === void 0 ? false : _ref$allowHalf,
    onChange = _ref.onChange,
    className = _ref.className;
  var _useState = useState(0),
    _useState2 = _slicedToArray(_useState, 2),
    hoverValue = _useState2[0],
    setHoverValue = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isHovering = _useState4[0],
    setIsHovering = _useState4[1];
  var currentValue = isHovering ? hoverValue : value;
  var handleMouseEnter = function handleMouseEnter(index, isHalf) {
    if (readonly) return;
    var newValue = isHalf ? index + 0.5 : index + 1;
    setHoverValue(newValue);
    setIsHovering(true);
  };
  var handleMouseLeave = function handleMouseLeave() {
    if (readonly) return;
    setIsHovering(false);
    setHoverValue(0);
  };
  var handleClick = function handleClick(index, isHalf) {
    if (readonly) return;
    var newValue = isHalf ? index + 0.5 : index + 1;
    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  };
  return jsx("div", {
    className: clsx('flex items-center space-x-1', className),
    onMouseLeave: handleMouseLeave,
    children: Array.from({
      length: max
    }).map(function (_, index) {
      var isFilled = currentValue > index;
      var isHalfFilled = allowHalf && currentValue > index && currentValue < index + 1;
      return jsxs("div", {
        className: clsx('relative', !readonly && 'cursor-pointer'),
        children: [jsx(Star, {
          className: clsx(ratingSizes[size], 'transition-colors duration-150', isFilled ? 'fill-yellow-400 text-yellow-400' : 'fill-none text-mw-gray-300 dark:text-mw-gray-600'),
          onMouseEnter: function onMouseEnter() {
            return handleMouseEnter(index);
          },
          onClick: function onClick() {
            return handleClick(index);
          }
        }), allowHalf && jsx("div", {
          className: "absolute inset-0 w-1/2 overflow-hidden",
          onMouseEnter: function onMouseEnter() {
            return handleMouseEnter(index, true);
          },
          onClick: function onClick() {
            return handleClick(index, true);
          },
          children: jsx(Star, {
            className: clsx(ratingSizes[size], 'transition-colors duration-150', isHalfFilled ? 'fill-yellow-400 text-yellow-400' : 'fill-none text-transparent')
          })
        })]
      }, index);
    })
  });
}

var ToggleGroupContext = /*#__PURE__*/createContext(null);
var toggleSizes = {
  sm: 'h-8 px-2 text-xs',
  md: 'h-9 px-3 text-sm',
  lg: 'h-10 px-4 text-base'
};
var toggleVariants = {
  "default": {
    base: 'bg-transparent hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300',
    selected: 'bg-mw-gray-100 dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white'
  },
  outline: {
    base: 'border border-mw-gray-200 dark:border-mw-gray-700 bg-transparent hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300',
    selected: 'bg-mw-gray-900 dark:bg-white text-white dark:text-mw-gray-900 border-mw-gray-900 dark:border-white'
  }
};
function ToggleGroup(_a) {
  var type = _a.type,
    value = _a.value,
    onValueChange = _a.onValueChange,
    defaultValue = _a.defaultValue,
    _a$disabled = _a.disabled,
    disabled = _a$disabled === void 0 ? false : _a$disabled,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    className = _a.className,
    children = _a.children,
    props = __rest(_a, ["type", "value", "onValueChange", "defaultValue", "disabled", "size", "variant", "className", "children"]);
  var _useState = useState(defaultValue || (type === 'single' ? '' : [])),
    _useState2 = _slicedToArray(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var currentValue = value !== undefined ? value : internalValue;
  var handleValueChange = function handleValueChange(newValue) {
    if (value === undefined) {
      setInternalValue(newValue);
    }
    onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(newValue);
  };
  return jsx(ToggleGroupContext.Provider, {
    value: {
      type: type,
      value: currentValue,
      onValueChange: handleValueChange,
      disabled: disabled,
      size: size,
      variant: variant
    },
    children: jsx("div", Object.assign({
      className: clsx('inline-flex items-center justify-center rounded-md', className),
      role: "group"
    }, props, {
      children: children
    }))
  });
}
function ToggleGroupItem(_a) {
  var value = _a.value,
    disabled = _a.disabled,
    className = _a.className,
    children = _a.children,
    onClick = _a.onClick,
    props = __rest(_a, ["value", "disabled", "className", "children", "onClick"]);
  var context = useContext(ToggleGroupContext);
  if (!context) {
    throw new Error('ToggleGroupItem must be used within ToggleGroup');
  }
  var isSelected = context.type === 'single' ? context.value === value : Array.isArray(context.value) && context.value.includes(value);
  var isDisabled = disabled || context.disabled;
  var handleClick = function handleClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
    if (isDisabled) return;
    if (context.type === 'single') {
      context.onValueChange(isSelected ? '' : value);
    } else {
      var currentValues = Array.isArray(context.value) ? context.value : [];
      var newValues = isSelected ? currentValues.filter(function (v) {
        return v !== value;
      }) : [].concat(_toConsumableArray(currentValues), [value]);
      context.onValueChange(newValues);
    }
  };
  var variantConfig = toggleVariants[context.variant];
  return jsx("button", Object.assign({
    onClick: handleClick,
    disabled: isDisabled,
    "data-state": isSelected ? 'on' : 'off',
    className: clsx('inline-flex items-center justify-center whitespace-nowrap rounded-md font-medium transition-colors', 'focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-mw-blue-500', 'disabled:pointer-events-none disabled:opacity-50', 'first:rounded-l-md last:rounded-r-md [&:not(:first-child):not(:last-child)]:rounded-none', toggleSizes[context.size], isSelected ? variantConfig.selected : variantConfig.base, className)
  }, props, {
    children: children
  }));
}

function cn$j() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var FormContext = /*#__PURE__*/createContext({});
var formLayouts = {
  vertical: 'space-y-6',
  horizontal: 'space-y-6',
  inline: 'flex flex-wrap items-end gap-4'
};
var formSizes = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg'
};
function Form(_ref) {
  var children = _ref.children,
    onSubmit = _ref.onSubmit,
    className = _ref.className,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$layout = _ref.layout,
    layout = _ref$layout === void 0 ? 'vertical' : _ref$layout;
  var handleSubmit = function handleSubmit(event) {
    if (onSubmit) {
      event.preventDefault();
      onSubmit(event);
    }
  };
  return jsx(FormContext.Provider, {
    value: {
      disabled: disabled,
      size: size
    },
    children: jsx("form", {
      onSubmit: handleSubmit,
      className: cn$j(formLayouts[layout], formSizes[size], className),
      children: children
    })
  });
}
function FormSection(_ref2) {
  var children = _ref2.children,
    title = _ref2.title,
    description = _ref2.description,
    className = _ref2.className;
  return jsxs("div", {
    className: cn$j('space-y-4', className),
    children: [(title || description) && jsxs("div", {
      className: "space-y-1",
      children: [title && jsx("h3", {
        className: "text-lg font-medium text-mw-gray-900 dark:text-white",
        children: title
      }), description && jsx("p", {
        className: "text-sm text-mw-gray-600 dark:text-mw-gray-300",
        children: description
      })]
    }), jsx("div", {
      className: "space-y-4",
      children: children
    })]
  });
}
function FormGroup(_ref3) {
  var children = _ref3.children,
    className = _ref3.className,
    _ref3$required = _ref3.required,
    required = _ref3$required === void 0 ? false : _ref3$required;
  return jsx("div", {
    className: cn$j('space-y-2', className),
    "data-required": required,
    children: children
  });
}
function FormField(_ref4) {
  var children = _ref4.children,
    className = _ref4.className;
  return jsx("div", {
    className: cn$j('space-y-2', className),
    children: children
  });
}
function FormLabel(_ref5) {
  var children = _ref5.children,
    htmlFor = _ref5.htmlFor,
    _ref5$required = _ref5.required,
    required = _ref5$required === void 0 ? false : _ref5$required,
    className = _ref5.className;
  return jsxs("label", {
    htmlFor: htmlFor,
    className: cn$j('block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300', className),
    children: [children, required && jsx("span", {
      className: "text-red-500 ml-1",
      "aria-label": "required",
      children: "*"
    })]
  });
}
function FormControl(_ref6) {
  var children = _ref6.children,
    className = _ref6.className;
  return jsx("div", {
    className: cn$j('relative', className),
    children: children
  });
}
function FormDescription(_ref7) {
  var children = _ref7.children,
    className = _ref7.className;
  return jsx("p", {
    className: cn$j('text-xs text-mw-gray-500 dark:text-mw-gray-400', className),
    children: children
  });
}
function FormError(_ref8) {
  var children = _ref8.children,
    className = _ref8.className;
  return jsxs("p", {
    className: cn$j('text-xs text-red-600 dark:text-red-400 flex items-center gap-1', className),
    children: [jsx("svg", {
      className: "w-3 h-3",
      fill: "currentColor",
      viewBox: "0 0 20 20",
      children: jsx("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
        clipRule: "evenodd"
      })
    }), children]
  });
}
function FormActions(_ref9) {
  var children = _ref9.children,
    className = _ref9.className,
    _ref9$align = _ref9.align,
    align = _ref9$align === void 0 ? 'left' : _ref9$align;
  var alignClasses = {
    left: 'justify-start',
    center: 'justify-center',
    right: 'justify-end'
  };
  return jsx("div", {
    className: cn$j('flex items-center gap-3 pt-4', alignClasses[align], className),
    children: children
  });
}
// Hook to access form context
function useFormContext() {
  return useContext(FormContext);
}
function Fieldset(_ref0) {
  var children = _ref0.children,
    legend = _ref0.legend,
    className = _ref0.className,
    _ref0$disabled = _ref0.disabled,
    disabled = _ref0$disabled === void 0 ? false : _ref0$disabled;
  return jsxs("fieldset", {
    disabled: disabled,
    className: cn$j('border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg p-4 space-y-4', disabled && 'opacity-50', className),
    children: [legend && jsx("legend", {
      className: "px-2 text-sm font-medium text-mw-gray-900 dark:text-white",
      children: legend
    }), children]
  });
}

function cn$i() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function formatFileSize(bytes) {
  if (bytes === 0) return '0 Bytes';
  var k = 1024;
  var sizes = ['Bytes', 'KB', 'MB', 'GB'];
  var i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}
function getFileIcon$1(file) {
  if (file.type.startsWith('image/')) {
    return jsx(Image, {
      className: "w-4 h-4"
    });
  }
  if (file.type.includes('text/') || file.type.includes('application/json')) {
    return jsx(FileText, {
      className: "w-4 h-4"
    });
  }
  return jsx(File, {
    className: "w-4 h-4"
  });
}
function FileItem(_ref) {
  var file = _ref.file,
    onRemove = _ref.onRemove,
    _ref$showPreview = _ref.showPreview,
    showPreview = _ref$showPreview === void 0 ? true : _ref$showPreview;
  var _useState = useState(null),
    _useState2 = _slicedToArray(_useState, 2),
    previewUrl = _useState2[0],
    setPreviewUrl = _useState2[1];
  React.useEffect(function () {
    if (showPreview && file.type.startsWith('image/')) {
      var url = URL.createObjectURL(file);
      setPreviewUrl(url);
      return function () {
        return URL.revokeObjectURL(url);
      };
    }
  }, [file, showPreview]);
  return jsxs("div", {
    className: "flex items-center p-3 bg-mw-gray-50 dark:bg-mw-gray-800 rounded-lg border border-mw-gray-200 dark:border-mw-gray-700",
    children: [jsx("div", {
      className: "flex-shrink-0 mr-3",
      children: previewUrl ? jsx("img", {
        src: previewUrl,
        alt: file.name,
        className: "w-10 h-10 object-cover rounded"
      }) : jsx("div", {
        className: "w-10 h-10 bg-mw-gray-200 dark:bg-mw-gray-700 rounded flex items-center justify-center text-mw-gray-500",
        children: getFileIcon$1(file)
      })
    }), jsxs("div", {
      className: "flex-1 min-w-0",
      children: [jsx("p", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white truncate",
        children: file.name
      }), jsx("p", {
        className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
        children: formatFileSize(file.size)
      })]
    }), onRemove && jsx("button", {
      onClick: onRemove,
      className: "flex-shrink-0 ml-2 p-1 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
      children: jsx(X, {
        className: "w-4 h-4"
      })
    })]
  });
}
function DragDropZone(_ref2) {
  var onDrop = _ref2.onDrop,
    accept = _ref2.accept,
    _ref2$multiple = _ref2.multiple,
    multiple = _ref2$multiple === void 0 ? false : _ref2$multiple,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    children = _ref2.children,
    className = _ref2.className;
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isDragOver = _useState4[0],
    setIsDragOver = _useState4[1];
  var handleDragEnter = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    if (!disabled) {
      setIsDragOver(true);
    }
  }, [disabled]);
  var handleDragLeave = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    setIsDragOver(false);
  }, []);
  var handleDragOver = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
  }, []);
  var handleDrop = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    setIsDragOver(false);
    if (disabled) return;
    var files = Array.from(e.dataTransfer.files);
    // Filter files by accept type if specified
    var filteredFiles = accept ? files.filter(function (file) {
      var acceptTypes = accept.split(',').map(function (type) {
        return type.trim();
      });
      return acceptTypes.some(function (type) {
        if (type.startsWith('.')) {
          return file.name.toLowerCase().endsWith(type.toLowerCase());
        }
        return file.type.match(new RegExp(type.replace('*', '.*')));
      });
    }) : files;
    var finalFiles = multiple ? filteredFiles : filteredFiles.slice(0, 1);
    onDrop(finalFiles);
  }, [onDrop, accept, multiple, disabled]);
  return jsx("div", {
    onDragEnter: handleDragEnter,
    onDragLeave: handleDragLeave,
    onDragOver: handleDragOver,
    onDrop: handleDrop,
    className: cn$i('relative', isDragOver && 'opacity-75', className),
    children: children
  });
}
function FileUpload(_ref3) {
  var onFilesChange = _ref3.onFilesChange,
    onError = _ref3.onError,
    _ref3$multiple = _ref3.multiple,
    multiple = _ref3$multiple === void 0 ? false : _ref3$multiple,
    accept = _ref3.accept,
    maxSize = _ref3.maxSize,
    maxFiles = _ref3.maxFiles,
    _ref3$disabled = _ref3.disabled,
    disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,
    className = _ref3.className,
    children = _ref3.children,
    _ref3$variant = _ref3.variant,
    variant = _ref3$variant === void 0 ? 'dropzone' : _ref3$variant,
    _ref3$showPreview = _ref3.showPreview,
    showPreview = _ref3$showPreview === void 0 ? true : _ref3$showPreview;
  var _useState5 = useState([]),
    _useState6 = _slicedToArray(_useState5, 2),
    files = _useState6[0],
    setFiles = _useState6[1];
  var fileInputRef = useRef(null);
  var validateFiles = useCallback(function (newFiles) {
    var validFiles = [];
    var _iterator = _createForOfIteratorHelper(newFiles),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var file = _step.value;
        // Check file size
        if (maxSize && file.size > maxSize) {
          onError === null || onError === void 0 ? void 0 : onError("File ".concat(file.name, " is too large. Maximum size is ").concat(formatFileSize(maxSize), "."));
          continue;
        }
        // Check file count
        if (maxFiles && files.length + validFiles.length >= maxFiles) {
          onError === null || onError === void 0 ? void 0 : onError("Maximum ".concat(maxFiles, " files allowed."));
          break;
        }
        validFiles.push(file);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return validFiles;
  }, [files.length, maxSize, maxFiles, onError]);
  var handleFilesChange = useCallback(function (newFiles) {
    var validFiles = validateFiles(newFiles);
    if (validFiles.length > 0) {
      var updatedFiles = multiple ? [].concat(_toConsumableArray(files), _toConsumableArray(validFiles)) : validFiles;
      setFiles(updatedFiles);
      onFilesChange === null || onFilesChange === void 0 ? void 0 : onFilesChange(updatedFiles);
    }
  }, [files, multiple, validateFiles, onFilesChange]);
  var handleInputChange = function handleInputChange(e) {
    var selectedFiles = Array.from(e.target.files || []);
    handleFilesChange(selectedFiles);
    // Reset input value to allow selecting the same file again
    if (fileInputRef.current) {
      fileInputRef.current.value = '';
    }
  };
  var removeFile = function removeFile(index) {
    var updatedFiles = files.filter(function (_, i) {
      return i !== index;
    });
    setFiles(updatedFiles);
    onFilesChange === null || onFilesChange === void 0 ? void 0 : onFilesChange(updatedFiles);
  };
  var openFileDialog = function openFileDialog() {
    var _a;
    (_a = fileInputRef.current) === null || _a === void 0 ? void 0 : _a.click();
  };
  if (variant === 'button') {
    return jsxs("div", {
      className: className,
      children: [jsx("input", {
        ref: fileInputRef,
        type: "file",
        multiple: multiple,
        accept: accept,
        onChange: handleInputChange,
        disabled: disabled,
        className: "hidden"
      }), jsxs("button", {
        onClick: openFileDialog,
        disabled: disabled,
        className: "inline-flex items-center px-4 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md shadow-sm text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 bg-white dark:bg-mw-gray-800 hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-mw-blue-500 disabled:opacity-50 disabled:cursor-not-allowed",
        children: [jsx(Upload, {
          className: "w-4 h-4 mr-2"
        }), children || 'Choose Files']
      }), files.length > 0 && jsx("div", {
        className: "mt-4 space-y-2",
        children: files.map(function (file, index) {
          return jsx(FileItem, {
            file: file,
            onRemove: function onRemove() {
              return removeFile(index);
            },
            showPreview: showPreview
          }, "".concat(file.name, "-").concat(index));
        })
      })]
    });
  }
  if (variant === 'input') {
    return jsxs("div", {
      className: className,
      children: [jsx("input", {
        ref: fileInputRef,
        type: "file",
        multiple: multiple,
        accept: accept,
        onChange: handleInputChange,
        disabled: disabled,
        className: "block w-full text-sm text-mw-gray-500 dark:text-mw-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-mw-blue-50 file:text-mw-blue-700 hover:file:bg-mw-blue-100 dark:file:bg-mw-blue-900/20 dark:file:text-mw-blue-300 dark:hover:file:bg-mw-blue-900/30"
      }), files.length > 0 && jsx("div", {
        className: "mt-4 space-y-2",
        children: files.map(function (file, index) {
          return jsx(FileItem, {
            file: file,
            onRemove: function onRemove() {
              return removeFile(index);
            },
            showPreview: showPreview
          }, "".concat(file.name, "-").concat(index));
        })
      })]
    });
  }
  // Default dropzone variant
  return jsxs("div", {
    className: className,
    children: [jsx("input", {
      ref: fileInputRef,
      type: "file",
      multiple: multiple,
      accept: accept,
      onChange: handleInputChange,
      disabled: disabled,
      className: "hidden"
    }), jsx(DragDropZone, {
      onDrop: handleFilesChange,
      accept: accept,
      multiple: multiple,
      disabled: disabled,
      className: "w-full",
      children: jsxs("div", {
        onClick: openFileDialog,
        className: cn$i('w-full p-8 border-2 border-dashed rounded-lg text-center cursor-pointer transition-colors', disabled ? 'border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800 cursor-not-allowed' : 'border-mw-gray-300 dark:border-mw-gray-600 hover:border-mw-blue-400 dark:hover:border-mw-blue-500 hover:bg-mw-blue-50 dark:hover:bg-mw-blue-900/10'),
        children: [jsx(Upload, {
          className: "w-8 h-8 mx-auto mb-4 text-mw-gray-400"
        }), children || jsxs("div", {
          children: [jsx("p", {
            className: "text-sm font-medium text-mw-gray-900 dark:text-white mb-1",
            children: "Drop files here or click to upload"
          }), jsxs("p", {
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
            children: [accept && "Accepts: ".concat(accept), maxSize && " - Max size: ".concat(formatFileSize(maxSize)), maxFiles && " - Max files: ".concat(maxFiles)]
          })]
        })]
      })
    }), files.length > 0 && jsx("div", {
      className: "mt-4 space-y-2",
      children: files.map(function (file, index) {
        return jsx(FileItem, {
          file: file,
          onRemove: function onRemove() {
            return removeFile(index);
          },
          showPreview: showPreview
        }, "".concat(file.name, "-").concat(index));
      })
    })]
  });
}

function cn$h() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var searchSizes = {
  sm: 'h-8 text-sm',
  md: 'h-10 text-base',
  lg: 'h-12 text-lg'
};
var searchVariants = {
  "default": 'border-mw-gray-300 dark:border-mw-gray-600 bg-white dark:bg-mw-gray-800',
  filled: 'border-transparent bg-mw-gray-100 dark:bg-mw-gray-700',
  outlined: 'border-2 border-mw-gray-300 dark:border-mw-gray-600 bg-white dark:bg-mw-gray-800'
};
function SearchBar(_ref) {
  var _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? 'Search...' : _ref$placeholder,
    controlledValue = _ref.value,
    onChange = _ref.onChange,
    onSearch = _ref.onSearch,
    onClear = _ref.onClear,
    _ref$suggestions = _ref.suggestions,
    suggestions = _ref$suggestions === void 0 ? [] : _ref$suggestions,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'default' : _ref$variant,
    _ref$showClearButton = _ref.showClearButton,
    showClearButton = _ref$showClearButton === void 0 ? true : _ref$showClearButton,
    _ref$debounceMs = _ref.debounceMs,
    debounceMs = _ref$debounceMs === void 0 ? 300 : _ref$debounceMs,
    className = _ref.className,
    _ref$autoFocus = _ref.autoFocus,
    autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus,
    _ref$maxSuggestions = _ref.maxSuggestions,
    maxSuggestions = _ref$maxSuggestions === void 0 ? 5 : _ref$maxSuggestions;
  var _useState = useState(''),
    _useState2 = _slicedToArray(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    showSuggestions = _useState4[0],
    setShowSuggestions = _useState4[1];
  var _useState5 = useState(-1),
    _useState6 = _slicedToArray(_useState5, 2),
    activeSuggestionIndex = _useState6[0],
    setActiveSuggestionIndex = _useState6[1];
  var inputRef = useRef(null);
  var suggestionRefs = useRef([]);
  var debounceRef = useRef();
  var value = controlledValue !== undefined ? controlledValue : internalValue;
  var filteredSuggestions = suggestions.filter(function (suggestion) {
    return suggestion.toLowerCase().includes(value.toLowerCase()) && suggestion.toLowerCase() !== value.toLowerCase();
  }).slice(0, maxSuggestions);
  useEffect(function () {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  var handleValueChange = useCallback(function (newValue) {
    if (controlledValue === undefined) {
      setInternalValue(newValue);
    }
    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
    // Debounced search
    if (debounceRef.current) {
      clearTimeout(debounceRef.current);
    }
    debounceRef.current = setTimeout(function () {
      onSearch === null || onSearch === void 0 ? void 0 : onSearch(newValue);
    }, debounceMs);
    // Show suggestions if there's a value
    setShowSuggestions(newValue.length > 0 && filteredSuggestions.length > 0);
    setActiveSuggestionIndex(-1);
  }, [controlledValue, onChange, onSearch, debounceMs, filteredSuggestions.length]);
  var handleInputChange = function handleInputChange(e) {
    handleValueChange(e.target.value);
  };
  var handleClear = function handleClear() {
    var _a;
    handleValueChange('');
    onClear === null || onClear === void 0 ? void 0 : onClear();
    setShowSuggestions(false);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
  };
  var handleSubmit = function handleSubmit(e) {
    e.preventDefault();
    onSearch === null || onSearch === void 0 ? void 0 : onSearch(value);
    setShowSuggestions(false);
  };
  var handleSuggestionClick = function handleSuggestionClick(suggestion) {
    handleValueChange(suggestion);
    setShowSuggestions(false);
    onSearch === null || onSearch === void 0 ? void 0 : onSearch(suggestion);
  };
  var handleKeyDown = function handleKeyDown(e) {
    if (!showSuggestions) return;
    switch (e.key) {
      case 'ArrowDown':
        e.preventDefault();
        setActiveSuggestionIndex(function (prev) {
          return prev < filteredSuggestions.length - 1 ? prev + 1 : prev;
        });
        break;
      case 'ArrowUp':
        e.preventDefault();
        setActiveSuggestionIndex(function (prev) {
          return prev > 0 ? prev - 1 : -1;
        });
        break;
      case 'Enter':
        if (activeSuggestionIndex >= 0) {
          e.preventDefault();
          handleSuggestionClick(filteredSuggestions[activeSuggestionIndex]);
        }
        break;
      case 'Escape':
        setShowSuggestions(false);
        setActiveSuggestionIndex(-1);
        break;
    }
  };
  useEffect(function () {
    var _a;
    if (activeSuggestionIndex >= 0 && suggestionRefs.current[activeSuggestionIndex]) {
      (_a = suggestionRefs.current[activeSuggestionIndex]) === null || _a === void 0 ? void 0 : _a.scrollIntoView({
        block: 'nearest'
      });
    }
  }, [activeSuggestionIndex]);
  return jsxs("div", {
    className: cn$h('relative', className),
    children: [jsx("form", {
      onSubmit: handleSubmit,
      className: "relative",
      children: jsxs("div", {
        className: "relative",
        children: [jsx("div", {
          className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",
          children: loading ? jsx(LoaderCircle, {
            className: "w-4 h-4 text-mw-gray-400 animate-spin"
          }) : jsx(Search, {
            className: "w-4 h-4 text-mw-gray-400"
          })
        }), jsx("input", {
          ref: inputRef,
          type: "text",
          value: value,
          onChange: handleInputChange,
          onKeyDown: handleKeyDown,
          onFocus: function onFocus() {
            if (value.length > 0 && filteredSuggestions.length > 0) {
              setShowSuggestions(true);
            }
          },
          onBlur: function onBlur() {
            // Delay hiding suggestions to allow clicks
            setTimeout(function () {
              return setShowSuggestions(false);
            }, 200);
          },
          placeholder: placeholder,
          disabled: disabled,
          className: cn$h('block w-full pl-10 pr-10 rounded-md border focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed', searchSizes[size], searchVariants[variant], 'text-mw-gray-900 dark:text-white placeholder-mw-gray-500 dark:placeholder-mw-gray-400')
        }), showClearButton && value && jsx("div", {
          className: "absolute inset-y-0 right-0 pr-3 flex items-center",
          children: jsx("button", {
            type: "button",
            onClick: handleClear,
            className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
            children: jsx(X, {
              className: "w-4 h-4"
            })
          })
        })]
      })
    }), showSuggestions && filteredSuggestions.length > 0 && jsx("div", {
      className: "absolute z-50 w-full mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-md shadow-lg max-h-60 overflow-auto",
      children: jsx("ul", {
        className: "py-1",
        children: filteredSuggestions.map(function (suggestion, index) {
          return jsx("li", {
            ref: function ref(el) {
              suggestionRefs.current[index] = el;
            },
            className: cn$h('px-3 py-2 text-sm cursor-pointer', index === activeSuggestionIndex ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'text-mw-gray-900 dark:text-white hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
            onClick: function onClick() {
              return handleSuggestionClick(suggestion);
            },
            children: jsxs("div", {
              className: "flex items-center",
              children: [jsx(Search, {
                className: "w-3 h-3 mr-2 text-mw-gray-400"
              }), suggestion]
            })
          }, suggestion);
        })
      })
    })]
  });
}
function SearchResults(_ref2) {
  var results = _ref2.results,
    _ref2$loading = _ref2.loading,
    loading = _ref2$loading === void 0 ? false : _ref2$loading,
    onResultClick = _ref2.onResultClick,
    className = _ref2.className;
  if (loading) {
    return jsx("div", {
      className: cn$h('flex items-center justify-center p-8', className),
      children: jsxs("div", {
        className: "text-center",
        children: [jsx(LoaderCircle, {
          className: "w-8 h-8 mx-auto mb-4 text-mw-gray-400 animate-spin"
        }), jsx("p", {
          className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: "Searching..."
        })]
      })
    });
  }
  if (results.length === 0) {
    return jsxs("div", {
      className: cn$h('text-center p-8', className),
      children: [jsx(Search, {
        className: "w-8 h-8 mx-auto mb-4 text-mw-gray-400"
      }), jsx("p", {
        className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
        children: "No results found"
      })]
    });
  }
  return jsx("div", {
    className: cn$h('space-y-4', className),
    children: results.map(function (result) {
      return jsxs("div", {
        className: "p-4 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800/50 cursor-pointer transition-colors",
        onClick: function onClick() {
          var _a;
          (_a = result.onClick) === null || _a === void 0 ? void 0 : _a.call(result);
          onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(result);
        },
        children: [result.category && jsx("p", {
          className: "text-xs text-mw-blue-600 dark:text-mw-blue-400 font-medium mb-1",
          children: result.category
        }), jsx("h3", {
          className: "text-sm font-medium text-mw-gray-900 dark:text-white mb-1",
          children: result.title
        }), result.description && jsx("p", {
          className: "text-xs text-mw-gray-600 dark:text-mw-gray-300",
          children: result.description
        })]
      }, result.id);
    })
  });
}

function cn$g() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var autocompleteSizes = {
  sm: 'min-h-8 text-sm',
  md: 'min-h-10 text-base',
  lg: 'min-h-12 text-lg'
};
function defaultFilterOptions(options, query) {
  var lowercaseQuery = query.toLowerCase();
  return options.filter(function (option) {
    var _a;
    return option.label.toLowerCase().includes(lowercaseQuery) || option.value.toLowerCase().includes(lowercaseQuery) || ((_a = option.description) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(lowercaseQuery));
  });
}
function groupOptions(options) {
  return options.reduce(function (groups, option) {
    var group = option.group || 'ungrouped';
    if (!groups[group]) {
      groups[group] = [];
    }
    groups[group].push(option);
    return groups;
  }, {});
}
function Autocomplete(_ref) {
  var options = _ref.options,
    controlledValue = _ref.value,
    onChange = _ref.onChange,
    onSearch = _ref.onSearch,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? 'Search or select...' : _ref$placeholder,
    _ref$multiple = _ref.multiple,
    multiple = _ref$multiple === void 0 ? false : _ref$multiple,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    label = _ref.label,
    error = _ref.error,
    helpText = _ref.helpText,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$clearable = _ref.clearable,
    clearable = _ref$clearable === void 0 ? true : _ref$clearable,
    _ref$creatable = _ref.creatable,
    creatable = _ref$creatable === void 0 ? false : _ref$creatable,
    onCreate = _ref.onCreate,
    maxSelections = _ref.maxSelections,
    className = _ref.className,
    _ref$noOptionsText = _ref.noOptionsText,
    noOptionsText = _ref$noOptionsText === void 0 ? 'No options found' : _ref$noOptionsText,
    _ref$filterOptions = _ref.filterOptions,
    filterOptions = _ref$filterOptions === void 0 ? defaultFilterOptions : _ref$filterOptions;
  var _a;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var _useState3 = useState(''),
    _useState4 = _slicedToArray(_useState3, 2),
    query = _useState4[0],
    setQuery = _useState4[1];
  var _useState5 = useState(-1),
    _useState6 = _slicedToArray(_useState5, 2),
    highlightedIndex = _useState6[0],
    setHighlightedIndex = _useState6[1];
  var _useState7 = useState(multiple ? [] : ''),
    _useState8 = _slicedToArray(_useState7, 2),
    internalValue = _useState8[0],
    setInternalValue = _useState8[1];
  var inputRef = useRef(null);
  var listRef = useRef(null);
  var containerRef = useRef(null);
  var value = controlledValue !== undefined ? controlledValue : internalValue;
  var selectedValues = Array.isArray(value) ? value : value ? [value] : [];
  var filteredOptions = query ? filterOptions(options, query) : options;
  var availableOptions = multiple ? filteredOptions.filter(function (option) {
    return !selectedValues.includes(option.value);
  }) : filteredOptions;
  // Handle creating new options
  var canCreate = creatable && query && !filteredOptions.some(function (option) {
    return option.label.toLowerCase() === query.toLowerCase() || option.value.toLowerCase() === query.toLowerCase();
  });
  var allOptions = canCreate ? [{
    value: query,
    label: "Create \"".concat(query, "\""),
    isCreate: true
  }].concat(_toConsumableArray(availableOptions)) : availableOptions;
  var groupedOptions = groupOptions(allOptions);
  useEffect(function () {
    function handleClickOutside(event) {
      if (containerRef.current && !containerRef.current.contains(event.target)) {
        setIsOpen(false);
        setQuery('');
        setHighlightedIndex(-1);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var handleValueChange = useCallback(function (newValue) {
    if (controlledValue === undefined) {
      setInternalValue(newValue);
    }
    onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  }, [controlledValue, onChange]);
  var handleSelectOption = function handleSelectOption(option) {
    var _a;
    if ('isCreate' in option && option.isCreate) {
      onCreate === null || onCreate === void 0 ? void 0 : onCreate(option.value);
      if (multiple) {
        handleValueChange([].concat(_toConsumableArray(selectedValues), [option.value]));
      } else {
        handleValueChange(option.value);
        setIsOpen(false);
      }
      setQuery('');
      return;
    }
    var normalOption = option;
    if (normalOption.disabled) return;
    if (multiple) {
      var currentValues = Array.isArray(value) ? value : [];
      if (currentValues.includes(option.value)) {
        handleValueChange(currentValues.filter(function (v) {
          return v !== option.value;
        }));
      } else {
        if (maxSelections && currentValues.length >= maxSelections) return;
        handleValueChange([].concat(_toConsumableArray(currentValues), [option.value]));
      }
    } else {
      handleValueChange(option.value);
      setIsOpen(false);
      setQuery('');
    }
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    setHighlightedIndex(-1);
  };
  var handleRemoveValue = function handleRemoveValue(valueToRemove) {
    if (multiple) {
      var currentValues = Array.isArray(value) ? value : [];
      handleValueChange(currentValues.filter(function (v) {
        return v !== valueToRemove;
      }));
    } else {
      handleValueChange('');
    }
  };
  var handleClear = function handleClear() {
    var _a;
    handleValueChange(multiple ? [] : '');
    setQuery('');
    setIsOpen(false);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
  };
  var handleInputChange = function handleInputChange(e) {
    var newQuery = e.target.value;
    setQuery(newQuery);
    setIsOpen(true);
    setHighlightedIndex(-1);
    onSearch === null || onSearch === void 0 ? void 0 : onSearch(newQuery);
  };
  var handleKeyDown = function handleKeyDown(e) {
    if (!isOpen && (e.key === 'ArrowDown' || e.key === 'Enter')) {
      setIsOpen(true);
      return;
    }
    if (isOpen) {
      switch (e.key) {
        case 'ArrowDown':
          e.preventDefault();
          setHighlightedIndex(function (prev) {
            return prev < allOptions.length - 1 ? prev + 1 : prev;
          });
          break;
        case 'ArrowUp':
          e.preventDefault();
          setHighlightedIndex(function (prev) {
            return prev > 0 ? prev - 1 : -1;
          });
          break;
        case 'Enter':
          e.preventDefault();
          if (highlightedIndex >= 0 && allOptions[highlightedIndex]) {
            handleSelectOption(allOptions[highlightedIndex]);
          }
          break;
        case 'Escape':
          setIsOpen(false);
          setQuery('');
          setHighlightedIndex(-1);
          break;
        case 'Backspace':
          if (!query && multiple && selectedValues.length > 0) {
            handleRemoveValue(selectedValues[selectedValues.length - 1]);
          }
          break;
      }
    }
  };
  var getSelectedOption = function getSelectedOption(val) {
    return options.find(function (option) {
      return option.value === val;
    });
  };
  var displayValue = multiple ? '' : selectedValues.length > 0 ? ((_a = getSelectedOption(selectedValues[0])) === null || _a === void 0 ? void 0 : _a.label) || selectedValues[0] : query;
  return jsxs("div", {
    className: className,
    children: [label && jsx("label", {
      className: "block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-1",
      children: label
    }), jsxs("div", {
      className: "relative",
      ref: containerRef,
      children: [jsx("div", {
        className: cn$g('relative w-full border rounded-md bg-white dark:bg-mw-gray-800 focus-within:ring-2 focus-within:ring-mw-blue-500 focus-within:border-transparent', autocompleteSizes[size], error ? 'border-red-300 dark:border-red-600' : 'border-mw-gray-300 dark:border-mw-gray-600', disabled && 'opacity-50 cursor-not-allowed'),
        children: jsxs("div", {
          className: "flex items-center flex-wrap gap-1 px-3 py-2",
          children: [multiple && selectedValues.map(function (val) {
            var option = getSelectedOption(val);
            return jsxs("span", {
              className: "inline-flex items-center gap-1 px-2 py-1 bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300 text-xs rounded",
              children: [(option === null || option === void 0 ? void 0 : option.label) || val, jsx("button", {
                type: "button",
                onClick: function onClick() {
                  return handleRemoveValue(val);
                },
                className: "text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-800 dark:hover:text-mw-blue-200",
                children: jsx(X, {
                  className: "w-3 h-3"
                })
              })]
            }, val);
          }), jsx("input", {
            ref: inputRef,
            type: "text",
            value: multiple ? query : displayValue,
            onChange: handleInputChange,
            onKeyDown: handleKeyDown,
            onFocus: function onFocus() {
              return setIsOpen(true);
            },
            placeholder: selectedValues.length > 0 ? '' : placeholder,
            disabled: disabled,
            className: "flex-1 min-w-0 bg-transparent border-none outline-none text-mw-gray-900 dark:text-white placeholder-mw-gray-500 dark:placeholder-mw-gray-400"
          }), jsxs("div", {
            className: "flex items-center gap-1",
            children: [loading && jsx("div", {
              className: "animate-spin rounded-full h-4 w-4 border-2 border-mw-gray-300 border-t-mw-blue-600"
            }), clearable && (selectedValues.length > 0 || query) && jsx("button", {
              type: "button",
              onClick: handleClear,
              className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
              children: jsx(X, {
                className: "w-4 h-4"
              })
            }), jsx("button", {
              type: "button",
              onClick: function onClick() {
                return setIsOpen(!isOpen);
              },
              className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
              children: jsx(ChevronDown, {
                className: cn$g('w-4 h-4 transition-transform', isOpen && 'rotate-180')
              })
            })]
          })]
        })
      }), isOpen && jsx("div", {
        className: "absolute z-50 w-full mt-1 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-md shadow-lg max-h-60 overflow-auto",
        children: allOptions.length === 0 ? jsx("div", {
          className: "px-3 py-2 text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: noOptionsText
        }) : jsx("ul", {
          ref: listRef,
          className: "py-1",
          children: Object.entries(groupedOptions).map(function (_ref2) {
            var _ref3 = _slicedToArray(_ref2, 2),
              groupName = _ref3[0],
              groupOptions = _ref3[1];
            return jsxs(React.Fragment, {
              children: [groupName !== 'ungrouped' && jsx("li", {
                className: "px-3 py-1 text-xs font-semibold text-mw-gray-500 dark:text-mw-gray-400 uppercase tracking-wide",
                children: groupName
              }), groupOptions.map(function (option, index) {
                var globalIndex = allOptions.findIndex(function (opt) {
                  return opt.value === option.value;
                });
                var isSelected = selectedValues.includes(option.value);
                var isHighlighted = globalIndex === highlightedIndex;
                var normalOption = option;
                var isCreate = 'isCreate' in option && option.isCreate;
                return jsxs("li", {
                  className: cn$g('px-3 py-2 text-sm cursor-pointer flex items-center justify-between', isHighlighted && 'bg-mw-blue-100 dark:bg-mw-blue-900/20', normalOption.disabled && 'opacity-50 cursor-not-allowed', isCreate && 'font-medium text-mw-blue-600 dark:text-mw-blue-400'),
                  onClick: function onClick() {
                    return !normalOption.disabled && handleSelectOption(option);
                  },
                  children: [jsxs("div", {
                    className: "flex-1 min-w-0",
                    children: [jsx("div", {
                      className: "font-medium text-mw-gray-900 dark:text-white",
                      children: option.label
                    }), option.description && jsx("div", {
                      className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
                      children: option.description
                    })]
                  }), isSelected && jsx(Check, {
                    className: "w-4 h-4 text-mw-blue-600 dark:text-mw-blue-400"
                  })]
                }, option.value);
              })]
            }, groupName);
          })
        })
      })]
    }), helpText && !error && jsx("p", {
      className: "mt-1 text-xs text-mw-gray-500 dark:text-mw-gray-400",
      children: helpText
    }), error && jsxs("p", {
      className: "mt-1 text-xs text-red-600 dark:text-red-400 flex items-center gap-1",
      children: [jsx("svg", {
        className: "w-3 h-3",
        fill: "currentColor",
        viewBox: "0 0 20 20",
        children: jsx("path", {
          fillRule: "evenodd",
          d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
          clipRule: "evenodd"
        })
      }), error]
    })]
  });
}

function cn$f() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var defaultOperators = {
  text: ['equals', 'not_equals', 'contains', 'not_contains', 'starts_with', 'ends_with', 'is_empty', 'is_not_empty'],
  number: ['equals', 'not_equals', 'greater_than', 'less_than', 'greater_equal', 'less_equal', 'between', 'is_empty', 'is_not_empty'],
  select: ['equals', 'not_equals', 'in', 'not_in'],
  multiselect: ['in', 'not_in'],
  date: ['equals', 'not_equals', 'greater_than', 'less_than', 'between'],
  daterange: ['between'],
  "boolean": ['equals'],
  custom: ['equals', 'not_equals']
};
var operatorLabels = {
  equals: 'equals',
  not_equals: 'does not equal',
  contains: 'contains',
  not_contains: 'does not contain',
  starts_with: 'starts with',
  ends_with: 'ends with',
  greater_than: 'greater than',
  less_than: 'less than',
  greater_equal: 'greater than or equal',
  less_equal: 'less than or equal',
  between: 'between',
  "in": 'in',
  not_in: 'not in',
  is_empty: 'is empty',
  is_not_empty: 'is not empty'
};
function generateId() {
  return Math.random().toString(36).substr(2, 9);
}
function FilterRuleComponent(_ref) {
  var rule = _ref.rule,
    fields = _ref.fields,
    onChange = _ref.onChange,
    onRemove = _ref.onRemove,
    _ref$showRemove = _ref.showRemove,
    showRemove = _ref$showRemove === void 0 ? true : _ref$showRemove;
  var field = fields.find(function (f) {
    return f.key === rule.field;
  });
  var availableOperators = (field === null || field === void 0 ? void 0 : field.operators) || defaultOperators[rule.type] || [];
  var handleFieldChange = function handleFieldChange(fieldKey) {
    var newField = fields.find(function (f) {
      return f.key === fieldKey;
    });
    if (newField) {
      var newRule = Object.assign(Object.assign({}, rule), {
        field: fieldKey,
        type: newField.type,
        operator: (newField.operators || defaultOperators[newField.type])[0],
        value: newField.type === 'boolean' ? false : ''
      });
      onChange(newRule);
    }
  };
  var handleOperatorChange = function handleOperatorChange(operator) {
    onChange(Object.assign(Object.assign({}, rule), {
      operator: operator,
      value: operator === 'is_empty' || operator === 'is_not_empty' ? null : rule.value
    }));
  };
  var handleValueChange = function handleValueChange(value) {
    onChange(Object.assign(Object.assign({}, rule), {
      value: value
    }));
  };
  var renderValueInput = function renderValueInput() {
    var _a, _b, _c, _d, _e;
    if (rule.operator === 'is_empty' || rule.operator === 'is_not_empty') {
      return null;
    }
    switch (rule.type) {
      case 'text':
        return jsx("input", {
          type: "text",
          value: rule.value || '',
          onChange: function onChange(e) {
            return handleValueChange(e.target.value);
          },
          placeholder: (field === null || field === void 0 ? void 0 : field.placeholder) || 'Enter value...',
          className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white placeholder-mw-gray-500 dark:placeholder-mw-gray-400 focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
        });
      case 'number':
        if (rule.operator === 'between') {
          return jsxs("div", {
            className: "flex gap-2 flex-1",
            children: [jsx("input", {
              type: "number",
              value: ((_a = rule.value) === null || _a === void 0 ? void 0 : _a.from) || '',
              onChange: function onChange(e) {
                return handleValueChange(Object.assign(Object.assign({}, rule.value), {
                  from: e.target.value
                }));
              },
              placeholder: "Min",
              className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
            }), jsx("input", {
              type: "number",
              value: ((_b = rule.value) === null || _b === void 0 ? void 0 : _b.to) || '',
              onChange: function onChange(e) {
                return handleValueChange(Object.assign(Object.assign({}, rule.value), {
                  to: e.target.value
                }));
              },
              placeholder: "Max",
              className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
            })]
          });
        }
        return jsx("input", {
          type: "number",
          value: rule.value || '',
          onChange: function onChange(e) {
            return handleValueChange(e.target.value);
          },
          placeholder: "Enter number...",
          className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
        });
      case 'select':
      case 'multiselect':
        return jsxs("select", {
          value: rule.value || '',
          onChange: function onChange(e) {
            return handleValueChange(e.target.value);
          },
          className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500",
          children: [jsx("option", {
            value: "",
            children: "Select option..."
          }), (_c = field === null || field === void 0 ? void 0 : field.options) === null || _c === void 0 ? void 0 : _c.map(function (option) {
            return jsx("option", {
              value: option.value,
              children: option.label
            }, option.value);
          })]
        });
      case 'date':
        return jsx("input", {
          type: "date",
          value: rule.value || '',
          onChange: function onChange(e) {
            return handleValueChange(e.target.value);
          },
          className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
        });
      case 'daterange':
        return jsxs("div", {
          className: "flex gap-2 flex-1",
          children: [jsx("input", {
            type: "date",
            value: ((_d = rule.value) === null || _d === void 0 ? void 0 : _d.from) || '',
            onChange: function onChange(e) {
              return handleValueChange(Object.assign(Object.assign({}, rule.value), {
                from: e.target.value
              }));
            },
            className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
          }), jsx("input", {
            type: "date",
            value: ((_e = rule.value) === null || _e === void 0 ? void 0 : _e.to) || '',
            onChange: function onChange(e) {
              return handleValueChange(Object.assign(Object.assign({}, rule.value), {
                to: e.target.value
              }));
            },
            className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
          })]
        });
      case 'boolean':
        return jsx("button", {
          type: "button",
          onClick: function onClick() {
            return handleValueChange(!rule.value);
          },
          className: "flex items-center gap-2 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700",
          children: rule.value ? jsxs(Fragment, {
            children: [jsx(ToggleRight, {
              className: "w-4 h-4 text-mw-green-500"
            }), jsx("span", {
              children: "True"
            })]
          }) : jsxs(Fragment, {
            children: [jsx(ToggleLeft, {
              className: "w-4 h-4 text-mw-gray-400"
            }), jsx("span", {
              children: "False"
            })]
          })
        });
      default:
        return jsx("input", {
          type: "text",
          value: rule.value || '',
          onChange: function onChange(e) {
            return handleValueChange(e.target.value);
          },
          placeholder: "Enter value...",
          className: "flex-1 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500"
        });
    }
  };
  return jsxs("div", {
    className: "flex items-center gap-2 p-3 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg bg-mw-gray-50 dark:bg-mw-gray-800/50",
    children: [jsxs("select", {
      value: rule.field,
      onChange: function onChange(e) {
        return handleFieldChange(e.target.value);
      },
      className: "px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500",
      children: [jsx("option", {
        value: "",
        children: "Select field..."
      }), fields.map(function (field) {
        return jsx("option", {
          value: field.key,
          children: field.label
        }, field.key);
      })]
    }), jsx("select", {
      value: rule.operator,
      onChange: function onChange(e) {
        return handleOperatorChange(e.target.value);
      },
      className: "px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-mw-blue-500",
      disabled: !rule.field,
      children: availableOperators.map(function (op) {
        return jsx("option", {
          value: op,
          children: operatorLabels[op]
        }, op);
      })
    }), renderValueInput(), showRemove && jsx("button", {
      type: "button",
      onClick: onRemove,
      className: "p-2 text-mw-gray-400 hover:text-mw-red-500 hover:bg-mw-red-50 dark:hover:bg-mw-red-900/20 rounded-md transition-colors",
      title: "Remove filter",
      children: jsx(X, {
        className: "w-4 h-4"
      })
    })]
  });
}
function Filter(_ref2) {
  var fields = _ref2.fields,
    _ref2$value = _ref2.value,
    value = _ref2$value === void 0 ? [] : _ref2$value,
    onChange = _ref2.onChange,
    _ref2$placeholder = _ref2.placeholder,
    placeholder = _ref2$placeholder === void 0 ? 'Add filters' : _ref2$placeholder,
    _ref2$showCount = _ref2.showCount,
    showCount = _ref2$showCount === void 0 ? true : _ref2$showCount,
    _ref2$allowMultiple = _ref2.allowMultiple,
    allowMultiple = _ref2$allowMultiple === void 0 ? true : _ref2$allowMultiple,
    presets = _ref2.presets,
    className = _ref2.className,
    onApply = _ref2.onApply,
    onClear = _ref2.onClear;
  var _useState = useState(value),
    _useState2 = _slicedToArray(_useState, 2),
    filters = _useState2[0],
    setFilters = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isOpen = _useState4[0],
    setIsOpen = _useState4[1];
  var containerRef = useRef(null);
  useEffect(function () {
    setFilters(value);
  }, [value]);
  useEffect(function () {
    function handleClickOutside(event) {
      if (containerRef.current && !containerRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    }
    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      return document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  var handleFiltersChange = function handleFiltersChange(newFilters) {
    setFilters(newFilters);
    onChange === null || onChange === void 0 ? void 0 : onChange(newFilters);
  };
  var addFilter = function addFilter() {
    var newFilter = {
      id: generateId(),
      field: '',
      operator: 'equals',
      value: '',
      type: 'text'
    };
    var newFilters = allowMultiple ? [].concat(_toConsumableArray(filters), [newFilter]) : [newFilter];
    handleFiltersChange(newFilters);
  };
  var updateFilter = function updateFilter(index, updatedFilter) {
    var newFilters = _toConsumableArray(filters);
    newFilters[index] = updatedFilter;
    handleFiltersChange(newFilters);
  };
  var removeFilter = function removeFilter(index) {
    var newFilters = filters.filter(function (_, i) {
      return i !== index;
    });
    handleFiltersChange(newFilters);
  };
  var clearAllFilters = function clearAllFilters() {
    handleFiltersChange([]);
    onClear === null || onClear === void 0 ? void 0 : onClear();
  };
  var applyFilters = function applyFilters() {
    onApply === null || onApply === void 0 ? void 0 : onApply(filters);
    setIsOpen(false);
  };
  var activeFiltersCount = filters.filter(function (f) {
    return f.field && f.operator;
  }).length;
  var displayText = useMemo(function () {
    if (activeFiltersCount === 0) return placeholder;
    if (showCount) return "".concat(activeFiltersCount, " filter").concat(activeFiltersCount !== 1 ? 's' : '', " applied");
    // Show first filter summary
    var firstFilter = filters.find(function (f) {
      return f.field && f.operator;
    });
    if (firstFilter) {
      var field = fields.find(function (f) {
        return f.key === firstFilter.field;
      });
      return "".concat((field === null || field === void 0 ? void 0 : field.label) || firstFilter.field, " ").concat(operatorLabels[firstFilter.operator]).concat(activeFiltersCount > 1 ? " (+".concat(activeFiltersCount - 1, ")") : '');
    }
    return placeholder;
  }, [activeFiltersCount, filters, fields, placeholder, showCount]);
  return jsxs("div", {
    ref: containerRef,
    className: cn$f('relative', className),
    children: [jsxs("button", {
      type: "button",
      onClick: function onClick() {
        return setIsOpen(!isOpen);
      },
      className: cn$f('flex items-center gap-2 px-3 py-2 border border-mw-gray-300 dark:border-mw-gray-600 rounded-md', 'bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white', 'hover:border-mw-gray-400 dark:hover:border-mw-gray-500', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:border-transparent', activeFiltersCount > 0 && 'ring-2 ring-mw-blue-500 border-mw-blue-500'),
      children: [jsx(Filter$1, {
        className: "w-4 h-4"
      }), jsx("span", {
        className: "flex-1 text-left truncate",
        children: displayText
      }), activeFiltersCount > 0 && jsx("span", {
        className: "bg-mw-blue-500 text-white text-xs px-2 py-1 rounded-full",
        children: activeFiltersCount
      }), jsx(ChevronDown, {
        className: "w-4 h-4 text-mw-gray-400"
      })]
    }), isOpen && jsx("div", {
      className: "absolute z-50 mt-1 w-96 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg shadow-lg",
      children: jsxs("div", {
        className: "p-4",
        children: [jsxs("div", {
          className: "flex items-center justify-between mb-4",
          children: [jsx("h3", {
            className: "text-sm font-medium text-mw-gray-900 dark:text-white",
            children: "Filters"
          }), filters.length > 0 && jsx("button", {
            onClick: clearAllFilters,
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 hover:text-mw-red-500 dark:hover:text-mw-red-400",
            children: "Clear all"
          })]
        }), presets && presets.length > 0 && jsxs("div", {
          className: "mb-4",
          children: [jsx("h4", {
            className: "text-xs font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-2",
            children: "Quick Filters"
          }), jsx("div", {
            className: "flex flex-wrap gap-2",
            children: presets.map(function (preset, index) {
              return jsx("button", {
                onClick: function onClick() {
                  return handleFiltersChange(preset.filters);
                },
                className: "px-2 py-1 text-xs bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-700 dark:text-mw-gray-300 rounded hover:bg-mw-gray-200 dark:hover:bg-mw-gray-600",
                children: preset.label
              }, index);
            })
          })]
        }), jsxs("div", {
          className: "space-y-3",
          children: [filters.map(function (filter, index) {
            return jsx(FilterRuleComponent, {
              rule: filter,
              fields: fields,
              onChange: function onChange(updatedFilter) {
                return updateFilter(index, updatedFilter);
              },
              onRemove: function onRemove() {
                return removeFilter(index);
              },
              showRemove: filters.length > 1 || filters.length === 1
            }, filter.id);
          }), (allowMultiple || filters.length === 0) && jsxs("button", {
            onClick: addFilter,
            className: "flex items-center gap-2 w-full p-3 border-2 border-dashed border-mw-gray-300 dark:border-mw-gray-600 rounded-lg text-mw-gray-500 dark:text-mw-gray-400 hover:border-mw-gray-400 dark:hover:border-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300 transition-colors",
            children: [jsx(Plus, {
              className: "w-4 h-4"
            }), jsx("span", {
              className: "text-sm",
              children: "Add filter"
            })]
          })]
        }), jsxs("div", {
          className: "flex items-center justify-between pt-4 mt-4 border-t border-mw-gray-200 dark:border-mw-gray-700",
          children: [jsxs("div", {
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
            children: [activeFiltersCount, " of ", filters.length, " filters configured"]
          }), jsxs("div", {
            className: "flex gap-2",
            children: [jsx("button", {
              onClick: function onClick() {
                return setIsOpen(false);
              },
              className: "px-3 py-1 text-sm text-mw-gray-600 dark:text-mw-gray-400 hover:text-mw-gray-900 dark:hover:text-white",
              children: "Cancel"
            }), jsx("button", {
              onClick: applyFilters,
              className: "px-3 py-1 text-sm bg-mw-blue-500 text-white rounded hover:bg-mw-blue-600",
              children: "Apply"
            })]
          })]
        })]
      })
    })]
  });
}

function cn$e() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function ToolbarButton(_ref) {
  var onClick = _ref.onClick,
    active = _ref.active,
    disabled = _ref.disabled,
    children = _ref.children,
    title = _ref.title;
  return jsx("button", {
    type: "button",
    onClick: onClick,
    disabled: disabled,
    title: title,
    className: cn$e('p-2 rounded-md text-sm font-medium transition-colors', 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500', active && 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300', disabled && 'opacity-50 cursor-not-allowed', !active && 'text-mw-gray-600 dark:text-mw-gray-300'),
    children: children
  });
}
function RichTextEditor(_ref2) {
  var _ref2$value = _ref2.value,
    value = _ref2$value === void 0 ? '' : _ref2$value,
    onChange = _ref2.onChange,
    _ref2$placeholder = _ref2.placeholder,
    placeholder = _ref2$placeholder === void 0 ? 'Start writing...' : _ref2$placeholder,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    _ref2$readOnly = _ref2.readOnly,
    readOnly = _ref2$readOnly === void 0 ? false : _ref2$readOnly,
    _ref2$minHeight = _ref2.minHeight,
    minHeight = _ref2$minHeight === void 0 ? 200 : _ref2$minHeight,
    _ref2$maxHeight = _ref2.maxHeight,
    maxHeight = _ref2$maxHeight === void 0 ? 500 : _ref2$maxHeight,
    _ref2$showToolbar = _ref2.showToolbar,
    showToolbar = _ref2$showToolbar === void 0 ? true : _ref2$showToolbar,
    _ref2$toolbarPosition = _ref2.toolbarPosition,
    toolbarPosition = _ref2$toolbarPosition === void 0 ? 'top' : _ref2$toolbarPosition,
    _ref2$enablePreview = _ref2.enablePreview,
    enablePreview = _ref2$enablePreview === void 0 ? false : _ref2$enablePreview,
    className = _ref2.className,
    onFocus = _ref2.onFocus,
    onBlur = _ref2.onBlur;
  var _useState = useState(value),
    _useState2 = _slicedToArray(_useState, 2),
    content = _useState2[0],
    setContent = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isPreview = _useState4[0],
    setIsPreview = _useState4[1];
  var _useState5 = useState(null),
    _useState6 = _slicedToArray(_useState5, 2);
    _useState6[0];
    _useState6[1];
  var editorRef = useRef(null);
  var textareaRef = useRef(null);
  useEffect(function () {
    setContent(value);
  }, [value]);
  var handleContentChange = useCallback(function (newContent) {
    setContent(newContent);
    onChange === null || onChange === void 0 ? void 0 : onChange(newContent);
  }, [onChange]);
  useCallback(function (command, value) {
    if (disabled || readOnly) return;
    document.execCommand(command, false, value);
    if (editorRef.current) {
      editorRef.current.focus();
      var newContent = editorRef.current.innerHTML;
      handleContentChange(newContent);
    }
  }, [disabled, readOnly, handleContentChange]);
  var insertText = useCallback(function (before) {
    var after = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    if (!textareaRef.current || disabled || readOnly) return;
    var textarea = textareaRef.current;
    var start = textarea.selectionStart;
    var end = textarea.selectionEnd;
    var selectedText = content.substring(start, end);
    var newText = before + selectedText + after;
    var newContent = content.substring(0, start) + newText + content.substring(end);
    handleContentChange(newContent);
    // Set new cursor position
    setTimeout(function () {
      textarea.focus();
      textarea.setSelectionRange(start + before.length, start + before.length + selectedText.length);
    }, 0);
  }, [content, disabled, readOnly, handleContentChange]);
  var formatCommands = {
    bold: function bold() {
      return insertText('**', '**');
    },
    italic: function italic() {
      return insertText('*', '*');
    },
    underline: function underline() {
      return insertText('_', '_');
    },
    strikethrough: function strikethrough() {
      return insertText('~~', '~~');
    },
    code: function code() {
      return insertText('`', '`');
    },
    link: function link() {
      var url = prompt('Enter URL:');
      if (url) insertText('[', "](".concat(url, ")"));
    },
    image: function image() {
      var url = prompt('Enter image URL:');
      if (url) insertText('![', "](".concat(url, ")"));
    },
    quote: function quote() {
      return insertText('> ');
    },
    bulletList: function bulletList() {
      return insertText('- ');
    },
    numberedList: function numberedList() {
      return insertText('1. ');
    },
    heading1: function heading1() {
      return insertText('# ');
    }};
  var toolbar = showToolbar && jsxs("div", {
    className: "flex items-center gap-1 p-2 border-b border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800/50",
    children: [jsxs("div", {
      className: "flex items-center gap-1",
      children: [jsx(ToolbarButton, {
        onClick: formatCommands.bold,
        title: "Bold",
        children: jsx(Bold, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.italic,
        title: "Italic",
        children: jsx(Italic, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.underline,
        title: "Underline",
        children: jsx(Underline, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.strikethrough,
        title: "Strikethrough",
        children: jsx(Strikethrough, {
          className: "w-4 h-4"
        })
      })]
    }), jsx("div", {
      className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600 mx-1"
    }), jsxs("div", {
      className: "flex items-center gap-1",
      children: [jsx(ToolbarButton, {
        onClick: formatCommands.heading1,
        title: "Heading 1",
        children: jsx(Type, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.quote,
        title: "Quote",
        children: jsx(Quote, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.code,
        title: "Code",
        children: jsx(Code, {
          className: "w-4 h-4"
        })
      })]
    }), jsx("div", {
      className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600 mx-1"
    }), jsxs("div", {
      className: "flex items-center gap-1",
      children: [jsx(ToolbarButton, {
        onClick: formatCommands.bulletList,
        title: "Bullet List",
        children: jsx(List$1, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.numberedList,
        title: "Numbered List",
        children: jsx(ListOrdered, {
          className: "w-4 h-4"
        })
      })]
    }), jsx("div", {
      className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600 mx-1"
    }), jsxs("div", {
      className: "flex items-center gap-1",
      children: [jsx(ToolbarButton, {
        onClick: formatCommands.link,
        title: "Insert Link",
        children: jsx(Link$1, {
          className: "w-4 h-4"
        })
      }), jsx(ToolbarButton, {
        onClick: formatCommands.image,
        title: "Insert Image",
        children: jsx(Image, {
          className: "w-4 h-4"
        })
      })]
    }), enablePreview && jsxs(Fragment, {
      children: [jsx("div", {
        className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600 mx-1"
      }), jsx(ToolbarButton, {
        onClick: function onClick() {
          return setIsPreview(!isPreview);
        },
        active: isPreview,
        title: isPreview ? 'Edit' : 'Preview',
        children: isPreview ? jsx(PenLine, {
          className: "w-4 h-4"
        }) : jsx(Eye, {
          className: "w-4 h-4"
        })
      })]
    })]
  });
  var editor = jsx("div", {
    className: "relative flex-1",
    children: isPreview ? jsx("div", {
      className: "p-3 prose prose-sm max-w-none dark:prose-invert",
      style: {
        minHeight: minHeight,
        maxHeight: maxHeight
      },
      children: jsx("div", {
        dangerouslySetInnerHTML: {
          __html: content.replace(/\n/g, '<br>')
        }
      })
    }) : jsx("textarea", {
      ref: textareaRef,
      value: content,
      onChange: function onChange(e) {
        return handleContentChange(e.target.value);
      },
      placeholder: placeholder,
      disabled: disabled,
      readOnly: readOnly,
      onFocus: onFocus,
      onBlur: onBlur,
      className: cn$e('w-full p-3 border-0 resize-none focus:outline-none', 'bg-white dark:bg-mw-gray-900', 'text-mw-gray-900 dark:text-white', 'placeholder-mw-gray-500 dark:placeholder-mw-gray-400', disabled && 'opacity-50 cursor-not-allowed'),
      style: {
        minHeight: minHeight,
        maxHeight: maxHeight
      }
    })
  });
  return jsxs("div", {
    className: cn$e('border border-mw-gray-300 dark:border-mw-gray-600 rounded-lg overflow-hidden', 'bg-white dark:bg-mw-gray-900', 'focus-within:ring-2 focus-within:ring-mw-blue-500 focus-within:border-transparent', disabled && 'opacity-50', className),
    children: [toolbarPosition === 'top' && toolbar, editor, toolbarPosition === 'bottom' && toolbar]
  });
}

function cn$d() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function calculateStats(content) {
  var characters = content.length;
  var words = content.trim() ? content.trim().split(/\s+/).length : 0;
  var lines = content.split('\n').length;
  var pages = Math.ceil(words / 250) || 1; // Approximate 250 words per page
  return {
    characters: characters,
    words: words,
    lines: lines,
    pages: pages
  };
}
function DocumentEditor(_ref) {
  var _ref$value = _ref.value,
    value = _ref$value === void 0 ? '' : _ref$value,
    onChange = _ref.onChange,
    _ref$title = _ref.title,
    title = _ref$title === void 0 ? 'Untitled Document' : _ref$title,
    onTitleChange = _ref.onTitleChange,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? 'edit' : _ref$mode,
    _ref$showToolbar = _ref.showToolbar,
    showToolbar = _ref$showToolbar === void 0 ? true : _ref$showToolbar;
    _ref.showSidebar;
    var _ref$showStatusBar = _ref.showStatusBar,
    showStatusBar = _ref$showStatusBar === void 0 ? true : _ref$showStatusBar,
    _ref$autoSave = _ref.autoSave,
    autoSave = _ref$autoSave === void 0 ? false : _ref$autoSave,
    _ref$autoSaveInterval = _ref.autoSaveInterval,
    autoSaveInterval = _ref$autoSaveInterval === void 0 ? 30000 : _ref$autoSaveInterval,
    className = _ref.className,
    onSave = _ref.onSave,
    onExport = _ref.onExport,
    _ref$readOnly = _ref.readOnly,
    readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,
    _ref$collaborative = _ref.collaborative,
    collaborative = _ref$collaborative === void 0 ? false : _ref$collaborative,
    _ref$zoom = _ref.zoom,
    zoom = _ref$zoom === void 0 ? 100 : _ref$zoom,
    onZoomChange = _ref.onZoomChange;
  var _useState = useState(value),
    _useState2 = _slicedToArray(_useState, 2),
    content = _useState2[0],
    setContent = _useState2[1];
  var _useState3 = useState(title),
    _useState4 = _slicedToArray(_useState3, 2),
    documentTitle = _useState4[0],
    setDocumentTitle = _useState4[1];
  var _useState5 = useState(mode),
    _useState6 = _slicedToArray(_useState5, 2),
    currentMode = _useState6[0],
    setCurrentMode = _useState6[1];
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    isModified = _useState8[0],
    setIsModified = _useState8[1];
  var _useState9 = useState({
      show: false,
      find: '',
      replace: ''
    }),
    _useState0 = _slicedToArray(_useState9, 2);
    _useState0[0];
    _useState0[1];
  var _useState1 = useState(zoom),
    _useState10 = _slicedToArray(_useState1, 2),
    currentZoom = _useState10[0],
    setCurrentZoom = _useState10[1];
  var _useState11 = useState(calculateStats(value)),
    _useState12 = _slicedToArray(_useState11, 2),
    stats = _useState12[0],
    setStats = _useState12[1];
  var editorRef = useRef(null);
  var autoSaveRef = useRef();
  useEffect(function () {
    setContent(value);
    setStats(calculateStats(value));
  }, [value]);
  useEffect(function () {
    if (autoSave && isModified) {
      if (autoSaveRef.current) clearTimeout(autoSaveRef.current);
      autoSaveRef.current = setTimeout(function () {
        handleSave();
      }, autoSaveInterval);
    }
    return function () {
      if (autoSaveRef.current) clearTimeout(autoSaveRef.current);
    };
  }, [content, isModified, autoSave, autoSaveInterval]);
  var handleContentChange = useCallback(function (newContent) {
    setContent(newContent);
    setStats(calculateStats(newContent));
    setIsModified(true);
    onChange === null || onChange === void 0 ? void 0 : onChange(newContent);
  }, [onChange]);
  var handleTitleChange = useCallback(function (newTitle) {
    setDocumentTitle(newTitle);
    onTitleChange === null || onTitleChange === void 0 ? void 0 : onTitleChange(newTitle);
  }, [onTitleChange]);
  var handleSave = useCallback(function () {
    onSave === null || onSave === void 0 ? void 0 : onSave(content);
    setIsModified(false);
  }, [content, onSave]);
  var handleZoom = useCallback(function (newZoom) {
    var clampedZoom = Math.max(50, Math.min(200, newZoom));
    setCurrentZoom(clampedZoom);
    onZoomChange === null || onZoomChange === void 0 ? void 0 : onZoomChange(clampedZoom);
  }, [onZoomChange]);
  var formatText = useCallback(function (command, value) {
    if (readOnly || !editorRef.current) return;
    var textarea = editorRef.current;
    var start = textarea.selectionStart;
    var end = textarea.selectionEnd;
    var selectedText = content.substring(start, end);
    var newText = selectedText;
    switch (command) {
      case 'bold':
        newText = "**".concat(selectedText, "**");
        break;
      case 'italic':
        newText = "*".concat(selectedText, "*");
        break;
      case 'underline':
        newText = "_".concat(selectedText, "_");
        break;
      case 'heading1':
        newText = "# ".concat(selectedText);
        break;
      case 'heading2':
        newText = "## ".concat(selectedText);
        break;
      case 'bulletList':
        newText = "- ".concat(selectedText);
        break;
      case 'numberedList':
        newText = "1. ".concat(selectedText);
        break;
    }
    var newContent = content.substring(0, start) + newText + content.substring(end);
    handleContentChange(newContent);
    setTimeout(function () {
      textarea.focus();
      textarea.setSelectionRange(start, start + newText.length);
    }, 0);
  }, [content, readOnly, handleContentChange]);
  var toolbar = showToolbar && jsxs("div", {
    className: "flex items-center justify-between p-2 border-b border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800/50",
    children: [jsxs("div", {
      className: "flex items-center gap-2",
      children: [jsxs("div", {
        className: "flex items-center gap-1",
        children: [jsx("button", {
          onClick: handleSave,
          disabled: !isModified,
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700 disabled:opacity-50",
          title: "Save",
          children: jsx(Save, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return onExport === null || onExport === void 0 ? void 0 : onExport('pdf');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Export as PDF",
          children: jsx(Download, {
            className: "w-4 h-4"
          })
        })]
      }), jsx("div", {
        className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600"
      }), jsxs("div", {
        className: "flex items-center gap-1",
        children: [jsx("button", {
          onClick: function onClick() {
            return formatText('bold');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Bold",
          children: jsx(Bold, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return formatText('italic');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Italic",
          children: jsx(Italic, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return formatText('underline');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Underline",
          children: jsx(Underline, {
            className: "w-4 h-4"
          })
        })]
      }), jsx("div", {
        className: "w-px h-6 bg-mw-gray-300 dark:bg-mw-gray-600"
      }), jsxs("div", {
        className: "flex items-center gap-1",
        children: [jsx("button", {
          onClick: function onClick() {
            return formatText('alignLeft');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Align Left",
          children: jsx(AlignLeft, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return formatText('alignCenter');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Align Center",
          children: jsx(AlignCenter, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return formatText('alignRight');
          },
          className: "p-2 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Align Right",
          children: jsx(AlignRight, {
            className: "w-4 h-4"
          })
        })]
      })]
    }), jsxs("div", {
      className: "flex items-center gap-2",
      children: [jsxs("div", {
        className: "flex items-center border border-mw-gray-300 dark:border-mw-gray-600 rounded-md",
        children: [jsx("button", {
          onClick: function onClick() {
            return setCurrentMode('edit');
          },
          className: cn$d('px-3 py-1 text-sm rounded-l-md', currentMode === 'edit' ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
          children: jsx(PenLine, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return setCurrentMode('view');
          },
          className: cn$d('px-3 py-1 text-sm', currentMode === 'view' ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
          children: jsx(Eye, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: function onClick() {
            return setCurrentMode('split');
          },
          className: cn$d('px-3 py-1 text-sm rounded-r-md', currentMode === 'split' ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700'),
          children: jsx(FileText, {
            className: "w-4 h-4"
          })
        })]
      }), jsxs("div", {
        className: "flex items-center gap-1",
        children: [jsx("button", {
          onClick: function onClick() {
            return handleZoom(currentZoom - 10);
          },
          className: "p-1 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Zoom Out",
          children: jsx(ZoomOut, {
            className: "w-4 h-4"
          })
        }), jsxs("span", {
          className: "text-sm min-w-[3rem] text-center",
          children: [currentZoom, "%"]
        }), jsx("button", {
          onClick: function onClick() {
            return handleZoom(currentZoom + 10);
          },
          className: "p-1 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700",
          title: "Zoom In",
          children: jsx(ZoomIn, {
            className: "w-4 h-4"
          })
        })]
      })]
    })]
  });
  var statusBar = showStatusBar && jsxs("div", {
    className: "flex items-center justify-between p-2 border-t border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800/50 text-xs text-mw-gray-600 dark:text-mw-gray-400",
    children: [jsxs("div", {
      className: "flex items-center gap-4",
      children: [jsxs("span", {
        children: [stats.words, " words"]
      }), jsxs("span", {
        children: [stats.characters, " characters"]
      }), jsxs("span", {
        children: [stats.lines, " lines"]
      }), jsxs("span", {
        children: ["Page ", stats.pages]
      }), isModified && jsx("span", {
        className: "text-mw-orange-500",
        children: "- Unsaved changes"
      }), autoSave && jsx("span", {
        className: "text-mw-green-500",
        children: "- Auto-save enabled"
      })]
    }), jsxs("div", {
      className: "flex items-center gap-4",
      children: [collaborative && jsx("span", {
        className: "text-mw-blue-500",
        children: "- Collaborative"
      }), jsx("span", {
        children: "UTF-8"
      })]
    })]
  });
  var editorContent = jsx("div", {
    className: "flex-1 relative",
    children: jsx("textarea", {
      ref: editorRef,
      value: content,
      onChange: function onChange(e) {
        return handleContentChange(e.target.value);
      },
      placeholder: "Start writing your document...",
      readOnly: readOnly,
      className: cn$d('w-full h-full p-6 border-0 resize-none focus:outline-none', 'bg-white dark:bg-mw-gray-900', 'text-mw-gray-900 dark:text-white', 'placeholder-mw-gray-500 dark:placeholder-mw-gray-400', 'font-mono leading-relaxed'),
      style: {
        fontSize: "".concat(currentZoom, "%"),
        lineHeight: 1.6,
        minHeight: '500px'
      }
    })
  });
  var previewContent = jsx("div", {
    className: "flex-1 p-6 overflow-auto",
    children: jsx("div", {
      className: "prose prose-lg max-w-none dark:prose-invert",
      style: {
        fontSize: "".concat(currentZoom, "%")
      },
      children: jsx("div", {
        dangerouslySetInnerHTML: {
          __html: content.replace(/\n/g, '<br>')
        }
      })
    })
  });
  return jsxs("div", {
    className: cn$d('flex flex-col h-full border border-mw-gray-300 dark:border-mw-gray-600 rounded-lg overflow-hidden bg-white dark:bg-mw-gray-900', className),
    children: [jsx("div", {
      className: "p-3 border-b border-mw-gray-200 dark:border-mw-gray-700",
      children: jsx("input", {
        type: "text",
        value: documentTitle,
        onChange: function onChange(e) {
          return handleTitleChange(e.target.value);
        },
        className: "text-lg font-semibold bg-transparent border-0 focus:outline-none w-full text-mw-gray-900 dark:text-white",
        placeholder: "Document title...",
        readOnly: readOnly
      })
    }), toolbar, jsxs("div", {
      className: "flex-1 flex overflow-hidden",
      children: [currentMode === 'edit' && editorContent, currentMode === 'view' && previewContent, currentMode === 'split' && jsxs(Fragment, {
        children: [jsx("div", {
          className: "flex-1 border-r border-mw-gray-200 dark:border-mw-gray-700",
          children: editorContent
        }), jsx("div", {
          className: "flex-1",
          children: previewContent
        })]
      })]
    }), statusBar]
  });
}

function Card(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("div", Object.assign({
    className: clsx('rounded-lg border border-mw-gray-200 dark:border-mw-gray-700 bg-white dark:bg-mw-gray-800 shadow-mw-sm', className)
  }, props, {
    children: children
  }));
}
function CardHeader(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("div", Object.assign({
    className: clsx('p-6 pb-0', className)
  }, props, {
    children: children
  }));
}
function CardContent(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("div", Object.assign({
    className: clsx('p-6', className)
  }, props, {
    children: children
  }));
}
function CardFooter(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("div", Object.assign({
    className: clsx('p-6 pt-0', className)
  }, props, {
    children: children
  }));
}

var badgeVariants = {
  "default": 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',
  primary: 'bg-mw-blue-100 text-mw-blue-800 dark:bg-mw-blue-900/20 dark:text-mw-blue-300',
  secondary: 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',
  success: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300',
  warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300',
  error: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300',
  outline: 'border border-mw-gray-300 dark:border-mw-gray-600 text-mw-gray-700 dark:text-mw-gray-300'
};
var badgeSizes = {
  sm: 'px-2 py-0.5 text-xs',
  md: 'px-2.5 py-0.5 text-sm',
  lg: 'px-3 py-1 text-sm'
};
var Badge = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    children = _a.children,
    props = __rest(_a, ["className", "variant", "size", "children"]);
  return jsx("span", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center rounded-full font-medium', badgeVariants[variant], badgeSizes[size], className)
  }, props, {
    children: children
  }));
});
Badge.displayName = 'Badge';

var alertVariants = {
  "default": {
    container: 'bg-mw-gray-50 border-mw-gray-200 text-mw-gray-800 dark:bg-mw-gray-800 dark:border-mw-gray-700 dark:text-mw-gray-200',
    icon: 'text-mw-gray-600 dark:text-mw-gray-400',
    IconComponent: Info
  },
  success: {
    container: 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/20 dark:border-green-800 dark:text-green-200',
    icon: 'text-green-600 dark:text-green-400',
    IconComponent: CircleCheckBig
  },
  warning: {
    container: 'bg-yellow-50 border-yellow-200 text-yellow-800 dark:bg-yellow-900/20 dark:border-yellow-800 dark:text-yellow-200',
    icon: 'text-yellow-600 dark:text-yellow-400',
    IconComponent: TriangleAlert
  },
  error: {
    container: 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/20 dark:border-red-800 dark:text-red-200',
    icon: 'text-red-600 dark:text-red-400',
    IconComponent: CircleAlert
  },
  info: {
    container: 'bg-blue-50 border-blue-200 text-blue-800 dark:bg-blue-900/20 dark:border-blue-800 dark:text-blue-200',
    icon: 'text-blue-600 dark:text-blue-400',
    IconComponent: Info
  }
};
var Alert = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    title = _a.title,
    dismissible = _a.dismissible,
    onDismiss = _a.onDismiss,
    children = _a.children,
    props = __rest(_a, ["className", "variant", "title", "dismissible", "onDismiss", "children"]);
  var config = alertVariants[variant];
  var IconComponent = config.IconComponent;
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('relative rounded-lg border p-4', config.container, className)
  }, props, {
    children: jsxs("div", {
      className: "flex",
      children: [jsx("div", {
        className: "flex-shrink-0",
        children: jsx(IconComponent, {
          className: clsx('h-5 w-5', config.icon)
        })
      }), jsxs("div", {
        className: "ml-3 flex-1",
        children: [title && jsx("h3", {
          className: "text-sm font-medium mb-1",
          children: title
        }), jsx("div", {
          className: "text-sm",
          children: children
        })]
      }), dismissible && onDismiss && jsx("div", {
        className: "ml-auto pl-3",
        children: jsx("div", {
          className: "-mx-1.5 -my-1.5",
          children: jsxs("button", {
            type: "button",
            onClick: onDismiss,
            className: clsx('inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2', config.icon, 'hover:bg-black/5 dark:hover:bg-white/10 focus:ring-current'),
            children: [jsx("span", {
              className: "sr-only",
              children: "Dismiss"
            }), jsx(X, {
              className: "h-4 w-4"
            })]
          })
        })
      })]
    })
  }));
});
Alert.displayName = 'Alert';

var avatarSizes = {
  sm: 'w-8 h-8 text-xs',
  md: 'w-10 h-10 text-sm',
  lg: 'w-12 h-12 text-base',
  xl: 'w-16 h-16 text-lg',
  '2xl': 'w-20 h-20 text-xl'
};
var avatarVariants = {
  circle: 'rounded-full',
  square: 'rounded-md'
};
var Avatar = /*#__PURE__*/forwardRef(function (_a, ref) {
  var _b;
  var className = _a.className,
    src = _a.src,
    alt = _a.alt,
    fallback = _a.fallback,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'circle' : _a$variant,
    props = __rest(_a, ["className", "src", "alt", "fallback", "size", "variant"]);
  var initials = fallback || ((_b = alt === null || alt === void 0 ? void 0 : alt.charAt(0)) === null || _b === void 0 ? void 0 : _b.toUpperCase()) || '?';
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('relative inline-flex items-center justify-center font-medium bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-600 dark:text-mw-gray-300 overflow-hidden', avatarSizes[size], avatarVariants[variant], className)
  }, props, {
    children: src ? jsx("img", {
      src: src,
      alt: alt,
      className: "w-full h-full object-cover"
    }) : jsx("span", {
      className: "select-none",
      children: initials
    })
  }));
});
Avatar.displayName = 'Avatar';
var spacingClasses = {
  tight: '-space-x-1',
  normal: '-space-x-2',
  loose: '-space-x-3'
};
var AvatarGroup = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    children = _a.children,
    max = _a.max,
    _a$size2 = _a.size,
    size = _a$size2 === void 0 ? 'md' : _a$size2,
    _a$spacing = _a.spacing,
    spacing = _a$spacing === void 0 ? 'normal' : _a$spacing,
    props = __rest(_a, ["className", "children", "max", "size", "spacing"]);
  var childrenArray = React.Children.toArray(children);
  var displayChildren = max ? childrenArray.slice(0, max) : childrenArray;
  var remainingCount = max ? Math.max(0, childrenArray.length - max) : 0;
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('flex items-center', spacingClasses[spacing], className)
  }, props, {
    children: [displayChildren.map(function (child, index) {
      return jsx("div", {
        className: "ring-2 ring-white dark:ring-mw-gray-900",
        children: /*#__PURE__*/React.isValidElement(child) && child.type === Avatar ? /*#__PURE__*/React.cloneElement(child, {
          size: size
        }) : child
      }, index);
    }), remainingCount > 0 && jsx("div", {
      className: "ring-2 ring-white dark:ring-mw-gray-900",
      children: jsx(Avatar, {
        size: size,
        fallback: "+".concat(remainingCount),
        className: "bg-mw-gray-200 dark:bg-mw-gray-600 text-mw-gray-700 dark:text-mw-gray-200"
      })
    })]
  }));
});
AvatarGroup.displayName = 'AvatarGroup';

var progressSizes = {
  sm: 'h-1',
  md: 'h-2',
  lg: 'h-3'
};
var progressVariants = {
  "default": 'bg-mw-blue-600',
  success: 'bg-green-600',
  warning: 'bg-yellow-600',
  error: 'bg-red-600'
};
var Progress = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$value = _a.value,
    value = _a$value === void 0 ? 0 : _a$value,
    _a$max = _a.max,
    max = _a$max === void 0 ? 100 : _a$max,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    _a$showLabel = _a.showLabel,
    showLabel = _a$showLabel === void 0 ? false : _a$showLabel,
    label = _a.label,
    props = __rest(_a, ["className", "value", "max", "size", "variant", "showLabel", "label"]);
  var percentage = Math.min(Math.max(value / max * 100, 0), 100);
  return jsxs("div", {
    className: "space-y-2",
    children: [(showLabel || label) && jsxs("div", {
      className: "flex justify-between items-center",
      children: [jsx("span", {
        className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300",
        children: label || 'Progress'
      }), showLabel && jsxs("span", {
        className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
        children: [Math.round(percentage), "%"]
      })]
    }), jsx("div", Object.assign({
      ref: ref,
      className: clsx('w-full bg-mw-gray-200 dark:bg-mw-gray-700 rounded-full overflow-hidden', progressSizes[size], className)
    }, props, {
      children: jsx("div", {
        className: clsx('h-full transition-all duration-300 ease-in-out rounded-full', progressVariants[variant]),
        style: {
          width: "".concat(percentage, "%")
        },
        role: "progressbar",
        "aria-valuenow": value,
        "aria-valuemax": max,
        "aria-valuemin": 0
      })
    }))]
  });
});
Progress.displayName = 'Progress';

var skeletonVariants = {
  text: 'rounded',
  circular: 'rounded-full',
  rectangular: 'rounded-md'
};
var skeletonAnimations = {
  pulse: 'animate-pulse',
  wave: 'animate-[wave_1.6s_ease-in-out_infinite]',
  none: ''
};
var Skeleton = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'text' : _a$variant,
    width = _a.width,
    height = _a.height,
    _a$lines = _a.lines,
    lines = _a$lines === void 0 ? 1 : _a$lines,
    _a$animation = _a.animation,
    animation = _a$animation === void 0 ? 'pulse' : _a$animation,
    style = _a.style,
    props = __rest(_a, ["className", "variant", "width", "height", "lines", "animation", "style"]);
  var getDefaultHeight = function getDefaultHeight() {
    if (height) return height;
    switch (variant) {
      case 'text':
        return '1rem';
      case 'circular':
        return '2.5rem';
      case 'rectangular':
        return '8rem';
      default:
        return '1rem';
    }
  };
  var getDefaultWidth = function getDefaultWidth() {
    if (width) return width;
    switch (variant) {
      case 'circular':
        return '2.5rem';
      default:
        return '100%';
    }
  };
  if (variant === 'text' && lines > 1) {
    return jsx("div", {
      className: "space-y-2",
      children: Array.from({
        length: lines
      }).map(function (_, index) {
        return jsx("div", Object.assign({
          ref: index === 0 ? ref : undefined,
          className: clsx('bg-mw-gray-200 dark:bg-mw-gray-700', skeletonVariants[variant], skeletonAnimations[animation], className),
          style: Object.assign({
            width: index === lines - 1 ? '75%' : getDefaultWidth(),
            height: getDefaultHeight()
          }, style)
        }, index === 0 ? props : {}), index);
      })
    });
  }
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('bg-mw-gray-200 dark:bg-mw-gray-700', skeletonVariants[variant], skeletonAnimations[animation], className),
    style: Object.assign({
      width: getDefaultWidth(),
      height: getDefaultHeight()
    }, style)
  }, props));
});
Skeleton.displayName = 'Skeleton';

var separatorVariants = {
  "default": 'border-solid',
  dashed: 'border-dashed',
  dotted: 'border-dotted'
};
var separatorSpacing = {
  none: '',
  sm: 'my-2',
  md: 'my-4',
  lg: 'my-8'
};
var Separator = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$orientation = _a.orientation,
    orientation = _a$orientation === void 0 ? 'horizontal' : _a$orientation,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    _a$spacing = _a.spacing,
    spacing = _a$spacing === void 0 ? 'md' : _a$spacing,
    props = __rest(_a, ["className", "orientation", "variant", "spacing"]);
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('border-mw-gray-200 dark:border-mw-gray-700', separatorVariants[variant], orientation === 'horizontal' ? "border-t w-full ".concat(separatorSpacing[spacing]) : "border-l h-full ".concat(spacing !== 'none' ? 'mx-4' : ''), className),
    role: "separator",
    "aria-orientation": orientation
  }, props));
});
Separator.displayName = 'Separator';

var tableSizes = {
  sm: '[&_th]:px-2 [&_th]:py-1 [&_td]:px-2 [&_td]:py-1 text-sm',
  md: '[&_th]:px-4 [&_th]:py-2 [&_td]:px-4 [&_td]:py-2',
  lg: '[&_th]:px-6 [&_th]:py-3 [&_td]:px-6 [&_td]:py-3 text-lg'
};
function Table(_a) {
  var className = _a.className,
    _a$striped = _a.striped,
    striped = _a$striped === void 0 ? false : _a$striped,
    _a$hoverable = _a.hoverable,
    hoverable = _a$hoverable === void 0 ? false : _a$hoverable,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    children = _a.children,
    props = __rest(_a, ["className", "striped", "hoverable", "size", "children"]);
  return jsx("div", {
    className: "overflow-x-auto",
    children: jsx("table", Object.assign({
      className: clsx('w-full border-collapse border border-mw-gray-200 dark:border-mw-gray-700', tableSizes[size], striped && '[&_tbody_tr:nth-child(even)]:bg-mw-gray-50 dark:[&_tbody_tr:nth-child(even)]:bg-mw-gray-800/50', hoverable && '[&_tbody_tr]:hover:bg-mw-gray-50 dark:[&_tbody_tr]:hover:bg-mw-gray-800/50', className)
    }, props, {
      children: children
    }))
  });
}
function TableHeader(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("thead", Object.assign({
    className: clsx('bg-mw-gray-100 dark:bg-mw-gray-800', className)
  }, props, {
    children: children
  }));
}
function TableBody(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("tbody", Object.assign({
    className: clsx('bg-white dark:bg-mw-gray-900', className)
  }, props, {
    children: children
  }));
}
function TableRow(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("tr", Object.assign({
    className: clsx('border-b border-mw-gray-200 dark:border-mw-gray-700 transition-colors', className)
  }, props, {
    children: children
  }));
}
function TableHead(_a) {
  var className = _a.className,
    _a$sortable = _a.sortable,
    sortable = _a$sortable === void 0 ? false : _a$sortable,
    _a$sortDirection = _a.sortDirection,
    sortDirection = _a$sortDirection === void 0 ? 'none' : _a$sortDirection,
    onSort = _a.onSort,
    children = _a.children,
    props = __rest(_a, ["className", "sortable", "sortDirection", "onSort", "children"]);
  return jsx("th", Object.assign({
    className: clsx('text-left font-semibold text-mw-gray-900 dark:text-white border-r border-mw-gray-200 dark:border-mw-gray-700 last:border-r-0', sortable && 'cursor-pointer select-none hover:bg-mw-gray-200 dark:hover:bg-mw-gray-700', className),
    onClick: sortable ? onSort : undefined
  }, props, {
    children: jsxs("div", {
      className: "flex items-center justify-between",
      children: [jsx("span", {
        children: children
      }), sortable && jsxs("div", {
        className: "flex flex-col ml-2",
        children: [jsx(ChevronUp, {
          className: clsx('w-3 h-3', sortDirection === 'asc' ? 'text-mw-blue-600' : 'text-mw-gray-400')
        }), jsx(ChevronDown, {
          className: clsx('w-3 h-3 -mt-1', sortDirection === 'desc' ? 'text-mw-blue-600' : 'text-mw-gray-400')
        })]
      })]
    })
  }));
}
function TableCell(_a) {
  var className = _a.className,
    children = _a.children,
    props = __rest(_a, ["className", "children"]);
  return jsx("td", Object.assign({
    className: clsx('text-mw-gray-700 dark:text-mw-gray-300 border-r border-mw-gray-200 dark:border-mw-gray-700 last:border-r-0', className)
  }, props, {
    children: children
  }));
}

function Tooltip(_ref) {
  var content = _ref.content,
    children = _ref.children,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'top' : _ref$position,
    className = _ref.className;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isVisible = _useState2[0],
    setIsVisible = _useState2[1];
  var positionClasses = {
    top: 'bottom-full left-1/2 transform -translate-x-1/2 mb-2',
    bottom: 'top-full left-1/2 transform -translate-x-1/2 mt-2',
    left: 'right-full top-1/2 transform -translate-y-1/2 mr-2',
    right: 'left-full top-1/2 transform -translate-y-1/2 ml-2'
  };
  var arrowClasses = {
    top: 'top-full left-1/2 transform -translate-x-1/2 border-l-transparent border-r-transparent border-b-transparent border-t-mw-gray-900',
    bottom: 'bottom-full left-1/2 transform -translate-x-1/2 border-l-transparent border-r-transparent border-t-transparent border-b-mw-gray-900',
    left: 'left-full top-1/2 transform -translate-y-1/2 border-t-transparent border-b-transparent border-r-transparent border-l-mw-gray-900',
    right: 'right-full top-1/2 transform -translate-y-1/2 border-t-transparent border-b-transparent border-l-transparent border-r-mw-gray-900'
  };
  return jsxs("div", {
    className: "relative inline-block",
    children: [jsx("div", {
      onMouseEnter: function onMouseEnter() {
        return setIsVisible(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setIsVisible(false);
      },
      onFocus: function onFocus() {
        return setIsVisible(true);
      },
      onBlur: function onBlur() {
        return setIsVisible(false);
      },
      children: children
    }), isVisible && jsxs("div", {
      className: clsx('absolute z-50 px-2 py-1 text-sm text-white bg-mw-gray-900 rounded-md whitespace-nowrap', positionClasses[position], className),
      children: [content, jsx("div", {
        className: clsx('absolute w-0 h-0 border-4', arrowClasses[position])
      })]
    })]
  });
}

var DropdownContext = /*#__PURE__*/createContext(undefined);
var Dropdown = function Dropdown(_ref) {
  var children = _ref.children,
    className = _ref.className;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isOpen = _useState2[0],
    setIsOpen = _useState2[1];
  var dropdownRef = useRef(null);
  var toggle = function toggle() {
    return setIsOpen(!isOpen);
  };
  // Close dropdown when clicking outside
  useEffect(function () {
    var handleClickOutside = function handleClickOutside(event) {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    };
    if (isOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }
    return function () {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isOpen]);
  // Close dropdown on escape
  useEffect(function () {
    var handleEscape = function handleEscape(event) {
      if (event.key === 'Escape') {
        setIsOpen(false);
      }
    };
    if (isOpen) {
      document.addEventListener('keydown', handleEscape);
    }
    return function () {
      document.removeEventListener('keydown', handleEscape);
    };
  }, [isOpen]);
  return jsx(DropdownContext.Provider, {
    value: {
      isOpen: isOpen,
      setIsOpen: setIsOpen,
      toggle: toggle
    },
    children: jsx("div", {
      ref: dropdownRef,
      className: clsx('relative inline-block', className),
      children: children
    })
  });
};
var DropdownTrigger = function DropdownTrigger(_ref2) {
  var children = _ref2.children,
    asChild = _ref2.asChild,
    className = _ref2.className;
  var context = useContext(DropdownContext);
  if (!context) {
    throw new Error('DropdownTrigger must be used within a Dropdown');
  }
  if (asChild) {
    // Clone the child element and add click handler
    return jsx("div", {
      onClick: context.toggle,
      className: className,
      children: children
    });
  }
  return jsxs("button", {
    onClick: context.toggle,
    className: clsx('inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium', 'bg-white dark:bg-mw-gray-800 border border-mw-gray-300 dark:border-mw-gray-600', 'text-mw-gray-700 dark:text-mw-gray-300', 'hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2', className),
    "aria-expanded": context.isOpen,
    "aria-haspopup": "true",
    children: [children, jsx("svg", {
      className: clsx('ml-2 h-4 w-4 transition-transform', context.isOpen && 'rotate-180'),
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor",
      children: jsx("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: 2,
        d: "M19 9l-7 7-7-7"
      })
    })]
  });
};
var DropdownContent = function DropdownContent(_ref3) {
  var children = _ref3.children,
    className = _ref3.className,
    _ref3$align = _ref3.align,
    align = _ref3$align === void 0 ? 'left' : _ref3$align;
  var context = useContext(DropdownContext);
  if (!context) {
    throw new Error('DropdownContent must be used within a Dropdown');
  }
  var alignmentClasses = {
    left: 'left-0',
    right: 'right-0',
    center: 'left-1/2 transform -translate-x-1/2'
  };
  if (!context.isOpen) return null;
  return jsx("div", {
    className: clsx('absolute z-50 mt-2 min-w-[200px] rounded-md shadow-lg', 'bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700', 'ring-1 ring-black ring-opacity-5', alignmentClasses[align], className),
    role: "menu",
    "aria-orientation": "vertical",
    children: jsx("div", {
      className: "py-1",
      children: children
    })
  });
};
var DropdownItem = function DropdownItem(_ref4) {
  var children = _ref4.children,
    onClick = _ref4.onClick,
    disabled = _ref4.disabled,
    className = _ref4.className;
  var context = useContext(DropdownContext);
  var handleClick = function handleClick() {
    if (!disabled && onClick) {
      onClick();
      context === null || context === void 0 ? void 0 : context.setIsOpen(false);
    }
  };
  return jsx("button", {
    onClick: handleClick,
    disabled: disabled,
    className: clsx('w-full text-left px-4 py-2 text-sm', 'text-mw-gray-700 dark:text-mw-gray-300', 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700', 'focus:bg-mw-gray-100 dark:focus:bg-mw-gray-700 focus:outline-none', disabled && 'opacity-50 cursor-not-allowed', className),
    role: "menuitem",
    children: children
  });
};
var DropdownSeparator = function DropdownSeparator(_ref5) {
  var className = _ref5.className;
  return jsx("div", {
    className: clsx('my-1 h-px bg-mw-gray-200 dark:bg-mw-gray-700', className),
    role: "separator"
  });
};

var ModalContext = /*#__PURE__*/createContext(undefined);
var Modal = function Modal(_ref) {
  var isOpen = _ref.isOpen,
    onClose = _ref.onClose,
    children = _ref.children,
    className = _ref.className,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size;
  var modalRef = useRef(null);
  // Handle escape key
  useEffect(function () {
    var handleEscape = function handleEscape(e) {
      if (e.key === 'Escape' && isOpen) {
        onClose();
      }
    };
    if (isOpen) {
      document.addEventListener('keydown', handleEscape);
      document.body.style.overflow = 'hidden';
    }
    return function () {
      document.removeEventListener('keydown', handleEscape);
      document.body.style.overflow = 'unset';
    };
  }, [isOpen, onClose]);
  // Handle backdrop click
  var handleBackdropClick = function handleBackdropClick(e) {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };
  var sizeClasses = {
    sm: 'max-w-md',
    md: 'max-w-lg',
    lg: 'max-w-2xl',
    xl: 'max-w-4xl',
    full: 'max-w-full m-4'
  };
  if (!isOpen) return null;
  return jsx(ModalContext.Provider, {
    value: {
      isOpen: isOpen,
      onClose: onClose
    },
    children: jsx("div", {
      className: "fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50",
      onClick: handleBackdropClick,
      children: jsx("div", {
        ref: modalRef,
        className: clsx('relative w-full rounded-lg bg-white dark:bg-mw-gray-800 shadow-xl', 'max-h-[90vh] overflow-hidden', sizeClasses[size], className),
        role: "dialog",
        "aria-modal": "true",
        children: children
      })
    })
  });
};
var ModalHeader = function ModalHeader(_ref2) {
  var children = _ref2.children,
    className = _ref2.className;
  var context = useContext(ModalContext);
  return jsxs("div", {
    className: clsx('flex items-center justify-between p-6 border-b border-mw-gray-200 dark:border-mw-gray-700', className),
    children: [jsx("div", {
      className: "flex-1",
      children: children
    }), jsx("button", {
      onClick: context === null || context === void 0 ? void 0 : context.onClose,
      className: "ml-4 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
      "aria-label": "Close modal",
      children: jsx("svg", {
        className: "w-6 h-6",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        children: jsx("path", {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 2,
          d: "M6 18L18 6M6 6l12 12"
        })
      })
    })]
  });
};
var ModalBody = function ModalBody(_ref3) {
  var children = _ref3.children,
    className = _ref3.className;
  return jsx("div", {
    className: clsx('p-6 overflow-y-auto', className),
    children: children
  });
};
var ModalFooter = function ModalFooter(_ref4) {
  var children = _ref4.children,
    className = _ref4.className;
  return jsx("div", {
    className: clsx('flex items-center justify-end space-x-3 p-6 border-t border-mw-gray-200 dark:border-mw-gray-700', className),
    children: children
  });
};

function cn$c() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
// Utility functions for data processing
var applyFilters = function applyFilters(data, filters, columns) {
  return data.filter(function (row) {
    return filters.every(function (filter) {
      var column = columns.find(function (col) {
        return col.id === filter.columnId;
      });
      if (!column) return true;
      var value = column.accessorFn ? column.accessorFn(row) : column.accessorKey ? row[column.accessorKey] : row;
      var filterValue = filter.value;
      if (value == null) return false;
      switch (filter.operator) {
        case 'equals':
          return value === filterValue;
        case 'contains':
          return String(value).toLowerCase().includes(String(filterValue).toLowerCase());
        case 'startsWith':
          return String(value).toLowerCase().startsWith(String(filterValue).toLowerCase());
        case 'endsWith':
          return String(value).toLowerCase().endsWith(String(filterValue).toLowerCase());
        case 'gt':
          return Number(value) > Number(filterValue);
        case 'lt':
          return Number(value) < Number(filterValue);
        case 'gte':
          return Number(value) >= Number(filterValue);
        case 'lte':
          return Number(value) <= Number(filterValue);
        case 'in':
          return Array.isArray(filterValue) && filterValue.includes(value);
        case 'notIn':
          return Array.isArray(filterValue) && !filterValue.includes(value);
        default:
          return String(value).toLowerCase().includes(String(filterValue).toLowerCase());
      }
    });
  });
};
var applySorting = function applySorting(data, sorting, columns) {
  if (sorting.length === 0) return data;
  return _toConsumableArray(data).sort(function (a, b) {
    var _iterator = _createForOfIteratorHelper(sorting),
      _step;
    try {
      var _loop = function _loop() {
          var sort = _step.value;
          var column = columns.find(function (col) {
            return col.id === sort.columnId;
          });
          if (!column || !sort.direction) return 0; // continue
          var aValue = column.accessorFn ? column.accessorFn(a) : column.accessorKey ? a[column.accessorKey] : a;
          var bValue = column.accessorFn ? column.accessorFn(b) : column.accessorKey ? b[column.accessorKey] : b;
          var comparison = 0;
          if (aValue < bValue) comparison = -1;else if (aValue > bValue) comparison = 1;
          if (comparison !== 0) {
            return {
              v: sort.direction === 'desc' ? -comparison : comparison
            };
          }
        },
        _ret;
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _ret = _loop();
        if (_ret === 0) continue;
        if (_ret) return _ret.v;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return 0;
  });
};
var applyGlobalFilter = function applyGlobalFilter(data, globalFilter, columns) {
  if (!globalFilter) return data;
  var searchableColumns = columns.filter(function (col) {
    return col.searchable !== false;
  });
  return data.filter(function (row) {
    return searchableColumns.some(function (column) {
      var value = column.accessorFn ? column.accessorFn(row) : column.accessorKey ? row[column.accessorKey] : row;
      return String(value || '').toLowerCase().includes(globalFilter.toLowerCase());
    });
  });
};
function AdvancedTableHeaderCell(_ref) {
  var column = _ref.column,
    sorting = _ref.sorting,
    onSort = _ref.onSort,
    onFilter = _ref.onFilter,
    onResize = _ref.onResize,
    density = _ref.density;
  var _a;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    showFilter = _useState2[0],
    setShowFilter = _useState2[1];
  var _useState3 = useState(''),
    _useState4 = _slicedToArray(_useState3, 2),
    filterValue = _useState4[0],
    setFilterValue = _useState4[1];
  var _useState5 = useState('contains'),
    _useState6 = _slicedToArray(_useState5, 2),
    filterOperator = _useState6[0],
    setFilterOperator = _useState6[1];
  var resizeRef = useRef(null);
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    isResizing = _useState8[0],
    setIsResizing = _useState8[1];
  var sortDirection = (_a = sorting.find(function (s) {
    return s.columnId === column.id;
  })) === null || _a === void 0 ? void 0 : _a.direction;
  var densityClasses = {
    compact: 'px-2 py-1',
    normal: 'px-4 py-2',
    comfortable: 'px-6 py-3'
  };
  var handleSort = function handleSort() {
    if (column.sortable) {
      onSort(column.id);
    }
  };
  var handleFilter = function handleFilter(e) {
    e.preventDefault();
    onFilter(column.id, filterValue, filterOperator);
    setShowFilter(false);
  };
  var handleClearFilter = function handleClearFilter() {
    setFilterValue('');
    onFilter(column.id, '', filterOperator);
    setShowFilter(false);
  };
  useEffect(function () {
    var handleMouseMove = function handleMouseMove(e) {
      var _a;
      if (!isResizing || !resizeRef.current || !onResize) return;
      var rect = (_a = resizeRef.current.closest('th')) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();
      if (rect) {
        var newWidth = e.clientX - rect.left;
        if (newWidth >= (column.minWidth || 50)) {
          onResize(column.id, newWidth);
        }
      }
    };
    var handleMouseUp = function handleMouseUp() {
      setIsResizing(false);
    };
    if (isResizing) {
      document.addEventListener('mousemove', handleMouseMove);
      document.addEventListener('mouseup', handleMouseUp);
    }
    return function () {
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('mouseup', handleMouseUp);
    };
  }, [isResizing, column.id, column.minWidth, onResize]);
  return jsx("th", {
    className: cn$c('bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700 relative', densityClasses[density], column.align === 'center' && 'text-center', column.align === 'right' && 'text-right', column.sticky === 'left' && 'sticky left-0 z-20', column.sticky === 'right' && 'sticky right-0 z-20', column.pinned && 'bg-mw-blue-50 dark:bg-mw-blue-950/20'),
    style: {
      width: column.width,
      minWidth: column.minWidth,
      maxWidth: column.maxWidth
    },
    children: jsxs("div", {
      className: "flex items-center justify-between group",
      children: [jsxs("div", {
        className: "flex items-center space-x-2 min-w-0 flex-1",
        children: [jsx("span", {
          className: cn$c('text-xs font-medium text-mw-gray-900 dark:text-white uppercase tracking-wider truncate', column.sortable && 'cursor-pointer hover:text-mw-primary-600 dark:hover:text-mw-primary-400 select-none'),
          onClick: handleSort,
          title: typeof column.header === 'string' ? column.header : column.id,
          children: column.header
        }), column.sortable && jsx("button", {
          onClick: handleSort,
          className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300 flex-shrink-0",
          children: sortDirection === 'asc' ? jsx(ChevronUp, {
            className: "w-4 h-4"
          }) : sortDirection === 'desc' ? jsx(ChevronDown, {
            className: "w-4 h-4"
          }) : jsx(ChevronsUpDown, {
            className: "w-4 h-4 opacity-50"
          })
        })]
      }), jsxs("div", {
        className: "flex items-center space-x-1 opacity-0 group-hover:opacity-100 transition-opacity",
        children: [column.filterable && jsxs("div", {
          className: "relative",
          children: [jsx("button", {
            onClick: function onClick() {
              return setShowFilter(!showFilter);
            },
            className: "p-1 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300 rounded",
            title: "Filter",
            children: jsx(Filter$1, {
              className: "w-3 h-3"
            })
          }), showFilter && jsx("div", {
            className: "absolute top-full right-0 mt-1 w-64 bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg shadow-lg z-30",
            children: jsxs("form", {
              onSubmit: handleFilter,
              className: "p-4 space-y-3",
              children: [jsxs("div", {
                children: [jsx("label", {
                  className: "block text-xs font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-1",
                  children: "Operator"
                }), jsxs("select", {
                  value: filterOperator,
                  onChange: function onChange(e) {
                    return setFilterOperator(e.target.value);
                  },
                  className: "w-full px-2 py-1 text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded focus:outline-none focus:border-mw-primary-500 bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white",
                  children: [jsx("option", {
                    value: "contains",
                    children: "Contains"
                  }), jsx("option", {
                    value: "equals",
                    children: "Equals"
                  }), jsx("option", {
                    value: "startsWith",
                    children: "Starts with"
                  }), jsx("option", {
                    value: "endsWith",
                    children: "Ends with"
                  }), column.type === 'number' && jsxs(Fragment, {
                    children: [jsx("option", {
                      value: "gt",
                      children: "Greater than"
                    }), jsx("option", {
                      value: "lt",
                      children: "Less than"
                    }), jsx("option", {
                      value: "gte",
                      children: "Greater than or equal"
                    }), jsx("option", {
                      value: "lte",
                      children: "Less than or equal"
                    })]
                  })]
                })]
              }), jsxs("div", {
                children: [jsx("label", {
                  className: "block text-xs font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-1",
                  children: "Value"
                }), jsx("input", {
                  type: column.type === 'number' ? 'number' : column.type === 'date' ? 'date' : 'text',
                  placeholder: "Filter ".concat(typeof column.header === 'string' ? column.header : column.id, "..."),
                  value: filterValue,
                  onChange: function onChange(e) {
                    return setFilterValue(e.target.value);
                  },
                  className: "w-full px-2 py-1 text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded focus:outline-none focus:border-mw-primary-500 bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white",
                  autoFocus: true
                })]
              }), jsxs("div", {
                className: "flex space-x-2",
                children: [jsx(Button, {
                  type: "submit",
                  size: "sm",
                  className: "flex-1",
                  children: "Apply"
                }), jsx(Button, {
                  type: "button",
                  variant: "outline",
                  size: "sm",
                  onClick: handleClearFilter,
                  children: "Clear"
                })]
              })]
            })
          })]
        }), column.pinned && jsx("div", {
          title: "Pinned column",
          children: jsx(Lock, {
            className: "w-3 h-3 text-mw-blue-500"
          })
        })]
      }), column.resizable && onResize && jsx("div", {
        ref: resizeRef,
        className: "absolute right-0 top-0 bottom-0 w-1 cursor-col-resize hover:bg-mw-primary-500 transition-colors",
        onMouseDown: function onMouseDown() {
          return setIsResizing(true);
        }
      })]
    })
  });
}
function AdvancedTableCell(_ref2) {
  var column = _ref2.column,
    row = _ref2.row,
    value = _ref2.value,
    density = _ref2.density,
    onClick = _ref2.onClick;
  var densityClasses = {
    compact: 'px-2 py-1',
    normal: 'px-4 py-2',
    comfortable: 'px-6 py-3'
  };
  var renderCellContent = function renderCellContent() {
    if (column.cell) {
      return column.cell(value, row, column);
    }
    switch (column.type) {
      case 'boolean':
        return jsx(Badge, {
          variant: value ? 'success' : 'secondary',
          children: value ? 'Yes' : 'No'
        });
      case 'badge':
        return jsx(Badge, {
          variant: (value === null || value === void 0 ? void 0 : value.variant) || 'secondary',
          children: (value === null || value === void 0 ? void 0 : value.label) || value
        });
      case 'progress':
        return jsxs("div", {
          className: "flex items-center space-x-2",
          children: [jsx("div", {
            className: "flex-1 bg-mw-gray-200 dark:bg-mw-gray-700 rounded-full h-2",
            children: jsx("div", {
              className: "bg-mw-primary-500 h-2 rounded-full transition-all",
              style: {
                width: "".concat(Math.min(100, Math.max(0, value || 0)), "%")
              }
            })
          }), jsxs("span", {
            className: "text-xs text-mw-gray-600 dark:text-mw-gray-400 min-w-[3rem] text-right",
            children: [value, "%"]
          })]
        });
      case 'image':
        return jsx("img", {
          src: value,
          alt: "",
          className: "w-8 h-8 rounded object-cover",
          onError: function onError(e) {
            e.target.src = '/placeholder-image.png';
          }
        });
      case 'link':
        return jsxs("a", {
          href: (value === null || value === void 0 ? void 0 : value.href) || value,
          target: "_blank",
          rel: "noopener noreferrer",
          className: "text-mw-primary-600 dark:text-mw-primary-400 hover:underline inline-flex items-center space-x-1",
          children: [jsx("span", {
            children: (value === null || value === void 0 ? void 0 : value.label) || value
          }), jsx(ExternalLink, {
            className: "w-3 h-3"
          })]
        });
      case 'date':
        if (value && (value instanceof Date || !isNaN(Date.parse(value)))) {
          return new Date(value).toLocaleDateString();
        }
        return String(value || '');
      case 'number':
        if (typeof value === 'number') {
          return value.toLocaleString();
        }
        return String(value || '');
      default:
        return String(value || '');
    }
  };
  return jsx("td", {
    className: cn$c('text-sm text-mw-gray-900 dark:text-white border-r border-mw-gray-200 dark:border-mw-gray-700 last:border-r-0', densityClasses[density], column.align === 'center' && 'text-center', column.align === 'right' && 'text-right', column.sticky === 'left' && 'sticky left-0 z-10 bg-white dark:bg-mw-gray-900', column.sticky === 'right' && 'sticky right-0 z-10 bg-white dark:bg-mw-gray-900', onClick && 'cursor-pointer hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800'),
    onClick: onClick,
    children: renderCellContent()
  });
}
// Main Advanced Table Component
function AdvancedTable(_ref3) {
  var data = _ref3.data,
    columns = _ref3.columns,
    _ref3$getRowId = _ref3.getRowId,
    getRowId = _ref3$getRowId === void 0 ? function (_, index) {
      return index;
    } : _ref3$getRowId,
    _ref3$state = _ref3.state,
    state = _ref3$state === void 0 ? {} : _ref3$state,
    onStateChange = _ref3.onStateChange,
    _ref3$enableSorting = _ref3.enableSorting,
    enableSorting = _ref3$enableSorting === void 0 ? true : _ref3$enableSorting,
    _ref3$enableFiltering = _ref3.enableFiltering,
    enableFiltering = _ref3$enableFiltering === void 0 ? true : _ref3$enableFiltering,
    _ref3$enableGlobalFil = _ref3.enableGlobalFilter,
    enableGlobalFilter = _ref3$enableGlobalFil === void 0 ? true : _ref3$enableGlobalFil,
    _ref3$enableColumnRes = _ref3.enableColumnResizing,
    enableColumnResizing = _ref3$enableColumnRes === void 0 ? false : _ref3$enableColumnRes;
    _ref3.enableColumnReordering;
    var _ref3$enableColumnVis = _ref3.enableColumnVisibility,
    enableColumnVisibility = _ref3$enableColumnVis === void 0 ? true : _ref3$enableColumnVis;
    _ref3.enableRowSelection;
    var _ref3$enableBulkActio = _ref3.enableBulkActions,
    enableBulkActions = _ref3$enableBulkActio === void 0 ? false : _ref3$enableBulkActio;
    _ref3.enableVirtualization;
    _ref3.enableExport;
    var _ref3$enableFullscree = _ref3.enableFullscreen,
    enableFullscreen = _ref3$enableFullscree === void 0 ? false : _ref3$enableFullscree,
    selection = _ref3.selection,
    pagination = _ref3.pagination,
    rowActions = _ref3.rowActions,
    bulkActions = _ref3.bulkActions,
    toolbarActions = _ref3.toolbarActions,
    _ref3$loading = _ref3.loading,
    loading = _ref3$loading === void 0 ? false : _ref3$loading,
    _ref3$loadingMessage = _ref3.loadingMessage,
    loadingMessage = _ref3$loadingMessage === void 0 ? 'Loading...' : _ref3$loadingMessage,
    _ref3$emptyMessage = _ref3.emptyMessage,
    emptyMessage = _ref3$emptyMessage === void 0 ? 'No data available' : _ref3$emptyMessage,
    errorMessage = _ref3.errorMessage,
    _ref3$striped = _ref3.striped,
    striped = _ref3$striped === void 0 ? false : _ref3$striped;
    _ref3.bordered;
    var _ref3$hoverable = _ref3.hoverable,
    hoverable = _ref3$hoverable === void 0 ? true : _ref3$hoverable,
    _ref3$stickyHeader = _ref3.stickyHeader,
    stickyHeader = _ref3$stickyHeader === void 0 ? false : _ref3$stickyHeader,
    maxHeight = _ref3.maxHeight,
    className = _ref3.className;
    _ref3.size;
    var onRowClick = _ref3.onRowClick,
    onRowDoubleClick = _ref3.onRowDoubleClick,
    onRowHover = _ref3.onRowHover,
    onCellClick = _ref3.onCellClick,
    expandableRows = _ref3.expandableRows;
    _ref3.grouping;
    _ref3.virtualization;
  // Internal state
  var _useState9 = useState(Object.assign({
      sorting: [],
      filters: [],
      globalFilter: '',
      columnVisibility: {},
      columnOrder: columns.map(function (col) {
        return col.id;
      }),
      columnSizing: {},
      density: 'normal',
      frozenColumns: {
        left: [],
        right: []
      }
    }, state)),
    _useState0 = _slicedToArray(_useState9, 2),
    internalState = _useState0[0],
    setInternalState = _useState0[1];
  var _useState1 = useState(false),
    _useState10 = _slicedToArray(_useState1, 2),
    isFullscreen = _useState10[0],
    setIsFullscreen = _useState10[1];
  var _useState11 = useState(false),
    _useState12 = _slicedToArray(_useState11, 2),
    showColumnSettings = _useState12[0],
    setShowColumnSettings = _useState12[1];
  var tableRef = useRef(null);
  // Update internal state when external state changes
  useEffect(function () {
    if (state) {
      setInternalState(function (prev) {
        return Object.assign(Object.assign({}, prev), state);
      });
    }
  }, [state]);
  // Handle state changes
  var updateState = useCallback(function (updates) {
    var newState = Object.assign(Object.assign({}, internalState), updates);
    setInternalState(newState);
    onStateChange === null || onStateChange === void 0 ? void 0 : onStateChange(newState);
  }, [internalState, onStateChange]);
  // Data processing
  var processedData = useMemo(function () {
    var result = _toConsumableArray(data);
    // Apply global filter
    if (internalState.globalFilter) {
      result = applyGlobalFilter(result, internalState.globalFilter, columns);
    }
    // Apply column filters
    if (internalState.filters.length > 0) {
      result = applyFilters(result, internalState.filters, columns);
    }
    // Apply sorting
    if (internalState.sorting.length > 0) {
      result = applySorting(result, internalState.sorting, columns);
    }
    return result;
  }, [data, columns, internalState.globalFilter, internalState.filters, internalState.sorting]);
  // Pagination
  var paginatedData = useMemo(function () {
    if (!pagination) return processedData;
    var start = pagination.pageIndex * pagination.pageSize;
    var end = start + pagination.pageSize;
    return processedData.slice(start, end);
  }, [processedData, pagination]);
  // Visible columns
  var visibleColumns = useMemo(function () {
    return columns.filter(function (col) {
      return !col.hidden && internalState.columnVisibility[col.id] !== false;
    }).sort(function (a, b) {
      var aIndex = internalState.columnOrder.indexOf(a.id);
      var bIndex = internalState.columnOrder.indexOf(b.id);
      return aIndex - bIndex;
    });
  }, [columns, internalState.columnVisibility, internalState.columnOrder]);
  // Event handlers
  var handleSort = useCallback(function (columnId) {
    if (!enableSorting) return;
    var existingSort = internalState.sorting.find(function (s) {
      return s.columnId === columnId;
    });
    var newSorting;
    if (!existingSort) {
      newSorting = [{
        columnId: columnId,
        direction: 'asc'
      }].concat(_toConsumableArray(internalState.sorting));
    } else if (existingSort.direction === 'asc') {
      newSorting = internalState.sorting.map(function (s) {
        return s.columnId === columnId ? Object.assign(Object.assign({}, s), {
          direction: 'desc'
        }) : s;
      });
    } else {
      newSorting = internalState.sorting.filter(function (s) {
        return s.columnId !== columnId;
      });
    }
    updateState({
      sorting: newSorting
    });
  }, [enableSorting, internalState.sorting, updateState]);
  var handleFilter = useCallback(function (columnId, value) {
    var operator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'contains';
    if (!enableFiltering) return;
    var newFilters = internalState.filters.filter(function (f) {
      return f.columnId !== columnId;
    });
    if (value) {
      newFilters.push({
        columnId: columnId,
        value: value,
        operator: operator
      });
    }
    updateState({
      filters: newFilters
    });
  }, [enableFiltering, internalState.filters, updateState]);
  var handleGlobalFilter = useCallback(function (value) {
    if (!enableGlobalFilter) return;
    updateState({
      globalFilter: value
    });
  }, [enableGlobalFilter, updateState]);
  var handleColumnResize = useCallback(function (columnId, width) {
    if (!enableColumnResizing) return;
    updateState({
      columnSizing: Object.assign(Object.assign({}, internalState.columnSizing), _defineProperty({}, columnId, width))
    });
  }, [enableColumnResizing, internalState.columnSizing, updateState]);
  var handleRowSelect = useCallback(function (rowId, row) {
    var _a;
    if (!selection || selection.mode === 'none') return;
    var newSelection = new Set(selection.selectedRows);
    if (selection.mode === 'single') {
      newSelection.clear();
      newSelection.add(rowId);
    } else {
      if (newSelection.has(rowId)) {
        newSelection["delete"](rowId);
      } else {
        newSelection.add(rowId);
      }
    }
    var selectedData = paginatedData.filter(function (_, index) {
      return newSelection.has(getRowId(paginatedData[index], index));
    });
    (_a = selection.onSelectionChange) === null || _a === void 0 ? void 0 : _a.call(selection, newSelection, selectedData);
  }, [selection, paginatedData, getRowId]);
  var handleSelectAll = useCallback(function () {
    var _a;
    if (!selection || selection.mode !== 'multiple') return;
    var allPageRowIds = paginatedData.map(function (row, index) {
      return getRowId(row, index);
    });
    var allSelected = allPageRowIds.every(function (id) {
      return selection.selectedRows.has(id);
    });
    var newSelection = new Set(selection.selectedRows);
    if (allSelected) {
      // Deselect all on current page
      allPageRowIds.forEach(function (id) {
        return newSelection["delete"](id);
      });
    } else {
      // Select all on current page
      allPageRowIds.forEach(function (id) {
        return newSelection.add(id);
      });
    }
    var selectedData = data.filter(function (row, index) {
      return newSelection.has(getRowId(row, index));
    });
    (_a = selection.onSelectionChange) === null || _a === void 0 ? void 0 : _a.call(selection, newSelection, selectedData);
  }, [selection, paginatedData, data, getRowId]);
  var handleClearFilters = useCallback(function () {
    updateState({
      filters: [],
      globalFilter: ''
    });
  }, [updateState]);
  var handleResetTable = useCallback(function () {
    updateState({
      sorting: [],
      filters: [],
      globalFilter: '',
      columnVisibility: {},
      columnOrder: columns.map(function (col) {
        return col.id;
      }),
      columnSizing: {},
      density: 'normal'
    });
  }, [updateState, columns]);
  var toggleFullscreen = useCallback(function () {
    var _a, _b, _c;
    setIsFullscreen(!isFullscreen);
    if (!isFullscreen) {
      (_b = (_a = tableRef.current) === null || _a === void 0 ? void 0 : _a.requestFullscreen) === null || _b === void 0 ? void 0 : _b.call(_a);
    } else {
      (_c = document.exitFullscreen) === null || _c === void 0 ? void 0 : _c.call(document);
    }
  }, [isFullscreen]);
  // Render helpers
  var renderToolbar = function renderToolbar() {
    return jsxs("div", {
      className: "flex items-center justify-between p-4 border-b border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800",
      children: [jsxs("div", {
        className: "flex items-center space-x-4",
        children: [enableGlobalFilter && jsxs("div", {
          className: "relative",
          children: [jsx(Search, {
            className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-mw-gray-400 w-4 h-4"
          }), jsx(Input, {
            placeholder: "Search...",
            value: internalState.globalFilter,
            onChange: function onChange(e) {
              return handleGlobalFilter(e.target.value);
            },
            className: "pl-10 w-64"
          })]
        }), internalState.filters.length > 0 && jsxs("div", {
          className: "flex items-center space-x-2",
          children: [jsx("span", {
            className: "text-xs font-medium text-mw-gray-600 dark:text-mw-gray-400",
            children: "Filters:"
          }), internalState.filters.map(function (filter, index) {
            var column = columns.find(function (col) {
              return col.id === filter.columnId;
            });
            return jsxs(Badge, {
              variant: "secondary",
              className: "text-xs cursor-pointer",
              onClick: function onClick() {
                return handleFilter(filter.columnId, '');
              },
              children: [column === null || column === void 0 ? void 0 : column.header, ": ", filter.value, jsx(X, {
                className: "w-3 h-3 ml-1"
              })]
            }, index);
          }), jsxs(Button, {
            variant: "outline",
            size: "sm",
            onClick: handleClearFilters,
            className: "text-xs",
            children: [jsx(FilterX, {
              className: "w-3 h-3 mr-1"
            }), "Clear All"]
          })]
        })]
      }), jsxs("div", {
        className: "flex items-center space-x-2",
        children: [enableBulkActions && selection && selection.selectedRows.size > 0 && bulkActions && jsxs("div", {
          className: "flex items-center space-x-2 mr-4",
          children: [jsxs("span", {
            className: "text-xs text-mw-gray-600 dark:text-mw-gray-400",
            children: [selection.selectedRows.size, " selected"]
          }), bulkActions.map(function (action, index) {
            var _a;
            var selectedData = data.filter(function (row, rowIndex) {
              return selection.selectedRows.has(getRowId(row, rowIndex));
            });
            return jsxs(Button, {
              variant: action.variant || 'outline',
              size: "sm",
              onClick: function onClick() {
                return action.onClick(selectedData);
              },
              disabled: (_a = action.disabled) === null || _a === void 0 ? void 0 : _a.call(action, selectedData),
              title: action.tooltip,
              children: [action.icon, action.label]
            }, index);
          })]
        }), toolbarActions === null || toolbarActions === void 0 ? void 0 : toolbarActions.map(function (action, index) {
          return jsxs(Button, {
            variant: action.variant || 'outline',
            size: "sm",
            onClick: action.onClick,
            title: action.tooltip,
            children: [action.icon, action.label]
          }, index);
        }), jsxs("select", {
          value: internalState.density,
          onChange: function onChange(e) {
            return updateState({
              density: e.target.value
            });
          },
          className: "text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded px-2 py-1 bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white",
          children: [jsx("option", {
            value: "compact",
            children: "Compact"
          }), jsx("option", {
            value: "normal",
            children: "Normal"
          }), jsx("option", {
            value: "comfortable",
            children: "Comfortable"
          })]
        }), enableColumnVisibility && jsx(Button, {
          variant: "outline",
          size: "sm",
          onClick: function onClick() {
            return setShowColumnSettings(!showColumnSettings);
          },
          title: "Column Settings",
          children: jsx(Columns2, {
            className: "w-4 h-4"
          })
        }), jsx(Button, {
          variant: "outline",
          size: "sm",
          onClick: handleResetTable,
          title: "Reset Table",
          children: jsx(RotateCcw, {
            className: "w-4 h-4"
          })
        }), enableFullscreen && jsx(Button, {
          variant: "outline",
          size: "sm",
          onClick: toggleFullscreen,
          title: isFullscreen ? 'Exit Fullscreen' : 'Fullscreen',
          children: isFullscreen ? jsx(Minimize2, {
            className: "w-4 h-4"
          }) : jsx(Maximize2, {
            className: "w-4 h-4"
          })
        })]
      })]
    });
  };
  var renderPagination = function renderPagination() {
    if (!pagination) return null;
    var totalPages = Math.ceil(pagination.total / pagination.pageSize);
    var startRecord = pagination.pageIndex * pagination.pageSize + 1;
    var endRecord = Math.min((pagination.pageIndex + 1) * pagination.pageSize, pagination.total);
    return jsxs("div", {
      className: "flex items-center justify-between px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-t border-mw-gray-200 dark:border-mw-gray-700",
      children: [jsx("div", {
        className: "flex items-center space-x-2",
        children: pagination.showTotal && jsx("span", {
          className: "text-xs text-mw-gray-600 dark:text-mw-gray-400",
          children: typeof pagination.showTotal === 'function' ? pagination.showTotal(pagination.total, [startRecord, endRecord]) : "Showing ".concat(startRecord, " to ").concat(endRecord, " of ").concat(pagination.total, " results")
        })
      }), jsxs("div", {
        className: "flex items-center space-x-2",
        children: [pagination.showSizeChanger && jsxs("div", {
          className: "flex items-center space-x-2",
          children: [jsx("span", {
            className: "text-xs text-mw-gray-600 dark:text-mw-gray-400",
            children: "Show"
          }), jsx("select", {
            value: pagination.pageSize,
            onChange: function onChange(e) {
              return pagination.onPageSizeChange(Number(e.target.value));
            },
            className: "text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded px-2 py-1 bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white",
            children: (pagination.pageSizeOptions || [10, 25, 50, 100]).map(function (size) {
              return jsx("option", {
                value: size,
                children: size
              }, size);
            })
          })]
        }), jsxs("div", {
          className: "flex items-center space-x-1",
          children: [jsx(Button, {
            variant: "outline",
            size: "sm",
            onClick: function onClick() {
              return pagination.onPageChange(0);
            },
            disabled: pagination.pageIndex === 0,
            title: "First Page",
            children: jsx(ChevronsLeft, {
              className: "w-4 h-4"
            })
          }), jsx(Button, {
            variant: "outline",
            size: "sm",
            onClick: function onClick() {
              return pagination.onPageChange(pagination.pageIndex - 1);
            },
            disabled: pagination.pageIndex === 0,
            title: "Previous Page",
            children: jsx(ChevronLeft, {
              className: "w-4 h-4"
            })
          }), Array.from({
            length: Math.min(5, totalPages)
          }, function (_, i) {
            var pageNum;
            if (totalPages <= 5) {
              pageNum = i;
            } else if (pagination.pageIndex < 3) {
              pageNum = i;
            } else if (pagination.pageIndex > totalPages - 3) {
              pageNum = totalPages - 5 + i;
            } else {
              pageNum = pagination.pageIndex - 2 + i;
            }
            return jsx(Button, {
              variant: pagination.pageIndex === pageNum ? 'primary' : 'outline',
              size: "sm",
              onClick: function onClick() {
                return pagination.onPageChange(pageNum);
              },
              className: "min-w-[2rem]",
              children: pageNum + 1
            }, pageNum);
          }), jsx(Button, {
            variant: "outline",
            size: "sm",
            onClick: function onClick() {
              return pagination.onPageChange(pagination.pageIndex + 1);
            },
            disabled: pagination.pageIndex >= totalPages - 1,
            title: "Next Page",
            children: jsx(ChevronRight, {
              className: "w-4 h-4"
            })
          }), jsx(Button, {
            variant: "outline",
            size: "sm",
            onClick: function onClick() {
              return pagination.onPageChange(totalPages - 1);
            },
            disabled: pagination.pageIndex >= totalPages - 1,
            title: "Last Page",
            children: jsx(ChevronsRight, {
              className: "w-4 h-4"
            })
          })]
        }), pagination.showQuickJumper && jsxs("div", {
          className: "flex items-center space-x-2",
          children: [jsx("span", {
            className: "text-xs text-mw-gray-600 dark:text-mw-gray-400",
            children: "Go to"
          }), jsx(Input, {
            type: "number",
            min: 1,
            max: totalPages,
            className: "w-16 text-xs",
            onKeyDown: function onKeyDown(e) {
              if (e.key === 'Enter') {
                var page = parseInt(e.target.value) - 1;
                if (page >= 0 && page < totalPages) {
                  pagination.onPageChange(page);
                }
              }
            }
          })]
        })]
      })]
    });
  };
  var hasSelection = selection && selection.mode !== 'none';
  var hasActions = rowActions && rowActions.length > 0;
  return jsxs("div", {
    ref: tableRef,
    className: cn$c('bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg overflow-hidden', isFullscreen && 'fixed inset-0 z-50 rounded-none', className),
    children: [renderToolbar(), jsx(Modal, {
      isOpen: showColumnSettings,
      onClose: function onClose() {
        return setShowColumnSettings(false);
      },
      size: "md",
      children: jsxs("div", {
        className: "p-6",
        children: [jsx("h3", {
          className: "text-lg font-semibold text-mw-gray-900 dark:text-white mb-4",
          children: "Column Settings"
        }), jsxs("div", {
          className: "space-y-4",
          children: [jsx("div", {
            className: "text-sm text-mw-gray-600 dark:text-mw-gray-400",
            children: "Configure which columns to display and their order."
          }), jsx("div", {
            className: "space-y-2 max-h-64 overflow-y-auto",
            children: columns.map(function (column) {
              return jsxs("div", {
                className: "flex items-center justify-between p-2 border border-mw-gray-200 dark:border-mw-gray-700 rounded",
                children: [jsxs("div", {
                  className: "flex items-center space-x-3",
                  children: [jsx("input", {
                    type: "checkbox",
                    checked: internalState.columnVisibility[column.id] !== false,
                    onChange: function onChange(e) {
                      updateState({
                        columnVisibility: Object.assign(Object.assign({}, internalState.columnVisibility), _defineProperty({}, column.id, e.target.checked))
                      });
                    },
                    className: "rounded border-mw-gray-300 dark:border-mw-gray-600 text-mw-primary-600 focus:ring-mw-primary-500"
                  }), jsx("span", {
                    className: "text-sm",
                    children: column.header
                  })]
                }), jsxs("div", {
                  className: "flex items-center space-x-2",
                  children: [column.pinned && jsx("div", {
                    title: "Pinned column",
                    children: jsx(Lock, {
                      className: "w-4 h-4 text-mw-primary-500"
                    })
                  }), column.sticky && jsx(Badge, {
                    variant: "secondary",
                    className: "text-xs",
                    children: column.sticky
                  })]
                })]
              }, column.id);
            })
          }), jsxs("div", {
            className: "flex justify-end space-x-2 pt-4 border-t border-mw-gray-200 dark:border-mw-gray-700",
            children: [jsx(Button, {
              variant: "outline",
              onClick: function onClick() {
                updateState({
                  columnVisibility: Object.fromEntries(columns.map(function (col) {
                    return [col.id, true];
                  }))
                });
              },
              children: "Show All"
            }), jsx(Button, {
              variant: "outline",
              onClick: function onClick() {
                return setShowColumnSettings(false);
              },
              children: "Close"
            })]
          })]
        })]
      })
    }), "      ", jsx("div", {
      className: cn$c('overflow-auto', stickyHeader && 'max-h-96'),
      style: {
        maxHeight: maxHeight
      },
      children: jsxs("table", {
        className: "w-full",
        children: [jsx("thead", {
          className: cn$c(stickyHeader && 'sticky top-0 z-10'),
          children: jsxs("tr", {
            children: [hasSelection && jsx("th", {
              className: cn$c('w-12 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700', internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3'),
              children: selection.mode === 'multiple' && jsx("input", {
                type: "checkbox",
                checked: paginatedData.length > 0 && paginatedData.every(function (row, index) {
                  return selection.selectedRows.has(getRowId(row, index));
                }),
                onChange: handleSelectAll,
                className: "rounded border-mw-gray-300 dark:border-mw-gray-600 text-mw-primary-600 focus:ring-mw-primary-500"
              })
            }), visibleColumns.map(function (column) {
              return jsx(AdvancedTableHeaderCell, {
                column: column,
                sorting: internalState.sorting,
                onSort: handleSort,
                onFilter: handleFilter,
                onResize: enableColumnResizing ? handleColumnResize : undefined,
                density: internalState.density
              }, column.id);
            }), hasActions && jsx("th", {
              className: cn$c('w-16 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700', internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3'),
              children: jsx("span", {
                className: "sr-only",
                children: "Actions"
              })
            })]
          })
        }), jsx("tbody", {
          className: "divide-y divide-mw-gray-200 dark:divide-mw-gray-700",
          children: loading ? jsx("tr", {
            children: jsx("td", {
              colSpan: visibleColumns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
              className: "px-4 py-8 text-center",
              children: jsxs("div", {
                className: "flex items-center justify-center space-x-2",
                children: [jsx(RefreshCw, {
                  className: "w-4 h-4 animate-spin text-mw-primary-600"
                }), jsx("span", {
                  className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
                  children: loadingMessage
                })]
              })
            })
          }) : /* Error State */
          errorMessage ? jsx("tr", {
            children: jsx("td", {
              colSpan: visibleColumns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
              className: "px-4 py-8 text-center",
              children: jsx("div", {
                className: "text-red-600 dark:text-red-400",
                children: errorMessage
              })
            })
          }) : /* Empty State */
          paginatedData.length === 0 ? jsx("tr", {
            children: jsx("td", {
              colSpan: visibleColumns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
              className: "px-4 py-8 text-center text-sm text-mw-gray-500 dark:text-mw-gray-400",
              children: emptyMessage
            })
          }) : (/* Data Rows */
          paginatedData.map(function (row, index) {
            var rowId = getRowId(row, index);
            var isSelected = selection === null || selection === void 0 ? void 0 : selection.selectedRows.has(rowId);
            return jsxs(React.Fragment, {
              children: [jsxs("tr", {
                className: cn$c('transition-colors', hoverable && 'hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800/50', striped && index % 2 === 1 && 'bg-mw-gray-25 dark:bg-mw-gray-950/50', isSelected && 'bg-mw-primary-50 dark:bg-mw-primary-950/20', onRowClick && 'cursor-pointer', internalState.density === 'compact' ? 'h-10' : internalState.density === 'normal' ? 'h-12' : 'h-16'),
                onClick: function onClick() {
                  return onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(row, index);
                },
                onDoubleClick: function onDoubleClick() {
                  return onRowDoubleClick === null || onRowDoubleClick === void 0 ? void 0 : onRowDoubleClick(row, index);
                },
                onMouseEnter: function onMouseEnter() {
                  return onRowHover === null || onRowHover === void 0 ? void 0 : onRowHover(row, index);
                },
                children: [hasSelection && jsx("td", {
                  className: cn$c(internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3'),
                  children: jsx("input", {
                    type: "checkbox",
                    checked: isSelected,
                    onChange: function onChange() {
                      return handleRowSelect(rowId, row);
                    },
                    className: "rounded border-mw-gray-300 dark:border-mw-gray-600 text-mw-primary-600 focus:ring-mw-primary-500"
                  })
                }), visibleColumns.map(function (column) {
                  var value = column.accessorFn ? column.accessorFn(row) : column.accessorKey ? row[column.accessorKey] : row;
                  return jsx(AdvancedTableCell, {
                    column: column,
                    row: row,
                    value: value,
                    density: internalState.density,
                    onClick: function onClick() {
                      return onCellClick === null || onCellClick === void 0 ? void 0 : onCellClick(value, row, column);
                    }
                  }, column.id);
                }), hasActions && jsx("td", {
                  className: cn$c('text-center', internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3'),
                  children: jsxs("div", {
                    className: "flex items-center justify-center space-x-1",
                    children: [rowActions.slice(0, 3).map(function (action, actionIndex) {
                      var _a, _b;
                      if ((_a = action.hidden) === null || _a === void 0 ? void 0 : _a.call(action, row)) return null;
                      return jsx(Tooltip, {
                        content: action.tooltip || action.label,
                        children: jsx(Button, {
                          variant: "outline",
                          size: "sm",
                          onClick: function onClick(e) {
                            e.stopPropagation();
                            action.onClick(row, index);
                          },
                          disabled: (_b = action.disabled) === null || _b === void 0 ? void 0 : _b.call(action, row),
                          className: "h-8 w-8 p-0",
                          children: action.icon || jsx(EllipsisVertical, {
                            className: "w-4 h-4"
                          })
                        })
                      }, actionIndex);
                    }), rowActions.length > 3 && jsxs(Dropdown, {
                      children: [jsx(DropdownTrigger, {
                        asChild: true,
                        children: jsx(Button, {
                          variant: "outline",
                          size: "sm",
                          className: "h-8 w-8 p-0",
                          children: jsx(EllipsisVertical, {
                            className: "w-4 h-4"
                          })
                        })
                      }), jsx(DropdownContent, {
                        children: rowActions.slice(3).map(function (action, actionIndex) {
                          var _a, _b;
                          if ((_a = action.hidden) === null || _a === void 0 ? void 0 : _a.call(action, row)) return null;
                          return jsx(DropdownItem, {
                            onClick: function onClick() {
                              return action.onClick(row, index);
                            },
                            disabled: (_b = action.disabled) === null || _b === void 0 ? void 0 : _b.call(action, row),
                            children: jsxs("div", {
                              className: "flex items-center space-x-2",
                              children: [action.icon, jsx("span", {
                                children: action.label
                              })]
                            })
                          }, actionIndex);
                        })
                      })]
                    })]
                  })
                })]
              }), (expandableRows === null || expandableRows === void 0 ? void 0 : expandableRows.enabled) && expandableRows.expandedRows.has(rowId) && jsx("tr", {
                children: jsx("td", {
                  colSpan: visibleColumns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
                  className: "p-0 border-0",
                  children: jsx("div", {
                    className: "bg-mw-gray-50 dark:bg-mw-gray-800 p-4",
                    children: expandableRows.renderExpandedRow(row)
                  })
                })
              })]
            }, rowId);
          }))
        }), visibleColumns.some(function (col) {
          return col.footer;
        }) && jsx("tfoot", {
          className: "bg-mw-gray-50 dark:bg-mw-gray-800 border-t border-mw-gray-200 dark:border-mw-gray-700",
          children: jsxs("tr", {
            children: [hasSelection && jsx("td", {
              className: cn$c(internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3')
            }), visibleColumns.map(function (column) {
              var columnData = processedData.map(function (row) {
                return column.accessorFn ? column.accessorFn(row) : column.accessorKey ? row[column.accessorKey] : row;
              });
              var footerContent;
              if (typeof column.footer === 'function') {
                footerContent = column.footer(columnData);
              } else {
                footerContent = column.footer;
              }
              return jsx("td", {
                className: cn$c('text-sm font-medium text-mw-gray-900 dark:text-white', internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3', column.align === 'center' && 'text-center', column.align === 'right' && 'text-right'),
                children: footerContent
              }, column.id);
            }), hasActions && jsx("td", {
              className: cn$c(internalState.density === 'compact' ? 'px-2 py-1' : internalState.density === 'normal' ? 'px-4 py-2' : 'px-6 py-3')
            })]
          })
        })]
      })
    }), renderPagination()]
  });
}

var emptyStateIcons = {
  noData: jsx(Database, {
    className: "w-12 h-12 text-mw-gray-400"
  }),
  noResults: jsx(Search, {
    className: "w-12 h-12 text-mw-gray-400"
  }),
  noFiles: jsx(FileX, {
    className: "w-12 h-12 text-mw-gray-400"
  }),
  noUsers: jsx(Users, {
    className: "w-12 h-12 text-mw-gray-400"
  }),
  empty: jsx(Package, {
    className: "w-12 h-12 text-mw-gray-400"
  })
};
var emptySizes = {
  sm: {
    container: 'py-8',
    icon: 'w-8 h-8',
    title: 'text-sm font-medium',
    description: 'text-xs',
    spacing: 'space-y-2'
  },
  md: {
    container: 'py-12',
    icon: 'w-12 h-12',
    title: 'text-lg font-semibold',
    description: 'text-sm',
    spacing: 'space-y-4'
  },
  lg: {
    container: 'py-16',
    icon: 'w-16 h-16',
    title: 'text-xl font-semibold',
    description: 'text-base',
    spacing: 'space-y-6'
  }
};
function EmptyState(_a) {
  var icon = _a.icon,
    title = _a.title,
    description = _a.description,
    action = _a.action,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    className = _a.className,
    props = __rest(_a, ["icon", "title", "description", "action", "size", "className"]);
  var sizeConfig = emptySizes[size];
  return jsxs("div", Object.assign({
    className: clsx('flex flex-col items-center justify-center text-center', sizeConfig.container, sizeConfig.spacing, className)
  }, props, {
    children: [jsx("div", {
      className: clsx('flex items-center justify-center', sizeConfig.icon),
      children: icon || emptyStateIcons.empty
    }), jsxs("div", {
      className: "space-y-2",
      children: [jsx("h3", {
        className: clsx(sizeConfig.title, 'text-mw-gray-900 dark:text-white'),
        children: title
      }), description && jsx("p", {
        className: clsx(sizeConfig.description, 'text-mw-gray-600 dark:text-mw-gray-400 max-w-sm'),
        children: description
      })]
    }), action && jsx(Button, {
      onClick: action.onClick,
      variant: action.variant || 'primary',
      size: size === 'sm' ? 'sm' : 'md',
      children: action.label
    })]
  }));
}
// Predefined empty state variants
function NoDataEmptyState(props) {
  return jsx(EmptyState, Object.assign({
    icon: emptyStateIcons.noData
  }, props));
}
function NoResultsEmptyState(props) {
  return jsx(EmptyState, Object.assign({
    icon: emptyStateIcons.noResults
  }, props));
}

var chipVariants = {
  "default": 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',
  primary: 'bg-mw-blue-100 text-mw-blue-800 dark:bg-mw-blue-900/30 dark:text-mw-blue-300',
  secondary: 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300',
  success: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
  warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',
  error: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',
  outline: 'border border-mw-gray-300 text-mw-gray-700 dark:border-mw-gray-600 dark:text-mw-gray-300'
};
var chipSizes = {
  sm: 'px-2 py-1 text-xs',
  md: 'px-3 py-1.5 text-sm',
  lg: 'px-4 py-2 text-base'
};
function Chip(_ref) {
  var children = _ref.children,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'default' : _ref$variant,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    onRemove = _ref.onRemove,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$clickable = _ref.clickable,
    clickable = _ref$clickable === void 0 ? false : _ref$clickable,
    className = _ref.className,
    onClick = _ref.onClick;
  var isInteractive = clickable || onClick;
  return jsxs("span", {
    className: clsx('inline-flex items-center gap-1 rounded-full font-medium transition-colors duration-200', chipVariants[variant], chipSizes[size], isInteractive && !disabled && 'cursor-pointer hover:opacity-80', disabled && 'opacity-50 cursor-not-allowed', className),
    onClick: !disabled && onClick ? onClick : undefined,
    children: [children, onRemove && jsx("button", {
      type: "button",
      onClick: function onClick(e) {
        e.stopPropagation();
        if (!disabled) {
          onRemove();
        }
      },
      disabled: disabled,
      className: clsx('ml-1 rounded-full p-0.5 hover:bg-black/10 dark:hover:bg-white/10 transition-colors duration-200', disabled && 'cursor-not-allowed hover:bg-transparent dark:hover:bg-transparent'),
      "aria-label": "Remove",
      children: jsx(X, {
        className: clsx(size === 'sm' ? 'w-3 h-3' : size === 'md' ? 'w-3.5 h-3.5' : 'w-4 h-4')
      })
    })]
  });
}
// Alternative name for consistency with some design systems
var Tag = Chip;

function CollapsibleCode(_ref) {
  var code = _ref.code,
    _ref$language = _ref.language,
    language = _ref$language === void 0 ? 'tsx' : _ref$language,
    title = _ref.title,
    _ref$defaultExpanded = _ref.defaultExpanded,
    defaultExpanded = _ref$defaultExpanded === void 0 ? false : _ref$defaultExpanded,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? '' : _ref$className;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    copied = _useState2[0],
    setCopied = _useState2[1];
  var _useState3 = useState(defaultExpanded),
    _useState4 = _slicedToArray(_useState3, 2),
    isExpanded = _useState4[0],
    setIsExpanded = _useState4[1];
  var copyToClipboard = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
      return _regenerator().w(function (_context) {
        while (1) switch (_context.n) {
          case 0:
            _context.n = 1;
            return navigator.clipboard.writeText(code);
          case 1:
            setCopied(true);
            setTimeout(function () {
              return setCopied(false);
            }, 2000);
          case 2:
            return _context.a(2);
        }
      }, _callee);
    }));
    return function copyToClipboard() {
      return _ref2.apply(this, arguments);
    };
  }();
  return jsxs("div", {
    className: "relative ".concat(className),
    children: [title && jsx("div", {
      className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-2",
      children: title
    }), jsx("div", {
      className: "mb-2",
      children: jsxs(Button, {
        variant: "outline",
        size: "sm",
        onClick: function onClick() {
          return setIsExpanded(!isExpanded);
        },
        className: "inline-flex items-center space-x-2",
        children: [isExpanded ? jsx(ChevronDown, {
          className: "h-4 w-4"
        }) : jsx(ChevronRight, {
          className: "h-4 w-4"
        }), jsx(Code, {
          className: "h-4 w-4"
        }), jsx("span", {
          children: isExpanded ? 'Hide Code' : 'Show Code'
        })]
      })
    }), isExpanded && jsxs("div", {
      className: "relative bg-mw-gray-50 dark:bg-mw-gray-900 rounded-lg p-4 pr-12",
      children: [jsx("pre", {
        className: "text-sm text-mw-gray-800 dark:text-mw-gray-200 overflow-x-auto",
        children: jsx("code", {
          className: "language-".concat(language),
          children: code
        })
      }), jsx(Button, {
        variant: "ghost",
        size: "sm",
        className: "absolute top-2 right-2 h-8 w-8 p-0",
        onClick: copyToClipboard,
        children: copied ? jsx(Check, {
          className: "h-4 w-4 text-green-600"
        }) : jsx(Copy, {
          className: "h-4 w-4"
        })
      })]
    })]
  });
}

function cn$b() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var listVariants = {
  ordered: 'list-decimal',
  unordered: 'list-disc',
  none: 'list-none'
};
var listSizes = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg'
};
var listSpacing = {
  tight: 'space-y-1',
  normal: 'space-y-2',
  loose: 'space-y-4'
};
function List(_ref) {
  var children = _ref.children,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'unordered' : _ref$variant,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$spacing = _ref.spacing,
    spacing = _ref$spacing === void 0 ? 'normal' : _ref$spacing,
    className = _ref.className;
  var Component = variant === 'ordered' ? 'ol' : 'ul';
  return jsx(Component, {
    className: cn$b(listVariants[variant], listSizes[size], listSpacing[spacing], variant !== 'none' && 'pl-5', 'text-mw-gray-700 dark:text-mw-gray-300', className),
    children: children
  });
}
function ListItem(_ref2) {
  var children = _ref2.children,
    className = _ref2.className,
    startContent = _ref2.startContent,
    endContent = _ref2.endContent;
  return jsxs("li", {
    className: cn$b('flex items-start', className),
    children: [startContent && jsx("div", {
      className: "flex-shrink-0 mr-2",
      children: startContent
    }), jsx("div", {
      className: "flex-1 min-w-0",
      children: children
    }), endContent && jsx("div", {
      className: "flex-shrink-0 ml-2",
      children: endContent
    })]
  });
}
function DescriptionList(_ref3) {
  var items = _ref3.items,
    _ref3$layout = _ref3.layout,
    layout = _ref3$layout === void 0 ? 'vertical' : _ref3$layout,
    className = _ref3.className;
  return jsx("dl", {
    className: cn$b(layout === 'horizontal' ? 'grid grid-cols-3 gap-x-4 gap-y-2' : 'space-y-3', className),
    children: items.map(function (item, index) {
      return jsxs(React.Fragment, {
        children: [jsx("dt", {
          className: cn$b('font-medium text-mw-gray-900 dark:text-white', layout === 'horizontal' ? 'col-span-1' : 'mb-1'),
          children: item.term
        }), jsx("dd", {
          className: cn$b('text-mw-gray-600 dark:text-mw-gray-300', layout === 'horizontal' ? 'col-span-2' : ''),
          children: item.description
        })]
      }, index);
    })
  });
}
function NavigationList(_ref4) {
  var items = _ref4.items,
    className = _ref4.className;
  return jsx("ul", {
    className: cn$b('space-y-1', className),
    children: items.map(function (item, index) {
      return jsx("li", {
        children: item.href ? jsxs("a", {
          href: item.href,
          className: cn$b('flex items-center px-3 py-2 rounded-md text-sm font-medium transition-colors', item.active ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'text-mw-gray-600 dark:text-mw-gray-300 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 hover:text-mw-gray-900 dark:hover:text-white', item.disabled && 'opacity-50 cursor-not-allowed pointer-events-none'),
          children: [item.icon && jsx("span", {
            className: "mr-2",
            children: item.icon
          }), item.label]
        }) : jsxs("button", {
          onClick: item.onClick,
          disabled: item.disabled,
          className: cn$b('w-full flex items-center px-3 py-2 rounded-md text-sm font-medium transition-colors text-left', item.active ? 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300' : 'text-mw-gray-600 dark:text-mw-gray-300 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 hover:text-mw-gray-900 dark:hover:text-white', item.disabled && 'opacity-50 cursor-not-allowed'),
          children: [item.icon && jsx("span", {
            className: "mr-2",
            children: item.icon
          }), item.label]
        })
      }, index);
    })
  });
}

function cn$a() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var aspectRatios$1 = {
  square: 'aspect-square',
  video: 'aspect-video',
  wide: 'aspect-[21/9]',
  auto: ''
};
function CarouselSlide(_ref) {
  var children = _ref.children,
    className = _ref.className;
  return jsx("div", {
    className: cn$a('flex-shrink-0 w-full', className),
    children: children
  });
}
function CarouselControls(_ref2) {
  var currentSlide = _ref2.currentSlide,
    totalSlides = _ref2.totalSlides,
    onPrevious = _ref2.onPrevious,
    onNext = _ref2.onNext,
    onSlideSelect = _ref2.onSlideSelect,
    _ref2$showDots = _ref2.showDots,
    showDots = _ref2$showDots === void 0 ? true : _ref2$showDots,
    _ref2$showArrows = _ref2.showArrows,
    showArrows = _ref2$showArrows === void 0 ? true : _ref2$showArrows,
    _ref2$isAutoplay = _ref2.isAutoplay,
    isAutoplay = _ref2$isAutoplay === void 0 ? false : _ref2$isAutoplay,
    onToggleAutoplay = _ref2.onToggleAutoplay;
  return jsxs(Fragment, {
    children: [showArrows && jsxs(Fragment, {
      children: [jsx("button", {
        onClick: onPrevious,
        className: "absolute left-2 top-1/2 -translate-y-1/2 z-10 p-2 rounded-full bg-white/80 dark:bg-mw-gray-800/80 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-white dark:hover:bg-mw-gray-800 shadow-lg transition-all duration-200 backdrop-blur-sm",
        "aria-label": "Previous slide",
        children: jsx(ChevronLeft, {
          className: "w-5 h-5"
        })
      }), jsx("button", {
        onClick: onNext,
        className: "absolute right-2 top-1/2 -translate-y-1/2 z-10 p-2 rounded-full bg-white/80 dark:bg-mw-gray-800/80 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-white dark:hover:bg-mw-gray-800 shadow-lg transition-all duration-200 backdrop-blur-sm",
        "aria-label": "Next slide",
        children: jsx(ChevronRight, {
          className: "w-5 h-5"
        })
      })]
    }), showDots && totalSlides > 1 && jsxs("div", {
      className: "absolute bottom-4 left-1/2 -translate-x-1/2 z-10 flex items-center space-x-2",
      children: [Array.from({
        length: totalSlides
      }, function (_, index) {
        return jsx("button", {
          onClick: function onClick() {
            return onSlideSelect(index);
          },
          className: cn$a('w-2 h-2 rounded-full transition-all duration-200', index === currentSlide ? 'bg-white dark:bg-mw-gray-200 w-6' : 'bg-white/50 dark:bg-mw-gray-200/50 hover:bg-white/75 dark:hover:bg-mw-gray-200/75'),
          "aria-label": "Go to slide ".concat(index + 1)
        }, index);
      }), onToggleAutoplay && jsx("button", {
        onClick: onToggleAutoplay,
        className: "ml-4 p-1 rounded-full bg-white/80 dark:bg-mw-gray-800/80 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-white dark:hover:bg-mw-gray-800 backdrop-blur-sm",
        "aria-label": isAutoplay ? 'Pause autoplay' : 'Start autoplay',
        children: isAutoplay ? jsx(Pause, {
          className: "w-3 h-3"
        }) : jsx(Play, {
          className: "w-3 h-3"
        })
      })]
    })]
  });
}
function Carousel(_ref3) {
  var children = _ref3.children,
    _ref3$autoplay = _ref3.autoplay,
    autoplay = _ref3$autoplay === void 0 ? false : _ref3$autoplay,
    _ref3$autoplayInterva = _ref3.autoplayInterval,
    autoplayInterval = _ref3$autoplayInterva === void 0 ? 3000 : _ref3$autoplayInterva,
    _ref3$showDots = _ref3.showDots,
    showDots = _ref3$showDots === void 0 ? true : _ref3$showDots,
    _ref3$showArrows = _ref3.showArrows,
    showArrows = _ref3$showArrows === void 0 ? true : _ref3$showArrows,
    _ref3$infinite = _ref3.infinite,
    infinite = _ref3$infinite === void 0 ? true : _ref3$infinite,
    _ref3$slidesToShow = _ref3.slidesToShow,
    slidesToShow = _ref3$slidesToShow === void 0 ? 1 : _ref3$slidesToShow,
    _ref3$slidesToScroll = _ref3.slidesToScroll,
    slidesToScroll = _ref3$slidesToScroll === void 0 ? 1 : _ref3$slidesToScroll,
    className = _ref3.className,
    _ref3$aspectRatio = _ref3.aspectRatio,
    aspectRatio = _ref3$aspectRatio === void 0 ? 'auto' : _ref3$aspectRatio,
    _ref3$gap = _ref3.gap,
    gap = _ref3$gap === void 0 ? 0 : _ref3$gap,
    onSlideChange = _ref3.onSlideChange;
  var _useState = useState(0),
    _useState2 = _slicedToArray(_useState, 2),
    currentSlide = _useState2[0],
    setCurrentSlide = _useState2[1];
  var _useState3 = useState(autoplay),
    _useState4 = _slicedToArray(_useState3, 2),
    isAutoplay = _useState4[0],
    setIsAutoplay = _useState4[1];
  var _useState5 = useState(false),
    _useState6 = _slicedToArray(_useState5, 2),
    isPaused = _useState6[0],
    setIsPaused = _useState6[1];
  var carouselRef = useRef(null);
  var autoplayRef = useRef();
  var slides = React.Children.toArray(children);
  var totalSlides = Math.ceil(slides.length / slidesToShow);
  var slideWidth = 100 / slidesToShow;
  var goToSlide = useCallback(function (index) {
    var newIndex = index;
    if (infinite) {
      if (index < 0) {
        newIndex = totalSlides - 1;
      } else if (index >= totalSlides) {
        newIndex = 0;
      }
    } else {
      newIndex = Math.max(0, Math.min(index, totalSlides - 1));
    }
    setCurrentSlide(newIndex);
    onSlideChange === null || onSlideChange === void 0 ? void 0 : onSlideChange(newIndex);
  }, [totalSlides, infinite, onSlideChange]);
  var goToPrevious = useCallback(function () {
    goToSlide(currentSlide - slidesToScroll);
  }, [currentSlide, slidesToScroll, goToSlide]);
  var goToNext = useCallback(function () {
    goToSlide(currentSlide + slidesToScroll);
  }, [currentSlide, slidesToScroll, goToSlide]);
  var toggleAutoplay = function toggleAutoplay() {
    setIsAutoplay(!isAutoplay);
  };
  // Autoplay functionality
  useEffect(function () {
    if (isAutoplay && !isPaused && totalSlides > 1) {
      autoplayRef.current = setInterval(function () {
        goToNext();
      }, autoplayInterval);
    }
    return function () {
      if (autoplayRef.current) {
        clearInterval(autoplayRef.current);
      }
    };
  }, [isAutoplay, isPaused, goToNext, autoplayInterval, totalSlides]);
  // Keyboard navigation
  useEffect(function () {
    var handleKeyDown = function handleKeyDown(event) {
      if (event.key === 'ArrowLeft') {
        goToPrevious();
      } else if (event.key === 'ArrowRight') {
        goToNext();
      } else if (event.key === ' ') {
        event.preventDefault();
        toggleAutoplay();
      }
    };
    var carousel = carouselRef.current;
    if (carousel) {
      carousel.addEventListener('keydown', handleKeyDown);
      return function () {
        return carousel.removeEventListener('keydown', handleKeyDown);
      };
    }
  }, [goToPrevious, goToNext]);
  // Touch/swipe support
  var _useState7 = useState(null),
    _useState8 = _slicedToArray(_useState7, 2),
    touchStart = _useState8[0],
    setTouchStart = _useState8[1];
  var _useState9 = useState(null),
    _useState0 = _slicedToArray(_useState9, 2),
    touchEnd = _useState0[0],
    setTouchEnd = _useState0[1];
  var handleTouchStart = function handleTouchStart(e) {
    setTouchEnd(null);
    setTouchStart(e.targetTouches[0].clientX);
  };
  var handleTouchMove = function handleTouchMove(e) {
    setTouchEnd(e.targetTouches[0].clientX);
  };
  var handleTouchEnd = function handleTouchEnd() {
    if (!touchStart || !touchEnd) return;
    var distance = touchStart - touchEnd;
    var isLeftSwipe = distance > 50;
    var isRightSwipe = distance < -50;
    if (isLeftSwipe) {
      goToNext();
    } else if (isRightSwipe) {
      goToPrevious();
    }
  };
  var translateX = -(currentSlide * (100 / slidesToShow));
  return jsxs("div", {
    ref: carouselRef,
    className: cn$a('relative overflow-hidden rounded-lg focus:outline-none', aspectRatios$1[aspectRatio], className),
    tabIndex: 0,
    onMouseEnter: function onMouseEnter() {
      return setIsPaused(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setIsPaused(false);
    },
    onTouchStart: handleTouchStart,
    onTouchMove: handleTouchMove,
    onTouchEnd: handleTouchEnd,
    children: [jsx("div", {
      className: "flex transition-transform duration-300 ease-out h-full",
      style: {
        transform: "translateX(".concat(translateX, "%)"),
        gap: gap ? "".concat(gap, "px") : undefined
      },
      children: slides.map(function (slide, index) {
        return jsx("div", {
          className: "flex-shrink-0 h-full",
          style: {
            width: "".concat(slideWidth, "%")
          },
          children: slide
        }, index);
      })
    }), jsx(CarouselControls, {
      currentSlide: currentSlide,
      totalSlides: totalSlides,
      onPrevious: goToPrevious,
      onNext: goToNext,
      onSlideSelect: goToSlide,
      showDots: showDots,
      showArrows: showArrows,
      isAutoplay: isAutoplay,
      onToggleAutoplay: toggleAutoplay
    }), jsxs("div", {
      className: "absolute top-4 right-4 px-2 py-1 bg-black/50 text-white text-xs rounded backdrop-blur-sm",
      children: [currentSlide + 1, " / ", totalSlides]
    })]
  });
}
function ImageCarousel(_a) {
  var images = _a.images,
    _a$objectFit = _a.objectFit,
    objectFit = _a$objectFit === void 0 ? 'cover' : _a$objectFit,
    carouselProps = __rest(_a, ["images", "objectFit"]);
  return jsx(Carousel, Object.assign({}, carouselProps, {
    children: images.map(function (image, index) {
      return jsx(CarouselSlide, {
        children: jsxs("div", {
          className: "relative w-full h-full bg-mw-gray-100 dark:bg-mw-gray-800",
          children: [jsx("img", {
            src: image.src,
            alt: image.alt,
            className: cn$a('w-full h-full', objectFit === 'cover' ? 'object-cover' : 'object-contain')
          }), image.caption && jsx("div", {
            className: "absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/60 to-transparent p-4",
            children: jsx("p", {
              className: "text-white text-sm font-medium",
              children: image.caption
            })
          })]
        })
      }, index);
    })
  }));
}

function cn$9() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var containerSizes = {
  xs: 'max-w-xs',
  // 320px
  sm: 'max-w-sm',
  // 384px 
  md: 'max-w-md',
  // 448px
  lg: 'max-w-lg',
  // 512px
  xl: 'max-w-xl',
  // 576px
  '2xl': 'max-w-2xl',
  // 672px
  full: 'max-w-full'
};
var containerPadding = {
  none: '',
  sm: 'px-4',
  md: 'px-6',
  lg: 'px-8',
  xl: 'px-12'
};
function Container(_ref) {
  var children = _ref.children,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'full' : _ref$size,
    _ref$padding = _ref.padding,
    padding = _ref$padding === void 0 ? 'md' : _ref$padding,
    _ref$centered = _ref.centered,
    centered = _ref$centered === void 0 ? true : _ref$centered,
    className = _ref.className,
    _ref$as = _ref.as,
    Component = _ref$as === void 0 ? 'div' : _ref$as;
  return jsx(Component, {
    className: cn$9(containerSizes[size], containerPadding[padding], centered && 'mx-auto', className),
    children: children
  });
}
function ResponsiveContainer(_ref2) {
  var children = _ref2.children,
    _ref2$breakpoints = _ref2.breakpoints,
    breakpoints = _ref2$breakpoints === void 0 ? {
      sm: 'sm',
      md: 'md',
      lg: 'lg',
      xl: 'xl',
      '2xl': '2xl'
    } : _ref2$breakpoints,
    _ref2$padding = _ref2.padding,
    padding = _ref2$padding === void 0 ? 'md' : _ref2$padding,
    _ref2$centered = _ref2.centered,
    centered = _ref2$centered === void 0 ? true : _ref2$centered,
    className = _ref2.className,
    _ref2$as = _ref2.as,
    Component = _ref2$as === void 0 ? 'div' : _ref2$as;
  var responsiveClasses = Object.entries(breakpoints).map(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2),
      breakpoint = _ref4[0],
      size = _ref4[1];
    if (breakpoint === 'sm') return containerSizes[size];
    return "".concat(breakpoint, ":").concat(containerSizes[size]);
  }).join(' ');
  return jsx(Component, {
    className: cn$9(responsiveClasses, containerPadding[padding], centered && 'mx-auto', className),
    children: children
  });
}
function GridContainer(_ref5) {
  var children = _ref5.children,
    _ref5$cols = _ref5.cols,
    cols = _ref5$cols === void 0 ? 1 : _ref5$cols,
    _ref5$gap = _ref5.gap,
    gap = _ref5$gap === void 0 ? 4 : _ref5$gap,
    className = _ref5.className;
  var getGridCols = function getGridCols() {
    if (typeof cols === 'number') {
      return "grid-cols-".concat(cols);
    }
    var classes = [];
    if (cols.sm) classes.push("grid-cols-".concat(cols.sm));
    if (cols.md) classes.push("md:grid-cols-".concat(cols.md));
    if (cols.lg) classes.push("lg:grid-cols-".concat(cols.lg));
    if (cols.xl) classes.push("xl:grid-cols-".concat(cols.xl));
    return classes.join(' ');
  };
  var getGap = function getGap() {
    if (typeof gap === 'number') {
      return "gap-".concat(gap);
    }
    var classes = [];
    if (gap.x) classes.push("gap-x-".concat(gap.x));
    if (gap.y) classes.push("gap-y-".concat(gap.y));
    return classes.join(' ');
  };
  return jsx("div", {
    className: cn$9('grid', getGridCols(), getGap(), className),
    children: children
  });
}
function FlexContainer(_ref6) {
  var children = _ref6.children,
    _ref6$direction = _ref6.direction,
    direction = _ref6$direction === void 0 ? 'row' : _ref6$direction,
    _ref6$wrap = _ref6.wrap,
    wrap = _ref6$wrap === void 0 ? 'nowrap' : _ref6$wrap,
    _ref6$align = _ref6.align,
    align = _ref6$align === void 0 ? 'start' : _ref6$align,
    _ref6$justify = _ref6.justify,
    justify = _ref6$justify === void 0 ? 'start' : _ref6$justify,
    _ref6$gap = _ref6.gap,
    gap = _ref6$gap === void 0 ? 0 : _ref6$gap,
    className = _ref6.className;
  var directionClasses = {
    'row': 'flex-row',
    'row-reverse': 'flex-row-reverse',
    'col': 'flex-col',
    'col-reverse': 'flex-col-reverse'
  };
  var wrapClasses = {
    'wrap': 'flex-wrap',
    'wrap-reverse': 'flex-wrap-reverse',
    'nowrap': 'flex-nowrap'
  };
  var alignClasses = {
    'start': 'items-start',
    'end': 'items-end',
    'center': 'items-center',
    'baseline': 'items-baseline',
    'stretch': 'items-stretch'
  };
  var justifyClasses = {
    'start': 'justify-start',
    'end': 'justify-end',
    'center': 'justify-center',
    'between': 'justify-between',
    'around': 'justify-around',
    'evenly': 'justify-evenly'
  };
  return jsx("div", {
    className: cn$9('flex', directionClasses[direction], wrapClasses[wrap], alignClasses[align], justifyClasses[justify], gap > 0 && "gap-".concat(gap), className),
    children: children
  });
}
function Stack(_ref7) {
  var children = _ref7.children,
    _ref7$spacing = _ref7.spacing,
    spacing = _ref7$spacing === void 0 ? 4 : _ref7$spacing,
    divider = _ref7.divider,
    className = _ref7.className;
  var childrenArray = React.Children.toArray(children);
  return jsx("div", {
    className: cn$9("space-y-".concat(spacing), className),
    children: childrenArray.map(function (child, index) {
      return jsxs(React.Fragment, {
        children: [child, divider && index < childrenArray.length - 1 && jsx("div", {
          className: "flex justify-center",
          children: divider
        })]
      }, index);
    })
  });
}
function HStack(_ref8) {
  var children = _ref8.children,
    _ref8$spacing = _ref8.spacing,
    spacing = _ref8$spacing === void 0 ? 4 : _ref8$spacing,
    divider = _ref8.divider,
    _ref8$align = _ref8.align,
    align = _ref8$align === void 0 ? 'center' : _ref8$align,
    className = _ref8.className;
  var childrenArray = React.Children.toArray(children);
  var alignClasses = {
    'start': 'items-start',
    'end': 'items-end',
    'center': 'items-center',
    'baseline': 'items-baseline',
    'stretch': 'items-stretch'
  };
  return jsx("div", {
    className: cn$9('flex', alignClasses[align], "gap-".concat(spacing), className),
    children: childrenArray.map(function (child, index) {
      return jsxs(React.Fragment, {
        children: [child, divider && index < childrenArray.length - 1 && jsx("div", {
          className: "flex items-center",
          children: divider
        })]
      }, index);
    })
  });
}

var TabsContext = /*#__PURE__*/React.createContext(null);
function Tabs(_ref) {
  var _ref$defaultValue = _ref.defaultValue,
    defaultValue = _ref$defaultValue === void 0 ? '' : _ref$defaultValue,
    value = _ref.value,
    onValueChange = _ref.onValueChange,
    children = _ref.children,
    className = _ref.className;
  var _useState = useState(defaultValue),
    _useState2 = _slicedToArray(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var currentValue = value !== null && value !== void 0 ? value : internalValue;
  var handleValueChange = onValueChange !== null && onValueChange !== void 0 ? onValueChange : setInternalValue;
  return jsx(TabsContext.Provider, {
    value: {
      value: currentValue,
      onValueChange: handleValueChange
    },
    children: jsx("div", {
      className: clsx('w-full', className),
      children: children
    })
  });
}
function TabsList(_ref2) {
  var children = _ref2.children,
    className = _ref2.className;
  return jsx("div", {
    className: clsx('inline-flex h-10 items-center justify-center rounded-md bg-mw-gray-100 dark:bg-mw-gray-800 p-1', className),
    children: children
  });
}
function TabsTrigger(_ref3) {
  var value = _ref3.value,
    children = _ref3.children,
    className = _ref3.className,
    disabled = _ref3.disabled;
  var context = React.useContext(TabsContext);
  if (!context) {
    throw new Error('TabsTrigger must be used within Tabs');
  }
  var isActive = context.value === value;
  return jsx("button", {
    type: "button",
    disabled: disabled,
    onClick: function onClick() {
      return !disabled && context.onValueChange(value);
    },
    className: clsx('inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all', 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-mw-blue-500 focus-visible:ring-offset-2', 'disabled:pointer-events-none disabled:opacity-50', isActive ? 'bg-white text-mw-gray-900 shadow-sm dark:bg-mw-gray-900 dark:text-mw-gray-50' : 'text-mw-gray-600 dark:text-mw-gray-400 hover:text-mw-gray-900 dark:hover:text-mw-gray-50', className),
    children: children
  });
}
function TabsContent(_ref4) {
  var value = _ref4.value,
    children = _ref4.children,
    className = _ref4.className;
  var context = React.useContext(TabsContext);
  if (!context) {
    throw new Error('TabsContent must be used within Tabs');
  }
  if (context.value !== value) {
    return null;
  }
  return jsx("div", {
    className: clsx('mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-mw-blue-500 focus-visible:ring-offset-2', className),
    children: children
  });
}

var AccordionContext = /*#__PURE__*/React.createContext(null);
var AccordionItemContext = /*#__PURE__*/React.createContext(null);
function Accordion(_ref) {
  var _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'single' : _ref$type,
    defaultValue = _ref.defaultValue,
    value = _ref.value,
    onValueChange = _ref.onValueChange,
    children = _ref.children,
    className = _ref.className;
  var _useState = useState(defaultValue || (type === 'multiple' ? [] : '')),
    _useState2 = _slicedToArray(_useState, 2),
    internalValue = _useState2[0],
    setInternalValue = _useState2[1];
  var currentValue = value !== null && value !== void 0 ? value : internalValue;
  var handleValueChange = onValueChange !== null && onValueChange !== void 0 ? onValueChange : setInternalValue;
  return jsx(AccordionContext.Provider, {
    value: {
      type: type,
      value: currentValue,
      onValueChange: handleValueChange
    },
    children: jsx("div", {
      className: clsx('w-full', className),
      children: children
    })
  });
}
function AccordionItem(_ref2) {
  var value = _ref2.value,
    children = _ref2.children,
    className = _ref2.className;
  var context = React.useContext(AccordionContext);
  if (!context) {
    throw new Error('AccordionItem must be used within Accordion');
  }
  var isOpen = context.type === 'multiple' ? context.value.includes(value) : context.value === value;
  var toggle = function toggle() {
    if (context.type === 'multiple') {
      var currentValues = context.value;
      var newValues = isOpen ? currentValues.filter(function (v) {
        return v !== value;
      }) : [].concat(_toConsumableArray(currentValues), [value]);
      context.onValueChange(newValues);
    } else {
      context.onValueChange(isOpen ? '' : value);
    }
  };
  return jsx(AccordionItemContext.Provider, {
    value: {
      value: value,
      isOpen: isOpen,
      toggle: toggle
    },
    children: jsx("div", {
      className: clsx('border-b border-mw-gray-200 dark:border-mw-gray-700', className),
      children: children
    })
  });
}
function AccordionTrigger(_ref3) {
  var children = _ref3.children,
    className = _ref3.className;
  var context = React.useContext(AccordionItemContext);
  if (!context) {
    throw new Error('AccordionTrigger must be used within AccordionItem');
  }
  return jsxs("button", {
    type: "button",
    onClick: context.toggle,
    className: clsx('flex w-full items-center justify-between py-4 font-medium transition-all', 'text-left text-mw-gray-900 dark:text-mw-gray-100', 'hover:text-mw-blue-600 dark:hover:text-mw-blue-400', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2 rounded-sm', className),
    children: [children, jsx(ChevronDown, {
      className: clsx('h-4 w-4 shrink-0 transition-transform duration-200', context.isOpen && 'rotate-180')
    })]
  });
}
function AccordionContent(_ref4) {
  var children = _ref4.children,
    className = _ref4.className;
  var context = React.useContext(AccordionItemContext);
  if (!context) {
    throw new Error('AccordionContent must be used within AccordionItem');
  }
  return jsx("div", {
    className: clsx('overflow-hidden transition-all duration-300', context.isOpen ? 'animate-in slide-in-from-top-1' : 'animate-out slide-out-to-top-1 hidden'),
    children: jsx("div", {
      className: clsx('pb-4 pt-0 text-mw-gray-600 dark:text-mw-gray-400', className),
      children: children
    })
  });
}

var CollapsibleContext = /*#__PURE__*/createContext(null);
function Collapsible(_ref) {
  var _ref$open = _ref.open,
    open = _ref$open === void 0 ? false : _ref$open,
    onOpenChange = _ref.onOpenChange,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    children = _ref.children;
  return jsx(CollapsibleContext.Provider, {
    value: {
      open: open,
      onOpenChange: onOpenChange || function () {},
      disabled: disabled
    },
    children: children
  });
}
function CollapsibleTrigger(_a) {
  var asChild = _a.asChild,
    children = _a.children,
    onClick = _a.onClick,
    className = _a.className,
    props = __rest(_a, ["asChild", "children", "onClick", "className"]);
  var context = useContext(CollapsibleContext);
  var handleClick = function handleClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
    if (!(context === null || context === void 0 ? void 0 : context.disabled)) {
      context === null || context === void 0 ? void 0 : context.onOpenChange(!context.open);
    }
  };
  if (asChild && /*#__PURE__*/React.isValidElement(children)) {
    return /*#__PURE__*/React.cloneElement(children, Object.assign({
      onClick: handleClick,
      disabled: context === null || context === void 0 ? void 0 : context.disabled,
      'aria-expanded': context === null || context === void 0 ? void 0 : context.open,
      'data-state': (context === null || context === void 0 ? void 0 : context.open) ? 'open' : 'closed'
    }, props));
  }
  return jsx("button", Object.assign({
    onClick: handleClick,
    disabled: context === null || context === void 0 ? void 0 : context.disabled,
    "aria-expanded": context === null || context === void 0 ? void 0 : context.open,
    "data-state": (context === null || context === void 0 ? void 0 : context.open) ? 'open' : 'closed',
    className: clsx('flex items-center justify-between w-full text-left', 'disabled:opacity-50 disabled:cursor-not-allowed', className)
  }, props, {
    children: children
  }));
}
function CollapsibleContent(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  var context = useContext(CollapsibleContext);
  return jsx("div", Object.assign({
    "data-state": (context === null || context === void 0 ? void 0 : context.open) ? 'open' : 'closed',
    className: clsx('overflow-hidden transition-all duration-300 ease-in-out', (context === null || context === void 0 ? void 0 : context.open) ? 'animate-in slide-in-from-top-1 fade-in-0' : 'animate-out slide-out-to-top-1 fade-out-0 hidden', className)
  }, props, {
    children: (context === null || context === void 0 ? void 0 : context.open) && jsx("div", {
      className: "pt-1",
      children: children
    })
  }));
}

var ScrollArea = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    children = _a.children,
    _a$type = _a.type,
    type = _a$type === void 0 ? 'hover' : _a$type,
    props = __rest(_a, ["className", "children", "type"]);
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('relative overflow-hidden', className)
  }, props, {
    children: jsx("div", {
      className: clsx('h-full w-full rounded-[inherit]', {
        'overflow-auto': type === 'auto',
        'overflow-scroll': type === 'always' || type === 'scroll',
        'overflow-auto scrollbar-thin scrollbar-thumb-mw-gray-300 dark:scrollbar-thumb-mw-gray-600 scrollbar-track-transparent hover:scrollbar-thumb-mw-gray-400 dark:hover:scrollbar-thumb-mw-gray-500': type === 'hover'
      }),
      style: {
        scrollbarWidth: type === 'hover' ? 'thin' : 'auto',
        scrollbarColor: type === 'hover' ? '#d1d5db transparent' : 'auto'
      },
      children: children
    })
  }));
});
ScrollArea.displayName = 'ScrollArea';
var ScrollBar = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$orientation = _a.orientation,
    orientation = _a$orientation === void 0 ? 'vertical' : _a$orientation,
    props = __rest(_a, ["className", "orientation"]);
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('flex touch-none select-none transition-colors', orientation === 'vertical' && 'h-full w-2.5 border-l border-l-transparent p-[1px]', orientation === 'horizontal' && 'h-2.5 w-full border-t border-t-transparent p-[1px]', className)
  }, props, {
    children: jsx("div", {
      className: clsx('relative flex-1 rounded-full bg-mw-gray-200 dark:bg-mw-gray-700', orientation === 'vertical' && 'w-full', orientation === 'horizontal' && 'h-full')
    })
  }));
});
ScrollBar.displayName = 'ScrollBar';

function Step(_ref) {
  var step = _ref.step,
    index = _ref.index,
    isLast = _ref.isLast,
    orientation = _ref.orientation;
  var title = step.title,
    description = step.description,
    completed = step.completed,
    current = step.current;
  return jsxs("div", {
    className: clsx("flex", orientation === 'horizontal' ? 'flex-col items-center' : 'flex-row', !isLast && orientation === 'horizontal' ? 'flex-1' : ''),
    children: [jsxs("div", {
      className: clsx("flex items-center", orientation === 'horizontal' ? 'flex-col' : 'flex-row'),
      children: [jsx("div", {
        className: clsx("relative z-10 flex items-center justify-center w-8 h-8 rounded-full border-2 text-sm font-medium transition-colors duration-200", completed ? "bg-mw-blue-600 border-mw-blue-600 text-white" : current ? "bg-white border-mw-blue-600 text-mw-blue-600 dark:bg-mw-gray-900" : "bg-white border-mw-gray-300 text-mw-gray-500 dark:bg-mw-gray-800 dark:border-mw-gray-600"),
        children: completed ? jsx(Check, {
          className: "w-4 h-4"
        }) : index + 1
      }), !isLast && jsx("div", {
        className: clsx("bg-mw-gray-300 dark:bg-mw-gray-600", orientation === 'horizontal' ? "h-0.5 flex-1 w-full mt-4" : "w-0.5 h-12 ml-4", completed && "bg-mw-blue-600")
      })]
    }), jsxs("div", {
      className: clsx(orientation === 'horizontal' ? 'mt-4 text-center' : 'ml-4', orientation === 'vertical' && !isLast ? 'pb-8' : ''),
      children: [jsx("h3", {
        className: clsx("text-sm font-medium", current ? "text-mw-blue-600 dark:text-mw-blue-400" : completed ? "text-mw-gray-900 dark:text-white" : "text-mw-gray-500 dark:text-mw-gray-400"),
        children: title
      }), description && jsx("p", {
        className: "mt-1 text-xs text-mw-gray-500 dark:text-mw-gray-400",
        children: description
      })]
    })]
  });
}
function Stepper(_ref2) {
  var steps = _ref2.steps,
    _ref2$orientation = _ref2.orientation,
    orientation = _ref2$orientation === void 0 ? 'horizontal' : _ref2$orientation,
    className = _ref2.className;
  return jsx("div", {
    className: clsx("flex", orientation === 'horizontal' ? 'items-start justify-between' : 'flex-col', className),
    children: steps.map(function (step, index) {
      return jsx(Step, {
        step: step,
        index: index,
        isLast: index === steps.length - 1,
        orientation: orientation
      }, index);
    })
  });
}

function Timeline(_ref) {
  var items = _ref.items,
    className = _ref.className;
  return jsx("div", {
    className: clsx('relative', className),
    children: items.map(function (item, index) {
      var isLast = index === items.length - 1;
      var title = item.title,
        description = item.description,
        time = item.time,
        _item$status = item.status,
        status = _item$status === void 0 ? 'pending' : _item$status,
        icon = item.icon;
      return jsxs("div", {
        className: "relative flex items-start group",
        children: [!isLast && jsx("div", {
          className: "absolute left-4 top-8 w-0.5 h-full bg-mw-gray-200 dark:bg-mw-gray-700 group-hover:bg-mw-blue-200 dark:group-hover:bg-mw-blue-800 transition-colors duration-200"
        }), jsx("div", {
          className: "relative z-10 flex-shrink-0",
          children: jsx("div", {
            className: clsx("flex items-center justify-center w-8 h-8 rounded-full border-2 transition-all duration-200", status === 'completed' ? "bg-mw-blue-600 border-mw-blue-600 text-white" : status === 'current' ? "bg-white border-mw-blue-600 text-mw-blue-600 dark:bg-mw-gray-900 ring-4 ring-mw-blue-100 dark:ring-mw-blue-900/20" : "bg-white border-mw-gray-300 text-mw-gray-400 dark:bg-mw-gray-800 dark:border-mw-gray-600"),
            children: icon || jsx("div", {
              className: clsx("w-2 h-2 rounded-full", status === 'completed' ? "bg-white" : status === 'current' ? "bg-mw-blue-600" : "bg-mw-gray-400 dark:bg-mw-gray-500")
            })
          })
        }), jsxs("div", {
          className: "ml-4 pb-8 flex-1 min-w-0",
          children: [jsxs("div", {
            className: "flex items-center justify-between",
            children: [jsx("h3", {
              className: clsx("text-sm font-medium", status === 'current' ? "text-mw-blue-600 dark:text-mw-blue-400" : status === 'completed' ? "text-mw-gray-900 dark:text-white" : "text-mw-gray-600 dark:text-mw-gray-300"),
              children: title
            }), time && jsx("time", {
              className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 flex-shrink-0 ml-2",
              children: time
            })]
          }), description && jsx("p", {
            className: "mt-1 text-xs text-mw-gray-500 dark:text-mw-gray-400 leading-relaxed",
            children: description
          })]
        })]
      }, index);
    })
  });
}
function TimelineItem(_ref2) {
  var children = _ref2.children,
    _ref2$status = _ref2.status,
    status = _ref2$status === void 0 ? 'pending' : _ref2$status,
    icon = _ref2.icon,
    time = _ref2.time,
    _ref2$isLast = _ref2.isLast,
    isLast = _ref2$isLast === void 0 ? false : _ref2$isLast;
  return jsxs("div", {
    className: "relative flex items-start group",
    children: [!isLast && jsx("div", {
      className: "absolute left-4 top-8 w-0.5 h-full bg-mw-gray-200 dark:bg-mw-gray-700 group-hover:bg-mw-blue-200 dark:group-hover:bg-mw-blue-800 transition-colors duration-200"
    }), jsx("div", {
      className: "relative z-10 flex-shrink-0",
      children: jsx("div", {
        className: clsx("flex items-center justify-center w-8 h-8 rounded-full border-2 transition-all duration-200", status === 'completed' ? "bg-mw-blue-600 border-mw-blue-600 text-white" : status === 'current' ? "bg-white border-mw-blue-600 text-mw-blue-600 dark:bg-mw-gray-900 ring-4 ring-mw-blue-100 dark:ring-mw-blue-900/20" : "bg-white border-mw-gray-300 text-mw-gray-400 dark:bg-mw-gray-800 dark:border-mw-gray-600"),
        children: icon || jsx("div", {
          className: clsx("w-2 h-2 rounded-full", status === 'completed' ? "bg-white" : status === 'current' ? "bg-mw-blue-600" : "bg-mw-gray-400 dark:bg-mw-gray-500")
        })
      })
    }), jsxs("div", {
      className: "ml-4 pb-8 flex-1 min-w-0",
      children: [time && jsx("time", {
        className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 block mb-1",
        children: time
      }), children]
    })]
  });
}

function cn$8() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var sidebarWidths = {
  sm: 'w-64',
  md: 'w-72',
  lg: 'w-80',
  xl: 'w-96'
};
var collapsedWidth = 'w-16';
function Sidebar(_ref) {
  var children = _ref.children,
    _ref$isOpen = _ref.isOpen,
    isOpen = _ref$isOpen === void 0 ? true : _ref$isOpen,
    onOpenChange = _ref.onOpenChange,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'left' : _ref$position,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'persistent' : _ref$variant,
    _ref$width = _ref.width,
    width = _ref$width === void 0 ? 'md' : _ref$width,
    className = _ref.className,
    _ref$collapsible = _ref.collapsible,
    collapsible = _ref$collapsible === void 0 ? false : _ref$collapsible,
    _ref$collapsed = _ref.collapsed,
    collapsed = _ref$collapsed === void 0 ? false : _ref$collapsed,
    onCollapsedChange = _ref.onCollapsedChange;
  var _useState = useState(isOpen),
    _useState2 = _slicedToArray(_useState, 2),
    internalOpen = _useState2[0],
    setInternalOpen = _useState2[1];
  var _useState3 = useState(collapsed),
    _useState4 = _slicedToArray(_useState3, 2),
    internalCollapsed = _useState4[0],
    setInternalCollapsed = _useState4[1];
  var open = onOpenChange ? isOpen : internalOpen;
  var isCollapsed = onCollapsedChange ? collapsed : internalCollapsed;
  var handleOpenChange = function handleOpenChange(newOpen) {
    if (onOpenChange) {
      onOpenChange(newOpen);
    } else {
      setInternalOpen(newOpen);
    }
  };
  var handleCollapsedChange = function handleCollapsedChange(newCollapsed) {
    if (onCollapsedChange) {
      onCollapsedChange(newCollapsed);
    } else {
      setInternalCollapsed(newCollapsed);
    }
  };
  if (variant === 'overlay') {
    return jsxs(Fragment, {
      children: [open && jsx("div", {
        className: "fixed inset-0 bg-black/50 z-40 lg:hidden",
        onClick: function onClick() {
          return handleOpenChange(false);
        }
      }), jsx("div", {
        className: cn$8('fixed top-0 h-full bg-white dark:bg-mw-gray-900 border-r border-mw-gray-200 dark:border-mw-gray-700 z-50 transition-transform duration-300 ease-in-out', position === 'left' ? 'left-0' : 'right-0', sidebarWidths[width], open ? 'translate-x-0' : position === 'left' ? '-translate-x-full' : 'translate-x-full', className),
        children: children
      })]
    });
  }
  return jsxs("div", {
    className: cn$8('flex flex-col bg-white dark:bg-mw-gray-900 border-r border-mw-gray-200 dark:border-mw-gray-700 transition-all duration-300 ease-in-out', collapsible && isCollapsed ? collapsedWidth : sidebarWidths[width], !open && variant === 'push' && 'hidden', className),
    children: [collapsible && jsx("div", {
      className: "flex justify-end p-2 border-b border-mw-gray-200 dark:border-mw-gray-700",
      children: jsx("button", {
        onClick: function onClick() {
          return handleCollapsedChange(!isCollapsed);
        },
        className: "p-1 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300",
        children: isCollapsed ? jsx(ChevronRight, {
          className: "w-4 h-4"
        }) : jsx(ChevronLeft, {
          className: "w-4 h-4"
        })
      })
    }), jsx("div", {
      className: cn$8('flex-1 overflow-hidden', isCollapsed && 'px-2'),
      children: children
    })]
  });
}
function SidebarHeader(_ref2) {
  var children = _ref2.children,
    className = _ref2.className;
  return jsx("div", {
    className: cn$8('px-4 py-4 border-b border-mw-gray-200 dark:border-mw-gray-700', className),
    children: children
  });
}
function SidebarContent(_ref3) {
  var children = _ref3.children,
    className = _ref3.className;
  return jsx("div", {
    className: cn$8('flex-1 overflow-y-auto px-4 py-4', className),
    children: children
  });
}
function SidebarFooter(_ref4) {
  var children = _ref4.children,
    className = _ref4.className;
  return jsx("div", {
    className: cn$8('px-4 py-4 border-t border-mw-gray-200 dark:border-mw-gray-700', className),
    children: children
  });
}
function SidebarTrigger(_ref5) {
  var onClick = _ref5.onClick,
    className = _ref5.className;
  return jsx("button", {
    onClick: onClick,
    className: cn$8('p-2 rounded-md text-mw-gray-500 hover:text-mw-gray-700 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 dark:hover:text-mw-gray-300 lg:hidden', className),
    children: jsx(Menu$1, {
      className: "w-5 h-5"
    })
  });
}

var spinnerSizes = {
  sm: 'w-4 h-4',
  md: 'w-6 h-6',
  lg: 'w-8 h-8',
  xl: 'w-12 h-12'
};
var spinnerVariants = {
  "default": 'text-mw-gray-600 dark:text-mw-gray-400',
  primary: 'text-mw-blue-600 dark:text-mw-blue-400',
  white: 'text-white'
};
function Spinner(_a) {
  var className = _a.className,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'default' : _a$variant,
    props = __rest(_a, ["className", "size", "variant"]);
  return jsx("div", Object.assign({
    className: clsx('inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]', spinnerSizes[size], spinnerVariants[variant], className),
    role: "status"
  }, props, {
    children: jsx("span", {
      className: "sr-only",
      children: "Loading..."
    })
  }));
}
function Loading(_a) {
  var className = _a.className,
    _a$size2 = _a.size,
    size = _a$size2 === void 0 ? 'md' : _a$size2,
    _a$variant2 = _a.variant,
    variant = _a$variant2 === void 0 ? 'default' : _a$variant2,
    _a$text = _a.text,
    text = _a$text === void 0 ? 'Loading...' : _a$text,
    _a$overlay = _a.overlay,
    overlay = _a$overlay === void 0 ? false : _a$overlay,
    props = __rest(_a, ["className", "size", "variant", "text", "overlay"]);
  var content = jsxs("div", {
    className: clsx('flex flex-col items-center justify-center space-y-2', overlay && 'bg-white/80 dark:bg-mw-gray-900/80 backdrop-blur-sm'),
    children: [jsx(Spinner, {
      size: size,
      variant: variant
    }), text && jsx("p", {
      className: clsx('text-sm font-medium', spinnerVariants[variant]),
      children: text
    })]
  });
  if (overlay) {
    return jsx("div", Object.assign({
      className: clsx('absolute inset-0 z-50 flex items-center justify-center', className)
    }, props, {
      children: content
    }));
  }
  return jsx("div", Object.assign({
    className: clsx('flex items-center justify-center p-4', className)
  }, props, {
    children: content
  }));
}

var loaderSizes = {
  sm: 'text-sm',
  // 14px
  md: 'text-lg',
  // 18px  
  lg: 'text-xl',
  // 20px
  xl: 'text-2xl' // 24px
};
var loaderVariants = {
  "default": 'text-mw-gray-600 dark:text-mw-gray-400',
  primary: 'text-mw-blue-600 dark:text-mw-blue-400',
  gradient: 'bg-gradient-to-r from-mw-blue-600 to-mw-blue-800 bg-clip-text text-transparent',
  outline: 'text-transparent'
};
var animationSpeeds = {
  slow: '3s',
  normal: '2s',
  fast: '1s'
};
var MWLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    _a$variant = _a.variant,
    variant = _a$variant === void 0 ? 'primary' : _a$variant,
    _a$animation = _a.animation,
    animation = _a$animation === void 0 ? 'pulse' : _a$animation,
    _a$speed = _a.speed,
    speed = _a$speed === void 0 ? 'normal' : _a$speed,
    props = __rest(_a, ["className", "size", "variant", "animation", "speed"]);
  var getAnimationClass = function getAnimationClass() {
    switch (animation) {
      case 'pulse':
        return 'animate-pulse';
      case 'wave':
        return 'animate-mw-wave';
      case 'typewriter':
        return 'animate-mw-typewriter';
      case 'glow':
        return 'animate-mw-glow';
      case 'bounce':
        return 'animate-bounce';
      default:
        return 'animate-pulse';
    }
  };
  var getOutlineStyle = function getOutlineStyle() {
    if (variant === 'outline') {
      return {
        WebkitTextStroke: '2px #2563EB',
        textStroke: '2px #2563EB'
      };
    }
    return {};
  };
  if (animation === 'typewriter') {
    return jsx("div", Object.assign({
      ref: ref,
      className: clsx('inline-flex items-center justify-center font-bold tracking-wider', loaderSizes[size], className),
      style: Object.assign({
        animationDuration: animationSpeeds[speed]
      }, getOutlineStyle()),
      role: "status",
      "aria-label": "Loading"
    }, props, {
      children: jsx("span", {
        className: clsx('relative overflow-hidden', loaderVariants[variant], 'before:content-["MW"] before:absolute before:left-0 before:top-0', 'before:w-0 before:animate-[typewriter_2s_steps(2,end)_infinite]', 'before:border-r-2 before:border-r-mw-blue-600', 'before:bg-white before:dark:bg-mw-gray-900'),
        children: "MW"
      })
    }));
  }
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider select-none', loaderSizes[size], loaderVariants[variant], getAnimationClass(), className),
    style: Object.assign({
      animationDuration: animationSpeeds[speed]
    }, getOutlineStyle()),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: "MW"
  }));
});
MWLoader.displayName = 'MWLoader';
var MWDotsLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size2 = _a.size,
    size = _a$size2 === void 0 ? 'md' : _a$size2,
    _a$variant2 = _a.variant,
    variant = _a$variant2 === void 0 ? 'primary' : _a$variant2;
    _a.speed;
    var _a$showDots = _a.showDots,
    showDots = _a$showDots === void 0 ? true : _a$showDots,
    _a$dotAnimation = _a.dotAnimation,
    dotAnimation = _a$dotAnimation === void 0 ? 'typing' : _a$dotAnimation,
    props = __rest(_a, ["className", "size", "variant", "speed", "showDots", "dotAnimation"]);
  var getDotAnimationClass = function getDotAnimationClass() {
    switch (dotAnimation) {
      case 'typing':
        return 'animate-[typing_1.5s_ease-in-out_infinite]';
      case 'bouncing':
        return 'animate-bounce';
      case 'fading':
        return 'animate-pulse';
      default:
        return 'animate-pulse';
    }
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center gap-1', className),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: [jsx("span", {
      className: clsx('font-bold tracking-wider', loaderSizes[size], loaderVariants[variant]),
      children: "MW"
    }), showDots && jsxs("div", {
      className: "flex items-center space-x-1 ml-2",
      children: [jsx("div", {
        className: clsx('w-2 h-2 rounded-full', variant === 'primary' ? 'bg-mw-blue-600' : 'bg-current', getDotAnimationClass()),
        style: {
          animationDelay: '0s'
        }
      }), jsx("div", {
        className: clsx('w-2 h-2 rounded-full', variant === 'primary' ? 'bg-mw-blue-600' : 'bg-current', getDotAnimationClass()),
        style: {
          animationDelay: '0.2s'
        }
      }), jsx("div", {
        className: clsx('w-2 h-2 rounded-full', variant === 'primary' ? 'bg-mw-blue-600' : 'bg-current', getDotAnimationClass()),
        style: {
          animationDelay: '0.4s'
        }
      })]
    })]
  }));
});
MWDotsLoader.displayName = 'MWDotsLoader';
var MWBrandLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size3 = _a.size,
    size = _a$size3 === void 0 ? 'md' : _a$size3,
    _a$variant3 = _a.variant,
    variant = _a$variant3 === void 0 ? 'pulse' : _a$variant3,
    _a$showText = _a.showText,
    showText = _a$showText === void 0 ? true : _a$showText,
    props = __rest(_a, ["className", "size", "variant", "showText"]);
  var brandSizes = {
    sm: 'w-8 h-8 text-sm',
    md: 'w-12 h-12 text-base',
    lg: 'w-16 h-16 text-lg',
    xl: 'w-24 h-24 text-xl'
  };
  var getAnimationClass = function getAnimationClass() {
    switch (variant) {
      case 'spin':
        return 'animate-spin';
      case 'pulse':
        return 'animate-pulse';
      case 'scale':
        return 'animate-[scale_2s_ease-in-out_infinite]';
      default:
        return 'animate-pulse';
    }
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('flex flex-col items-center justify-center space-y-3', className),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: [jsx("div", {
      className: clsx('flex items-center justify-center rounded-lg bg-mw-blue-600 text-white font-bold', brandSizes[size], getAnimationClass()),
      children: "MW"
    }), showText && jsx("div", {
      className: "text-sm text-mw-gray-600 dark:text-mw-gray-400 font-medium",
      children: "Loading..."
    })]
  }));
});
MWBrandLoader.displayName = 'MWBrandLoader';
var MWProgressiveLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size4 = _a.size,
    size = _a$size4 === void 0 ? 'md' : _a$size4,
    _a$variant4 = _a.variant,
    variant = _a$variant4 === void 0 ? 'primary' : _a$variant4,
    _a$speed3 = _a.speed,
    speed = _a$speed3 === void 0 ? 'normal' : _a$speed3,
    _a$direction = _a.direction,
    direction = _a$direction === void 0 ? 'left-to-right' : _a$direction,
    fillColor = _a.fillColor,
    props = __rest(_a, ["className", "size", "variant", "speed", "direction", "fillColor"]);
  var animationDuration = {
    slow: '3s',
    normal: '2s',
    fast: '1s'
  };
  var getVariantColor = function getVariantColor() {
    if (fillColor) return fillColor;
    switch (variant) {
      case 'default':
        return '#6B7280';
      // mw-gray-500
      case 'primary':
        return '#2563EB';
      // mw-blue-600
      case 'gradient':
        return 'url(#mw-gradient)';
      case 'outline':
        return 'transparent';
      default:
        return '#2563EB';
    }
  };
  var getOutlineStyle = function getOutlineStyle() {
    if (variant === 'outline') {
      return {
        WebkitTextStroke: '2px #2563EB',
        textStroke: '2px #2563EB'
      };
    }
    return {};
  };
  var getAnimationName = function getAnimationName() {
    switch (direction) {
      case 'left-to-right':
        return 'mw-fill-left-right';
      case 'right-to-left':
        return 'mw-fill-right-left';
      case 'top-to-bottom':
        return 'mw-fill-top-bottom';
      case 'bottom-to-top':
        return 'mw-fill-bottom-top';
      case 'center-out':
        return 'mw-fill-center-out';
      case 'edges-in':
        return 'mw-fill-edges-in';
      default:
        return 'mw-fill-left-right';
    }
  };
  var getClipPathStyle = function getClipPathStyle() {
    var animationName = getAnimationName();
    return {
      animation: "".concat(animationName, " ").concat(animationDuration[speed], " ease-in-out infinite")
    };
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider relative overflow-hidden', loaderSizes[size], className),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: [jsx("span", {
      className: "text-mw-gray-300 dark:text-mw-gray-600 select-none relative z-10",
      style: getOutlineStyle(),
      children: "MW"
    }), jsx("div", {
      className: "absolute inset-0 flex items-center justify-center overflow-hidden z-20",
      style: Object.assign(Object.assign({
        color: getVariantColor(),
        background: variant === 'gradient' ? 'linear-gradient(90deg, #2563EB 0%, #1D4ED8 100%)' : 'transparent',
        WebkitBackgroundClip: variant === 'gradient' ? 'text' : 'initial',
        backgroundClip: variant === 'gradient' ? 'text' : 'initial'
      }, getClipPathStyle()), getOutlineStyle()),
      children: jsx("span", {
        className: "font-bold tracking-wider select-none",
        style: {
          color: variant === 'gradient' ? 'transparent' : getVariantColor()
        },
        children: "MW"
      })
    }), variant === 'gradient' && jsx("svg", {
      width: "0",
      height: "0",
      className: "absolute",
      children: jsx("defs", {
        children: jsxs("linearGradient", {
          id: "mw-gradient",
          x1: "0%",
          y1: "0%",
          x2: "100%",
          y2: "0%",
          children: [jsx("stop", {
            offset: "0%",
            stopColor: "#2563EB"
          }), jsx("stop", {
            offset: "100%",
            stopColor: "#1D4ED8"
          })]
        })
      })
    })]
  }));
});
MWProgressiveLoader.displayName = 'MWProgressiveLoader';
var MWGlitchLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size5 = _a.size,
    size = _a$size5 === void 0 ? 'md' : _a$size5,
    _a$intensity = _a.intensity,
    intensity = _a$intensity === void 0 ? 'medium' : _a$intensity,
    _a$speed4 = _a.speed,
    speed = _a$speed4 === void 0 ? 'normal' : _a$speed4,
    props = __rest(_a, ["className", "size", "intensity", "speed"]);
  var animationDuration = {
    slow: '4s',
    normal: '2s',
    fast: '1s'
  };
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider relative', loaderSizes[size], className),
    style: {
      animation: "mw-glitch-".concat(intensity, " ").concat(animationDuration[speed], " linear infinite")
    },
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: jsxs("span", {
      className: "text-mw-blue-600 dark:text-mw-blue-400 select-none relative",
      children: ["MW", jsx("span", {
        className: "absolute inset-0 text-red-500 opacity-70 animate-mw-glitch-red",
        children: "MW"
      }), jsx("span", {
        className: "absolute inset-0 text-cyan-500 opacity-70 animate-mw-glitch-cyan",
        children: "MW"
      })]
    })
  }));
});
MWGlitchLoader.displayName = 'MWGlitchLoader';
var MWHeartbeatLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size6 = _a.size,
    size = _a$size6 === void 0 ? 'md' : _a$size6,
    _a$variant5 = _a.variant,
    variant = _a$variant5 === void 0 ? 'primary' : _a$variant5,
    _a$speed5 = _a.speed,
    speed = _a$speed5 === void 0 ? 'normal' : _a$speed5,
    props = __rest(_a, ["className", "size", "variant", "speed"]);
  var animationDuration = {
    slow: '3s',
    normal: '1.5s',
    fast: '1s'
  };
  var getVariantClass = function getVariantClass() {
    switch (variant) {
      case 'primary':
        return 'text-mw-blue-600 dark:text-mw-blue-400';
      case 'gradient':
        return 'bg-gradient-to-r from-mw-blue-600 to-mw-blue-800 bg-clip-text text-transparent';
      case 'pulse':
        return 'text-mw-blue-600 dark:text-mw-blue-400';
      default:
        return 'text-mw-blue-600 dark:text-mw-blue-400';
    }
  };
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider', loaderSizes[size], getVariantClass(), className),
    style: {
      animation: "mw-heartbeat ".concat(animationDuration[speed], " ease-in-out infinite")
    },
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: jsx("span", {
      className: "select-none",
      children: "MW"
    })
  }));
});
MWHeartbeatLoader.displayName = 'MWHeartbeatLoader';
var MWMatrixLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size7 = _a.size,
    size = _a$size7 === void 0 ? 'md' : _a$size7,
    _a$speed6 = _a.speed,
    speed = _a$speed6 === void 0 ? 'normal' : _a$speed6,
    props = __rest(_a, ["className", "size", "speed"]);
  var animationDuration = {
    slow: '4s',
    normal: '2s',
    fast: '1s'
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider relative overflow-hidden', loaderSizes[size], className),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: [jsx("span", {
      className: "text-mw-blue-600 dark:text-mw-blue-400 select-none relative z-10",
      children: "MW"
    }), jsxs("div", {
      className: "absolute inset-0 text-green-400 opacity-30 font-mono text-xs",
      style: {
        animation: "mw-matrix-rain ".concat(animationDuration[speed], " linear infinite")
      },
      children: [jsx("span", {
        className: "absolute animate-mw-matrix-1",
        children: "01"
      }), jsx("span", {
        className: "absolute animate-mw-matrix-2",
        children: "10"
      }), jsx("span", {
        className: "absolute animate-mw-matrix-3",
        children: "11"
      })]
    })]
  }));
});
MWMatrixLoader.displayName = 'MWMatrixLoader';
var MWNeonLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size8 = _a.size,
    size = _a$size8 === void 0 ? 'md' : _a$size8,
    _a$color = _a.color,
    color = _a$color === void 0 ? 'blue' : _a$color,
    _a$speed7 = _a.speed,
    speed = _a$speed7 === void 0 ? 'normal' : _a$speed7,
    props = __rest(_a, ["className", "size", "color", "speed"]);
  var animationDuration = {
    slow: '3s',
    normal: '2s',
    fast: '1s'
  };
  var getColorClass = function getColorClass() {
    switch (color) {
      case 'blue':
        return 'text-blue-400';
      case 'purple':
        return 'text-purple-400';
      case 'cyan':
        return 'text-cyan-400';
      case 'pink':
        return 'text-pink-400';
      default:
        return 'text-blue-400';
    }
  };
  var getNeonShadow = function getNeonShadow() {
    switch (color) {
      case 'blue':
        return '0 0 5px #60A5FA, 0 0 10px #60A5FA, 0 0 15px #60A5FA';
      case 'purple':
        return '0 0 5px #C084FC, 0 0 10px #C084FC, 0 0 15px #C084FC';
      case 'cyan':
        return '0 0 5px #22D3EE, 0 0 10px #22D3EE, 0 0 15px #22D3EE';
      case 'pink':
        return '0 0 5px #F472B6, 0 0 10px #F472B6, 0 0 15px #F472B6';
      default:
        return '0 0 5px #60A5FA, 0 0 10px #60A5FA, 0 0 15px #60A5FA';
    }
  };
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider', loaderSizes[size], getColorClass(), className),
    style: {
      textShadow: getNeonShadow(),
      animation: "mw-neon-flicker ".concat(animationDuration[speed], " ease-in-out infinite")
    },
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: jsx("span", {
      className: "select-none",
      children: "MW"
    })
  }));
});
MWNeonLoader.displayName = 'MWNeonLoader';
var MWBounceLoader = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    _a$size9 = _a.size,
    size = _a$size9 === void 0 ? 'md' : _a$size9,
    _a$variant6 = _a.variant,
    variant = _a$variant6 === void 0 ? 'primary' : _a$variant6,
    _a$speed8 = _a.speed,
    speed = _a$speed8 === void 0 ? 'normal' : _a$speed8,
    props = __rest(_a, ["className", "size", "variant", "speed"]);
  var animationDuration = {
    slow: '2s',
    normal: '1s',
    fast: '0.5s'
  };
  var getVariantClass = function getVariantClass(letter) {
    switch (variant) {
      case 'primary':
        return 'text-mw-blue-600 dark:text-mw-blue-400';
      case 'gradient':
        return 'bg-gradient-to-r from-mw-blue-600 to-mw-blue-800 bg-clip-text text-transparent';
      case 'rainbow':
        return letter === 'M' ? 'text-pink-500' : 'text-purple-500';
      default:
        return 'text-mw-blue-600 dark:text-mw-blue-400';
    }
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('inline-flex items-center justify-center font-bold tracking-wider', loaderSizes[size], className),
    role: "status",
    "aria-label": "Loading"
  }, props, {
    children: [jsx("span", {
      className: clsx('select-none', getVariantClass('M')),
      style: {
        animation: "mw-bounce-letter ".concat(animationDuration[speed], " ease-in-out infinite"),
        animationDelay: '0s'
      },
      children: "M"
    }), jsx("span", {
      className: clsx('select-none', getVariantClass('W')),
      style: {
        animation: "mw-bounce-letter ".concat(animationDuration[speed], " ease-in-out infinite"),
        animationDelay: '0.2s'
      },
      children: "W"
    })]
  }));
});
MWBounceLoader.displayName = 'MWBounceLoader';

var Breadcrumb = function Breadcrumb(_ref) {
  var children = _ref.children,
    className = _ref.className,
    _ref$separator = _ref.separator;
    _ref$separator === void 0 ? jsx("svg", {
      className: "w-4 h-4 text-mw-gray-400",
      fill: "currentColor",
      viewBox: "0 0 20 20",
      children: jsx("path", {
        fillRule: "evenodd",
        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      })
    }) : _ref$separator;
  return jsx("nav", {
    className: clsx('flex', className),
    "aria-label": "Breadcrumb",
    children: jsx("ol", {
      className: "inline-flex items-center space-x-1 md:space-x-3",
      children: children
    })
  });
};
var BreadcrumbItem = function BreadcrumbItem(_ref2) {
  var children = _ref2.children,
    href = _ref2.href,
    _ref2$isLast = _ref2.isLast,
    isLast = _ref2$isLast === void 0 ? false : _ref2$isLast,
    className = _ref2.className;
  var content = href ? jsx("a", {
    href: href,
    className: clsx('text-sm font-medium text-mw-gray-500 hover:text-mw-gray-700', 'dark:text-mw-gray-400 dark:hover:text-mw-gray-200', 'transition-colors duration-200', className),
    children: children
  }) : jsx("span", {
    className: clsx('text-sm font-medium', isLast ? 'text-mw-gray-900 dark:text-mw-gray-100' : 'text-mw-gray-500 dark:text-mw-gray-400', className),
    "aria-current": isLast ? 'page' : undefined,
    children: children
  });
  return jsx("li", {
    className: "inline-flex items-center",
    children: content
  });
};
var BreadcrumbSeparator = function BreadcrumbSeparator(_ref3) {
  var className = _ref3.className,
    _ref3$children = _ref3.children,
    children = _ref3$children === void 0 ? jsx("svg", {
      className: "w-4 h-4 text-mw-gray-400",
      fill: "currentColor",
      viewBox: "0 0 20 20",
      children: jsx("path", {
        fillRule: "evenodd",
        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
        clipRule: "evenodd"
      })
    }) : _ref3$children;
  return jsx("li", {
    className: clsx('inline-flex items-center', className),
    children: children
  });
};

var Pagination = function Pagination(_ref) {
  var currentPage = _ref.currentPage,
    totalPages = _ref.totalPages,
    onPageChange = _ref.onPageChange,
    _ref$showFirstLast = _ref.showFirstLast,
    showFirstLast = _ref$showFirstLast === void 0 ? true : _ref$showFirstLast,
    _ref$showPrevNext = _ref.showPrevNext,
    showPrevNext = _ref$showPrevNext === void 0 ? true : _ref$showPrevNext,
    _ref$siblingCount = _ref.siblingCount,
    siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,
    className = _ref.className;
  var generatePageNumbers = function generatePageNumbers() {
    var pages = [];
    // Always show first page
    pages.push(1);
    // Calculate start and end for middle pages
    var start = Math.max(2, currentPage - siblingCount);
    var end = Math.min(totalPages - 1, currentPage + siblingCount);
    // Add ellipsis after first page if needed
    if (start > 2) {
      pages.push('...');
    }
    // Add middle pages
    for (var i = start; i <= end; i++) {
      pages.push(i);
    }
    // Add ellipsis before last page if needed
    if (end < totalPages - 1) {
      pages.push('...');
    }
    // Always show last page (if more than 1 page)
    if (totalPages > 1) {
      pages.push(totalPages);
    }
    return pages;
  };
  var pages = generatePageNumbers();
  return jsxs("nav", {
    className: clsx('flex items-center justify-center space-x-1', className),
    "aria-label": "Pagination",
    children: [showFirstLast && jsx(PaginationButton, {
      onClick: function onClick() {
        return onPageChange(1);
      },
      disabled: currentPage === 1,
      "aria-label": "Go to first page",
      children: jsx("svg", {
        className: "w-4 h-4",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        children: jsx("path", {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 2,
          d: "M11 19l-7-7 7-7m8 14l-7-7 7-7"
        })
      })
    }), showPrevNext && jsx(PaginationButton, {
      onClick: function onClick() {
        return onPageChange(currentPage - 1);
      },
      disabled: currentPage === 1,
      "aria-label": "Go to previous page",
      children: jsx("svg", {
        className: "w-4 h-4",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        children: jsx("path", {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 2,
          d: "M15 19l-7-7 7-7"
        })
      })
    }), pages.map(function (page, index) {
      return jsx("div", {
        children: typeof page === 'number' ? jsx(PaginationButton, {
          onClick: function onClick() {
            return onPageChange(page);
          },
          isActive: page === currentPage,
          "aria-label": "Go to page ".concat(page),
          "aria-current": page === currentPage ? 'page' : undefined,
          children: page
        }) : jsx("span", {
          className: "px-3 py-2 text-sm text-mw-gray-500 dark:text-mw-gray-400",
          children: page
        })
      }, index);
    }), showPrevNext && jsx(PaginationButton, {
      onClick: function onClick() {
        return onPageChange(currentPage + 1);
      },
      disabled: currentPage === totalPages,
      "aria-label": "Go to next page",
      children: jsx("svg", {
        className: "w-4 h-4",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        children: jsx("path", {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 2,
          d: "M9 5l7 7-7 7"
        })
      })
    }), showFirstLast && jsx(PaginationButton, {
      onClick: function onClick() {
        return onPageChange(totalPages);
      },
      disabled: currentPage === totalPages,
      "aria-label": "Go to last page",
      children: jsx("svg", {
        className: "w-4 h-4",
        fill: "none",
        viewBox: "0 0 24 24",
        stroke: "currentColor",
        children: jsx("path", {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: 2,
          d: "M13 5l7 7-7 7M5 5l7 7-7 7"
        })
      })
    })]
  });
};
var PaginationButton = function PaginationButton(_a) {
  var children = _a.children,
    onClick = _a.onClick,
    _a$disabled = _a.disabled,
    disabled = _a$disabled === void 0 ? false : _a$disabled,
    _a$isActive = _a.isActive,
    isActive = _a$isActive === void 0 ? false : _a$isActive,
    className = _a.className,
    props = __rest(_a, ["children", "onClick", "disabled", "isActive", "className"]);
  return jsx("button", Object.assign({
    onClick: onClick,
    disabled: disabled,
    className: clsx('px-3 py-2 text-sm font-medium rounded-md', 'border border-mw-gray-300 dark:border-mw-gray-600', 'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2', 'transition-colors duration-200', {
      // Active state
      'bg-mw-blue-600 text-white border-mw-blue-600': isActive,
      // Default state
      'bg-white dark:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700': !isActive && !disabled,
      // Disabled state
      'bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-400 dark:text-mw-gray-500 cursor-not-allowed': disabled
    }, className)
  }, props, {
    children: children
  }));
};

function Menu(_ref) {
  var children = _ref.children,
    className = _ref.className;
  return jsx("div", {
    className: clsx('min-w-[220px] overflow-hidden rounded-md border border-mw-gray-200 bg-white p-1 shadow-md dark:border-mw-gray-700 dark:bg-mw-gray-800', className),
    role: "menu",
    children: children
  });
}
function MenuItem(_ref2) {
  var children = _ref2.children,
    onClick = _ref2.onClick,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    _ref2$selected = _ref2.selected,
    selected = _ref2$selected === void 0 ? false : _ref2$selected,
    _ref2$destructive = _ref2.destructive,
    destructive = _ref2$destructive === void 0 ? false : _ref2$destructive,
    icon = _ref2.icon,
    shortcut = _ref2.shortcut,
    _ref2$hasSubmenu = _ref2.hasSubmenu,
    hasSubmenu = _ref2$hasSubmenu === void 0 ? false : _ref2$hasSubmenu,
    className = _ref2.className;
  return jsxs("div", {
    className: clsx('relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors duration-200', disabled ? 'pointer-events-none opacity-50' : destructive ? 'text-red-600 hover:bg-red-50 hover:text-red-700 dark:text-red-400 dark:hover:bg-red-900/20' : 'text-mw-gray-900 hover:bg-mw-gray-100 dark:text-mw-gray-100 dark:hover:bg-mw-gray-700', selected && 'bg-mw-blue-100 text-mw-blue-900 dark:bg-mw-blue-900/30 dark:text-mw-blue-300', className),
    role: "menuitem",
    onClick: !disabled ? onClick : undefined,
    children: [icon && jsx("span", {
      className: "mr-2 h-4 w-4 flex items-center justify-center",
      children: icon
    }), jsx("span", {
      className: "flex-1",
      children: children
    }), shortcut && jsx("span", {
      className: "ml-auto text-xs tracking-widest text-mw-gray-500 dark:text-mw-gray-400",
      children: shortcut
    }), hasSubmenu && jsx(ChevronRight, {
      className: "ml-auto h-4 w-4"
    })]
  });
}
function MenuSeparator(_ref3) {
  var className = _ref3.className;
  return jsx("div", {
    className: clsx('my-1 h-px bg-mw-gray-200 dark:bg-mw-gray-700', className),
    role: "separator"
  });
}
function MenuGroup(_ref4) {
  var children = _ref4.children,
    label = _ref4.label,
    className = _ref4.className;
  return jsxs("div", {
    className: clsx('px-2 py-1.5', className),
    role: "group",
    children: [label && jsx("div", {
      className: "px-2 py-1.5 text-xs font-semibold text-mw-gray-500 dark:text-mw-gray-400",
      children: label
    }), children]
  });
}
function MenuCheckboxItem(_ref5) {
  var children = _ref5.children,
    _ref5$checked = _ref5.checked,
    checked = _ref5$checked === void 0 ? false : _ref5$checked,
    onCheckedChange = _ref5.onCheckedChange,
    _ref5$disabled = _ref5.disabled,
    disabled = _ref5$disabled === void 0 ? false : _ref5$disabled,
    className = _ref5.className;
  return jsxs("div", {
    className: clsx('relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors duration-200', disabled ? 'pointer-events-none opacity-50' : 'text-mw-gray-900 hover:bg-mw-gray-100 dark:text-mw-gray-100 dark:hover:bg-mw-gray-700', className),
    role: "menuitemcheckbox",
    "aria-checked": checked,
    onClick: !disabled && onCheckedChange ? function () {
      return onCheckedChange(!checked);
    } : undefined,
    children: [jsx("span", {
      className: "mr-2 h-4 w-4 flex items-center justify-center",
      children: checked && jsx(Check, {
        className: "h-4 w-4"
      })
    }), jsx("span", {
      className: "flex-1",
      children: children
    })]
  });
}
// Context for radio group
var MenuRadioContext = /*#__PURE__*/React.createContext({});
function MenuRadioGroup(_ref6) {
  var children = _ref6.children,
    value = _ref6.value,
    onValueChange = _ref6.onValueChange,
    className = _ref6.className;
  return jsx(MenuRadioContext.Provider, {
    value: {
      value: value,
      onValueChange: onValueChange
    },
    children: jsx("div", {
      className: className,
      role: "radiogroup",
      children: children
    })
  });
}
function MenuRadioItem(_ref7) {
  var children = _ref7.children,
    value = _ref7.value,
    _ref7$disabled = _ref7.disabled,
    disabled = _ref7$disabled === void 0 ? false : _ref7$disabled,
    className = _ref7.className;
  var _React$useContext = React.useContext(MenuRadioContext),
    groupValue = _React$useContext.value,
    onValueChange = _React$useContext.onValueChange;
  var isSelected = groupValue === value;
  return jsxs("div", {
    className: clsx('relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors duration-200', disabled ? 'pointer-events-none opacity-50' : 'text-mw-gray-900 hover:bg-mw-gray-100 dark:text-mw-gray-100 dark:hover:bg-mw-gray-700', isSelected && 'bg-mw-blue-100 text-mw-blue-900 dark:bg-mw-blue-900/30 dark:text-mw-blue-300', className),
    role: "menuitemradio",
    "aria-checked": isSelected,
    onClick: !disabled && onValueChange ? function () {
      return onValueChange(value);
    } : undefined,
    children: [jsx("span", {
      className: "mr-2 h-4 w-4 flex items-center justify-center",
      children: isSelected && jsx("div", {
        className: "h-2 w-2 rounded-full bg-current"
      })
    }), jsx("span", {
      className: "flex-1",
      children: children
    })]
  });
}

function cn$7() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function TreeItem(_ref) {
  var node = _ref.node,
    level = _ref.level,
    isExpanded = _ref.isExpanded,
    isSelected = _ref.isSelected,
    hasChildren = _ref.hasChildren,
    onToggle = _ref.onToggle,
    onSelect = _ref.onSelect,
    showIcons = _ref.showIcons,
    showLines = _ref.showLines,
    _ref$isLast = _ref.isLast,
    isLast = _ref$isLast === void 0 ? false : _ref$isLast,
    _ref$parentLines = _ref.parentLines,
    parentLines = _ref$parentLines === void 0 ? [] : _ref$parentLines;
  var handleToggle = function handleToggle(e) {
    e.stopPropagation();
    if (hasChildren) {
      onToggle(node.id);
    }
  };
  var handleSelect = function handleSelect() {
    if (!node.disabled && node.selectable !== false) {
      onSelect(node.id, node);
    }
  };
  var getDefaultIcon = function getDefaultIcon() {
    if (hasChildren) {
      return isExpanded ? jsx(FolderOpen, {
        className: "w-4 h-4"
      }) : jsx(Folder, {
        className: "w-4 h-4"
      });
    }
    return jsx(File, {
      className: "w-4 h-4"
    });
  };
  var currentLines = [].concat(_toConsumableArray(parentLines), [!isLast]);
  return jsxs(Fragment, {
    children: [jsxs("div", {
      className: cn$7('group flex items-center py-1 px-2 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 cursor-pointer transition-colors relative', isSelected && 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300', node.disabled && 'opacity-50 cursor-not-allowed', level > 0 && 'ml-4'),
      onClick: handleSelect,
      style: {
        paddingLeft: "".concat(level * 20 + 8, "px")
      },
      children: [showLines && level > 0 && jsxs("div", {
        className: "absolute left-0 top-0 h-full pointer-events-none",
        children: [parentLines.map(function (hasLine, index) {
          return jsx("div", {
            className: "absolute top-0 h-full w-px bg-mw-gray-300 dark:bg-mw-gray-600",
            style: {
              left: "".concat(index * 20 + 10, "px")
            },
            children: hasLine && jsx("div", {
              className: "w-full h-full bg-mw-gray-300 dark:bg-mw-gray-600"
            })
          }, index);
        }), jsx("div", {
          className: "absolute top-0 h-1/2 w-px bg-mw-gray-300 dark:bg-mw-gray-600",
          style: {
            left: "".concat(level * 20, "px")
          }
        }), jsx("div", {
          className: "absolute top-1/2 w-2 h-px bg-mw-gray-300 dark:bg-mw-gray-600",
          style: {
            left: "".concat(level * 20, "px")
          }
        }), !isLast && jsx("div", {
          className: "absolute top-1/2 bottom-0 w-px bg-mw-gray-300 dark:bg-mw-gray-600",
          style: {
            left: "".concat(level * 20, "px")
          }
        })]
      }), jsx("div", {
        className: "flex items-center justify-center w-4 h-4 mr-2",
        children: hasChildren ? jsx("button", {
          onClick: handleToggle,
          className: "text-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300",
          children: isExpanded ? jsx(ChevronDown, {
            className: "w-3 h-3"
          }) : jsx(ChevronRight, {
            className: "w-3 h-3"
          })
        }) : showLines && jsx("div", {
          className: "w-3 h-3"
        })
      }), showIcons && jsx("div", {
        className: "flex items-center justify-center w-4 h-4 mr-2 text-mw-gray-500",
        children: node.icon || getDefaultIcon()
      }), jsx("span", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white select-none",
        children: node.label
      })]
    }), hasChildren && isExpanded && node.children && jsx("div", {
      children: node.children.map(function (child, index) {
        return jsx(TreeItemContainer, {
          node: child,
          level: level + 1,
          onToggle: onToggle,
          onSelect: onSelect,
          showIcons: showIcons,
          showLines: showLines,
          isLast: index === node.children.length - 1,
          parentLines: currentLines
        }, child.id);
      })
    })]
  });
}
function TreeItemContainer(_a) {
  var node = _a.node,
    props = __rest(_a, ["node"]);
  // This would need to be connected to the parent component's state
  // For now, using internal state as an example
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isExpanded = _useState2[0],
    setIsExpanded = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isSelected = _useState4[0],
    setIsSelected = _useState4[1];
  var hasChildren = Boolean(node.children && node.children.length > 0);
  var handleToggle = function handleToggle(nodeId) {
    if (nodeId === node.id) {
      setIsExpanded(!isExpanded);
    }
    props.onToggle(nodeId);
  };
  var handleSelect = function handleSelect(nodeId, selectedNode) {
    if (nodeId === node.id) {
      setIsSelected(!isSelected);
    }
    props.onSelect(nodeId, selectedNode);
  };
  return jsx(TreeItem, Object.assign({}, props, {
    node: node,
    isExpanded: isExpanded,
    isSelected: isSelected,
    hasChildren: hasChildren,
    onToggle: handleToggle,
    onSelect: handleSelect
  }));
}
function TreeView(_ref2) {
  var data = _ref2.data,
    controlledSelectedIds = _ref2.selectedIds,
    controlledExpandedIds = _ref2.expandedIds,
    onSelect = _ref2.onSelect,
    onExpand = _ref2.onExpand,
    _ref2$multiple = _ref2.multiple,
    multiple = _ref2$multiple === void 0 ? false : _ref2$multiple,
    _ref2$defaultExpanded = _ref2.defaultExpanded,
    defaultExpanded = _ref2$defaultExpanded === void 0 ? [] : _ref2$defaultExpanded,
    _ref2$defaultSelected = _ref2.defaultSelected,
    defaultSelected = _ref2$defaultSelected === void 0 ? [] : _ref2$defaultSelected,
    _ref2$showIcons = _ref2.showIcons,
    showIcons = _ref2$showIcons === void 0 ? true : _ref2$showIcons,
    _ref2$showLines = _ref2.showLines,
    showLines = _ref2$showLines === void 0 ? false : _ref2$showLines,
    className = _ref2.className;
  var _useState5 = useState(defaultSelected),
    _useState6 = _slicedToArray(_useState5, 2),
    internalSelectedIds = _useState6[0],
    setInternalSelectedIds = _useState6[1];
  var _useState7 = useState(defaultExpanded),
    _useState8 = _slicedToArray(_useState7, 2),
    internalExpandedIds = _useState8[0],
    setInternalExpandedIds = _useState8[1];
  var selectedIds = controlledSelectedIds !== undefined ? controlledSelectedIds : internalSelectedIds;
  var expandedIds = controlledExpandedIds !== undefined ? controlledExpandedIds : internalExpandedIds;
  var handleToggle = useCallback(function (nodeId) {
    var newExpandedIds = expandedIds.includes(nodeId) ? expandedIds.filter(function (id) {
      return id !== nodeId;
    }) : [].concat(_toConsumableArray(expandedIds), [nodeId]);
    if (controlledExpandedIds === undefined) {
      setInternalExpandedIds(newExpandedIds);
    }
    onExpand === null || onExpand === void 0 ? void 0 : onExpand(newExpandedIds);
  }, [expandedIds, controlledExpandedIds, onExpand]);
  var handleSelect = useCallback(function (nodeId, node) {
    var newSelectedIds;
    if (multiple) {
      newSelectedIds = selectedIds.includes(nodeId) ? selectedIds.filter(function (id) {
        return id !== nodeId;
      }) : [].concat(_toConsumableArray(selectedIds), [nodeId]);
    } else {
      newSelectedIds = selectedIds.includes(nodeId) ? [] : [nodeId];
    }
    if (controlledSelectedIds === undefined) {
      setInternalSelectedIds(newSelectedIds);
    }
    onSelect === null || onSelect === void 0 ? void 0 : onSelect(newSelectedIds, node);
  }, [selectedIds, multiple, controlledSelectedIds, onSelect]);
  var _renderTreeItem = function renderTreeItem(node, level, isLast) {
    var parentLines = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
    var isExpanded = expandedIds.includes(node.id);
    var isSelected = selectedIds.includes(node.id);
    var hasChildren = Boolean(node.children && node.children.length > 0);
    var currentLines = [].concat(_toConsumableArray(parentLines), [!isLast]);
    return jsxs(React.Fragment, {
      children: [jsx(TreeItem, {
        node: node,
        level: level,
        isExpanded: isExpanded,
        isSelected: isSelected,
        hasChildren: hasChildren,
        onToggle: handleToggle,
        onSelect: handleSelect,
        showIcons: showIcons,
        showLines: showLines,
        isLast: isLast,
        parentLines: parentLines
      }), hasChildren && isExpanded && node.children && jsx("div", {
        children: node.children.map(function (child, index) {
          return _renderTreeItem(child, level + 1, index === node.children.length - 1, currentLines);
        })
      })]
    }, node.id);
  };
  return jsx("div", {
    className: cn$7('py-2', className),
    children: data.map(function (node, index) {
      return _renderTreeItem(node, 0, index === data.length - 1);
    })
  });
}
// Utility function to find a node by ID
function findTreeNode(data, nodeId) {
  var _iterator = _createForOfIteratorHelper(data),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var node = _step.value;
      if (node.id === nodeId) {
        return node;
      }
      if (node.children) {
        var found = findTreeNode(node.children, nodeId);
        if (found) return found;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return null;
}
// Utility function to get all node IDs
function getAllNodeIds(data) {
  var ids = [];
  function traverse(nodes) {
    var _iterator2 = _createForOfIteratorHelper(nodes),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var node = _step2.value;
        ids.push(node.id);
        if (node.children) {
          traverse(node.children);
        }
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  traverse(data);
  return ids;
}
// Utility function to get parent node IDs for expansion
function getParentIds(data, targetId) {
  var parentIds = [];
  function findParents(nodes) {
    var parents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var _iterator3 = _createForOfIteratorHelper(nodes),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var node = _step3.value;
        if (node.id === targetId) {
          parentIds.push.apply(parentIds, _toConsumableArray(parents));
          return true;
        }
        if (node.children) {
          if (findParents(node.children, [].concat(_toConsumableArray(parents), [node.id]))) {
            return true;
          }
        }
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return false;
  }
  findParents(data);
  return parentIds;
}

var DialogContext = /*#__PURE__*/createContext(null);
function Dialog(_ref) {
  var _ref$open = _ref.open,
    open = _ref$open === void 0 ? false : _ref$open,
    onOpenChange = _ref.onOpenChange,
    children = _ref.children;
  return jsx(DialogContext.Provider, {
    value: {
      open: open,
      onOpenChange: onOpenChange || function () {}
    },
    children: children
  });
}
function DialogTrigger(_a) {
  var children = _a.children,
    asChild = _a.asChild,
    onClick = _a.onClick,
    props = __rest(_a, ["children", "asChild", "onClick"]);
  var context = useContext(DialogContext);
  var handleClick = function handleClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
    context === null || context === void 0 ? void 0 : context.onOpenChange(true);
  };
  if (asChild && /*#__PURE__*/isValidElement(children)) {
    return /*#__PURE__*/cloneElement(children, Object.assign(Object.assign({}, props), {
      onClick: handleClick
    }));
  }
  return jsx("button", Object.assign({
    onClick: handleClick
  }, props, {
    children: children
  }));
}
function DialogContent(_a) {
  var children = _a.children,
    className = _a.className,
    _a$showCloseButton = _a.showCloseButton,
    showCloseButton = _a$showCloseButton === void 0 ? true : _a$showCloseButton,
    props = __rest(_a, ["children", "className", "showCloseButton"]);
  var context = useContext(DialogContext);
  useEffect(function () {
    var handleEscape = function handleEscape(e) {
      if (e.key === 'Escape') {
        context === null || context === void 0 ? void 0 : context.onOpenChange(false);
      }
    };
    if (context === null || context === void 0 ? void 0 : context.open) {
      document.addEventListener('keydown', handleEscape);
      document.body.style.overflow = 'hidden';
    }
    return function () {
      document.removeEventListener('keydown', handleEscape);
      document.body.style.overflow = '';
    };
  }, [context === null || context === void 0 ? void 0 : context.open]);
  if (!(context === null || context === void 0 ? void 0 : context.open)) return null;
  return jsxs("div", {
    className: "fixed inset-0 z-50 flex items-center justify-center",
    children: [jsx("div", {
      className: "fixed inset-0 bg-black/50 backdrop-blur-sm",
      onClick: function onClick() {
        return context.onOpenChange(false);
      }
    }), jsxs("div", Object.assign({
      className: clsx('relative z-50 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto', 'bg-white dark:bg-mw-gray-800 rounded-lg shadow-lg border border-mw-gray-200 dark:border-mw-gray-700', 'animate-in fade-in-0 zoom-in-95 duration-200', className)
    }, props, {
      children: [showCloseButton && jsx("button", {
        onClick: function onClick() {
          return context.onOpenChange(false);
        },
        className: "absolute top-4 right-4 p-1 rounded-sm opacity-70 hover:opacity-100 transition-opacity",
        children: jsx(X, {
          className: "w-4 h-4"
        })
      }), children]
    }))]
  });
}
function DialogHeader(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("div", Object.assign({
    className: clsx('flex flex-col space-y-1.5 p-6 pb-2', className)
  }, props, {
    children: children
  }));
}
function DialogFooter(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("div", Object.assign({
    className: clsx('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2 p-6 pt-2', className)
  }, props, {
    children: children
  }));
}
function DialogTitle(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("h2", Object.assign({
    className: clsx('text-lg font-semibold text-mw-gray-900 dark:text-white', className)
  }, props, {
    children: children
  }));
}
function DialogDescription(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("p", Object.assign({
    className: clsx('text-sm text-mw-gray-600 dark:text-mw-gray-300', className)
  }, props, {
    children: children
  }));
}

var SheetContext = /*#__PURE__*/createContext(null);
var sheetSides = {
  top: {
    container: 'inset-x-0 top-0',
    content: 'h-auto max-h-[80vh] w-full',
    animation: 'slide-in-from-top-full'
  },
  right: {
    container: 'inset-y-0 right-0',
    content: 'h-full w-3/4 sm:max-w-sm',
    animation: 'slide-in-from-right-full'
  },
  bottom: {
    container: 'inset-x-0 bottom-0',
    content: 'h-auto max-h-[80vh] w-full',
    animation: 'slide-in-from-bottom-full'
  },
  left: {
    container: 'inset-y-0 left-0',
    content: 'h-full w-3/4 sm:max-w-sm',
    animation: 'slide-in-from-left-full'
  }
};
var sheetSizes = {
  sm: 'sm:max-w-sm',
  md: 'sm:max-w-md',
  lg: 'sm:max-w-lg',
  xl: 'sm:max-w-xl',
  full: 'w-full'
};
function Sheet(_ref) {
  var _ref$open = _ref.open,
    open = _ref$open === void 0 ? false : _ref$open,
    onOpenChange = _ref.onOpenChange,
    children = _ref.children;
  return jsx(SheetContext.Provider, {
    value: {
      open: open,
      onOpenChange: onOpenChange || function () {}
    },
    children: children
  });
}
function SheetTrigger(_a) {
  var asChild = _a.asChild,
    children = _a.children,
    onClick = _a.onClick,
    props = __rest(_a, ["asChild", "children", "onClick"]);
  var context = useContext(SheetContext);
  var handleClick = function handleClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
    context === null || context === void 0 ? void 0 : context.onOpenChange(true);
  };
  if (asChild && /*#__PURE__*/React.isValidElement(children)) {
    return /*#__PURE__*/React.cloneElement(children, Object.assign(Object.assign({}, props), {
      onClick: handleClick
    }));
  }
  return jsx("button", Object.assign({
    onClick: handleClick
  }, props, {
    children: children
  }));
}
function SheetContent(_a) {
  var _a$side = _a.side,
    side = _a$side === void 0 ? 'right' : _a$side,
    _a$size = _a.size,
    size = _a$size === void 0 ? 'md' : _a$size,
    className = _a.className,
    children = _a.children,
    props = __rest(_a, ["side", "size", "className", "children"]);
  var context = useContext(SheetContext);
  var sideConfig = sheetSides[side];
  useEffect(function () {
    var handleEscape = function handleEscape(e) {
      if (e.key === 'Escape') {
        context === null || context === void 0 ? void 0 : context.onOpenChange(false);
      }
    };
    if (context === null || context === void 0 ? void 0 : context.open) {
      document.addEventListener('keydown', handleEscape);
      document.body.style.overflow = 'hidden';
    }
    return function () {
      document.removeEventListener('keydown', handleEscape);
      document.body.style.overflow = '';
    };
  }, [context === null || context === void 0 ? void 0 : context.open]);
  if (!(context === null || context === void 0 ? void 0 : context.open)) return null;
  return jsxs("div", {
    className: "fixed inset-0 z-50",
    children: [jsx("div", {
      className: "fixed inset-0 bg-black/50 backdrop-blur-sm",
      onClick: function onClick() {
        return context.onOpenChange(false);
      }
    }), jsx("div", {
      className: clsx('fixed z-50', sideConfig.container),
      children: jsxs("div", Object.assign({
        className: clsx('flex flex-col bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-800 shadow-lg', sideConfig.content, side === 'right' && sheetSizes[size], side === 'left' && sheetSizes[size], side === 'top' && 'rounded-b-lg', side === 'bottom' && 'rounded-t-lg', side === 'left' && 'rounded-r-lg', side === 'right' && 'rounded-l-lg', "animate-in ".concat(sideConfig.animation, " duration-300"), className)
      }, props, {
        children: [jsx("button", {
          onClick: function onClick() {
            return context.onOpenChange(false);
          },
          className: "absolute top-4 right-4 p-1 rounded-sm opacity-70 hover:opacity-100 transition-opacity z-10",
          children: jsx(X, {
            className: "w-4 h-4"
          })
        }), children]
      }))
    })]
  });
}
function SheetHeader(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("div", Object.assign({
    className: clsx('flex flex-col space-y-2 p-6 pb-4', className)
  }, props, {
    children: children
  }));
}
function SheetFooter(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("div", Object.assign({
    className: clsx('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2 p-6 pt-4 mt-auto', className)
  }, props, {
    children: children
  }));
}
function SheetTitle(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("h2", Object.assign({
    className: clsx('text-lg font-semibold text-mw-gray-900 dark:text-white', className)
  }, props, {
    children: children
  }));
}
function SheetDescription(_a) {
  var children = _a.children,
    className = _a.className,
    props = __rest(_a, ["children", "className"]);
  return jsx("p", Object.assign({
    className: clsx('text-sm text-mw-gray-600 dark:text-mw-gray-300', className)
  }, props, {
    children: children
  }));
}

var PopoverContext = /*#__PURE__*/createContext(null);
function Popover(_ref) {
  var _ref$open = _ref.open,
    open = _ref$open === void 0 ? false : _ref$open,
    onOpenChange = _ref.onOpenChange,
    children = _ref.children;
  var triggerRef = useRef(null);
  return jsx(PopoverContext.Provider, {
    value: {
      open: open,
      onOpenChange: onOpenChange || function () {},
      triggerRef: triggerRef
    },
    children: children
  });
}
function PopoverTrigger(_a) {
  var asChild = _a.asChild,
    children = _a.children,
    onClick = _a.onClick,
    props = __rest(_a, ["asChild", "children", "onClick"]);
  var context = useContext(PopoverContext);
  var handleClick = function handleClick(e) {
    onClick === null || onClick === void 0 ? void 0 : onClick(e);
    context === null || context === void 0 ? void 0 : context.onOpenChange(!context.open);
  };
  if (asChild && /*#__PURE__*/React.isValidElement(children)) {
    return /*#__PURE__*/React.cloneElement(children, Object.assign({
      ref: context === null || context === void 0 ? void 0 : context.triggerRef,
      onClick: handleClick
    }, props));
  }
  return jsx("button", Object.assign({
    ref: context === null || context === void 0 ? void 0 : context.triggerRef,
    onClick: handleClick
  }, props, {
    children: children
  }));
}
function PopoverContent(_a) {
  var _a$side = _a.side,
    side = _a$side === void 0 ? 'bottom' : _a$side,
    _a$align = _a.align,
    align = _a$align === void 0 ? 'center' : _a$align,
    _a$sideOffset = _a.sideOffset,
    sideOffset = _a$sideOffset === void 0 ? 4 : _a$sideOffset,
    _a$alignOffset = _a.alignOffset,
    alignOffset = _a$alignOffset === void 0 ? 0 : _a$alignOffset,
    className = _a.className,
    children = _a.children,
    props = __rest(_a, ["side", "align", "sideOffset", "alignOffset", "className", "children"]);
  var context = useContext(PopoverContext);
  var contentRef = useRef(null);
  var _useState = useState({
      top: 0,
      left: 0
    }),
    _useState2 = _slicedToArray(_useState, 2),
    position = _useState2[0],
    setPosition = _useState2[1];
  useEffect(function () {
    if (!(context === null || context === void 0 ? void 0 : context.open) || !context.triggerRef.current || !contentRef.current) return;
    var updatePosition = function updatePosition() {
      var trigger = context.triggerRef.current;
      var content = contentRef.current;
      if (!trigger || !content) return;
      var triggerRect = trigger.getBoundingClientRect();
      var contentRect = content.getBoundingClientRect();
      var viewportWidth = window.innerWidth;
      var viewportHeight = window.innerHeight;
      var top = 0;
      var left = 0;
      // Calculate position based on side
      switch (side) {
        case 'top':
          top = triggerRect.top - contentRect.height - sideOffset;
          break;
        case 'bottom':
          top = triggerRect.bottom + sideOffset;
          break;
        case 'left':
          left = triggerRect.left - contentRect.width - sideOffset;
          break;
        case 'right':
          left = triggerRect.right + sideOffset;
          break;
      }
      // Calculate alignment
      if (side === 'top' || side === 'bottom') {
        switch (align) {
          case 'start':
            left = triggerRect.left + alignOffset;
            break;
          case 'center':
            left = triggerRect.left + triggerRect.width / 2 - contentRect.width / 2 + alignOffset;
            break;
          case 'end':
            left = triggerRect.right - contentRect.width + alignOffset;
            break;
        }
      } else {
        switch (align) {
          case 'start':
            top = triggerRect.top + alignOffset;
            break;
          case 'center':
            top = triggerRect.top + triggerRect.height / 2 - contentRect.height / 2 + alignOffset;
            break;
          case 'end':
            top = triggerRect.bottom - contentRect.height + alignOffset;
            break;
        }
      }
      // Ensure content stays within viewport
      left = Math.max(8, Math.min(left, viewportWidth - contentRect.width - 8));
      top = Math.max(8, Math.min(top, viewportHeight - contentRect.height - 8));
      setPosition({
        top: top,
        left: left
      });
    };
    updatePosition();
    window.addEventListener('resize', updatePosition);
    window.addEventListener('scroll', updatePosition);
    return function () {
      window.removeEventListener('resize', updatePosition);
      window.removeEventListener('scroll', updatePosition);
    };
  }, [context === null || context === void 0 ? void 0 : context.open, side, align, sideOffset, alignOffset]);
  useEffect(function () {
    var handleClickOutside = function handleClickOutside(e) {
      if ((context === null || context === void 0 ? void 0 : context.open) && contentRef.current && !contentRef.current.contains(e.target) && context.triggerRef.current && !context.triggerRef.current.contains(e.target)) {
        context.onOpenChange(false);
      }
    };
    var handleEscape = function handleEscape(e) {
      if (e.key === 'Escape' && (context === null || context === void 0 ? void 0 : context.open)) {
        context.onOpenChange(false);
      }
    };
    if (context === null || context === void 0 ? void 0 : context.open) {
      document.addEventListener('mousedown', handleClickOutside);
      document.addEventListener('keydown', handleEscape);
    }
    return function () {
      document.removeEventListener('mousedown', handleClickOutside);
      document.removeEventListener('keydown', handleEscape);
    };
  }, [context === null || context === void 0 ? void 0 : context.open]);
  if (!(context === null || context === void 0 ? void 0 : context.open)) return null;
  return jsx("div", Object.assign({
    ref: contentRef,
    className: clsx('fixed z-50 min-w-[8rem] rounded-md border border-mw-gray-200 dark:border-mw-gray-700', 'bg-white dark:bg-mw-gray-800 p-4 shadow-md outline-none', 'animate-in fade-in-0 zoom-in-95 duration-200', className),
    style: {
      top: position.top,
      left: position.left
    }
  }, props, {
    children: children
  }));
}

var ToastContext = /*#__PURE__*/createContext(undefined);
function useToast() {
  var context = useContext(ToastContext);
  if (!context) {
    throw new Error('useToast must be used within a ToastProvider');
  }
  return context;
}
function ToastProvider(_ref) {
  var children = _ref.children;
  var _useState = useState([]),
    _useState2 = _slicedToArray(_useState, 2),
    toasts = _useState2[0],
    setToasts = _useState2[1];
  var addToast = useCallback(function (toast) {
    var _a;
    var id = Math.random().toString(36).substr(2, 9);
    var newToast = Object.assign(Object.assign({}, toast), {
      id: id
    });
    setToasts(function (prev) {
      return [].concat(_toConsumableArray(prev), [newToast]);
    });
    // Auto remove after duration
    var duration = (_a = toast.duration) !== null && _a !== void 0 ? _a : 5000;
    if (duration > 0) {
      setTimeout(function () {
        removeToast(id);
      }, duration);
    }
  }, []);
  var removeToast = useCallback(function (id) {
    setToasts(function (prev) {
      return prev.filter(function (toast) {
        return toast.id !== id;
      });
    });
  }, []);
  return jsxs(ToastContext.Provider, {
    value: {
      toasts: toasts,
      addToast: addToast,
      removeToast: removeToast
    },
    children: [children, jsx(ToastContainer, {})]
  });
}
function ToastContainer() {
  var _useToast = useToast(),
    toasts = _useToast.toasts;
  return jsx("div", {
    className: "fixed bottom-4 right-4 z-50 flex flex-col space-y-2 max-w-sm",
    children: toasts.map(function (toast) {
      return jsx(ToastComponent, {
        toast: toast
      }, toast.id);
    })
  });
}
var toastVariants = {
  "default": {
    container: 'bg-white dark:bg-mw-gray-800 border-mw-gray-200 dark:border-mw-gray-700',
    icon: Info,
    iconColor: 'text-mw-blue-600'
  },
  success: {
    container: 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800',
    icon: CircleCheckBig,
    iconColor: 'text-green-600'
  },
  error: {
    container: 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800',
    icon: CircleAlert,
    iconColor: 'text-red-600'
  },
  warning: {
    container: 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800',
    icon: TriangleAlert,
    iconColor: 'text-yellow-600'
  },
  info: {
    container: 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800',
    icon: Info,
    iconColor: 'text-blue-600'
  }
};
function ToastComponent(_ref2) {
  var toast = _ref2.toast;
  var _useToast2 = useToast(),
    removeToast = _useToast2.removeToast;
  var variant = toastVariants[toast.variant || 'default'];
  var Icon = variant.icon;
  return jsxs("div", {
    className: clsx('flex items-start p-4 border rounded-lg shadow-lg animate-in slide-in-from-right-full', variant.container),
    children: [jsx(Icon, {
      className: clsx('w-5 h-5 mt-0.5 mr-3 flex-shrink-0', variant.iconColor)
    }), jsxs("div", {
      className: "flex-1 min-w-0",
      children: [toast.title && jsx("p", {
        className: "text-sm font-semibold text-mw-gray-900 dark:text-white",
        children: toast.title
      }), toast.description && jsx("p", {
        className: clsx('text-sm text-mw-gray-600 dark:text-mw-gray-300', toast.title && 'mt-1'),
        children: toast.description
      }), toast.action && jsx("button", {
        onClick: toast.action.onClick,
        className: "mt-2 text-sm font-medium text-mw-blue-600 hover:text-mw-blue-700 dark:text-mw-blue-400 dark:hover:text-mw-blue-300",
        children: toast.action.label
      })]
    }), jsx("button", {
      onClick: function onClick() {
        return removeToast(toast.id);
      },
      className: "ml-3 flex-shrink-0 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200",
      children: jsx(X, {
        className: "w-4 h-4"
      })
    })]
  });
}

var Command = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    value = _a.value,
    onValueChange = _a.onValueChange,
    _a$placeholder = _a.placeholder,
    placeholder = _a$placeholder === void 0 ? 'Search...' : _a$placeholder,
    disabled = _a.disabled,
    children = _a.children,
    props = __rest(_a, ["className", "value", "onValueChange", "placeholder", "disabled", "children"]);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2);
    _useState2[0];
    var setOpen = _useState2[1];
  var _useState3 = useState(value || ''),
    _useState4 = _slicedToArray(_useState3, 2),
    searchValue = _useState4[0],
    setSearchValue = _useState4[1];
  useEffect(function () {
    var down = function down(e) {
      if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {
        e.preventDefault();
        setOpen(function (open) {
          return !open;
        });
      }
      if (e.key === 'Escape') {
        setOpen(false);
      }
    };
    document.addEventListener('keydown', down);
    return function () {
      return document.removeEventListener('keydown', down);
    };
  }, []);
  var handleValueChange = function handleValueChange(newValue) {
    setSearchValue(newValue);
    onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(newValue);
  };
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('flex flex-col overflow-hidden rounded-md border border-mw-gray-200 dark:border-mw-gray-700 bg-white dark:bg-mw-gray-800', className)
  }, props, {
    children: [jsxs("div", {
      className: "flex items-center border-b border-mw-gray-200 dark:border-mw-gray-700 px-3",
      children: [jsx(Search, {
        className: "mr-2 h-4 w-4 shrink-0 text-mw-gray-500 dark:text-mw-gray-400"
      }), jsx("input", {
        className: clsx('flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-mw-gray-500 dark:placeholder:text-mw-gray-400', 'disabled:cursor-not-allowed disabled:opacity-50'),
        placeholder: placeholder,
        disabled: disabled,
        value: searchValue,
        onChange: function onChange(e) {
          return handleValueChange(e.target.value);
        }
      }), jsxs("kbd", {
        className: "pointer-events-none hidden h-5 select-none items-center gap-1 rounded border border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-100 dark:bg-mw-gray-700 px-1.5 font-mono text-[10px] font-medium text-mw-gray-600 dark:text-mw-gray-300 sm:flex",
        children: [jsx("span", {
          className: "text-xs",
          children: "\u2318"
        }), "K"]
      })]
    }), jsx("div", {
      className: "max-h-[300px] overflow-y-auto overflow-x-hidden",
      children: children
    })]
  }));
});
Command.displayName = 'Command';
var CommandGroup = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    heading = _a.heading,
    children = _a.children,
    props = __rest(_a, ["className", "heading", "children"]);
  return jsxs("div", Object.assign({
    ref: ref,
    className: clsx('overflow-hidden p-1', className)
  }, props, {
    children: [heading && jsx("div", {
      className: "px-2 py-1.5 text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400",
      children: heading
    }), jsx("div", {
      children: children
    })]
  }));
});
CommandGroup.displayName = 'CommandGroup';
var CommandItem = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    value = _a.value,
    onSelect = _a.onSelect,
    disabled = _a.disabled,
    children = _a.children,
    props = __rest(_a, ["className", "value", "onSelect", "disabled", "children"]);
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none', 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700', 'data-[selected]:bg-mw-gray-100 dark:data-[selected]:bg-mw-gray-700', disabled && 'pointer-events-none opacity-50', className),
    onClick: function onClick() {
      return !disabled && (onSelect === null || onSelect === void 0 ? void 0 : onSelect(value || ''));
    }
  }, props, {
    children: children
  }));
});
CommandItem.displayName = 'CommandItem';
var CommandSeparator = /*#__PURE__*/forwardRef(function (_a, ref) {
  var className = _a.className,
    props = __rest(_a, ["className"]);
  return jsx("div", Object.assign({
    ref: ref,
    className: clsx('-mx-1 h-px bg-mw-gray-200 dark:bg-mw-gray-700', className)
  }, props));
});
CommandSeparator.displayName = 'CommandSeparator';

function cn$6() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
// Generate time slots for day/week view
function generateTimeSlots() {
  var slots = [];
  for (var hour = 0; hour < 24; hour++) {
    for (var minute = 0; minute < 60; minute += 30) {
      var timeString = "".concat(hour.toString().padStart(2, '0'), ":").concat(minute.toString().padStart(2, '0'));
      slots.push(timeString);
    }
  }
  return slots;
}
function CalendarDate(_ref) {
  var date = _ref.date,
    currentMonth = _ref.currentMonth,
    _ref$selected = _ref.selected,
    selected = _ref$selected === void 0 ? false : _ref$selected,
    _ref$today = _ref.today,
    today = _ref$today === void 0 ? false : _ref$today,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$hasEvents = _ref.hasEvents,
    hasEvents = _ref$hasEvents === void 0 ? false : _ref$hasEvents,
    _ref$events = _ref.events,
    events = _ref$events === void 0 ? [] : _ref$events,
    onClick = _ref.onClick,
    onEventClick = _ref.onEventClick;
  var isCurrentMonth = date.getMonth() === currentMonth;
  var dateNumber = date.getDate();
  var handleClick = function handleClick() {
    if (!disabled && onClick) {
      onClick(date);
    }
  };
  var handleEventClick = function handleEventClick(e, event) {
    e.stopPropagation();
    onEventClick === null || onEventClick === void 0 ? void 0 : onEventClick(event);
  };
  return jsxs("div", {
    className: cn$6('relative min-h-[2.5rem] p-1 border border-mw-gray-200 dark:border-mw-gray-700 cursor-pointer transition-colors', !isCurrentMonth && 'bg-mw-gray-50 dark:bg-mw-gray-800/50 text-mw-gray-400', isCurrentMonth && 'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800', selected && 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300', today && !selected && 'bg-mw-blue-50 dark:bg-mw-blue-900/10 text-mw-blue-600 dark:text-mw-blue-400', disabled && 'opacity-50 cursor-not-allowed'),
    onClick: handleClick,
    children: [jsx("div", {
      className: cn$6('flex items-center justify-center w-6 h-6 text-sm font-medium rounded-full', today && 'bg-mw-blue-600 text-white'),
      children: dateNumber
    }), hasEvents && events.length > 0 && jsxs("div", {
      className: "mt-1 space-y-1",
      children: [events.slice(0, 3).map(function (event) {
        return jsx("div", {
          className: cn$6('px-1 py-0.5 text-xs rounded truncate cursor-pointer', event.color === 'red' && 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300', event.color === 'blue' && 'bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300', event.color === 'green' && 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300', event.color === 'yellow' && 'bg-yellow-100 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300', !event.color && 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300'),
          onClick: function onClick(e) {
            return handleEventClick(e, event);
          },
          title: event.title,
          children: event.title
        }, event.id);
      }), events.length > 3 && jsxs("div", {
        className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
        children: ["+", events.length - 3, " more"]
      })]
    })]
  });
}
function Calendar(_ref2) {
  var value = _ref2.value,
    onChange = _ref2.onChange,
    _ref2$events = _ref2.events,
    events = _ref2$events === void 0 ? [] : _ref2$events,
    onEventClick = _ref2.onEventClick,
    minDate = _ref2.minDate,
    maxDate = _ref2.maxDate,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    _ref2$showWeekNumbers = _ref2.showWeekNumbers,
    showWeekNumbers = _ref2$showWeekNumbers === void 0 ? false : _ref2$showWeekNumbers,
    _ref2$weekStartsOn = _ref2.weekStartsOn,
    weekStartsOn = _ref2$weekStartsOn === void 0 ? 0 : _ref2$weekStartsOn,
    className = _ref2.className,
    _ref2$locale = _ref2.locale,
    locale = _ref2$locale === void 0 ? 'en-US' : _ref2$locale,
    _ref2$view = _ref2.view,
    view = _ref2$view === void 0 ? 'month' : _ref2$view,
    onViewChange = _ref2.onViewChange,
    _ref2$showToday = _ref2.showToday,
    showToday = _ref2$showToday === void 0 ? true : _ref2$showToday,
    _ref2$showNavigation = _ref2.showNavigation,
    showNavigation = _ref2$showNavigation === void 0 ? true : _ref2$showNavigation,
    _ref2$showViewModeBut = _ref2.showViewModeButtons,
    showViewModeButtons = _ref2$showViewModeBut === void 0 ? true : _ref2$showViewModeBut,
    timeSlots = _ref2.timeSlots,
    _ref2$hourFormat = _ref2.hourFormat,
    hourFormat = _ref2$hourFormat === void 0 ? 24 : _ref2$hourFormat;
  var _useState = useState(value || new Date()),
    _useState2 = _slicedToArray(_useState, 2),
    currentDate = _useState2[0],
    setCurrentDate = _useState2[1];
  var _useState3 = useState(view),
    _useState4 = _slicedToArray(_useState3, 2),
    currentView = _useState4[0],
    setCurrentView = _useState4[1];
  var today = new Date();
  // Use default time slots if not provided
  var defaultTimeSlots = timeSlots || generateTimeSlots();
  var _useMemo = useMemo(function () {
      return {
        year: currentDate.getFullYear(),
        month: currentDate.getMonth()
      };
    }, [currentDate]),
    year = _useMemo.year,
    month = _useMemo.month;
  // Handle view change
  var handleViewChange = function handleViewChange(newView) {
    setCurrentView(newView);
    onViewChange === null || onViewChange === void 0 ? void 0 : onViewChange(newView);
  };
  // Format time based on hour format
  var formatTime = function formatTime(time) {
    if (hourFormat === 12) {
      var _time$split$map = time.split(':').map(Number),
        _time$split$map2 = _slicedToArray(_time$split$map, 2),
        hours = _time$split$map2[0],
        minutes = _time$split$map2[1];
      var ampm = hours >= 12 ? 'PM' : 'AM';
      var displayHours = hours % 12 || 12;
      return "".concat(displayHours, ":").concat(minutes.toString().padStart(2, '0'), " ").concat(ampm);
    }
    return time;
  };
  // Get week dates for week view
  var getWeekDates = function getWeekDates(date) {
    var startOfWeek = new Date(date);
    var day = startOfWeek.getDay();
    var diff = startOfWeek.getDate() - day + (day === 0 ? -6 : 1); // Adjust for Monday start
    startOfWeek.setDate(diff);
    var weekDates = [];
    for (var i = 0; i < 7; i++) {
      var weekDate = new Date(startOfWeek);
      weekDate.setDate(startOfWeek.getDate() + i);
      weekDates.push(weekDate);
    }
    return weekDates;
  };
  // Get events for a specific date
  var getEventsForDate = function getEventsForDate(date) {
    return events.filter(function (event) {
      return event.date.toDateString() === date.toDateString();
    });
  };
  // Get events for a specific time slot
  var getEventsForTimeSlot = function getEventsForTimeSlot(date, timeSlot) {
    var dateEvents = getEventsForDate(date);
    return dateEvents.filter(function (event) {
      if (event.allDay) return false;
      if (!event.startTime) return false;
      var eventStart = event.startTime;
      var eventEnd = event.endTime || eventStart;
      return timeSlot >= eventStart && timeSlot < eventEnd;
    });
  };
  // Generate calendar days for month view
  var calendarDays = useMemo(function () {
    var firstDayOfMonth = new Date(year, month, 1);
    var lastDayOfMonth = new Date(year, month + 1, 0);
    var firstDayOfWeek = (firstDayOfMonth.getDay() - weekStartsOn + 7) % 7;
    var daysInMonth = lastDayOfMonth.getDate();
    var days = [];
    // Previous month days
    for (var i = firstDayOfWeek - 1; i >= 0; i--) {
      days.push(new Date(year, month, -i));
    }
    // Current month days
    for (var day = 1; day <= daysInMonth; day++) {
      days.push(new Date(year, month, day));
    }
    // Next month days
    var remainingDays = 42 - days.length; // 6 weeks * 7 days
    for (var _day = 1; _day <= remainingDays; _day++) {
      days.push(new Date(year, month + 1, _day));
    }
    return days;
  }, [year, month, weekStartsOn]);
  // Group events by date
  var eventsByDate = useMemo(function () {
    var grouped = {};
    events.forEach(function (event) {
      var dateKey = event.date.toDateString();
      if (!grouped[dateKey]) {
        grouped[dateKey] = [];
      }
      grouped[dateKey].push(event);
    });
    return grouped;
  }, [events]);
  var navigateMonth = function navigateMonth(direction) {
    var newDate = new Date(currentDate);
    if (direction === 'prev') {
      newDate.setMonth(month - 1);
    } else {
      newDate.setMonth(month + 1);
    }
    setCurrentDate(newDate);
  };
  var navigateWeek = function navigateWeek(direction) {
    var newDate = new Date(currentDate);
    if (direction === 'prev') {
      newDate.setDate(currentDate.getDate() - 7);
    } else {
      newDate.setDate(currentDate.getDate() + 7);
    }
    setCurrentDate(newDate);
  };
  var navigateDay = function navigateDay(direction) {
    var newDate = new Date(currentDate);
    if (direction === 'prev') {
      newDate.setDate(currentDate.getDate() - 1);
    } else {
      newDate.setDate(currentDate.getDate() + 1);
    }
    setCurrentDate(newDate);
  };
  var navigateToToday = function navigateToToday() {
    setCurrentDate(new Date());
  };
  var handleDateClick = function handleDateClick(date) {
    if (disabled) return;
    if (minDate && date < minDate) return;
    if (maxDate && date > maxDate) return;
    setCurrentDate(date);
    onChange === null || onChange === void 0 ? void 0 : onChange(date);
  };
  var isDateDisabled = function isDateDisabled(date) {
    if (disabled) return true;
    if (minDate && date < minDate) return true;
    if (maxDate && date > maxDate) return true;
    return false;
  };
  var isToday = function isToday(date) {
    return date.toDateString() === today.toDateString();
  };
  var isSelected = function isSelected(date) {
    return value ? date.toDateString() === value.toDateString() : false;
  };
  // Adjust day labels based on week start
  var dayLabels = useMemo(function () {
    var labels = [].concat(DAYS_OF_WEEK);
    for (var i = 0; i < weekStartsOn; i++) {
      labels.push(labels.shift());
    }
    return labels;
  }, [weekStartsOn]);
  // Get navigation functions based on current view
  var getNavigationFunctions = function getNavigationFunctions() {
    switch (currentView) {
      case 'week':
        return {
          navigate: navigateWeek,
          getTitle: function getTitle() {
            var weekDates = getWeekDates(currentDate);
            var startDate = weekDates[0];
            var endDate = weekDates[6];
            return "".concat(startDate.toLocaleDateString(locale, {
              month: 'short',
              day: 'numeric'
            }), " - ").concat(endDate.toLocaleDateString(locale, {
              month: 'short',
              day: 'numeric',
              year: 'numeric'
            }));
          }
        };
      case 'day':
        return {
          navigate: navigateDay,
          getTitle: function getTitle() {
            return currentDate.toLocaleDateString(locale, {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            });
          }
        };
      default:
        return {
          navigate: navigateMonth,
          getTitle: function getTitle() {
            return "".concat(MONTHS[month], " ").concat(year);
          }
        };
    }
  };
  var _getNavigationFunctio = getNavigationFunctions(),
    navigate = _getNavigationFunctio.navigate,
    getTitle = _getNavigationFunctio.getTitle;
  return jsxs("div", {
    className: cn$6('bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg p-4', className),
    children: [showNavigation && jsxs("div", {
      className: "flex items-center justify-between mb-4",
      children: [jsxs("div", {
        className: "flex items-center space-x-4",
        children: [jsx("h2", {
          className: "text-lg font-semibold text-mw-gray-900 dark:text-white",
          children: getTitle()
        }), showToday && jsx("button", {
          onClick: navigateToToday,
          className: "px-2 py-1 text-xs font-medium text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-700 dark:hover:text-mw-blue-300 border border-mw-blue-200 dark:border-mw-blue-700 rounded",
          children: "Today"
        })]
      }), jsxs("div", {
        className: "flex items-center space-x-4",
        children: [showViewModeButtons && jsx("div", {
          className: "flex rounded-lg border border-mw-gray-200 dark:border-mw-gray-700",
          children: ['month', 'week', 'day'].map(function (viewMode) {
            return jsx("button", {
              onClick: function onClick() {
                return handleViewChange(viewMode);
              },
              className: cn$6('px-3 py-1 text-sm capitalize transition-colors', currentView === viewMode ? 'bg-mw-blue-600 text-white' : 'text-mw-gray-600 dark:text-mw-gray-400 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800', viewMode === 'month' ? 'rounded-l-md' : viewMode === 'day' ? 'rounded-r-md' : ''),
              children: viewMode
            }, viewMode);
          })
        }), jsxs("div", {
          className: "flex items-center space-x-2",
          children: [jsx("button", {
            onClick: function onClick() {
              return navigate('prev');
            },
            className: "p-1 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-600 dark:text-mw-gray-400",
            children: jsx(ChevronLeft, {
              className: "w-4 h-4"
            })
          }), jsx("button", {
            onClick: function onClick() {
              return navigate('next');
            },
            className: "p-1 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-600 dark:text-mw-gray-400",
            children: jsx(ChevronRight, {
              className: "w-4 h-4"
            })
          })]
        })]
      })]
    }), currentView === 'month' && jsxs("div", {
      className: "grid grid-cols-7 gap-0",
      children: [showWeekNumbers && jsx("div", {
        className: "text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400 p-2",
        children: "Wk"
      }), dayLabels.map(function (day) {
        return jsx("div", {
          className: "text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400 p-2 text-center",
          children: day
        }, day);
      }), calendarDays.map(function (date, index) {
        var dateKey = date.toDateString();
        var dateEvents = eventsByDate[dateKey] || [];
        // Week number for first day of each week
        var showWeekNumber = showWeekNumbers && index % 7 === 0;
        var weekNumber = getWeekNumber(date);
        return jsxs(React.Fragment, {
          children: [showWeekNumber && jsx("div", {
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 p-2 border border-mw-gray-200 dark:border-mw-gray-700 bg-mw-gray-50 dark:bg-mw-gray-800 flex items-center justify-center",
            children: weekNumber
          }), jsx(CalendarDate, {
            date: date,
            currentMonth: month,
            selected: isSelected(date),
            today: isToday(date),
            disabled: isDateDisabled(date),
            hasEvents: dateEvents.length > 0,
            events: dateEvents,
            onClick: handleDateClick,
            onEventClick: onEventClick
          })]
        }, date.toISOString());
      })]
    }), currentView === 'week' && jsx(WeekView, {
      currentDate: currentDate,
      timeSlots: defaultTimeSlots,
      events: events,
      onDateClick: handleDateClick,
      onEventClick: onEventClick,
      isToday: isToday,
      isSelected: isSelected,
      formatTime: formatTime,
      getEventsForTimeSlot: getEventsForTimeSlot,
      getWeekDates: getWeekDates
    }), currentView === 'day' && jsx(DayView, {
      currentDate: currentDate,
      timeSlots: defaultTimeSlots,
      events: events,
      onEventClick: onEventClick,
      formatTime: formatTime,
      getEventsForTimeSlot: getEventsForTimeSlot
    })]
  });
}
// Utility function to get week number
function getWeekNumber(date) {
  var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
  var dayNum = d.getUTCDay() || 7;
  d.setUTCDate(d.getUTCDate() + 4 - dayNum);
  var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));
  return Math.ceil(((d.getTime() - yearStart.getTime()) / 86400000 + 1) / 7);
}
function WeekView(_ref3) {
  var currentDate = _ref3.currentDate,
    timeSlots = _ref3.timeSlots;
    _ref3.events;
    var onDateClick = _ref3.onDateClick,
    onEventClick = _ref3.onEventClick,
    isToday = _ref3.isToday,
    isSelected = _ref3.isSelected,
    formatTime = _ref3.formatTime,
    getEventsForTimeSlot = _ref3.getEventsForTimeSlot,
    getWeekDates = _ref3.getWeekDates;
  var weekDates = getWeekDates(currentDate);
  var dayLabels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
  return jsx("div", {
    className: "overflow-x-auto",
    children: jsxs("div", {
      className: "min-w-[800px]",
      children: [jsxs("div", {
        className: "grid grid-cols-8 gap-0 border-b border-mw-gray-200 dark:border-mw-gray-700",
        children: [jsx("div", {
          className: "p-2 text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400",
          children: "Time"
        }), weekDates.map(function (date, index) {
          return jsxs("div", {
            className: cn$6('p-2 text-center cursor-pointer hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800', isToday(date) && 'bg-mw-blue-50 dark:bg-mw-blue-900/20', isSelected(date) && 'bg-mw-blue-100 dark:bg-mw-blue-900/30'),
            onClick: function onClick() {
              return onDateClick(date);
            },
            children: [jsx("div", {
              className: "text-xs font-medium text-mw-gray-500 dark:text-mw-gray-400",
              children: dayLabels[index]
            }), jsx("div", {
              className: cn$6('text-sm font-semibold mt-1', isToday(date) ? 'text-mw-blue-600 dark:text-mw-blue-400' : 'text-mw-gray-900 dark:text-white'),
              children: date.getDate()
            })]
          }, date.toISOString());
        })]
      }), jsx("div", {
        className: "grid grid-cols-8 gap-0",
        children: timeSlots.filter(function (_, index) {
          return index % 2 === 0;
        }).map(function (timeSlot) {
          return jsxs(React.Fragment, {
            children: [jsx("div", {
              className: "p-2 text-xs text-mw-gray-500 dark:text-mw-gray-400 border-r border-mw-gray-200 dark:border-mw-gray-700",
              children: formatTime(timeSlot)
            }), weekDates.map(function (date) {
              var slotEvents = getEventsForTimeSlot(date, timeSlot);
              return jsx("div", {
                className: "min-h-[60px] border-r border-b border-mw-gray-200 dark:border-mw-gray-700 p-1",
                children: slotEvents.map(function (event) {
                  return jsx("div", {
                    className: cn$6('p-1 mb-1 text-xs rounded cursor-pointer truncate', event.color === 'blue' && 'bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300', event.color === 'green' && 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300', event.color === 'red' && 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300', event.color === 'yellow' && 'bg-yellow-100 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300', !event.color && 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300'),
                    onClick: function onClick() {
                      return onEventClick === null || onEventClick === void 0 ? void 0 : onEventClick(event);
                    },
                    title: event.title,
                    children: event.title
                  }, event.id);
                })
              }, "".concat(date.toISOString(), "-").concat(timeSlot));
            })]
          }, timeSlot);
        })
      })]
    })
  });
}
function DayView(_ref4) {
  var currentDate = _ref4.currentDate,
    timeSlots = _ref4.timeSlots,
    events = _ref4.events,
    onEventClick = _ref4.onEventClick,
    formatTime = _ref4.formatTime,
    getEventsForTimeSlot = _ref4.getEventsForTimeSlot;
  var dayEvents = events.filter(function (event) {
    return event.date.toDateString() === currentDate.toDateString();
  });
  var allDayEvents = dayEvents.filter(function (event) {
    return event.allDay;
  });
  return jsxs("div", {
    className: "space-y-4",
    children: [allDayEvents.length > 0 && jsxs("div", {
      className: "p-4 bg-mw-gray-50 dark:bg-mw-gray-800 rounded-lg",
      children: [jsx("h3", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white mb-2",
        children: "All Day Events"
      }), jsx("div", {
        className: "space-y-2",
        children: allDayEvents.map(function (event) {
          return jsxs("div", {
            className: cn$6('p-2 rounded cursor-pointer flex items-center space-x-2', event.color === 'blue' && 'bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300', event.color === 'green' && 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300', event.color === 'red' && 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300', event.color === 'yellow' && 'bg-yellow-100 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300', !event.color && 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300'),
            onClick: function onClick() {
              return onEventClick === null || onEventClick === void 0 ? void 0 : onEventClick(event);
            },
            children: [jsx("div", {
              className: "font-medium",
              children: event.title
            }), event.location && jsxs("div", {
              className: "flex items-center space-x-1 text-xs opacity-75",
              children: [jsx(MapPin, {
                className: "w-3 h-3"
              }), jsx("span", {
                children: event.location
              })]
            })]
          }, event.id);
        })
      })]
    }), jsxs("div", {
      className: "grid grid-cols-12 gap-0",
      children: [jsx("div", {
        className: "col-span-2 space-y-0",
        children: timeSlots.filter(function (_, index) {
          return index % 2 === 0;
        }).map(function (timeSlot) {
          return jsx("div", {
            className: "h-16 p-2 text-xs text-mw-gray-500 dark:text-mw-gray-400 border-b border-mw-gray-200 dark:border-mw-gray-700",
            children: formatTime(timeSlot)
          }, timeSlot);
        })
      }), jsx("div", {
        className: "col-span-10 space-y-0",
        children: timeSlots.filter(function (_, index) {
          return index % 2 === 0;
        }).map(function (timeSlot) {
          var slotEvents = getEventsForTimeSlot(currentDate, timeSlot);
          return jsx("div", {
            className: "h-16 border-b border-mw-gray-200 dark:border-mw-gray-700 p-1 relative",
            children: slotEvents.map(function (event) {
              return jsxs("div", {
                className: cn$6('absolute inset-1 p-2 rounded cursor-pointer flex flex-col justify-center', event.color === 'blue' && 'bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300', event.color === 'green' && 'bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300', event.color === 'red' && 'bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300', event.color === 'yellow' && 'bg-yellow-100 text-yellow-700 dark:bg-yellow-900/20 dark:text-yellow-300', !event.color && 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300'),
                onClick: function onClick() {
                  return onEventClick === null || onEventClick === void 0 ? void 0 : onEventClick(event);
                },
                children: [jsx("div", {
                  className: "font-medium text-sm truncate",
                  children: event.title
                }), jsxs("div", {
                  className: "flex items-center space-x-4 text-xs opacity-75",
                  children: [event.startTime && event.endTime && jsxs("div", {
                    className: "flex items-center space-x-1",
                    children: [jsx(Clock, {
                      className: "w-3 h-3"
                    }), jsxs("span", {
                      children: [formatTime(event.startTime), " - ", formatTime(event.endTime)]
                    })]
                  }), event.location && jsxs("div", {
                    className: "flex items-center space-x-1",
                    children: [jsx(MapPin, {
                      className: "w-3 h-3"
                    }), jsx("span", {
                      children: event.location
                    })]
                  }), event.attendees && event.attendees.length > 0 && jsxs("div", {
                    className: "flex items-center space-x-1",
                    children: [jsx(Users, {
                      className: "w-3 h-3"
                    }), jsx("span", {
                      children: event.attendees.length
                    })]
                  })]
                })]
              }, event.id);
            })
          }, timeSlot);
        })
      })]
    })]
  });
}

function cn$5() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var SnackbarContext = /*#__PURE__*/createContext(null);
function SnackbarProvider(_ref) {
  var children = _ref.children,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'bottom-right' : _ref$position,
    _ref$maxSnackbars = _ref.maxSnackbars,
    maxSnackbars = _ref$maxSnackbars === void 0 ? 5 : _ref$maxSnackbars,
    _ref$defaultDuration = _ref.defaultDuration,
    defaultDuration = _ref$defaultDuration === void 0 ? 5000 : _ref$defaultDuration;
  var _useState = useState([]),
    _useState2 = _slicedToArray(_useState, 2),
    snackbars = _useState2[0],
    setSnackbars = _useState2[1];
  var show = useCallback(function (options) {
    var id = options.id || "snackbar-".concat(Date.now(), "-").concat(Math.random());
    var snackbar = {
      id: id,
      type: options.type || 'info',
      title: options.title || '',
      message: options.message,
      duration: options.duration !== undefined ? options.duration : defaultDuration,
      persistent: options.persistent || false,
      action: options.action,
      onClose: options.onClose,
      timestamp: Date.now()
    };
    setSnackbars(function (prev) {
      var newSnackbars = [snackbar].concat(_toConsumableArray(prev));
      // Remove oldest if exceeding max
      if (newSnackbars.length > maxSnackbars) {
        return newSnackbars.slice(0, maxSnackbars);
      }
      return newSnackbars;
    });
    return id;
  }, [defaultDuration, maxSnackbars]);
  var dismiss = useCallback(function (id) {
    setSnackbars(function (prev) {
      return prev.filter(function (snackbar) {
        return snackbar.id !== id;
      });
    });
  }, []);
  var dismissAll = useCallback(function () {
    setSnackbars([]);
  }, []);
  var contextValue = {
    snackbars: snackbars,
    show: show,
    dismiss: dismiss,
    dismissAll: dismissAll
  };
  return jsxs(SnackbarContext.Provider, {
    value: contextValue,
    children: [children, jsx(SnackbarContainer, {
      position: position
    })]
  });
}
function useSnackbar() {
  var context = useContext(SnackbarContext);
  if (!context) {
    throw new Error('useSnackbar must be used within a SnackbarProvider');
  }
  return context;
}
function SnackbarContainer(_ref2) {
  var position = _ref2.position;
  var _useSnackbar = useSnackbar(),
    snackbars = _useSnackbar.snackbars;
  var getPositionClasses = function getPositionClasses() {
    switch (position) {
      case 'top':
        return 'top-4 left-1/2 transform -translate-x-1/2';
      case 'top-right':
        return 'top-4 right-4';
      case 'top-left':
        return 'top-4 left-4';
      case 'bottom':
        return 'bottom-4 left-1/2 transform -translate-x-1/2';
      case 'bottom-right':
        return 'bottom-4 right-4';
      case 'bottom-left':
        return 'bottom-4 left-4';
      default:
        return 'bottom-4 right-4';
    }
  };
  if (typeof document === 'undefined') return null;
  return /*#__PURE__*/createPortal(jsx("div", {
    className: cn$5('fixed z-50 flex flex-col space-y-2 max-w-sm', getPositionClasses()),
    children: snackbars.map(function (snackbar) {
      return jsx(SnackbarItem, {
        snackbar: snackbar
      }, snackbar.id);
    })
  }), document.body);
}
function SnackbarItem(_ref3) {
  var snackbar = _ref3.snackbar;
  var _useSnackbar2 = useSnackbar(),
    dismiss = _useSnackbar2.dismiss;
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isVisible = _useState4[0],
    setIsVisible = _useState4[1];
  var _useState5 = useState(false),
    _useState6 = _slicedToArray(_useState5, 2),
    isExiting = _useState6[0],
    setIsExiting = _useState6[1];
  useEffect(function () {
    // Show animation
    var showTimer = setTimeout(function () {
      setIsVisible(true);
    }, 10);
    // Auto dismiss
    var dismissTimer;
    if (!snackbar.persistent && snackbar.duration > 0) {
      dismissTimer = setTimeout(function () {
        handleDismiss();
      }, snackbar.duration);
    }
    return function () {
      clearTimeout(showTimer);
      if (dismissTimer) clearTimeout(dismissTimer);
    };
  }, [snackbar.duration, snackbar.persistent]);
  var handleDismiss = function handleDismiss() {
    setIsExiting(true);
    setTimeout(function () {
      var _a;
      dismiss(snackbar.id);
      (_a = snackbar.onClose) === null || _a === void 0 ? void 0 : _a.call(snackbar);
    }, 200); // Match exit animation duration
  };
  var handleActionClick = function handleActionClick() {
    var _a;
    (_a = snackbar.action) === null || _a === void 0 ? void 0 : _a.onClick();
    handleDismiss();
  };
  var getIcon = function getIcon() {
    switch (snackbar.type) {
      case 'success':
        return jsx(CircleCheckBig, {
          className: "w-5 h-5 text-green-500"
        });
      case 'error':
        return jsx(CircleAlert, {
          className: "w-5 h-5 text-red-500"
        });
      case 'warning':
        return jsx(TriangleAlert, {
          className: "w-5 h-5 text-yellow-500"
        });
      case 'info':
        return jsx(Info, {
          className: "w-5 h-5 text-blue-500"
        });
      default:
        return jsx(Info, {
          className: "w-5 h-5 text-blue-500"
        });
    }
  };
  var getTypeClasses = function getTypeClasses() {
    switch (snackbar.type) {
      case 'success':
        return 'border-green-200 dark:border-green-800';
      case 'error':
        return 'border-red-200 dark:border-red-800';
      case 'warning':
        return 'border-yellow-200 dark:border-yellow-800';
      case 'info':
        return 'border-blue-200 dark:border-blue-800';
      default:
        return 'border-mw-gray-200 dark:border-mw-gray-700';
    }
  };
  return jsxs("div", {
    className: cn$5('flex items-start p-4 bg-white dark:bg-mw-gray-900 border rounded-lg shadow-lg transition-all duration-200 ease-in-out transform', 'max-w-sm w-full', getTypeClasses(), isVisible && !isExiting ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0', isExiting && '-translate-x-full opacity-0'),
    children: [jsx("div", {
      className: "flex-shrink-0 mr-3",
      children: getIcon()
    }), jsxs("div", {
      className: "flex-1 min-w-0",
      children: [snackbar.title && jsx("div", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white mb-1",
        children: snackbar.title
      }), jsx("div", {
        className: "text-sm text-mw-gray-700 dark:text-mw-gray-300",
        children: snackbar.message
      }), snackbar.action && jsx("div", {
        className: "mt-2",
        children: jsx("button", {
          onClick: handleActionClick,
          className: "text-sm font-medium text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-700 dark:hover:text-mw-blue-300",
          children: snackbar.action.label
        })
      })]
    }), jsx("button", {
      onClick: handleDismiss,
      className: "flex-shrink-0 ml-2 p-1 rounded-full hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300",
      children: jsx(X, {
        className: "w-4 h-4"
      })
    })]
  });
}
// Convenience hooks for different types
function useSnackbarHelpers() {
  var _useSnackbar3 = useSnackbar(),
    show = _useSnackbar3.show;
  return {
    success: function success(message, options) {
      return show(Object.assign(Object.assign({}, options), {
        message: message,
        type: 'success'
      }));
    },
    error: function error(message, options) {
      return show(Object.assign(Object.assign({}, options), {
        message: message,
        type: 'error'
      }));
    },
    warning: function warning(message, options) {
      return show(Object.assign(Object.assign({}, options), {
        message: message,
        type: 'warning'
      }));
    },
    info: function info(message, options) {
      return show(Object.assign(Object.assign({}, options), {
        message: message,
        type: 'info'
      }));
    }
  };
}

function cn$4() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var PanelGroupContext = /*#__PURE__*/React.createContext(null);
function PanelGroup(_ref) {
  var _ref$direction = _ref.direction,
    direction = _ref$direction === void 0 ? 'horizontal' : _ref$direction,
    className = _ref.className,
    children = _ref.children;
  var _useState = useState(new Map()),
    _useState2 = _slicedToArray(_useState, 2),
    panels = _useState2[0],
    setPanels = _useState2[1];
  var registerPanel = useCallback(function (id, size, minSize, maxSize) {
    setPanels(function (prev) {
      return new Map(prev.set(id, {
        size: size,
        minSize: minSize,
        maxSize: maxSize
      }));
    });
  }, []);
  var unregisterPanel = useCallback(function (id) {
    setPanels(function (prev) {
      var newPanels = new Map(prev);
      newPanels["delete"](id);
      return newPanels;
    });
  }, []);
  var updatePanelSize = useCallback(function (id, size) {
    setPanels(function (prev) {
      var panel = prev.get(id);
      if (!panel) return prev;
      return new Map(prev.set(id, Object.assign(Object.assign({}, panel), {
        size: size
      })));
    });
  }, []);
  var getPanelSize = useCallback(function (id) {
    var _a;
    return ((_a = panels.get(id)) === null || _a === void 0 ? void 0 : _a.size) || 50;
  }, [panels]);
  var contextValue = {
    direction: direction,
    registerPanel: registerPanel,
    unregisterPanel: unregisterPanel,
    updatePanelSize: updatePanelSize,
    getPanelSize: getPanelSize
  };
  return jsx(PanelGroupContext.Provider, {
    value: contextValue,
    children: jsx("div", {
      className: cn$4('flex w-full h-full', direction === 'horizontal' ? 'flex-row' : 'flex-col', className),
      children: children
    })
  });
}
function Panel(_ref2) {
  var _ref2$defaultSize = _ref2.defaultSize,
    defaultSize = _ref2$defaultSize === void 0 ? 50 : _ref2$defaultSize,
    _ref2$minSize = _ref2.minSize,
    minSize = _ref2$minSize === void 0 ? 10 : _ref2$minSize,
    _ref2$maxSize = _ref2.maxSize,
    maxSize = _ref2$maxSize === void 0 ? 90 : _ref2$maxSize;
    _ref2.collapsible;
    var _ref2$collapsed = _ref2.collapsed,
    collapsed = _ref2$collapsed === void 0 ? false : _ref2$collapsed;
    _ref2.onCollapse;
    var className = _ref2.className,
    children = _ref2.children;
  var context = React.useContext(PanelGroupContext);
  var panelId = useRef("panel-".concat(Math.random().toString(36).substr(2, 9)));
  var _useState3 = useState(defaultSize),
    _useState4 = _slicedToArray(_useState3, 2),
    size = _useState4[0];
    _useState4[1];
  var _useState5 = useState(collapsed),
    _useState6 = _slicedToArray(_useState5, 2),
    isCollapsed = _useState6[0],
    setIsCollapsed = _useState6[1];
  useEffect(function () {
    if (context) {
      context.registerPanel(panelId.current, defaultSize, minSize, maxSize);
      return function () {
        return context.unregisterPanel(panelId.current);
      };
    }
  }, [context, defaultSize, minSize, maxSize]);
  useEffect(function () {
    setIsCollapsed(collapsed);
  }, [collapsed]);
  var direction = (context === null || context === void 0 ? void 0 : context.direction) || 'horizontal';
  var isHorizontal = direction === 'horizontal';
  var sizeStyle = isCollapsed ? isHorizontal ? {
    width: 'auto'
  } : {
    height: 'auto'
  } : isHorizontal ? {
    width: "".concat(size, "%")
  } : {
    height: "".concat(size, "%")
  };
  return jsx("div", {
    className: cn$4('relative transition-all duration-200 ease-in-out', isCollapsed && 'flex-shrink-0', !isCollapsed && 'flex-1', className),
    style: sizeStyle,
    children: jsx("div", {
      className: "w-full h-full bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg overflow-hidden",
      children: children
    })
  });
}
function PanelResizer(_ref3) {
  var _ref3$direction = _ref3.direction,
    direction = _ref3$direction === void 0 ? 'horizontal' : _ref3$direction,
    _ref3$disabled = _ref3.disabled,
    disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,
    className = _ref3.className;
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    isDragging = _useState8[0],
    setIsDragging = _useState8[1];
  var resizerRef = useRef(null);
  var handleMouseDown = useCallback(function (e) {
    if (disabled) return;
    e.preventDefault();
    setIsDragging(true);
    var startX = e.clientX;
    var startY = e.clientY;
    var handleMouseMove = function handleMouseMove(e) {
      e.preventDefault();
      // Handle resize logic here
      var deltaX = e.clientX - startX;
      var deltaY = e.clientY - startY;
      // This would need to be connected to the panel sizing logic
      console.log('Resizing:', direction === 'horizontal' ? deltaX : deltaY);
    };
    var _handleMouseUp = function handleMouseUp() {
      setIsDragging(false);
      document.removeEventListener('mousemove', handleMouseMove);
      document.removeEventListener('mouseup', _handleMouseUp);
    };
    document.addEventListener('mousemove', handleMouseMove);
    document.addEventListener('mouseup', _handleMouseUp);
  }, [disabled, direction]);
  var isHorizontal = direction === 'horizontal';
  return jsx("div", {
    ref: resizerRef,
    className: cn$4('relative flex items-center justify-center bg-mw-gray-100 dark:bg-mw-gray-800 hover:bg-mw-gray-200 dark:hover:bg-mw-gray-700 transition-colors', isHorizontal ? 'w-2 h-full cursor-col-resize' : 'w-full h-2 cursor-row-resize', disabled && 'cursor-not-allowed opacity-50', isDragging && 'bg-mw-blue-200 dark:bg-mw-blue-800', className),
    onMouseDown: handleMouseDown,
    children: jsx("div", {
      className: cn$4('text-mw-gray-400 dark:text-mw-gray-500', isHorizontal ? 'rotate-0' : 'rotate-90'),
      children: isHorizontal ? jsx(GripVertical, {
        className: "w-3 h-3"
      }) : jsx(GripHorizontal, {
        className: "w-3 h-3"
      })
    })
  });
}
function PanelHeader(_ref4) {
  var title = _ref4.title,
    actions = _ref4.actions,
    _ref4$collapsible = _ref4.collapsible,
    collapsible = _ref4$collapsible === void 0 ? false : _ref4$collapsible,
    _ref4$collapsed = _ref4.collapsed,
    collapsed = _ref4$collapsed === void 0 ? false : _ref4$collapsed,
    onToggleCollapse = _ref4.onToggleCollapse,
    className = _ref4.className,
    children = _ref4.children;
  var getCollapseIcon = function getCollapseIcon() {
    if (collapsed) {
      return jsx(ChevronRight, {
        className: "w-4 h-4"
      });
    }
    return jsx(ChevronDown, {
      className: "w-4 h-4"
    });
  };
  return jsxs("div", {
    className: cn$4('flex items-center justify-between px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700', className),
    children: [jsxs("div", {
      className: "flex items-center space-x-2",
      children: [collapsible && jsx("button", {
        onClick: onToggleCollapse,
        className: "p-1 rounded hover:bg-mw-gray-200 dark:hover:bg-mw-gray-700 text-mw-gray-600 dark:text-mw-gray-400",
        children: getCollapseIcon()
      }), title && jsx("h3", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white",
        children: title
      }), children]
    }), actions && jsx("div", {
      className: "flex items-center space-x-2",
      children: actions
    })]
  });
}
// Convenience components
function SplitPanel(_ref5) {
  var leftPanel = _ref5.leftPanel,
    rightPanel = _ref5.rightPanel,
    _ref5$defaultLeftSize = _ref5.defaultLeftSize,
    defaultLeftSize = _ref5$defaultLeftSize === void 0 ? 30 : _ref5$defaultLeftSize,
    _ref5$minLeftSize = _ref5.minLeftSize,
    minLeftSize = _ref5$minLeftSize === void 0 ? 20 : _ref5$minLeftSize,
    _ref5$maxLeftSize = _ref5.maxLeftSize,
    maxLeftSize = _ref5$maxLeftSize === void 0 ? 80 : _ref5$maxLeftSize,
    className = _ref5.className;
  return jsxs(PanelGroup, {
    direction: "horizontal",
    className: className,
    children: [jsx(Panel, {
      defaultSize: defaultLeftSize,
      minSize: minLeftSize,
      maxSize: maxLeftSize,
      children: leftPanel
    }), jsx(PanelResizer, {}), jsx(Panel, {
      children: rightPanel
    })]
  });
}
function StackPanel(_ref6) {
  var topPanel = _ref6.topPanel,
    bottomPanel = _ref6.bottomPanel,
    _ref6$defaultTopSize = _ref6.defaultTopSize,
    defaultTopSize = _ref6$defaultTopSize === void 0 ? 50 : _ref6$defaultTopSize,
    _ref6$minTopSize = _ref6.minTopSize,
    minTopSize = _ref6$minTopSize === void 0 ? 20 : _ref6$minTopSize,
    _ref6$maxTopSize = _ref6.maxTopSize,
    maxTopSize = _ref6$maxTopSize === void 0 ? 80 : _ref6$maxTopSize,
    className = _ref6.className;
  return jsxs(PanelGroup, {
    direction: "vertical",
    className: className,
    children: [jsx(Panel, {
      defaultSize: defaultTopSize,
      minSize: minTopSize,
      maxSize: maxTopSize,
      children: topPanel
    }), jsx(PanelResizer, {
      direction: "vertical"
    }), jsx(Panel, {
      children: bottomPanel
    })]
  });
}
// Collapsible sidebar panel
function SidebarPanel(_ref7) {
  var children = _ref7.children,
    _ref7$collapsed = _ref7.collapsed,
    collapsed = _ref7$collapsed === void 0 ? false : _ref7$collapsed,
    onToggle = _ref7.onToggle,
    title = _ref7.title,
    _ref7$width = _ref7.width,
    width = _ref7$width === void 0 ? 250 : _ref7$width,
    className = _ref7.className;
  return jsxs("div", {
    className: cn$4('relative transition-all duration-200 ease-in-out bg-white dark:bg-mw-gray-900 border-r border-mw-gray-200 dark:border-mw-gray-700', collapsed ? 'w-12' : "w-[".concat(width, "px]"), className),
    children: [title && !collapsed && jsx(PanelHeader, {
      title: title,
      collapsible: true,
      collapsed: collapsed,
      onToggleCollapse: function onToggleCollapse() {
        return onToggle === null || onToggle === void 0 ? void 0 : onToggle(!collapsed);
      }
    }), !collapsed && jsx("div", {
      className: "p-4",
      children: children
    }), collapsed && jsx("div", {
      className: "p-2",
      children: jsx("button", {
        onClick: function onClick() {
          return onToggle === null || onToggle === void 0 ? void 0 : onToggle(false);
        },
        className: "w-full p-2 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-600 dark:text-mw-gray-400",
        children: jsx(ChevronRight, {
          className: "w-4 h-4"
        })
      })
    })]
  });
}

function cn$3() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function Notification(_ref) {
  var notification = _ref.notification,
    onClose = _ref.onClose,
    onMarkAsRead = _ref.onMarkAsRead,
    onActionClick = _ref.onActionClick,
    _ref$compact = _ref.compact,
    compact = _ref$compact === void 0 ? false : _ref$compact,
    className = _ref.className;
  var _useState = useState(true),
    _useState2 = _slicedToArray(_useState, 2),
    isVisible = _useState2[0],
    setIsVisible = _useState2[1];
  var handleClose = function handleClose() {
    setIsVisible(false);
    setTimeout(function () {
      onClose === null || onClose === void 0 ? void 0 : onClose(notification.id);
    }, 200);
  };
  var handleMarkAsRead = function handleMarkAsRead() {
    if (notification.status === 'unread') {
      onMarkAsRead === null || onMarkAsRead === void 0 ? void 0 : onMarkAsRead(notification.id);
    }
  };
  var handleActionClick = function handleActionClick(action) {
    onActionClick === null || onActionClick === void 0 ? void 0 : onActionClick(action, notification);
    action.onClick(notification);
  };
  var getIcon = function getIcon() {
    switch (notification.type) {
      case 'success':
        return jsx(CircleCheckBig, {
          className: "w-5 h-5 text-green-500"
        });
      case 'warning':
        return jsx(TriangleAlert, {
          className: "w-5 h-5 text-yellow-500"
        });
      case 'error':
        return jsx(TriangleAlert, {
          className: "w-5 h-5 text-red-500"
        });
      case 'message':
        return jsx(MessageSquare, {
          className: "w-5 h-5 text-blue-500"
        });
      case 'info':
      default:
        return jsx(Info, {
          className: "w-5 h-5 text-blue-500"
        });
    }
  };
  var getTypeClasses = function getTypeClasses() {
    switch (notification.type) {
      case 'success':
        return 'border-l-green-500';
      case 'warning':
        return 'border-l-yellow-500';
      case 'error':
        return 'border-l-red-500';
      case 'message':
        return 'border-l-blue-500';
      case 'info':
      default:
        return 'border-l-mw-gray-300 dark:border-l-mw-gray-600';
    }
  };
  var formatTimestamp = function formatTimestamp(date) {
    var now = new Date();
    var diff = now.getTime() - date.getTime();
    var minutes = Math.floor(diff / 60000);
    var hours = Math.floor(diff / 3600000);
    var days = Math.floor(diff / 86400000);
    if (minutes < 1) return 'just now';
    if (minutes < 60) return "".concat(minutes, "m ago");
    if (hours < 24) return "".concat(hours, "h ago");
    if (days < 7) return "".concat(days, "d ago");
    return date.toLocaleDateString();
  };
  if (!isVisible) return null;
  return jsx("div", {
    className: cn$3('relative bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 border-l-4 rounded-lg p-4 shadow-sm transition-all duration-200', notification.status === 'unread' && 'bg-mw-blue-50 dark:bg-mw-blue-950/20', getTypeClasses(), compact && 'p-3', className),
    onClick: handleMarkAsRead,
    children: jsxs("div", {
      className: "flex items-start space-x-3",
      children: [jsx("div", {
        className: "flex-shrink-0",
        children: notification.avatar ? jsx("img", {
          src: notification.avatar,
          alt: "",
          className: "w-8 h-8 rounded-full object-cover"
        }) : jsx("div", {
          className: "p-1",
          children: getIcon()
        })
      }), jsxs("div", {
        className: "flex-1 min-w-0",
        children: [jsxs("div", {
          className: "flex items-start justify-between",
          children: [jsxs("div", {
            className: "flex-1",
            children: [jsx("h4", {
              className: cn$3('text-sm font-medium text-mw-gray-900 dark:text-white', notification.status === 'unread' && 'font-semibold'),
              children: notification.title
            }), !compact && jsx("p", {
              className: "mt-1 text-sm text-mw-gray-600 dark:text-mw-gray-400",
              children: notification.message
            }), jsxs("div", {
              className: "mt-1 flex items-center space-x-2",
              children: [jsx("span", {
                className: "text-xs text-mw-gray-500 dark:text-mw-gray-500",
                children: formatTimestamp(notification.timestamp)
              }), notification.status === 'unread' && jsx("span", {
                className: "w-2 h-2 bg-mw-blue-500 rounded-full"
              })]
            })]
          }), jsx("button", {
            onClick: function onClick(e) {
              e.stopPropagation();
              handleClose();
            },
            className: "flex-shrink-0 p-1 rounded-full hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300",
            children: jsx(X, {
              className: "w-4 h-4"
            })
          })]
        }), notification.actions && notification.actions.length > 0 && jsx("div", {
          className: "mt-3 flex space-x-2",
          children: notification.actions.map(function (action, index) {
            return jsx("button", {
              onClick: function onClick(e) {
                e.stopPropagation();
                handleActionClick(action);
              },
              className: cn$3('px-3 py-1 text-xs font-medium rounded transition-colors', action.variant === 'primary' ? 'bg-mw-blue-600 text-white hover:bg-mw-blue-700' : 'bg-mw-gray-100 dark:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-mw-gray-200 dark:hover:bg-mw-gray-700'),
              children: action.label
            }, index);
          })
        })]
      })]
    })
  });
}
function NotificationList(_ref2) {
  var notifications = _ref2.notifications,
    onClose = _ref2.onClose,
    onMarkAsRead = _ref2.onMarkAsRead,
    onMarkAllAsRead = _ref2.onMarkAllAsRead,
    onClearAll = _ref2.onClearAll,
    _ref2$maxHeight = _ref2.maxHeight,
    maxHeight = _ref2$maxHeight === void 0 ? '400px' : _ref2$maxHeight,
    _ref2$emptyMessage = _ref2.emptyMessage,
    emptyMessage = _ref2$emptyMessage === void 0 ? 'No notifications' : _ref2$emptyMessage,
    className = _ref2.className;
  var unreadCount = notifications.filter(function (n) {
    return n.status === 'unread';
  }).length;
  if (notifications.length === 0) {
    return jsxs("div", {
      className: cn$3('flex flex-col items-center justify-center py-8 text-center', className),
      children: [jsx(Bell, {
        className: "w-12 h-12 text-mw-gray-300 dark:text-mw-gray-600 mb-3"
      }), jsx("p", {
        className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
        children: emptyMessage
      })]
    });
  }
  return jsxs("div", {
    className: cn$3('bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg', className),
    children: [jsxs("div", {
      className: "flex items-center justify-between p-4 border-b border-mw-gray-200 dark:border-mw-gray-700",
      children: [jsxs("div", {
        className: "flex items-center space-x-2",
        children: [jsx("h3", {
          className: "text-sm font-medium text-mw-gray-900 dark:text-white",
          children: "Notifications"
        }), unreadCount > 0 && jsx("span", {
          className: "px-2 py-1 text-xs font-medium bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300 rounded-full",
          children: unreadCount
        })]
      }), jsxs("div", {
        className: "flex items-center space-x-2",
        children: [unreadCount > 0 && jsx("button", {
          onClick: onMarkAllAsRead,
          className: "text-xs text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-700 dark:hover:text-mw-blue-300",
          children: "Mark all read"
        }), jsx("button", {
          onClick: onClearAll,
          className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 hover:text-mw-gray-700 dark:hover:text-mw-gray-300",
          children: "Clear all"
        })]
      })]
    }), jsx("div", {
      className: "overflow-y-auto",
      style: {
        maxHeight: maxHeight
      },
      children: jsx("div", {
        className: "divide-y divide-mw-gray-200 dark:divide-mw-gray-700",
        children: notifications.map(function (notification) {
          return jsx("div", {
            className: "p-4",
            children: jsx(Notification, {
              notification: notification,
              onClose: onClose,
              onMarkAsRead: onMarkAsRead,
              compact: true
            })
          }, notification.id);
        })
      })
    })]
  });
}
function NotificationBadge(_ref3) {
  var count = _ref3.count,
    _ref3$showDot = _ref3.showDot,
    showDot = _ref3$showDot === void 0 ? false : _ref3$showDot,
    _ref3$max = _ref3.max,
    max = _ref3$max === void 0 ? 99 : _ref3$max,
    className = _ref3.className,
    children = _ref3.children;
  var displayCount = count > max ? "".concat(max, "+") : count.toString();
  var hasNotifications = count > 0;
  return jsxs("div", {
    className: cn$3('relative inline-block', className),
    children: [children, hasNotifications && jsx(Fragment, {
      children: showDot ? jsx("span", {
        className: "absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full border-2 border-white dark:border-mw-gray-900"
      }) : jsx("span", {
        className: "absolute -top-2 -right-2 min-w-[1.25rem] h-5 px-1 bg-red-500 text-white text-xs font-medium rounded-full flex items-center justify-center border-2 border-white dark:border-mw-gray-900",
        children: displayCount
      })
    })]
  });
}
function NotificationBell(_ref4) {
  var notifications = _ref4.notifications,
    onNotificationClick = _ref4.onNotificationClick,
    onMarkAsRead = _ref4.onMarkAsRead,
    onMarkAllAsRead = _ref4.onMarkAllAsRead,
    onClearAll = _ref4.onClearAll,
    className = _ref4.className;
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isOpen = _useState4[0],
    setIsOpen = _useState4[1];
  var unreadCount = notifications.filter(function (n) {
    return n.status === 'unread';
  }).length;
  return jsxs("div", {
    className: cn$3('relative', className),
    children: [jsx("button", {
      onClick: function onClick() {
        return setIsOpen(!isOpen);
      },
      className: "relative p-2 rounded-lg hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-600 dark:text-mw-gray-400",
      children: jsx(NotificationBadge, {
        count: unreadCount,
        children: unreadCount > 0 ? jsx(BellRing, {
          className: "w-5 h-5"
        }) : jsx(Bell, {
          className: "w-5 h-5"
        })
      })
    }), isOpen && jsxs(Fragment, {
      children: [jsx("div", {
        className: "fixed inset-0 z-40",
        onClick: function onClick() {
          return setIsOpen(false);
        }
      }), jsx("div", {
        className: "absolute right-0 top-full mt-2 w-80 z-50",
        children: jsx(NotificationList, {
          notifications: notifications,
          onClose: function onClose(id) {
            onNotificationClick === null || onNotificationClick === void 0 ? void 0 : onNotificationClick(notifications.find(function (n) {
              return n.id === id;
            }));
          },
          onMarkAsRead: onMarkAsRead,
          onMarkAllAsRead: onMarkAllAsRead,
          onClearAll: onClearAll
        })
      })]
    })]
  });
}

function cn$2() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
function DataGridHeader(_ref) {
  var column = _ref.column,
    sorting = _ref.sorting,
    onSort = _ref.onSort,
    onFilter = _ref.onFilter;
  var _a;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    showFilter = _useState2[0],
    setShowFilter = _useState2[1];
  var _useState3 = useState(''),
    _useState4 = _slicedToArray(_useState3, 2),
    filterValue = _useState4[0],
    setFilterValue = _useState4[1];
  var sortDirection = (_a = sorting === null || sorting === void 0 ? void 0 : sorting.find(function (s) {
    return s.columnId === column.id;
  })) === null || _a === void 0 ? void 0 : _a.direction;
  var handleSort = function handleSort() {
    if (column.sortable && onSort) {
      onSort(column.id);
    }
  };
  var handleFilter = function handleFilter(e) {
    e.preventDefault();
    onFilter === null || onFilter === void 0 ? void 0 : onFilter(column.id, filterValue);
    setShowFilter(false);
  };
  return jsx("th", {
    className: cn$2('px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700', column.align === 'center' && 'text-center', column.align === 'right' && 'text-right', column.sticky === 'left' && 'sticky left-0 z-10', column.sticky === 'right' && 'sticky right-0 z-10'),
    style: {
      width: column.width,
      minWidth: column.minWidth,
      maxWidth: column.maxWidth
    },
    children: jsxs("div", {
      className: "flex items-center space-x-2",
      children: [jsx("span", {
        className: cn$2('text-xs font-medium text-mw-gray-900 dark:text-white uppercase tracking-wider', column.sortable && 'cursor-pointer hover:text-mw-blue-600 dark:hover:text-mw-blue-400'),
        onClick: handleSort,
        children: column.header
      }), column.sortable && jsx("button", {
        onClick: handleSort,
        className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300",
        children: sortDirection === 'asc' ? jsx(ChevronUp, {
          className: "w-4 h-4"
        }) : sortDirection === 'desc' ? jsx(ChevronDown, {
          className: "w-4 h-4"
        }) : jsxs("div", {
          className: "w-4 h-4 flex flex-col",
          children: [jsx(ChevronUp, {
            className: "w-4 h-2"
          }), jsx(ChevronDown, {
            className: "w-4 h-2"
          })]
        })
      }), column.filterable && jsxs("div", {
        className: "relative",
        children: [jsx("button", {
          onClick: function onClick() {
            return setShowFilter(!showFilter);
          },
          className: "text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300",
          children: jsx(Filter$1, {
            className: "w-4 h-4"
          })
        }), showFilter && jsx("div", {
          className: "absolute top-full right-0 mt-1 w-48 bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg shadow-lg z-20",
          children: jsxs("form", {
            onSubmit: handleFilter,
            className: "p-3",
            children: [jsx("input", {
              type: "text",
              placeholder: "Filter ".concat(column.header, "..."),
              value: filterValue,
              onChange: function onChange(e) {
                return setFilterValue(e.target.value);
              },
              className: "w-full px-3 py-2 text-sm border border-mw-gray-200 dark:border-mw-gray-700 rounded focus:outline-none focus:border-mw-blue-500 dark:focus:border-mw-blue-400 bg-white dark:bg-mw-gray-800 text-mw-gray-900 dark:text-white",
              autoFocus: true
            }), jsxs("div", {
              className: "mt-2 flex space-x-2",
              children: [jsx("button", {
                type: "submit",
                className: "px-3 py-1 text-xs bg-mw-blue-600 text-white rounded hover:bg-mw-blue-700",
                children: "Apply"
              }), jsx("button", {
                type: "button",
                onClick: function onClick() {
                  setFilterValue('');
                  onFilter === null || onFilter === void 0 ? void 0 : onFilter(column.id, '');
                  setShowFilter(false);
                },
                className: "px-3 py-1 text-xs bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-700 dark:text-mw-gray-300 rounded hover:bg-mw-gray-200 dark:hover:bg-mw-gray-600",
                children: "Clear"
              })]
            })]
          })
        })]
      })]
    })
  });
}
function DataGrid(_ref2) {
  var data = _ref2.data,
    columns = _ref2.columns,
    _ref2$getRowId = _ref2.getRowId,
    getRowId = _ref2$getRowId === void 0 ? function (_, index) {
      return index;
    } : _ref2$getRowId,
    _ref2$sorting = _ref2.sorting,
    sorting = _ref2$sorting === void 0 ? [] : _ref2$sorting,
    onSortingChange = _ref2.onSortingChange,
    _ref2$filters = _ref2.filters,
    filters = _ref2$filters === void 0 ? [] : _ref2$filters,
    onFiltersChange = _ref2.onFiltersChange,
    selection = _ref2.selection,
    pagination = _ref2.pagination,
    rowActions = _ref2.rowActions,
    _ref2$loading = _ref2.loading,
    loading = _ref2$loading === void 0 ? false : _ref2$loading,
    _ref2$emptyMessage = _ref2.emptyMessage,
    emptyMessage = _ref2$emptyMessage === void 0 ? 'No data available' : _ref2$emptyMessage,
    _ref2$striped = _ref2.striped,
    striped = _ref2$striped === void 0 ? false : _ref2$striped,
    _ref2$bordered = _ref2.bordered,
    bordered = _ref2$bordered === void 0 ? false : _ref2$bordered,
    _ref2$compact = _ref2.compact,
    compact = _ref2$compact === void 0 ? false : _ref2$compact,
    _ref2$stickyHeader = _ref2.stickyHeader,
    stickyHeader = _ref2$stickyHeader === void 0 ? false : _ref2$stickyHeader,
    maxHeight = _ref2.maxHeight,
    className = _ref2.className;
  // Handle sorting
  var handleSort = useCallback(function (columnId) {
    if (!onSortingChange) return;
    var existingSort = sorting.find(function (s) {
      return s.columnId === columnId;
    });
    var newSorting;
    if (!existingSort) {
      newSorting = [{
        columnId: columnId,
        direction: 'asc'
      }];
    } else if (existingSort.direction === 'asc') {
      newSorting = [{
        columnId: columnId,
        direction: 'desc'
      }];
    } else {
      newSorting = sorting.filter(function (s) {
        return s.columnId !== columnId;
      });
    }
    onSortingChange(newSorting);
  }, [sorting, onSortingChange]);
  // Handle filtering
  var handleFilter = useCallback(function (columnId, value) {
    if (!onFiltersChange) return;
    var newFilters = filters.filter(function (f) {
      return f.columnId !== columnId;
    });
    if (value) {
      newFilters.push({
        columnId: columnId,
        value: value,
        operator: 'contains'
      });
    }
    onFiltersChange(newFilters);
  }, [filters, onFiltersChange]);
  // Handle selection
  var handleRowSelect = useCallback(function (rowId, row) {
    var _a;
    if (!selection || selection.mode === 'none') return;
    var newSelection = new Set(selection.selectedRows);
    if (selection.mode === 'single') {
      newSelection.clear();
      newSelection.add(rowId);
    } else {
      if (newSelection.has(rowId)) {
        newSelection["delete"](rowId);
      } else {
        newSelection.add(rowId);
      }
    }
    var selectedData = data.filter(function (_, index) {
      return newSelection.has(getRowId(data[index], index));
    });
    (_a = selection.onSelectionChange) === null || _a === void 0 ? void 0 : _a.call(selection, newSelection, selectedData);
  }, [selection, data, getRowId]);
  var handleSelectAll = useCallback(function () {
    var _a;
    if (!selection || selection.mode !== 'multiple') return;
    var allSelected = data.length > 0 && data.every(function (_, index) {
      return selection.selectedRows.has(getRowId(data[index], index));
    });
    var newSelection = new Set();
    if (!allSelected) {
      data.forEach(function (_, index) {
        newSelection.add(getRowId(data[index], index));
      });
    }
    var selectedData = allSelected ? [] : data;
    (_a = selection.onSelectionChange) === null || _a === void 0 ? void 0 : _a.call(selection, newSelection, selectedData);
  }, [selection, data, getRowId]);
  // Render cell content
  var renderCell = function renderCell(column, row) {
    if (column.cell) {
      var value = column.accessorKey ? row[column.accessorKey] : row;
      return column.cell(value, row);
    }
    if (column.accessorKey) {
      var _value = row[column.accessorKey];
      if (column.type === 'boolean') {
        return _value ? 'Yes' : 'No';
      }
      if (column.type === 'date' && _value && Object.prototype.toString.call(_value) === '[object Date]') {
        return _value.toLocaleDateString();
      }
      return String(_value !== null && _value !== void 0 ? _value : '');
    }
    return null;
  };
  var hasSelection = selection && selection.mode !== 'none';
  var hasActions = rowActions && rowActions.length > 0;
  return jsxs("div", {
    className: cn$2('bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg overflow-hidden', className),
    children: [jsx("div", {
      className: cn$2('overflow-auto', stickyHeader && 'max-h-96'),
      style: {
        maxHeight: maxHeight
      },
      children: jsxs("table", {
        className: "w-full",
        children: [jsx("thead", {
          className: cn$2(stickyHeader && 'sticky top-0 z-10'),
          children: jsxs("tr", {
            children: [hasSelection && jsx("th", {
              className: "w-12 px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700",
              children: selection.mode === 'multiple' && jsx("input", {
                type: "checkbox",
                checked: data.length > 0 && data.every(function (_, index) {
                  return selection.selectedRows.has(getRowId(data[index], index));
                }),
                onChange: handleSelectAll,
                className: "rounded border-mw-gray-300 dark:border-mw-gray-600 text-mw-blue-600 focus:ring-mw-blue-500"
              })
            }), columns.map(function (column) {
              return jsx(DataGridHeader, {
                column: column,
                sorting: sorting,
                onSort: handleSort,
                onFilter: handleFilter
              }, column.id);
            }), hasActions && jsx("th", {
              className: "w-12 px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-b border-mw-gray-200 dark:border-mw-gray-700",
              children: jsx("span", {
                className: "sr-only",
                children: "Actions"
              })
            })]
          })
        }), jsx("tbody", {
          className: "divide-y divide-mw-gray-200 dark:divide-mw-gray-700",
          children: loading ? jsx("tr", {
            children: jsx("td", {
              colSpan: columns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
              className: "px-4 py-8 text-center",
              children: jsxs("div", {
                className: "flex items-center justify-center space-x-2",
                children: [jsx("div", {
                  className: "w-4 h-4 border-2 border-mw-blue-600 border-t-transparent rounded-full animate-spin"
                }), jsx("span", {
                  className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
                  children: "Loading..."
                })]
              })
            })
          }) : data.length === 0 ? jsx("tr", {
            children: jsx("td", {
              colSpan: columns.length + (hasSelection ? 1 : 0) + (hasActions ? 1 : 0),
              className: "px-4 py-8 text-center text-sm text-mw-gray-500 dark:text-mw-gray-400",
              children: emptyMessage
            })
          }) : data.map(function (row, index) {
            var rowId = getRowId(row, index);
            var isSelected = selection === null || selection === void 0 ? void 0 : selection.selectedRows.has(rowId);
            return jsxs("tr", {
              className: cn$2('hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800/50', striped && index % 2 === 1 && 'bg-mw-gray-25 dark:bg-mw-gray-950/50', isSelected && 'bg-mw-blue-50 dark:bg-mw-blue-950/20', compact ? 'h-12' : 'h-16'),
              children: [hasSelection && jsx("td", {
                className: "px-4 py-3",
                children: jsx("input", {
                  type: selection.mode === 'single' ? 'radio' : 'checkbox',
                  name: selection.mode === 'single' ? 'row-selection' : undefined,
                  checked: isSelected,
                  onChange: function onChange() {
                    return handleRowSelect(rowId, row);
                  },
                  className: "rounded border-mw-gray-300 dark:border-mw-gray-600 text-mw-blue-600 focus:ring-mw-blue-500"
                })
              }), columns.map(function (column) {
                return jsx("td", {
                  className: cn$2('px-4 py-3 text-sm text-mw-gray-900 dark:text-white', column.align === 'center' && 'text-center', column.align === 'right' && 'text-right', column.sticky === 'left' && 'sticky left-0 z-10 bg-white dark:bg-mw-gray-900', column.sticky === 'right' && 'sticky right-0 z-10 bg-white dark:bg-mw-gray-900', bordered && 'border-r border-mw-gray-200 dark:border-mw-gray-700 last:border-r-0'),
                  children: renderCell(column, row)
                }, column.id);
              }), hasActions && jsx("td", {
                className: "px-4 py-3",
                children: jsx("div", {
                  className: "flex items-center space-x-2",
                  children: rowActions.map(function (action, actionIndex) {
                    return jsx("button", {
                      onClick: function onClick() {
                        return action.onClick(row);
                      },
                      className: cn$2('p-1 rounded hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800', action.variant === 'destructive' ? 'text-red-600 hover:text-red-700' : 'text-mw-gray-600 dark:text-mw-gray-400 hover:text-mw-gray-700 dark:hover:text-mw-gray-300'),
                      title: action.label,
                      children: action.icon || jsx(EllipsisVertical, {
                        className: "w-4 h-4"
                      })
                    }, actionIndex);
                  })
                })
              })]
            }, rowId);
          })
        })]
      })
    }), pagination && jsxs("div", {
      className: "flex items-center justify-between px-4 py-3 bg-mw-gray-50 dark:bg-mw-gray-800 border-t border-mw-gray-200 dark:border-mw-gray-700",
      children: [jsx("div", {
        className: "flex items-center space-x-2",
        children: jsxs("span", {
          className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
          children: ["Showing ", pagination.pageIndex * pagination.pageSize + 1, " to", ' ', Math.min((pagination.pageIndex + 1) * pagination.pageSize, pagination.total), " of", ' ', pagination.total, " results"]
        })
      }), jsxs("div", {
        className: "flex items-center space-x-2",
        children: [jsxs("select", {
          value: pagination.pageSize,
          onChange: function onChange(e) {
            return pagination.onPageSizeChange(Number(e.target.value));
          },
          className: "text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded px-2 py-1 bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white",
          children: [jsx("option", {
            value: 10,
            children: "10"
          }), jsx("option", {
            value: 25,
            children: "25"
          }), jsx("option", {
            value: 50,
            children: "50"
          }), jsx("option", {
            value: 100,
            children: "100"
          })]
        }), jsx("button", {
          onClick: function onClick() {
            return pagination.onPageChange(pagination.pageIndex - 1);
          },
          disabled: pagination.pageIndex === 0,
          className: "px-3 py-1 text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800",
          children: "Previous"
        }), jsx("button", {
          onClick: function onClick() {
            return pagination.onPageChange(pagination.pageIndex + 1);
          },
          disabled: (pagination.pageIndex + 1) * pagination.pageSize >= pagination.total,
          className: "px-3 py-1 text-xs border border-mw-gray-200 dark:border-mw-gray-700 rounded disabled:opacity-50 disabled:cursor-not-allowed bg-white dark:bg-mw-gray-900 text-mw-gray-900 dark:text-white hover:bg-mw-gray-50 dark:hover:bg-mw-gray-800",
          children: "Next"
        })]
      })]
    })]
  });
}

function cn$1() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
var thumbnailSizes = {
  xs: 'w-16 h-16',
  sm: 'w-24 h-24',
  md: 'w-32 h-32',
  lg: 'w-48 h-48',
  xl: 'w-64 h-64'
};
var aspectRatios = {
  square: 'aspect-square',
  video: 'aspect-video',
  wide: 'aspect-[3/2]',
  tall: 'aspect-[2/3]',
  auto: ''
};
var typeIcons = {
  image: 'IMG',
  video: 'VID',
  document: 'DOC',
  audio: 'AUD',
  file: 'FILE'
};
function Thumbnail(_ref) {
  var src = _ref.src,
    _ref$alt = _ref.alt,
    alt = _ref$alt === void 0 ? '' : _ref$alt,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'image' : _ref$type,
    title = _ref.title,
    subtitle = _ref.subtitle,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$aspectRatio = _ref.aspectRatio,
    aspectRatio = _ref$aspectRatio === void 0 ? 'auto' : _ref$aspectRatio,
    _ref$hover = _ref.hover,
    hover = _ref$hover === void 0 ? true : _ref$hover,
    _ref$clickable = _ref.clickable,
    clickable = _ref$clickable === void 0 ? false : _ref$clickable,
    _ref$selected = _ref.selected,
    selected = _ref$selected === void 0 ? false : _ref$selected,
    badge = _ref.badge,
    overlay = _ref.overlay,
    actions = _ref.actions,
    _ref$showPreview = _ref.showPreview,
    showPreview = _ref$showPreview === void 0 ? false : _ref$showPreview,
    className = _ref.className,
    onSelect = _ref.onSelect,
    onClick = _ref.onClick,
    onPreview = _ref.onPreview,
    onDownload = _ref.onDownload,
    onLoad = _ref.onLoad,
    onError = _ref.onError,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    _ref$error = _ref.error,
    error = _ref$error === void 0 ? false : _ref$error,
    placeholder = _ref.placeholder;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    imageError = _useState2[0],
    setImageError = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isHovered = _useState4[0],
    setIsHovered = _useState4[1];
  var handleClick = function handleClick() {
    if (clickable && onClick) {
      onClick();
    } else if (onSelect) {
      onSelect();
    }
  };
  var handleImageError = function handleImageError() {
    setImageError(true);
    if (onError) {
      onError();
    }
  };
  var handleImageLoad = function handleImageLoad() {
    if (onLoad) {
      onLoad();
    }
  };
  var renderContent = function renderContent() {
    if (loading) {
      return jsx("div", {
        className: "w-full h-full bg-mw-gray-200 dark:bg-mw-gray-700 animate-pulse flex items-center justify-center",
        children: jsx("div", {
          className: "w-8 h-8 border-2 border-mw-blue-500 border-t-transparent rounded-full animate-spin"
        })
      });
    }
    if (error || imageError) {
      return jsx("div", {
        className: "w-full h-full bg-mw-gray-100 dark:bg-mw-gray-800 flex flex-col items-center justify-center text-mw-gray-400 dark:text-mw-gray-500",
        children: placeholder || jsxs(Fragment, {
          children: [jsx(X, {
            className: "w-8 h-8 mb-2"
          }), jsx("span", {
            className: "text-xs",
            children: "Failed to load"
          })]
        })
      });
    }
    switch (type) {
      case 'image':
        return jsx("img", {
          src: src,
          alt: alt,
          onError: handleImageError,
          onLoad: handleImageLoad,
          className: "w-full h-full object-cover"
        });
      case 'video':
        return jsxs("div", {
          className: "relative w-full h-full",
          children: [jsx("video", {
            src: src,
            className: "w-full h-full object-cover",
            muted: true,
            preload: "metadata"
          }), jsx("div", {
            className: "absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center",
            children: jsx("div", {
              className: "w-12 h-12 bg-white bg-opacity-90 rounded-full flex items-center justify-center",
              children: jsx(Play, {
                className: "w-6 h-6 text-black ml-1"
              })
            })
          })]
        });
      default:
        return jsxs("div", {
          className: "w-full h-full bg-mw-gray-100 dark:bg-mw-gray-800 flex flex-col items-center justify-center",
          children: [jsx("div", {
            className: "text-2xl mb-2",
            children: typeIcons[type]
          }), jsx("div", {
            className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 uppercase tracking-wide",
            children: type
          })]
        });
    }
  };
  var renderOverlay = function renderOverlay() {
    if (!hover || !isHovered && !selected) return null;
    return jsx("div", {
      className: "absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-200",
      children: jsxs("div", {
        className: "flex gap-2",
        children: [showPreview && onPreview && jsx("button", {
          onClick: function onClick(e) {
            e.stopPropagation();
            onPreview();
          },
          className: "p-2 bg-white bg-opacity-90 rounded-full hover:bg-opacity-100 transition-colors",
          title: "Preview",
          children: jsx(Eye, {
            className: "w-4 h-4 text-black"
          })
        }), onDownload && jsx("button", {
          onClick: function onClick(e) {
            e.stopPropagation();
            onDownload();
          },
          className: "p-2 bg-white bg-opacity-90 rounded-full hover:bg-opacity-100 transition-colors",
          title: "Download",
          children: jsx(Download, {
            className: "w-4 h-4 text-black"
          })
        }), actions === null || actions === void 0 ? void 0 : actions.map(function (action, index) {
          return jsx("button", {
            onClick: function onClick(e) {
              e.stopPropagation();
              action.onClick();
            },
            className: "p-2 bg-white bg-opacity-90 rounded-full hover:bg-opacity-100 transition-colors",
            title: action.label,
            children: action.icon
          }, index);
        })]
      })
    });
  };
  return jsxs("div", {
    className: cn$1('relative group cursor-pointer', aspectRatio !== 'auto' ? aspectRatios[aspectRatio] : thumbnailSizes[size], clickable && 'hover:shadow-lg transition-shadow duration-200', selected && 'ring-2 ring-mw-blue-500', className),
    onClick: handleClick,
    onMouseEnter: function onMouseEnter() {
      return setIsHovered(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setIsHovered(false);
    },
    children: [jsx("div", {
      className: "w-full h-full rounded-lg overflow-hidden bg-mw-gray-100 dark:bg-mw-gray-800",
      children: renderContent()
    }), badge && jsx("div", {
      className: "absolute top-2 right-2 z-10",
      children: badge
    }), selected && jsx("div", {
      className: "absolute top-2 left-2 z-10",
      children: jsx("div", {
        className: "w-5 h-5 bg-mw-blue-500 rounded-full flex items-center justify-center",
        children: jsx("div", {
          className: "w-2 h-2 bg-white rounded-full"
        })
      })
    }), renderOverlay(), overlay && jsx("div", {
      className: "absolute inset-0 z-20",
      children: overlay
    }), (title || subtitle) && jsxs("div", {
      className: "mt-2",
      children: [title && jsx("div", {
        className: "text-sm font-medium text-mw-gray-900 dark:text-white truncate",
        children: title
      }), subtitle && jsx("div", {
        className: "text-xs text-mw-gray-500 dark:text-mw-gray-400 truncate",
        children: subtitle
      })]
    })]
  });
}
function VideoThumbnail(_a) {
  var duration = _a.duration,
    _a$autoPlay = _a.autoPlay,
    autoPlay = _a$autoPlay === void 0 ? false : _a$autoPlay;
    _a.muted;
    var props = __rest(_a, ["duration", "autoPlay", "muted"]);
  var _useState5 = useState(autoPlay),
    _useState6 = _slicedToArray(_useState5, 2),
    isPlaying = _useState6[0],
    setIsPlaying = _useState6[1];
  var videoRef = useRef(null);
  var togglePlay = function togglePlay() {
    if (videoRef.current) {
      if (isPlaying) {
        videoRef.current.pause();
      } else {
        videoRef.current.play();
      }
      setIsPlaying(!isPlaying);
    }
  };
  return jsx(Thumbnail, Object.assign({}, props, {
    type: "video",
    overlay: jsxs("div", {
      className: "absolute inset-0",
      children: [duration && jsx("div", {
        className: "absolute bottom-2 right-2 bg-black bg-opacity-75 text-white text-xs px-2 py-1 rounded",
        children: duration
      }), jsx("div", {
        className: "absolute inset-0 flex items-center justify-center",
        children: jsx("button", {
          onClick: togglePlay,
          className: "w-12 h-12 bg-black bg-opacity-50 rounded-full flex items-center justify-center hover:bg-opacity-75 transition-colors",
          children: isPlaying ? jsx(Pause, {
            className: "w-6 h-6 text-white"
          }) : jsx(Play, {
            className: "w-6 h-6 text-white ml-1"
          })
        })
      })]
    })
  }));
}
function ImageThumbnail(_a) {
  var _a$lazy = _a.lazy,
    lazy = _a$lazy === void 0 ? true : _a$lazy,
    fallback = _a.fallback,
    props = __rest(_a, ["lazy", "fallback"]);
  var _useState7 = useState(false),
    _useState8 = _slicedToArray(_useState7, 2),
    loaded = _useState8[0],
    setLoaded = _useState8[1];
  var _useState9 = useState(false),
    _useState0 = _slicedToArray(_useState9, 2),
    error = _useState0[0],
    setError = _useState0[1];
  return jsx(Thumbnail, Object.assign({}, props, {
    type: "image",
    loading: lazy && !loaded && !error,
    error: error,
    onLoad: function onLoad() {
      return setLoaded(true);
    },
    onError: function onError() {
      return setError(true);
    },
    placeholder: fallback ? jsx("img", {
      src: fallback,
      alt: "Fallback",
      className: "w-full h-full object-cover opacity-50"
    }) : undefined
  }));
}
var galleryGaps = {
  sm: 'gap-2',
  md: 'gap-4',
  lg: 'gap-6'
};
function ThumbnailGallery(_ref2) {
  var items = _ref2.items,
    _ref2$columns = _ref2.columns,
    columns = _ref2$columns === void 0 ? 4 : _ref2$columns,
    _ref2$gap = _ref2.gap,
    gap = _ref2$gap === void 0 ? 'md' : _ref2$gap,
    _ref2$selectable = _ref2.selectable,
    selectable = _ref2$selectable === void 0 ? false : _ref2$selectable,
    _ref2$selectedIds = _ref2.selectedIds,
    selectedIds = _ref2$selectedIds === void 0 ? [] : _ref2$selectedIds,
    onSelectionChange = _ref2.onSelectionChange,
    className = _ref2.className;
  var handleSelection = function handleSelection(id) {
    if (!selectable || !onSelectionChange) return;
    var newSelection = selectedIds.includes(id) ? selectedIds.filter(function (selectedId) {
      return selectedId !== id;
    }) : [].concat(_toConsumableArray(selectedIds), [id]);
    onSelectionChange(newSelection);
  };
  return jsx("div", {
    className: cn$1('grid', "grid-cols-".concat(columns), galleryGaps[gap], className),
    children: items.map(function (item) {
      return jsx(Thumbnail, Object.assign({}, item, {
        selected: selectable && selectedIds.includes(item.id),
        onSelect: function onSelect() {
          return handleSelection(item.id);
        }
      }), item.id);
    })
  });
}

function cn() {
  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
    classes[_key] = arguments[_key];
  }
  return classes.filter(Boolean).join(' ');
}
// Drag and Drop Hook
function useDragDrop(_ref) {
  var onDrop = _ref.onDrop,
    accept = _ref.accept,
    _ref$multiple = _ref.multiple,
    multiple = _ref$multiple === void 0 ? true : _ref$multiple,
    maxSize = _ref.maxSize,
    onError = _ref.onError;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isDragActive = _useState2[0],
    setIsDragActive = _useState2[1];
  var _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isDragReject = _useState4[0],
    setIsDragReject = _useState4[1];
  var dragCounter = useRef(0);
  var validateFile = useCallback(function (file) {
    if (accept && accept.length > 0) {
      var fileType = file.type;
      var fileName = file.name.toLowerCase();
      var isValidType = accept.some(function (acceptType) {
        if (acceptType.startsWith('.')) {
          return fileName.endsWith(acceptType);
        }
        if (acceptType.includes('/*')) {
          return fileType.startsWith(acceptType.replace('/*', ''));
        }
        return fileType === acceptType;
      });
      if (!isValidType) {
        onError === null || onError === void 0 ? void 0 : onError("File type ".concat(fileType, " is not accepted"));
        return false;
      }
    }
    if (maxSize && file.size > maxSize) {
      onError === null || onError === void 0 ? void 0 : onError("File size exceeds ".concat(Math.round(maxSize / 1024 / 1024), "MB limit"));
      return false;
    }
    return true;
  }, [accept, maxSize, onError]);
  var handleDrop = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    setIsDragActive(false);
    setIsDragReject(false);
    dragCounter.current = 0;
    var droppedFiles = Array.from(e.dataTransfer.files);
    var validFiles = droppedFiles.filter(validateFile);
    if (!multiple && validFiles.length > 1) {
      onError === null || onError === void 0 ? void 0 : onError('Multiple files not allowed');
      return;
    }
    if (validFiles.length > 0) {
      onDrop(validFiles);
    }
  }, [multiple, onDrop, validateFile, onError]);
  var handleDragEnter = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    dragCounter.current++;
    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {
      setIsDragActive(true);
    }
  }, []);
  var handleDragLeave = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    dragCounter.current--;
    if (dragCounter.current === 0) {
      setIsDragActive(false);
      setIsDragReject(false);
    }
  }, []);
  var handleDragOver = useCallback(function (e) {
    e.preventDefault();
    e.stopPropagation();
    // Check if files being dragged are valid
    var files = Array.from(e.dataTransfer.files);
    var hasInvalidFiles = files.some(function (file) {
      return !validateFile(file);
    });
    setIsDragReject(hasInvalidFiles);
  }, [validateFile]);
  return {
    isDragActive: isDragActive,
    isDragReject: isDragReject,
    dragProps: {
      onDrop: handleDrop,
      onDragEnter: handleDragEnter,
      onDragLeave: handleDragLeave,
      onDragOver: handleDragOver
    }
  };
}
// File Icon Component
function getFileIcon(file) {
  var type = file.type;
  var name = file.name.toLowerCase();
  if (type.startsWith('image/')) return jsx(Image, {
    className: "w-6 h-6"
  });
  if (type.startsWith('video/')) return jsx(Video, {
    className: "w-6 h-6"
  });
  if (type.startsWith('audio/')) return jsx(Music, {
    className: "w-6 h-6"
  });
  if (type.includes('pdf') || name.endsWith('.pdf')) return jsx(FileText, {
    className: "w-6 h-6"
  });
  if (type.includes('zip') || type.includes('rar') || type.includes('archive')) return jsx(Archive, {
    className: "w-6 h-6"
  });
  return jsx(File, {
    className: "w-6 h-6"
  });
}
function DragDrop(_ref2) {
  var onFileDrop = _ref2.onFileDrop,
    accept = _ref2.accept,
    _ref2$multiple = _ref2.multiple,
    multiple = _ref2$multiple === void 0 ? true : _ref2$multiple,
    maxSize = _ref2.maxSize,
    maxFiles = _ref2.maxFiles,
    _ref2$disabled = _ref2.disabled,
    disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,
    className = _ref2.className,
    children = _ref2.children,
    _ref2$showPreview = _ref2.showPreview,
    showPreview = _ref2$showPreview === void 0 ? true : _ref2$showPreview,
    _ref2$compact = _ref2.compact,
    compact = _ref2$compact === void 0 ? false : _ref2$compact;
  var _useState5 = useState([]),
    _useState6 = _slicedToArray(_useState5, 2),
    files = _useState6[0],
    setFiles = _useState6[1];
  var _useState7 = useState(''),
    _useState8 = _slicedToArray(_useState7, 2),
    error = _useState8[0],
    setError = _useState8[1];
  var fileInputRef = useRef(null);
  var _useDragDrop = useDragDrop({
      onDrop: handleFileDrop,
      accept: accept,
      multiple: multiple,
      maxSize: maxSize,
      onError: setError
    }),
    isDragActive = _useDragDrop.isDragActive,
    isDragReject = _useDragDrop.isDragReject,
    dragProps = _useDragDrop.dragProps;
  function handleFileDrop(droppedFiles) {
    if (disabled) return;
    var filesToAdd = droppedFiles;
    if (maxFiles) {
      var remainingSlots = maxFiles - files.length;
      if (remainingSlots <= 0) {
        setError("Maximum ".concat(maxFiles, " files allowed"));
        return;
      }
      filesToAdd = droppedFiles.slice(0, remainingSlots);
    }
    var newFiles = filesToAdd.map(function (file) {
      return {
        id: Math.random().toString(36).substr(2, 9),
        file: file,
        status: 'pending',
        preview: file.type.startsWith('image/') ? URL.createObjectURL(file) : undefined
      };
    });
    setFiles(function (prev) {
      return [].concat(_toConsumableArray(prev), _toConsumableArray(newFiles));
    });
    onFileDrop(filesToAdd);
    setError('');
  }
  var handleFileInput = function handleFileInput(e) {
    var selectedFiles = Array.from(e.target.files || []);
    if (selectedFiles.length > 0) {
      handleFileDrop(selectedFiles);
    }
  };
  var removeFile = function removeFile(id) {
    setFiles(function (prev) {
      var fileToRemove = prev.find(function (f) {
        return f.id === id;
      });
      if (fileToRemove === null || fileToRemove === void 0 ? void 0 : fileToRemove.preview) {
        URL.revokeObjectURL(fileToRemove.preview);
      }
      return prev.filter(function (f) {
        return f.id !== id;
      });
    });
  };
  var clearAll = function clearAll() {
    files.forEach(function (file) {
      if (file.preview) {
        URL.revokeObjectURL(file.preview);
      }
    });
    setFiles([]);
    setError('');
  };
  useEffect(function () {
    return function () {
      files.forEach(function (file) {
        if (file.preview) {
          URL.revokeObjectURL(file.preview);
        }
      });
    };
  }, [files]);
  if (compact) {
    return jsxs("div", {
      className: cn('relative', className),
      children: [jsxs("div", Object.assign({}, dragProps, {
        className: cn('border-2 border-dashed rounded-lg p-4 text-center transition-colors', isDragActive && !isDragReject && 'border-mw-blue-500 bg-mw-blue-50 dark:bg-mw-blue-950', isDragReject && 'border-red-500 bg-red-50 dark:bg-red-950', !isDragActive && 'border-mw-gray-300 dark:border-mw-gray-600', disabled && 'opacity-50 cursor-not-allowed'),
        children: [jsx("input", {
          ref: fileInputRef,
          type: "file",
          className: "hidden",
          multiple: multiple,
          accept: accept === null || accept === void 0 ? void 0 : accept.join(','),
          onChange: handleFileInput,
          disabled: disabled
        }), jsxs("div", {
          className: "flex items-center justify-center space-x-2",
          children: [jsx(Upload, {
            className: "w-5 h-5 text-mw-gray-400"
          }), jsx("button", {
            onClick: function onClick() {
              var _a;
              return (_a = fileInputRef.current) === null || _a === void 0 ? void 0 : _a.click();
            },
            className: "text-sm text-mw-blue-600 hover:text-mw-blue-700 font-medium",
            disabled: disabled,
            children: "Choose files"
          }), jsx("span", {
            className: "text-sm text-mw-gray-500",
            children: "or drag here"
          })]
        })]
      })), error && jsxs("p", {
        className: "mt-2 text-sm text-red-600 flex items-center",
        children: [jsx(CircleAlert, {
          className: "w-4 h-4 mr-1"
        }), error]
      })]
    });
  }
  return jsxs("div", {
    className: cn('space-y-4', className),
    children: [jsxs("div", Object.assign({}, dragProps, {
      className: cn('border-2 border-dashed rounded-lg p-8 text-center transition-colors', isDragActive && !isDragReject && 'border-mw-blue-500 bg-mw-blue-50 dark:bg-mw-blue-950', isDragReject && 'border-red-500 bg-red-50 dark:bg-red-950', !isDragActive && 'border-mw-gray-300 dark:border-mw-gray-600 hover:border-mw-gray-400', disabled && 'opacity-50 cursor-not-allowed'),
      children: [jsx("input", {
        ref: fileInputRef,
        type: "file",
        className: "hidden",
        multiple: multiple,
        accept: accept === null || accept === void 0 ? void 0 : accept.join(','),
        onChange: handleFileInput,
        disabled: disabled
      }), children || jsxs("div", {
        className: "space-y-4",
        children: [jsx("div", {
          className: "mx-auto w-16 h-16 bg-mw-gray-100 dark:bg-mw-gray-800 rounded-full flex items-center justify-center",
          children: jsx(Upload, {
            className: "w-8 h-8 text-mw-gray-400"
          })
        }), jsxs("div", {
          className: "space-y-2",
          children: [jsx("div", {
            className: "text-lg font-medium text-mw-gray-900 dark:text-white",
            children: isDragActive ? isDragReject ? 'Invalid file type' : 'Drop files here' : 'Upload files'
          }), jsxs("div", {
            className: "text-sm text-mw-gray-500 dark:text-mw-gray-400",
            children: [jsx("button", {
              onClick: function onClick() {
                var _a;
                return (_a = fileInputRef.current) === null || _a === void 0 ? void 0 : _a.click();
              },
              className: "text-mw-blue-600 hover:text-mw-blue-700 font-medium",
              disabled: disabled,
              children: "Choose files"
            }), ' ', "or drag and drop"]
          }), (accept || maxSize || maxFiles) && jsxs("div", {
            className: "text-xs text-mw-gray-400 space-y-1",
            children: [accept && jsxs("div", {
              children: ["Accepted: ", accept.join(', ')]
            }), maxSize && jsxs("div", {
              children: ["Max size: ", Math.round(maxSize / 1024 / 1024), "MB"]
            }), maxFiles && jsxs("div", {
              children: ["Max files: ", maxFiles]
            })]
          })]
        })]
      })]
    })), error && jsx("div", {
      className: "p-3 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded-lg",
      children: jsxs("div", {
        className: "flex items-center text-red-600 dark:text-red-400",
        children: [jsx(CircleAlert, {
          className: "w-4 h-4 mr-2 flex-shrink-0"
        }), jsx("span", {
          className: "text-sm",
          children: error
        })]
      })
    }), showPreview && files.length > 0 && jsxs("div", {
      className: "space-y-3",
      children: [jsxs("div", {
        className: "flex items-center justify-between",
        children: [jsxs("h4", {
          className: "text-sm font-medium text-mw-gray-900 dark:text-white",
          children: ["Files (", files.length, ")"]
        }), jsx("button", {
          onClick: clearAll,
          className: "text-sm text-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300",
          children: "Clear all"
        })]
      }), jsx("div", {
        className: "space-y-2",
        children: files.map(function (droppedFile) {
          return jsx(FilePreview, {
            file: droppedFile,
            onRemove: function onRemove() {
              return removeFile(droppedFile.id);
            }
          }, droppedFile.id);
        })
      })]
    })]
  });
}
function FilePreview(_ref3) {
  var file = _ref3.file,
    onRemove = _ref3.onRemove,
    _ref3$showActions = _ref3.showActions,
    showActions = _ref3$showActions === void 0 ? true : _ref3$showActions;
  var _useState9 = useState(false),
    _useState0 = _slicedToArray(_useState9, 2),
    showFullPreview = _useState0[0],
    setShowFullPreview = _useState0[1];
  return jsxs(Fragment, {
    children: [jsxs("div", {
      className: "flex items-center space-x-3 p-3 bg-mw-gray-50 dark:bg-mw-gray-800 rounded-lg border border-mw-gray-200 dark:border-mw-gray-700",
      children: [jsx("div", {
        className: "flex-shrink-0",
        children: file.preview ? jsx("div", {
          className: "w-10 h-10 rounded-lg overflow-hidden",
          children: jsx("img", {
            src: file.preview,
            alt: file.file.name,
            className: "w-full h-full object-cover"
          })
        }) : jsx("div", {
          className: "w-10 h-10 bg-mw-gray-200 dark:bg-mw-gray-700 rounded-lg flex items-center justify-center text-mw-gray-500",
          children: getFileIcon(file.file)
        })
      }), jsxs("div", {
        className: "flex-1 min-w-0",
        children: [jsx("div", {
          className: "text-sm font-medium text-mw-gray-900 dark:text-white truncate",
          children: file.file.name
        }), jsxs("div", {
          className: "text-xs text-mw-gray-500 dark:text-mw-gray-400",
          children: [file.file.type || 'Unknown', " - ", file.file.size ? "".concat((file.file.size / 1024).toFixed(1), " KB") : 'Unknown size']
        }), file.status === 'uploading' && file.progress !== undefined && jsx("div", {
          className: "mt-2",
          children: jsx("div", {
            className: "w-full bg-mw-gray-200 dark:bg-mw-gray-700 rounded-full h-1",
            children: jsx("div", {
              className: "bg-mw-blue-600 h-1 rounded-full transition-all duration-300",
              style: {
                width: "".concat(file.progress, "%")
              }
            })
          })
        }), file.status === 'error' && file.error && jsx("div", {
          className: "mt-1 text-xs text-red-600 dark:text-red-400",
          children: file.error
        })]
      }), jsxs("div", {
        className: "flex-shrink-0",
        children: [file.status === 'uploading' && jsx(RefreshCw, {
          className: "w-4 h-4 text-mw-blue-500 animate-spin"
        }), file.status === 'success' && jsx(Check, {
          className: "w-4 h-4 text-green-500"
        }), file.status === 'error' && jsx(CircleAlert, {
          className: "w-4 h-4 text-red-500"
        })]
      }), showActions && jsxs("div", {
        className: "flex items-center space-x-1",
        children: [file.preview && jsx("button", {
          onClick: function onClick() {
            return setShowFullPreview(true);
          },
          className: "p-1.5 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300 rounded",
          title: "Preview",
          children: jsx(Eye, {
            className: "w-4 h-4"
          })
        }), jsx("button", {
          onClick: onRemove,
          className: "p-1.5 text-mw-gray-400 hover:text-red-600 dark:hover:text-red-400 rounded",
          title: "Remove",
          children: jsx(X, {
            className: "w-4 h-4"
          })
        })]
      })]
    }), showFullPreview && file.preview && jsx("div", {
      className: "fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4",
      children: jsxs("div", {
        className: "relative max-w-4xl max-h-full",
        children: [jsx("button", {
          onClick: function onClick() {
            return setShowFullPreview(false);
          },
          className: "absolute top-4 right-4 p-2 bg-black bg-opacity-50 text-white rounded-full hover:bg-opacity-75 z-10",
          children: jsx(X, {
            className: "w-5 h-5"
          })
        }), jsx("img", {
          src: file.preview,
          alt: file.file.name,
          className: "max-w-full max-h-full object-contain rounded-lg"
        })]
      })
    })]
  });
}
function SortableList(_ref4) {
  var items = _ref4.items,
    onReorder = _ref4.onReorder,
    className = _ref4.className,
    itemClassName = _ref4.itemClassName;
  var _useState1 = useState(null),
    _useState10 = _slicedToArray(_useState1, 2),
    draggedItem = _useState10[0],
    setDraggedItem = _useState10[1];
  var _useState11 = useState(null),
    _useState12 = _slicedToArray(_useState11, 2),
    dragOverItem = _useState12[0],
    setDragOverItem = _useState12[1];
  var handleDragStart = function handleDragStart(e, id) {
    setDraggedItem(id);
    e.dataTransfer.effectAllowed = 'move';
  };
  var handleDragOver = function handleDragOver(e, id) {
    e.preventDefault();
    setDragOverItem(id);
  };
  var handleDrop = function handleDrop(e, targetId) {
    e.preventDefault();
    if (!draggedItem || draggedItem === targetId) return;
    var draggedIndex = items.findIndex(function (item) {
      return item.id === draggedItem;
    });
    var targetIndex = items.findIndex(function (item) {
      return item.id === targetId;
    });
    var newItems = _toConsumableArray(items);
    var draggedItemData = newItems[draggedIndex];
    // Remove dragged item
    newItems.splice(draggedIndex, 1);
    // Insert at new position
    newItems.splice(targetIndex, 0, draggedItemData);
    onReorder(newItems);
    setDraggedItem(null);
    setDragOverItem(null);
  };
  var handleDragEnd = function handleDragEnd() {
    setDraggedItem(null);
    setDragOverItem(null);
  };
  return jsx("div", {
    className: cn('space-y-2', className),
    children: items.map(function (item) {
      return jsxs("div", {
        draggable: true,
        onDragStart: function onDragStart(e) {
          return handleDragStart(e, item.id);
        },
        onDragOver: function onDragOver(e) {
          return handleDragOver(e, item.id);
        },
        onDrop: function onDrop(e) {
          return handleDrop(e, item.id);
        },
        onDragEnd: handleDragEnd,
        className: cn('flex items-center space-x-3 p-3 bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg cursor-move transition-colors', draggedItem === item.id && 'opacity-50', dragOverItem === item.id && 'border-mw-blue-500 bg-mw-blue-50 dark:bg-mw-blue-950', itemClassName),
        children: [jsx(GripVertical, {
          className: "w-4 h-4 text-mw-gray-400"
        }), jsx("div", {
          className: "flex-1",
          children: item.content
        })]
      }, item.id);
    })
  });
}

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

var link$1 = {exports: {}};

var _interop_require_wildcard = {};

var hasRequired_interop_require_wildcard;

function require_interop_require_wildcard () {
	if (hasRequired_interop_require_wildcard) return _interop_require_wildcard;
	hasRequired_interop_require_wildcard = 1;

	function _getRequireWildcardCache(nodeInterop) {
	    if (typeof WeakMap !== "function") return null;

	    var cacheBabelInterop = new WeakMap();
	    var cacheNodeInterop = new WeakMap();

	    return (_getRequireWildcardCache = function(nodeInterop) {
	        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
	    })(nodeInterop);
	}
	function _interop_require_wildcard$1(obj, nodeInterop) {
	    if (!nodeInterop && obj && obj.__esModule) return obj;
	    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return { default: obj };

	    var cache = _getRequireWildcardCache(nodeInterop);

	    if (cache && cache.has(obj)) return cache.get(obj);

	    var newObj = { __proto__: null };
	    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

	    for (var key in obj) {
	        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
	            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
	            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
	            else newObj[key] = obj[key];
	        }
	    }

	    newObj.default = obj;

	    if (cache) cache.set(obj, newObj);

	    return newObj;
	}
	_interop_require_wildcard._ = _interop_require_wildcard$1;
	return _interop_require_wildcard;
}

var resolveHref = {exports: {}};

var querystring = {};

var hasRequiredQuerystring;

function requireQuerystring () {
	if (hasRequiredQuerystring) return querystring;
	hasRequiredQuerystring = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    assign: function() {
		        return assign;
		    },
		    searchParamsToUrlQuery: function() {
		        return searchParamsToUrlQuery;
		    },
		    urlQueryToSearchParams: function() {
		        return urlQueryToSearchParams;
		    }
		});
		function searchParamsToUrlQuery(searchParams) {
		    const query = {};
		    for (const [key, value] of searchParams.entries()){
		        const existing = query[key];
		        if (typeof existing === 'undefined') {
		            query[key] = value;
		        } else if (Array.isArray(existing)) {
		            existing.push(value);
		        } else {
		            query[key] = [
		                existing,
		                value
		            ];
		        }
		    }
		    return query;
		}
		function stringifyUrlQueryParam(param) {
		    if (typeof param === 'string') {
		        return param;
		    }
		    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
		        return String(param);
		    } else {
		        return '';
		    }
		}
		function urlQueryToSearchParams(query) {
		    const searchParams = new URLSearchParams();
		    for (const [key, value] of Object.entries(query)){
		        if (Array.isArray(value)) {
		            for (const item of value){
		                searchParams.append(key, stringifyUrlQueryParam(item));
		            }
		        } else {
		            searchParams.set(key, stringifyUrlQueryParam(value));
		        }
		    }
		    return searchParams;
		}
		function assign(target) {
		    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
		        searchParamsList[_key - 1] = arguments[_key];
		    }
		    for (const searchParams of searchParamsList){
		        for (const key of searchParams.keys()){
		            target.delete(key);
		        }
		        for (const [key, value] of searchParams.entries()){
		            target.append(key, value);
		        }
		    }
		    return target;
		}

		
	} (querystring));
	return querystring;
}

var formatUrl = {};

var hasRequiredFormatUrl;

function requireFormatUrl () {
	if (hasRequiredFormatUrl) return formatUrl;
	hasRequiredFormatUrl = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    formatUrl: function() {
		        return formatUrl;
		    },
		    formatWithValidation: function() {
		        return formatWithValidation;
		    },
		    urlObjectKeys: function() {
		        return urlObjectKeys;
		    }
		});
		const _interop_require_wildcard = /*@__PURE__*/ require_interop_require_wildcard();
		const _querystring = /*#__PURE__*/ _interop_require_wildcard._(requireQuerystring());
		const slashedProtocols = /https?|ftp|gopher|file/;
		function formatUrl(urlObj) {
		    let { auth, hostname } = urlObj;
		    let protocol = urlObj.protocol || '';
		    let pathname = urlObj.pathname || '';
		    let hash = urlObj.hash || '';
		    let query = urlObj.query || '';
		    let host = false;
		    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
		    if (urlObj.host) {
		        host = auth + urlObj.host;
		    } else if (hostname) {
		        host = auth + (~hostname.indexOf(':') ? "[" + hostname + "]" : hostname);
		        if (urlObj.port) {
		            host += ':' + urlObj.port;
		        }
		    }
		    if (query && typeof query === 'object') {
		        query = String(_querystring.urlQueryToSearchParams(query));
		    }
		    let search = urlObj.search || query && "?" + query || '';
		    if (protocol && !protocol.endsWith(':')) protocol += ':';
		    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
		        host = '//' + (host || '');
		        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
		    } else if (!host) {
		        host = '';
		    }
		    if (hash && hash[0] !== '#') hash = '#' + hash;
		    if (search && search[0] !== '?') search = '?' + search;
		    pathname = pathname.replace(/[?#]/g, encodeURIComponent);
		    search = search.replace('#', '%23');
		    return "" + protocol + host + pathname + search + hash;
		}
		const urlObjectKeys = [
		    'auth',
		    'hash',
		    'host',
		    'hostname',
		    'href',
		    'path',
		    'pathname',
		    'port',
		    'protocol',
		    'query',
		    'search',
		    'slashes'
		];
		function formatWithValidation(url) {
		    if (process.env.NODE_ENV === 'development') {
		        if (url !== null && typeof url === 'object') {
		            Object.keys(url).forEach((key)=>{
		                if (!urlObjectKeys.includes(key)) {
		                    console.warn("Unknown key passed via urlObject into url.format: " + key);
		                }
		            });
		        }
		    }
		    return formatUrl(url);
		}

		
	} (formatUrl));
	return formatUrl;
}

var omit = {};

var hasRequiredOmit;

function requireOmit () {
	if (hasRequiredOmit) return omit;
	hasRequiredOmit = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "omit", {
		    enumerable: true,
		    get: function() {
		        return omit;
		    }
		});
		function omit(object, keys) {
		    const omitted = {};
		    Object.keys(object).forEach((key)=>{
		        if (!keys.includes(key)) {
		            omitted[key] = object[key];
		        }
		    });
		    return omitted;
		}

		
	} (omit));
	return omit;
}

var utils$1 = {};

var hasRequiredUtils$1;

function requireUtils$1 () {
	if (hasRequiredUtils$1) return utils$1;
	hasRequiredUtils$1 = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    DecodeError: function() {
		        return DecodeError;
		    },
		    MiddlewareNotFoundError: function() {
		        return MiddlewareNotFoundError;
		    },
		    MissingStaticPage: function() {
		        return MissingStaticPage;
		    },
		    NormalizeError: function() {
		        return NormalizeError;
		    },
		    PageNotFoundError: function() {
		        return PageNotFoundError;
		    },
		    SP: function() {
		        return SP;
		    },
		    ST: function() {
		        return ST;
		    },
		    WEB_VITALS: function() {
		        return WEB_VITALS;
		    },
		    execOnce: function() {
		        return execOnce;
		    },
		    getDisplayName: function() {
		        return getDisplayName;
		    },
		    getLocationOrigin: function() {
		        return getLocationOrigin;
		    },
		    getURL: function() {
		        return getURL;
		    },
		    isAbsoluteUrl: function() {
		        return isAbsoluteUrl;
		    },
		    isResSent: function() {
		        return isResSent;
		    },
		    loadGetInitialProps: function() {
		        return loadGetInitialProps;
		    },
		    normalizeRepeatedSlashes: function() {
		        return normalizeRepeatedSlashes;
		    },
		    stringifyError: function() {
		        return stringifyError;
		    }
		});
		const WEB_VITALS = [
		    'CLS',
		    'FCP',
		    'FID',
		    'INP',
		    'LCP',
		    'TTFB'
		];
		function execOnce(fn) {
		    let used = false;
		    let result;
		    return function() {
		        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
		            args[_key] = arguments[_key];
		        }
		        if (!used) {
		            used = true;
		            result = fn(...args);
		        }
		        return result;
		    };
		}
		// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
		// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
		const ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
		const isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);
		function getLocationOrigin() {
		    const { protocol, hostname, port } = window.location;
		    return protocol + "//" + hostname + (port ? ':' + port : '');
		}
		function getURL() {
		    const { href } = window.location;
		    const origin = getLocationOrigin();
		    return href.substring(origin.length);
		}
		function getDisplayName(Component) {
		    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
		}
		function isResSent(res) {
		    return res.finished || res.headersSent;
		}
		function normalizeRepeatedSlashes(url) {
		    const urlParts = url.split('?');
		    const urlNoQuery = urlParts[0];
		    return urlNoQuery// first we replace any non-encoded backslashes with forward
		    // then normalize repeated forward slashes
		    .replace(/\\/g, '/').replace(/\/\/+/g, '/') + (urlParts[1] ? "?" + urlParts.slice(1).join('?') : '');
		}
		async function loadGetInitialProps(App, ctx) {
		    if (process.env.NODE_ENV !== 'production') {
		        var _App_prototype;
		        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
		            const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
		            throw Object.defineProperty(new Error(message), "__NEXT_ERROR_CODE", {
		                value: "E394",
		                enumerable: false,
		                configurable: true
		            });
		        }
		    }
		    // when called from _app `ctx` is nested in `ctx`
		    const res = ctx.res || ctx.ctx && ctx.ctx.res;
		    if (!App.getInitialProps) {
		        if (ctx.ctx && ctx.Component) {
		            // @ts-ignore pageProps default
		            return {
		                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
		            };
		        }
		        return {};
		    }
		    const props = await App.getInitialProps(ctx);
		    if (res && isResSent(res)) {
		        return props;
		    }
		    if (!props) {
		        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
		        throw Object.defineProperty(new Error(message), "__NEXT_ERROR_CODE", {
		            value: "E394",
		            enumerable: false,
		            configurable: true
		        });
		    }
		    if (process.env.NODE_ENV !== 'production') {
		        if (Object.keys(props).length === 0 && !ctx.ctx) {
		            console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
		        }
		    }
		    return props;
		}
		const SP = typeof performance !== 'undefined';
		const ST = SP && [
		    'mark',
		    'measure',
		    'getEntriesByName'
		].every((method)=>typeof performance[method] === 'function');
		class DecodeError extends Error {
		}
		class NormalizeError extends Error {
		}
		class PageNotFoundError extends Error {
		    constructor(page){
		        super();
		        this.code = 'ENOENT';
		        this.name = 'PageNotFoundError';
		        this.message = "Cannot find module for page: " + page;
		    }
		}
		class MissingStaticPage extends Error {
		    constructor(page, message){
		        super();
		        this.message = "Failed to load static file for page: " + page + " " + message;
		    }
		}
		class MiddlewareNotFoundError extends Error {
		    constructor(){
		        super();
		        this.code = 'ENOENT';
		        this.message = "Cannot find the middleware module";
		    }
		}
		function stringifyError(error) {
		    return JSON.stringify({
		        message: error.message,
		        stack: error.stack
		    });
		}

		
	} (utils$1));
	return utils$1;
}

var normalizeTrailingSlash = {exports: {}};

var removeTrailingSlash = {};

/**
 * Removes the trailing slash for a given route or page path. Preserves the
 * root page. Examples:
 *   - `/foo/bar/` -> `/foo/bar`
 *   - `/foo/bar` -> `/foo/bar`
 *   - `/` -> `/`
 */

var hasRequiredRemoveTrailingSlash;

function requireRemoveTrailingSlash () {
	if (hasRequiredRemoveTrailingSlash) return removeTrailingSlash;
	hasRequiredRemoveTrailingSlash = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "removeTrailingSlash", {
		    enumerable: true,
		    get: function() {
		        return removeTrailingSlash;
		    }
		});
		function removeTrailingSlash(route) {
		    return route.replace(/\/$/, '') || '/';
		}

		
	} (removeTrailingSlash));
	return removeTrailingSlash;
}

var parsePath = {};

/**
 * Given a path this function will find the pathname, query and hash and return
 * them. This is useful to parse full paths on the client side.
 * @param path A path to parse e.g. /foo/bar?id=1#hash
 */

var hasRequiredParsePath;

function requireParsePath () {
	if (hasRequiredParsePath) return parsePath;
	hasRequiredParsePath = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "parsePath", {
		    enumerable: true,
		    get: function() {
		        return parsePath;
		    }
		});
		function parsePath(path) {
		    const hashIndex = path.indexOf('#');
		    const queryIndex = path.indexOf('?');
		    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);
		    if (hasQuery || hashIndex > -1) {
		        return {
		            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),
		            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',
		            hash: hashIndex > -1 ? path.slice(hashIndex) : ''
		        };
		    }
		    return {
		        pathname: path,
		        query: '',
		        hash: ''
		    };
		}

		
	} (parsePath));
	return parsePath;
}

var hasRequiredNormalizeTrailingSlash;

function requireNormalizeTrailingSlash () {
	if (hasRequiredNormalizeTrailingSlash) return normalizeTrailingSlash.exports;
	hasRequiredNormalizeTrailingSlash = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "normalizePathTrailingSlash", {
		    enumerable: true,
		    get: function() {
		        return normalizePathTrailingSlash;
		    }
		});
		const _removetrailingslash = requireRemoveTrailingSlash();
		const _parsepath = requireParsePath();
		const normalizePathTrailingSlash = (path)=>{
		    if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {
		        return path;
		    }
		    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);
		    if (process.env.__NEXT_TRAILING_SLASH) {
		        if (/\.[^/]+\/?$/.test(pathname)) {
		            return "" + (0, _removetrailingslash.removeTrailingSlash)(pathname) + query + hash;
		        } else if (pathname.endsWith('/')) {
		            return "" + pathname + query + hash;
		        } else {
		            return pathname + "/" + query + hash;
		        }
		    }
		    return "" + (0, _removetrailingslash.removeTrailingSlash)(pathname) + query + hash;
		};

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (normalizeTrailingSlash, normalizeTrailingSlash.exports));
	return normalizeTrailingSlash.exports;
}

var isLocalUrl = {};

var hasBasePath = {exports: {}};

var pathHasPrefix = {};

var hasRequiredPathHasPrefix;

function requirePathHasPrefix () {
	if (hasRequiredPathHasPrefix) return pathHasPrefix;
	hasRequiredPathHasPrefix = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "pathHasPrefix", {
		    enumerable: true,
		    get: function() {
		        return pathHasPrefix;
		    }
		});
		const _parsepath = requireParsePath();
		function pathHasPrefix(path, prefix) {
		    if (typeof path !== 'string') {
		        return false;
		    }
		    const { pathname } = (0, _parsepath.parsePath)(path);
		    return pathname === prefix || pathname.startsWith(prefix + '/');
		}

		
	} (pathHasPrefix));
	return pathHasPrefix;
}

var hasRequiredHasBasePath;

function requireHasBasePath () {
	if (hasRequiredHasBasePath) return hasBasePath.exports;
	hasRequiredHasBasePath = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "hasBasePath", {
		    enumerable: true,
		    get: function() {
		        return hasBasePath;
		    }
		});
		const _pathhasprefix = requirePathHasPrefix();
		const basePath = process.env.__NEXT_ROUTER_BASEPATH || '';
		function hasBasePath(path) {
		    return (0, _pathhasprefix.pathHasPrefix)(path, basePath);
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (hasBasePath, hasBasePath.exports));
	return hasBasePath.exports;
}

var hasRequiredIsLocalUrl;

function requireIsLocalUrl () {
	if (hasRequiredIsLocalUrl) return isLocalUrl;
	hasRequiredIsLocalUrl = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "isLocalURL", {
		    enumerable: true,
		    get: function() {
		        return isLocalURL;
		    }
		});
		const _utils = requireUtils$1();
		const _hasbasepath = requireHasBasePath();
		function isLocalURL(url) {
		    // prevent a hydration mismatch on href for url with anchor refs
		    if (!(0, _utils.isAbsoluteUrl)(url)) return true;
		    try {
		        // absolute urls can be local if they are on the same origin
		        const locationOrigin = (0, _utils.getLocationOrigin)();
		        const resolved = new URL(url, locationOrigin);
		        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);
		    } catch (_) {
		        return false;
		    }
		}

		
	} (isLocalUrl));
	return isLocalUrl;
}

var utils = {};

var sortedRoutes = {};

var hasRequiredSortedRoutes;

function requireSortedRoutes () {
	if (hasRequiredSortedRoutes) return sortedRoutes;
	hasRequiredSortedRoutes = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    getSortedRouteObjects: function() {
		        return getSortedRouteObjects;
		    },
		    getSortedRoutes: function() {
		        return getSortedRoutes;
		    }
		});
		class UrlNode {
		    insert(urlPath) {
		        this._insert(urlPath.split('/').filter(Boolean), [], false);
		    }
		    smoosh() {
		        return this._smoosh();
		    }
		    _smoosh(prefix) {
		        if (prefix === void 0) prefix = '/';
		        const childrenPaths = [
		            ...this.children.keys()
		        ].sort();
		        if (this.slugName !== null) {
		            childrenPaths.splice(childrenPaths.indexOf('[]'), 1);
		        }
		        if (this.restSlugName !== null) {
		            childrenPaths.splice(childrenPaths.indexOf('[...]'), 1);
		        }
		        if (this.optionalRestSlugName !== null) {
		            childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1);
		        }
		        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh("" + prefix + c + "/")).reduce((prev, curr)=>[
		                ...prev,
		                ...curr
		            ], []);
		        if (this.slugName !== null) {
		            routes.push(...this.children.get('[]')._smoosh(prefix + "[" + this.slugName + "]/"));
		        }
		        if (!this.placeholder) {
		            const r = prefix === '/' ? '/' : prefix.slice(0, -1);
		            if (this.optionalRestSlugName != null) {
		                throw Object.defineProperty(new Error('You cannot define a route with the same specificity as a optional catch-all route ("' + r + '" and "' + r + "[[..." + this.optionalRestSlugName + ']]").'), "__NEXT_ERROR_CODE", {
		                    value: "E458",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            routes.unshift(r);
		        }
		        if (this.restSlugName !== null) {
		            routes.push(...this.children.get('[...]')._smoosh(prefix + "[..." + this.restSlugName + "]/"));
		        }
		        if (this.optionalRestSlugName !== null) {
		            routes.push(...this.children.get('[[...]]')._smoosh(prefix + "[[..." + this.optionalRestSlugName + "]]/"));
		        }
		        return routes;
		    }
		    _insert(urlPaths, slugNames, isCatchAll) {
		        if (urlPaths.length === 0) {
		            this.placeholder = false;
		            return;
		        }
		        if (isCatchAll) {
		            throw Object.defineProperty(new Error("Catch-all must be the last part of the URL."), "__NEXT_ERROR_CODE", {
		                value: "E392",
		                enumerable: false,
		                configurable: true
		            });
		        }
		        // The next segment in the urlPaths list
		        let nextSegment = urlPaths[0];
		        // Check if the segment matches `[something]`
		        if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {
		            // Strip `[` and `]`, leaving only `something`
		            let segmentName = nextSegment.slice(1, -1);
		            let isOptional = false;
		            if (segmentName.startsWith('[') && segmentName.endsWith(']')) {
		                // Strip optional `[` and `]`, leaving only `something`
		                segmentName = segmentName.slice(1, -1);
		                isOptional = true;
		            }
		            if (segmentName.startsWith('…')) {
		                throw Object.defineProperty(new Error("Detected a three-dot character ('…') at ('" + segmentName + "'). Did you mean ('...')?"), "__NEXT_ERROR_CODE", {
		                    value: "E147",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            if (segmentName.startsWith('...')) {
		                // Strip `...`, leaving only `something`
		                segmentName = segmentName.substring(3);
		                isCatchAll = true;
		            }
		            if (segmentName.startsWith('[') || segmentName.endsWith(']')) {
		                throw Object.defineProperty(new Error("Segment names may not start or end with extra brackets ('" + segmentName + "')."), "__NEXT_ERROR_CODE", {
		                    value: "E421",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            if (segmentName.startsWith('.')) {
		                throw Object.defineProperty(new Error("Segment names may not start with erroneous periods ('" + segmentName + "')."), "__NEXT_ERROR_CODE", {
		                    value: "E288",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            function handleSlug(previousSlug, nextSlug) {
		                if (previousSlug !== null) {
		                    // If the specific segment already has a slug but the slug is not `something`
		                    // This prevents collisions like:
		                    // pages/[post]/index.js
		                    // pages/[id]/index.js
		                    // Because currently multiple dynamic params on the same segment level are not supported
		                    if (previousSlug !== nextSlug) {
		                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.
		                        throw Object.defineProperty(new Error("You cannot use different slug names for the same dynamic path ('" + previousSlug + "' !== '" + nextSlug + "')."), "__NEXT_ERROR_CODE", {
		                            value: "E337",
		                            enumerable: false,
		                            configurable: true
		                        });
		                    }
		                }
		                slugNames.forEach((slug)=>{
		                    if (slug === nextSlug) {
		                        throw Object.defineProperty(new Error('You cannot have the same slug name "' + nextSlug + '" repeat within a single dynamic path'), "__NEXT_ERROR_CODE", {
		                            value: "E247",
		                            enumerable: false,
		                            configurable: true
		                        });
		                    }
		                    if (slug.replace(/\W/g, '') === nextSegment.replace(/\W/g, '')) {
		                        throw Object.defineProperty(new Error('You cannot have the slug names "' + slug + '" and "' + nextSlug + '" differ only by non-word symbols within a single dynamic path'), "__NEXT_ERROR_CODE", {
		                            value: "E499",
		                            enumerable: false,
		                            configurable: true
		                        });
		                    }
		                });
		                slugNames.push(nextSlug);
		            }
		            if (isCatchAll) {
		                if (isOptional) {
		                    if (this.restSlugName != null) {
		                        throw Object.defineProperty(new Error('You cannot use both an required and optional catch-all route at the same level ("[...' + this.restSlugName + ']" and "' + urlPaths[0] + '" ).'), "__NEXT_ERROR_CODE", {
		                            value: "E299",
		                            enumerable: false,
		                            configurable: true
		                        });
		                    }
		                    handleSlug(this.optionalRestSlugName, segmentName);
		                    // slugName is kept as it can only be one particular slugName
		                    this.optionalRestSlugName = segmentName;
		                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically
		                    nextSegment = '[[...]]';
		                } else {
		                    if (this.optionalRestSlugName != null) {
		                        throw Object.defineProperty(new Error('You cannot use both an optional and required catch-all route at the same level ("[[...' + this.optionalRestSlugName + ']]" and "' + urlPaths[0] + '").'), "__NEXT_ERROR_CODE", {
		                            value: "E300",
		                            enumerable: false,
		                            configurable: true
		                        });
		                    }
		                    handleSlug(this.restSlugName, segmentName);
		                    // slugName is kept as it can only be one particular slugName
		                    this.restSlugName = segmentName;
		                    // nextSegment is overwritten to [...] so that it can later be sorted specifically
		                    nextSegment = '[...]';
		                }
		            } else {
		                if (isOptional) {
		                    throw Object.defineProperty(new Error('Optional route parameters are not yet supported ("' + urlPaths[0] + '").'), "__NEXT_ERROR_CODE", {
		                        value: "E435",
		                        enumerable: false,
		                        configurable: true
		                    });
		                }
		                handleSlug(this.slugName, segmentName);
		                // slugName is kept as it can only be one particular slugName
		                this.slugName = segmentName;
		                // nextSegment is overwritten to [] so that it can later be sorted specifically
		                nextSegment = '[]';
		            }
		        }
		        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode
		        if (!this.children.has(nextSegment)) {
		            this.children.set(nextSegment, new UrlNode());
		        }
		        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);
		    }
		    constructor(){
		        this.placeholder = true;
		        this.children = new Map();
		        this.slugName = null;
		        this.restSlugName = null;
		        this.optionalRestSlugName = null;
		    }
		}
		function getSortedRoutes(normalizedPages) {
		    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment
		    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js
		    // Only 1 dynamic segment per nesting level
		    // So in the case that is test/integration/dynamic-routing it'll be this:
		    // pages/[post]/comments.js
		    // pages/blog/[post]/comment/[id].js
		    // Both are fine because `pages/[post]` and `pages/blog` are on the same level
		    // So in this case `UrlNode` created here has `this.slugName === 'post'`
		    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities
		    // Instead what has to be passed through is the upwards path's dynamic names
		    const root = new UrlNode();
		    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels
		    normalizedPages.forEach((pagePath)=>root.insert(pagePath));
		    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority
		    return root.smoosh();
		}
		function getSortedRouteObjects(objects, getter) {
		    // We're assuming here that all the pathnames are unique, that way we can
		    // sort the list and use the index as the key.
		    const indexes = {};
		    const pathnames = [];
		    for(let i = 0; i < objects.length; i++){
		        const pathname = getter(objects[i]);
		        indexes[pathname] = i;
		        pathnames[i] = pathname;
		    }
		    // Sort the pathnames.
		    const sorted = getSortedRoutes(pathnames);
		    // Map the sorted pathnames back to the original objects using the new sorted
		    // index.
		    return sorted.map((pathname)=>objects[indexes[pathname]]);
		}

		
	} (sortedRoutes));
	return sortedRoutes;
}

var isDynamic = {};

var interceptionRoutes = {};

var appPaths = {};

var ensureLeadingSlash = {};

/**
 * For a given page path, this function ensures that there is a leading slash.
 * If there is not a leading slash, one is added, otherwise it is noop.
 */

var hasRequiredEnsureLeadingSlash;

function requireEnsureLeadingSlash () {
	if (hasRequiredEnsureLeadingSlash) return ensureLeadingSlash;
	hasRequiredEnsureLeadingSlash = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "ensureLeadingSlash", {
		    enumerable: true,
		    get: function() {
		        return ensureLeadingSlash;
		    }
		});
		function ensureLeadingSlash(path) {
		    return path.startsWith('/') ? path : "/" + path;
		}

		
	} (ensureLeadingSlash));
	return ensureLeadingSlash;
}

var segment = {};

var hasRequiredSegment;

function requireSegment () {
	if (hasRequiredSegment) return segment;
	hasRequiredSegment = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    DEFAULT_SEGMENT_KEY: function() {
		        return DEFAULT_SEGMENT_KEY;
		    },
		    PAGE_SEGMENT_KEY: function() {
		        return PAGE_SEGMENT_KEY;
		    },
		    addSearchParamsIfPageSegment: function() {
		        return addSearchParamsIfPageSegment;
		    },
		    isGroupSegment: function() {
		        return isGroupSegment;
		    },
		    isParallelRouteSegment: function() {
		        return isParallelRouteSegment;
		    }
		});
		function isGroupSegment(segment) {
		    // Use array[0] for performant purpose
		    return segment[0] === '(' && segment.endsWith(')');
		}
		function isParallelRouteSegment(segment) {
		    return segment.startsWith('@') && segment !== '@children';
		}
		function addSearchParamsIfPageSegment(segment, searchParams) {
		    const isPageSegment = segment.includes(PAGE_SEGMENT_KEY);
		    if (isPageSegment) {
		        const stringifiedQuery = JSON.stringify(searchParams);
		        return stringifiedQuery !== '{}' ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery : PAGE_SEGMENT_KEY;
		    }
		    return segment;
		}
		const PAGE_SEGMENT_KEY = '__PAGE__';
		const DEFAULT_SEGMENT_KEY = '__DEFAULT__';

		
	} (segment));
	return segment;
}

var hasRequiredAppPaths;

function requireAppPaths () {
	if (hasRequiredAppPaths) return appPaths;
	hasRequiredAppPaths = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    normalizeAppPath: function() {
		        return normalizeAppPath;
		    },
		    normalizeRscURL: function() {
		        return normalizeRscURL;
		    }
		});
		const _ensureleadingslash = requireEnsureLeadingSlash();
		const _segment = requireSegment();
		function normalizeAppPath(route) {
		    return (0, _ensureleadingslash.ensureLeadingSlash)(route.split('/').reduce((pathname, segment, index, segments)=>{
		        // Empty segments are ignored.
		        if (!segment) {
		            return pathname;
		        }
		        // Groups are ignored.
		        if ((0, _segment.isGroupSegment)(segment)) {
		            return pathname;
		        }
		        // Parallel segments are ignored.
		        if (segment[0] === '@') {
		            return pathname;
		        }
		        // The last segment (if it's a leaf) should be ignored.
		        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {
		            return pathname;
		        }
		        return pathname + "/" + segment;
		    }, ''));
		}
		function normalizeRscURL(url) {
		    return url.replace(/\.rsc($|\?)/, // $1 ensures `?` is preserved
		    '$1');
		}

		
	} (appPaths));
	return appPaths;
}

var hasRequiredInterceptionRoutes;

function requireInterceptionRoutes () {
	if (hasRequiredInterceptionRoutes) return interceptionRoutes;
	hasRequiredInterceptionRoutes = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    INTERCEPTION_ROUTE_MARKERS: function() {
		        return INTERCEPTION_ROUTE_MARKERS;
		    },
		    extractInterceptionRouteInformation: function() {
		        return extractInterceptionRouteInformation;
		    },
		    isInterceptionRouteAppPath: function() {
		        return isInterceptionRouteAppPath;
		    }
		});
		const _apppaths = requireAppPaths();
		const INTERCEPTION_ROUTE_MARKERS = [
		    '(..)(..)',
		    '(.)',
		    '(..)',
		    '(...)'
		];
		function isInterceptionRouteAppPath(path) {
		    // TODO-APP: add more serious validation
		    return path.split('/').find((segment)=>INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m))) !== undefined;
		}
		function extractInterceptionRouteInformation(path) {
		    let interceptingRoute, marker, interceptedRoute;
		    for (const segment of path.split('/')){
		        marker = INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
		        if (marker) {
		            [interceptingRoute, interceptedRoute] = path.split(marker, 2);
		            break;
		        }
		    }
		    if (!interceptingRoute || !marker || !interceptedRoute) {
		        throw Object.defineProperty(new Error("Invalid interception route: " + path + ". Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>"), "__NEXT_ERROR_CODE", {
		            value: "E269",
		            enumerable: false,
		            configurable: true
		        });
		    }
		    interceptingRoute = (0, _apppaths.normalizeAppPath)(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed
		    ;
		    switch(marker){
		        case '(.)':
		            // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route
		            if (interceptingRoute === '/') {
		                interceptedRoute = "/" + interceptedRoute;
		            } else {
		                interceptedRoute = interceptingRoute + '/' + interceptedRoute;
		            }
		            break;
		        case '(..)':
		            // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route
		            if (interceptingRoute === '/') {
		                throw Object.defineProperty(new Error("Invalid interception route: " + path + ". Cannot use (..) marker at the root level, use (.) instead."), "__NEXT_ERROR_CODE", {
		                    value: "E207",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            interceptedRoute = interceptingRoute.split('/').slice(0, -1).concat(interceptedRoute).join('/');
		            break;
		        case '(...)':
		            // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route
		            interceptedRoute = '/' + interceptedRoute;
		            break;
		        case '(..)(..)':
		            // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route
		            const splitInterceptingRoute = interceptingRoute.split('/');
		            if (splitInterceptingRoute.length <= 2) {
		                throw Object.defineProperty(new Error("Invalid interception route: " + path + ". Cannot use (..)(..) marker at the root level or one level up."), "__NEXT_ERROR_CODE", {
		                    value: "E486",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		            interceptedRoute = splitInterceptingRoute.slice(0, -2).concat(interceptedRoute).join('/');
		            break;
		        default:
		            throw Object.defineProperty(new Error('Invariant: unexpected marker'), "__NEXT_ERROR_CODE", {
		                value: "E112",
		                enumerable: false,
		                configurable: true
		            });
		    }
		    return {
		        interceptingRoute,
		        interceptedRoute
		    };
		}

		
	} (interceptionRoutes));
	return interceptionRoutes;
}

var hasRequiredIsDynamic;

function requireIsDynamic () {
	if (hasRequiredIsDynamic) return isDynamic;
	hasRequiredIsDynamic = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "isDynamicRoute", {
		    enumerable: true,
		    get: function() {
		        return isDynamicRoute;
		    }
		});
		const _interceptionroutes = requireInterceptionRoutes();
		// Identify /.*[param].*/ in route string
		const TEST_ROUTE = /\/[^/]*\[[^/]+\][^/]*(?=\/|$)/;
		// Identify /[param]/ in route string
		const TEST_STRICT_ROUTE = /\/\[[^/]+\](?=\/|$)/;
		function isDynamicRoute(route, strict) {
		    if (strict === void 0) strict = true;
		    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {
		        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;
		    }
		    if (strict) {
		        return TEST_STRICT_ROUTE.test(route);
		    }
		    return TEST_ROUTE.test(route);
		}

		
	} (isDynamic));
	return isDynamic;
}

var hasRequiredUtils;

function requireUtils () {
	if (hasRequiredUtils) return utils;
	hasRequiredUtils = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    getSortedRouteObjects: function() {
		        return _sortedroutes.getSortedRouteObjects;
		    },
		    getSortedRoutes: function() {
		        return _sortedroutes.getSortedRoutes;
		    },
		    isDynamicRoute: function() {
		        return _isdynamic.isDynamicRoute;
		    }
		});
		const _sortedroutes = requireSortedRoutes();
		const _isdynamic = requireIsDynamic();

		
	} (utils));
	return utils;
}

var interpolateAs = {};

var routeMatcher = {};

var hasRequiredRouteMatcher;

function requireRouteMatcher () {
	if (hasRequiredRouteMatcher) return routeMatcher;
	hasRequiredRouteMatcher = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "getRouteMatcher", {
		    enumerable: true,
		    get: function() {
		        return getRouteMatcher;
		    }
		});
		const _utils = requireUtils$1();
		function getRouteMatcher(param) {
		    let { re, groups } = param;
		    return (pathname)=>{
		        const routeMatch = re.exec(pathname);
		        if (!routeMatch) return false;
		        const decode = (param)=>{
		            try {
		                return decodeURIComponent(param);
		            } catch (e) {
		                throw Object.defineProperty(new _utils.DecodeError('failed to decode param'), "__NEXT_ERROR_CODE", {
		                    value: "E528",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		        };
		        const params = {};
		        for (const [key, group] of Object.entries(groups)){
		            const match = routeMatch[group.pos];
		            if (match !== undefined) {
		                if (group.repeat) {
		                    params[key] = match.split('/').map((entry)=>decode(entry));
		                } else {
		                    params[key] = decode(match);
		                }
		            }
		        }
		        return params;
		    };
		}

		
	} (routeMatcher));
	return routeMatcher;
}

var routeRegex = {};

var constants = {};

var hasRequiredConstants;

function requireConstants () {
	if (hasRequiredConstants) return constants;
	hasRequiredConstants = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    ACTION_SUFFIX: function() {
		        return ACTION_SUFFIX;
		    },
		    APP_DIR_ALIAS: function() {
		        return APP_DIR_ALIAS;
		    },
		    CACHE_ONE_YEAR: function() {
		        return CACHE_ONE_YEAR;
		    },
		    DOT_NEXT_ALIAS: function() {
		        return DOT_NEXT_ALIAS;
		    },
		    ESLINT_DEFAULT_DIRS: function() {
		        return ESLINT_DEFAULT_DIRS;
		    },
		    GSP_NO_RETURNED_VALUE: function() {
		        return GSP_NO_RETURNED_VALUE;
		    },
		    GSSP_COMPONENT_MEMBER_ERROR: function() {
		        return GSSP_COMPONENT_MEMBER_ERROR;
		    },
		    GSSP_NO_RETURNED_VALUE: function() {
		        return GSSP_NO_RETURNED_VALUE;
		    },
		    INFINITE_CACHE: function() {
		        return INFINITE_CACHE;
		    },
		    INSTRUMENTATION_HOOK_FILENAME: function() {
		        return INSTRUMENTATION_HOOK_FILENAME;
		    },
		    MATCHED_PATH_HEADER: function() {
		        return MATCHED_PATH_HEADER;
		    },
		    MIDDLEWARE_FILENAME: function() {
		        return MIDDLEWARE_FILENAME;
		    },
		    MIDDLEWARE_LOCATION_REGEXP: function() {
		        return MIDDLEWARE_LOCATION_REGEXP;
		    },
		    NEXT_BODY_SUFFIX: function() {
		        return NEXT_BODY_SUFFIX;
		    },
		    NEXT_CACHE_IMPLICIT_TAG_ID: function() {
		        return NEXT_CACHE_IMPLICIT_TAG_ID;
		    },
		    NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {
		        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;
		    },
		    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {
		        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;
		    },
		    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {
		        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;
		    },
		    NEXT_CACHE_TAGS_HEADER: function() {
		        return NEXT_CACHE_TAGS_HEADER;
		    },
		    NEXT_CACHE_TAG_MAX_ITEMS: function() {
		        return NEXT_CACHE_TAG_MAX_ITEMS;
		    },
		    NEXT_CACHE_TAG_MAX_LENGTH: function() {
		        return NEXT_CACHE_TAG_MAX_LENGTH;
		    },
		    NEXT_DATA_SUFFIX: function() {
		        return NEXT_DATA_SUFFIX;
		    },
		    NEXT_INTERCEPTION_MARKER_PREFIX: function() {
		        return NEXT_INTERCEPTION_MARKER_PREFIX;
		    },
		    NEXT_META_SUFFIX: function() {
		        return NEXT_META_SUFFIX;
		    },
		    NEXT_QUERY_PARAM_PREFIX: function() {
		        return NEXT_QUERY_PARAM_PREFIX;
		    },
		    NEXT_RESUME_HEADER: function() {
		        return NEXT_RESUME_HEADER;
		    },
		    NON_STANDARD_NODE_ENV: function() {
		        return NON_STANDARD_NODE_ENV;
		    },
		    PAGES_DIR_ALIAS: function() {
		        return PAGES_DIR_ALIAS;
		    },
		    PRERENDER_REVALIDATE_HEADER: function() {
		        return PRERENDER_REVALIDATE_HEADER;
		    },
		    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {
		        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;
		    },
		    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {
		        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;
		    },
		    ROOT_DIR_ALIAS: function() {
		        return ROOT_DIR_ALIAS;
		    },
		    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {
		        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;
		    },
		    RSC_ACTION_ENCRYPTION_ALIAS: function() {
		        return RSC_ACTION_ENCRYPTION_ALIAS;
		    },
		    RSC_ACTION_PROXY_ALIAS: function() {
		        return RSC_ACTION_PROXY_ALIAS;
		    },
		    RSC_ACTION_VALIDATE_ALIAS: function() {
		        return RSC_ACTION_VALIDATE_ALIAS;
		    },
		    RSC_CACHE_WRAPPER_ALIAS: function() {
		        return RSC_CACHE_WRAPPER_ALIAS;
		    },
		    RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS: function() {
		        return RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS;
		    },
		    RSC_MOD_REF_PROXY_ALIAS: function() {
		        return RSC_MOD_REF_PROXY_ALIAS;
		    },
		    RSC_PREFETCH_SUFFIX: function() {
		        return RSC_PREFETCH_SUFFIX;
		    },
		    RSC_SEGMENTS_DIR_SUFFIX: function() {
		        return RSC_SEGMENTS_DIR_SUFFIX;
		    },
		    RSC_SEGMENT_SUFFIX: function() {
		        return RSC_SEGMENT_SUFFIX;
		    },
		    RSC_SUFFIX: function() {
		        return RSC_SUFFIX;
		    },
		    SERVER_PROPS_EXPORT_ERROR: function() {
		        return SERVER_PROPS_EXPORT_ERROR;
		    },
		    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {
		        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;
		    },
		    SERVER_PROPS_SSG_CONFLICT: function() {
		        return SERVER_PROPS_SSG_CONFLICT;
		    },
		    SERVER_RUNTIME: function() {
		        return SERVER_RUNTIME;
		    },
		    SSG_FALLBACK_EXPORT_ERROR: function() {
		        return SSG_FALLBACK_EXPORT_ERROR;
		    },
		    SSG_GET_INITIAL_PROPS_CONFLICT: function() {
		        return SSG_GET_INITIAL_PROPS_CONFLICT;
		    },
		    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {
		        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;
		    },
		    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {
		        return UNSTABLE_REVALIDATE_RENAME_ERROR;
		    },
		    WEBPACK_LAYERS: function() {
		        return WEBPACK_LAYERS;
		    },
		    WEBPACK_RESOURCE_QUERIES: function() {
		        return WEBPACK_RESOURCE_QUERIES;
		    }
		});
		const NEXT_QUERY_PARAM_PREFIX = 'nxtP';
		const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';
		const MATCHED_PATH_HEADER = 'x-matched-path';
		const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';
		const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';
		const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';
		const RSC_SEGMENTS_DIR_SUFFIX = '.segments';
		const RSC_SEGMENT_SUFFIX = '.segment.rsc';
		const RSC_SUFFIX = '.rsc';
		const ACTION_SUFFIX = '.action';
		const NEXT_DATA_SUFFIX = '.json';
		const NEXT_META_SUFFIX = '.meta';
		const NEXT_BODY_SUFFIX = '.body';
		const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';
		const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';
		const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';
		const NEXT_RESUME_HEADER = 'next-resume';
		const NEXT_CACHE_TAG_MAX_ITEMS = 128;
		const NEXT_CACHE_TAG_MAX_LENGTH = 256;
		const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;
		const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';
		const CACHE_ONE_YEAR = 31536000;
		const INFINITE_CACHE = 0xfffffffe;
		const MIDDLEWARE_FILENAME = 'middleware';
		const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;
		const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';
		const PAGES_DIR_ALIAS = 'private-next-pages';
		const DOT_NEXT_ALIAS = 'private-dot-next';
		const ROOT_DIR_ALIAS = 'private-next-root-dir';
		const APP_DIR_ALIAS = 'private-next-app-dir';
		const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';
		const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';
		const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';
		const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';
		const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS = 'private-next-rsc-track-dynamic-import';
		const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';
		const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';
		const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;
		const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;
		const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;
		const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;
		const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;
		const SERVER_PROPS_EXPORT_ERROR = `pages with \`getServerSideProps\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;
		const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';
		const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';
		const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\n' + 'Please use `revalidate` instead.';
		const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;
		const NON_STANDARD_NODE_ENV = `You are using a non-standard "NODE_ENV" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;
		const SSG_FALLBACK_EXPORT_ERROR = `Pages with \`fallback\` enabled in \`getStaticPaths\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;
		const ESLINT_DEFAULT_DIRS = [
		    'app',
		    'pages',
		    'components',
		    'lib',
		    'src'
		];
		const SERVER_RUNTIME = {
		    edge: 'edge',
		    experimentalEdge: 'experimental-edge',
		    nodejs: 'nodejs'
		};
		/**
		 * The names of the webpack layers. These layers are the primitives for the
		 * webpack chunks.
		 */ const WEBPACK_LAYERS_NAMES = {
		    /**
		   * The layer for the shared code between the client and server bundles.
		   */ shared: 'shared',
		    /**
		   * The layer for server-only runtime and picking up `react-server` export conditions.
		   * Including app router RSC pages and app router custom routes and metadata routes.
		   */ reactServerComponents: 'rsc',
		    /**
		   * Server Side Rendering layer for app (ssr).
		   */ serverSideRendering: 'ssr',
		    /**
		   * The browser client bundle layer for actions.
		   */ actionBrowser: 'action-browser',
		    /**
		   * The Node.js bundle layer for the API routes.
		   */ apiNode: 'api-node',
		    /**
		   * The Edge Lite bundle layer for the API routes.
		   */ apiEdge: 'api-edge',
		    /**
		   * The layer for the middleware code.
		   */ middleware: 'middleware',
		    /**
		   * The layer for the instrumentation hooks.
		   */ instrument: 'instrument',
		    /**
		   * The layer for assets on the edge.
		   */ edgeAsset: 'edge-asset',
		    /**
		   * The browser client bundle layer for App directory.
		   */ appPagesBrowser: 'app-pages-browser',
		    /**
		   * The browser client bundle layer for Pages directory.
		   */ pagesDirBrowser: 'pages-dir-browser',
		    /**
		   * The Edge Lite bundle layer for Pages directory.
		   */ pagesDirEdge: 'pages-dir-edge',
		    /**
		   * The Node.js bundle layer for Pages directory.
		   */ pagesDirNode: 'pages-dir-node'
		};
		const WEBPACK_LAYERS = {
		    ...WEBPACK_LAYERS_NAMES,
		    GROUP: {
		        builtinReact: [
		            WEBPACK_LAYERS_NAMES.reactServerComponents,
		            WEBPACK_LAYERS_NAMES.actionBrowser
		        ],
		        serverOnly: [
		            WEBPACK_LAYERS_NAMES.reactServerComponents,
		            WEBPACK_LAYERS_NAMES.actionBrowser,
		            WEBPACK_LAYERS_NAMES.instrument,
		            WEBPACK_LAYERS_NAMES.middleware
		        ],
		        neutralTarget: [
		            // pages api
		            WEBPACK_LAYERS_NAMES.apiNode,
		            WEBPACK_LAYERS_NAMES.apiEdge
		        ],
		        clientOnly: [
		            WEBPACK_LAYERS_NAMES.serverSideRendering,
		            WEBPACK_LAYERS_NAMES.appPagesBrowser
		        ],
		        bundled: [
		            WEBPACK_LAYERS_NAMES.reactServerComponents,
		            WEBPACK_LAYERS_NAMES.actionBrowser,
		            WEBPACK_LAYERS_NAMES.serverSideRendering,
		            WEBPACK_LAYERS_NAMES.appPagesBrowser,
		            WEBPACK_LAYERS_NAMES.shared,
		            WEBPACK_LAYERS_NAMES.instrument,
		            WEBPACK_LAYERS_NAMES.middleware
		        ],
		        appPages: [
		            // app router pages and layouts
		            WEBPACK_LAYERS_NAMES.reactServerComponents,
		            WEBPACK_LAYERS_NAMES.serverSideRendering,
		            WEBPACK_LAYERS_NAMES.appPagesBrowser,
		            WEBPACK_LAYERS_NAMES.actionBrowser
		        ]
		    }
		};
		const WEBPACK_RESOURCE_QUERIES = {
		    edgeSSREntry: '__next_edge_ssr_entry__',
		    metadata: '__next_metadata__',
		    metadataRoute: '__next_metadata_route__',
		    metadataImageMeta: '__next_metadata_image_meta__'
		};

		
	} (constants));
	return constants;
}

var escapeRegexp = {};

var hasRequiredEscapeRegexp;

function requireEscapeRegexp () {
	if (hasRequiredEscapeRegexp) return escapeRegexp;
	hasRequiredEscapeRegexp = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "escapeStringRegexp", {
		    enumerable: true,
		    get: function() {
		        return escapeStringRegexp;
		    }
		});
		const reHasRegExp = /[|\\{}()[\]^$+*?.-]/;
		const reReplaceRegExp = /[|\\{}()[\]^$+*?.-]/g;
		function escapeStringRegexp(str) {
		    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23
		    if (reHasRegExp.test(str)) {
		        return str.replace(reReplaceRegExp, '\\$&');
		    }
		    return str;
		}

		
	} (escapeRegexp));
	return escapeRegexp;
}

var hasRequiredRouteRegex;

function requireRouteRegex () {
	if (hasRequiredRouteRegex) return routeRegex;
	hasRequiredRouteRegex = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    getNamedMiddlewareRegex: function() {
		        return getNamedMiddlewareRegex;
		    },
		    getNamedRouteRegex: function() {
		        return getNamedRouteRegex;
		    },
		    getRouteRegex: function() {
		        return getRouteRegex;
		    },
		    parseParameter: function() {
		        return parseParameter;
		    }
		});
		const _constants = requireConstants();
		const _interceptionroutes = requireInterceptionRoutes();
		const _escaperegexp = requireEscapeRegexp();
		const _removetrailingslash = requireRemoveTrailingSlash();
		/**
		 * Regular expression pattern used to match route parameters.
		 * Matches both single parameters and parameter groups.
		 * Examples:
		 *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true
		 *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false
		 *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true
		 *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false
		 */ const PARAMETER_PATTERN = /^([^[]*)\[((?:\[[^\]]*\])|[^\]]+)\](.*)$/;
		function parseParameter(param) {
		    const match = param.match(PARAMETER_PATTERN);
		    if (!match) {
		        return parseMatchedParameter(param);
		    }
		    return parseMatchedParameter(match[2]);
		}
		/**
		 * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used
		 * to generate the parametrized route.
		 * Examples:
		 *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`
		 *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`
		 *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`
		 *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`
		 * @param param - The matched parameter to parse.
		 * @returns The parsed parameter as a data structure.
		 */ function parseMatchedParameter(param) {
		    const optional = param.startsWith('[') && param.endsWith(']');
		    if (optional) {
		        param = param.slice(1, -1);
		    }
		    const repeat = param.startsWith('...');
		    if (repeat) {
		        param = param.slice(3);
		    }
		    return {
		        key: param,
		        repeat,
		        optional
		    };
		}
		function getParametrizedRoute(route, includeSuffix, includePrefix) {
		    const groups = {};
		    let groupIndex = 1;
		    const segments = [];
		    for (const segment of (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/')){
		        const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
		        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters
		        ;
		        if (markerMatch && paramMatches && paramMatches[2]) {
		            const { key, optional, repeat } = parseMatchedParameter(paramMatches[2]);
		            groups[key] = {
		                pos: groupIndex++,
		                repeat,
		                optional
		            };
		            segments.push("/" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + "([^/]+?)");
		        } else if (paramMatches && paramMatches[2]) {
		            const { key, repeat, optional } = parseMatchedParameter(paramMatches[2]);
		            groups[key] = {
		                pos: groupIndex++,
		                repeat,
		                optional
		            };
		            if (includePrefix && paramMatches[1]) {
		                segments.push("/" + (0, _escaperegexp.escapeStringRegexp)(paramMatches[1]));
		            }
		            let s = repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
		            // Remove the leading slash if includePrefix already added it.
		            if (includePrefix && paramMatches[1]) {
		                s = s.substring(1);
		            }
		            segments.push(s);
		        } else {
		            segments.push("/" + (0, _escaperegexp.escapeStringRegexp)(segment));
		        }
		        // If there's a suffix, add it to the segments if it's enabled.
		        if (includeSuffix && paramMatches && paramMatches[3]) {
		            segments.push((0, _escaperegexp.escapeStringRegexp)(paramMatches[3]));
		        }
		    }
		    return {
		        parameterizedRoute: segments.join(''),
		        groups
		    };
		}
		function getRouteRegex(normalizedRoute, param) {
		    let { includeSuffix = false, includePrefix = false, excludeOptionalTrailingSlash = false } = param === void 0 ? {} : param;
		    const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute, includeSuffix, includePrefix);
		    let re = parameterizedRoute;
		    if (!excludeOptionalTrailingSlash) {
		        re += '(?:/)?';
		    }
		    return {
		        re: new RegExp("^" + re + "$"),
		        groups: groups
		    };
		}
		/**
		 * Builds a function to generate a minimal routeKey using only a-z and minimal
		 * number of characters.
		 */ function buildGetSafeRouteKey() {
		    let i = 0;
		    return ()=>{
		        let routeKey = '';
		        let j = ++i;
		        while(j > 0){
		            routeKey += String.fromCharCode(97 + (j - 1) % 26);
		            j = Math.floor((j - 1) / 26);
		        }
		        return routeKey;
		    };
		}
		function getSafeKeyFromSegment(param) {
		    let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix, backreferenceDuplicateKeys } = param;
		    const { key, optional, repeat } = parseMatchedParameter(segment);
		    // replace any non-word characters since they can break
		    // the named regex
		    let cleanedKey = key.replace(/\W/g, '');
		    if (keyPrefix) {
		        cleanedKey = "" + keyPrefix + cleanedKey;
		    }
		    let invalidKey = false;
		    // check if the key is still invalid and fallback to using a known
		    // safe key
		    if (cleanedKey.length === 0 || cleanedKey.length > 30) {
		        invalidKey = true;
		    }
		    if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {
		        invalidKey = true;
		    }
		    if (invalidKey) {
		        cleanedKey = getSafeRouteKey();
		    }
		    const duplicateKey = cleanedKey in routeKeys;
		    if (keyPrefix) {
		        routeKeys[cleanedKey] = "" + keyPrefix + key;
		    } else {
		        routeKeys[cleanedKey] = key;
		    }
		    // if the segment has an interception marker, make sure that's part of the regex pattern
		    // this is to ensure that the route with the interception marker doesn't incorrectly match
		    // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])
		    const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : '';
		    let pattern;
		    if (duplicateKey && backreferenceDuplicateKeys) {
		        // Use a backreference to the key to ensure that the key is the same value
		        // in each of the placeholders.
		        pattern = "\\k<" + cleanedKey + ">";
		    } else if (repeat) {
		        pattern = "(?<" + cleanedKey + ">.+?)";
		    } else {
		        pattern = "(?<" + cleanedKey + ">[^/]+?)";
		    }
		    return optional ? "(?:/" + interceptionPrefix + pattern + ")?" : "/" + interceptionPrefix + pattern;
		}
		function getNamedParametrizedRoute(route, prefixRouteKeys, includeSuffix, includePrefix, backreferenceDuplicateKeys) {
		    const getSafeRouteKey = buildGetSafeRouteKey();
		    const routeKeys = {};
		    const segments = [];
		    for (const segment of (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/')){
		        const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m)=>segment.startsWith(m));
		        const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters
		        ;
		        if (hasInterceptionMarker && paramMatches && paramMatches[2]) {
		            // If there's an interception marker, add it to the segments.
		            segments.push(getSafeKeyFromSegment({
		                getSafeRouteKey,
		                interceptionMarker: paramMatches[1],
		                segment: paramMatches[2],
		                routeKeys,
		                keyPrefix: prefixRouteKeys ? _constants.NEXT_INTERCEPTION_MARKER_PREFIX : undefined,
		                backreferenceDuplicateKeys
		            }));
		        } else if (paramMatches && paramMatches[2]) {
		            // If there's a prefix, add it to the segments if it's enabled.
		            if (includePrefix && paramMatches[1]) {
		                segments.push("/" + (0, _escaperegexp.escapeStringRegexp)(paramMatches[1]));
		            }
		            let s = getSafeKeyFromSegment({
		                getSafeRouteKey,
		                segment: paramMatches[2],
		                routeKeys,
		                keyPrefix: prefixRouteKeys ? _constants.NEXT_QUERY_PARAM_PREFIX : undefined,
		                backreferenceDuplicateKeys
		            });
		            // Remove the leading slash if includePrefix already added it.
		            if (includePrefix && paramMatches[1]) {
		                s = s.substring(1);
		            }
		            segments.push(s);
		        } else {
		            segments.push("/" + (0, _escaperegexp.escapeStringRegexp)(segment));
		        }
		        // If there's a suffix, add it to the segments if it's enabled.
		        if (includeSuffix && paramMatches && paramMatches[3]) {
		            segments.push((0, _escaperegexp.escapeStringRegexp)(paramMatches[3]));
		        }
		    }
		    return {
		        namedParameterizedRoute: segments.join(''),
		        routeKeys
		    };
		}
		function getNamedRouteRegex(normalizedRoute, options) {
		    var _options_includeSuffix, _options_includePrefix, _options_backreferenceDuplicateKeys;
		    const result = getNamedParametrizedRoute(normalizedRoute, options.prefixRouteKeys, (_options_includeSuffix = options.includeSuffix) != null ? _options_includeSuffix : false, (_options_includePrefix = options.includePrefix) != null ? _options_includePrefix : false, (_options_backreferenceDuplicateKeys = options.backreferenceDuplicateKeys) != null ? _options_backreferenceDuplicateKeys : false);
		    let namedRegex = result.namedParameterizedRoute;
		    if (!options.excludeOptionalTrailingSlash) {
		        namedRegex += '(?:/)?';
		    }
		    return {
		        ...getRouteRegex(normalizedRoute, options),
		        namedRegex: "^" + namedRegex + "$",
		        routeKeys: result.routeKeys
		    };
		}
		function getNamedMiddlewareRegex(normalizedRoute, options) {
		    const { parameterizedRoute } = getParametrizedRoute(normalizedRoute, false, false);
		    const { catchAll = true } = options;
		    if (parameterizedRoute === '/') {
		        let catchAllRegex = catchAll ? '.*' : '';
		        return {
		            namedRegex: "^/" + catchAllRegex + "$"
		        };
		    }
		    const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false, false, false, false);
		    let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';
		    return {
		        namedRegex: "^" + namedParameterizedRoute + catchAllGroupedRegex + "$"
		    };
		}

		
	} (routeRegex));
	return routeRegex;
}

var hasRequiredInterpolateAs;

function requireInterpolateAs () {
	if (hasRequiredInterpolateAs) return interpolateAs;
	hasRequiredInterpolateAs = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "interpolateAs", {
		    enumerable: true,
		    get: function() {
		        return interpolateAs;
		    }
		});
		const _routematcher = requireRouteMatcher();
		const _routeregex = requireRouteRegex();
		function interpolateAs(route, asPathname, query) {
		    let interpolatedRoute = '';
		    const dynamicRegex = (0, _routeregex.getRouteRegex)(route);
		    const dynamicGroups = dynamicRegex.groups;
		    const dynamicMatches = // Try to match the dynamic route against the asPath
		    (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href
		    // TODO: should this take priority; also need to change in the router.
		    query;
		    interpolatedRoute = route;
		    const params = Object.keys(dynamicGroups);
		    if (!params.every((param)=>{
		        let value = dynamicMatches[param] || '';
		        const { repeat, optional } = dynamicGroups[param];
		        // support single-level catch-all
		        // TODO: more robust handling for user-error (passing `/`)
		        let replaced = "[" + (repeat ? '...' : '') + param + "]";
		        if (optional) {
		            replaced = (!value ? '/' : '') + "[" + replaced + "]";
		        }
		        if (repeat && !Array.isArray(value)) value = [
		            value
		        ];
		        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present
		        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// these values should be fully encoded instead of just
		        // path delimiter escaped since they are being inserted
		        // into the URL and we expect URL encoded segments
		        // when parsing dynamic route params
		        (segment)=>encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');
		    })) {
		        interpolatedRoute = '' // did not satisfy all requirements
		        ;
		    // n.b. We ignore this error because we handle warning for this case in
		    // development in the `<Link>` component directly.
		    }
		    return {
		        params,
		        result: interpolatedRoute
		    };
		}

		
	} (interpolateAs));
	return interpolateAs;
}

var hasRequiredResolveHref;

function requireResolveHref () {
	if (hasRequiredResolveHref) return resolveHref.exports;
	hasRequiredResolveHref = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "resolveHref", {
		    enumerable: true,
		    get: function() {
		        return resolveHref;
		    }
		});
		const _querystring = requireQuerystring();
		const _formaturl = requireFormatUrl();
		const _omit = requireOmit();
		const _utils = requireUtils$1();
		const _normalizetrailingslash = requireNormalizeTrailingSlash();
		const _islocalurl = requireIsLocalUrl();
		const _utils1 = requireUtils();
		const _interpolateas = requireInterpolateAs();
		function resolveHref(router, href, resolveAs) {
		    // we use a dummy base url for relative urls
		    let base;
		    let urlAsString = typeof href === 'string' ? href : (0, _formaturl.formatWithValidation)(href);
		    // repeated slashes and backslashes in the URL are considered
		    // invalid and will never match a Next.js page/file
		    // https://www.rfc-editor.org/rfc/rfc3986.html#section-3.1
		    const urlProtoMatch = urlAsString.match(/^[a-z][a-z0-9+.-]*:\/\//i);
		    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;
		    const urlParts = urlAsStringNoProto.split('?', 1);
		    if ((urlParts[0] || '').match(/(\/\/|\\)/)) {
		        console.error("Invalid href '" + urlAsString + "' passed to next/router in page: '" + router.pathname + "'. Repeated forward-slashes (//) or backslashes \\ are not valid in the href.");
		        const normalizedUrl = (0, _utils.normalizeRepeatedSlashes)(urlAsStringNoProto);
		        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;
		    }
		    // Return because it cannot be routed by the Next.js router
		    if (!(0, _islocalurl.isLocalURL)(urlAsString)) {
		        return resolveAs ? [
		            urlAsString
		        ] : urlAsString;
		    }
		    try {
		        base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');
		    } catch (_) {
		        // fallback to / for invalid asPath values e.g. //
		        base = new URL('/', 'http://n');
		    }
		    try {
		        const finalUrl = new URL(urlAsString, base);
		        finalUrl.pathname = (0, _normalizetrailingslash.normalizePathTrailingSlash)(finalUrl.pathname);
		        let interpolatedAs = '';
		        if ((0, _utils1.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
		            const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);
		            const { result, params } = (0, _interpolateas.interpolateAs)(finalUrl.pathname, finalUrl.pathname, query);
		            if (result) {
		                interpolatedAs = (0, _formaturl.formatWithValidation)({
		                    pathname: result,
		                    hash: finalUrl.hash,
		                    query: (0, _omit.omit)(query, params)
		                });
		            }
		        }
		        // if the origin didn't change, it means we received a relative href
		        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
		        return resolveAs ? [
		            resolvedHref,
		            interpolatedAs || resolvedHref
		        ] : resolvedHref;
		    } catch (_) {
		        return resolveAs ? [
		            urlAsString
		        ] : urlAsString;
		    }
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (resolveHref, resolveHref.exports));
	return resolveHref.exports;
}

var addLocale$1 = {exports: {}};

var addLocale = {};

var addPathPrefix = {};

var hasRequiredAddPathPrefix;

function requireAddPathPrefix () {
	if (hasRequiredAddPathPrefix) return addPathPrefix;
	hasRequiredAddPathPrefix = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "addPathPrefix", {
		    enumerable: true,
		    get: function() {
		        return addPathPrefix;
		    }
		});
		const _parsepath = requireParsePath();
		function addPathPrefix(path, prefix) {
		    if (!path.startsWith('/') || !prefix) {
		        return path;
		    }
		    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);
		    return "" + prefix + pathname + query + hash;
		}

		
	} (addPathPrefix));
	return addPathPrefix;
}

var hasRequiredAddLocale$1;

function requireAddLocale$1 () {
	if (hasRequiredAddLocale$1) return addLocale;
	hasRequiredAddLocale$1 = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "addLocale", {
		    enumerable: true,
		    get: function() {
		        return addLocale;
		    }
		});
		const _addpathprefix = requireAddPathPrefix();
		const _pathhasprefix = requirePathHasPrefix();
		function addLocale(path, locale, defaultLocale, ignorePrefix) {
		    // If no locale was given or the locale is the default locale, we don't need
		    // to prefix the path.
		    if (!locale || locale === defaultLocale) return path;
		    const lower = path.toLowerCase();
		    // If the path is an API path or the path already has the locale prefix, we
		    // don't need to prefix the path.
		    if (!ignorePrefix) {
		        if ((0, _pathhasprefix.pathHasPrefix)(lower, '/api')) return path;
		        if ((0, _pathhasprefix.pathHasPrefix)(lower, "/" + locale.toLowerCase())) return path;
		    }
		    // Add the locale prefix to the path.
		    return (0, _addpathprefix.addPathPrefix)(path, "/" + locale);
		}

		
	} (addLocale));
	return addLocale;
}

var hasRequiredAddLocale;

function requireAddLocale () {
	if (hasRequiredAddLocale) return addLocale$1.exports;
	hasRequiredAddLocale = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "addLocale", {
		    enumerable: true,
		    get: function() {
		        return addLocale;
		    }
		});
		const _normalizetrailingslash = requireNormalizeTrailingSlash();
		const addLocale = function(path) {
		    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
		        args[_key - 1] = arguments[_key];
		    }
		    if (process.env.__NEXT_I18N_SUPPORT) {
		        return (0, _normalizetrailingslash.normalizePathTrailingSlash)(requireAddLocale$1().addLocale(path, ...args));
		    }
		    return path;
		};

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (addLocale$1, addLocale$1.exports));
	return addLocale$1.exports;
}

var routerContext_sharedRuntime = {};

var _interop_require_default = {};

var hasRequired_interop_require_default;

function require_interop_require_default () {
	if (hasRequired_interop_require_default) return _interop_require_default;
	hasRequired_interop_require_default = 1;

	function _interop_require_default$1(obj) {
	    return obj && obj.__esModule ? obj : { default: obj };
	}
	_interop_require_default._ = _interop_require_default$1;
	return _interop_require_default;
}

var hasRequiredRouterContext_sharedRuntime;

function requireRouterContext_sharedRuntime () {
	if (hasRequiredRouterContext_sharedRuntime) return routerContext_sharedRuntime;
	hasRequiredRouterContext_sharedRuntime = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "RouterContext", {
		    enumerable: true,
		    get: function() {
		        return RouterContext;
		    }
		});
		const _interop_require_default = /*@__PURE__*/ require_interop_require_default();
		const _react = /*#__PURE__*/ _interop_require_default._(React);
		const RouterContext = _react.default.createContext(null);
		if (process.env.NODE_ENV !== 'production') {
		    RouterContext.displayName = 'RouterContext';
		}

		
	} (routerContext_sharedRuntime));
	return routerContext_sharedRuntime;
}

var useIntersection = {exports: {}};

var requestIdleCallback = {exports: {}};

var hasRequiredRequestIdleCallback;

function requireRequestIdleCallback () {
	if (hasRequiredRequestIdleCallback) return requestIdleCallback.exports;
	hasRequiredRequestIdleCallback = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    cancelIdleCallback: function() {
		        return cancelIdleCallback;
		    },
		    requestIdleCallback: function() {
		        return requestIdleCallback;
		    }
		});
		const requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {
		    let start = Date.now();
		    return self.setTimeout(function() {
		        cb({
		            didTimeout: false,
		            timeRemaining: function() {
		                return Math.max(0, 50 - (Date.now() - start));
		            }
		        });
		    }, 1);
		};
		const cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {
		    return clearTimeout(id);
		};

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (requestIdleCallback, requestIdleCallback.exports));
	return requestIdleCallback.exports;
}

var hasRequiredUseIntersection;

function requireUseIntersection () {
	if (hasRequiredUseIntersection) return useIntersection.exports;
	hasRequiredUseIntersection = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "useIntersection", {
		    enumerable: true,
		    get: function() {
		        return useIntersection;
		    }
		});
		const _react = React;
		const _requestidlecallback = requireRequestIdleCallback();
		const hasIntersectionObserver = typeof IntersectionObserver === 'function';
		const observers = new Map();
		const idList = [];
		function createObserver(options) {
		    const id = {
		        root: options.root || null,
		        margin: options.rootMargin || ''
		    };
		    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);
		    let instance;
		    if (existing) {
		        instance = observers.get(existing);
		        if (instance) {
		            return instance;
		        }
		    }
		    const elements = new Map();
		    const observer = new IntersectionObserver((entries)=>{
		        entries.forEach((entry)=>{
		            const callback = elements.get(entry.target);
		            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;
		            if (callback && isVisible) {
		                callback(isVisible);
		            }
		        });
		    }, options);
		    instance = {
		        id,
		        observer,
		        elements
		    };
		    idList.push(id);
		    observers.set(id, instance);
		    return instance;
		}
		function observe(element, callback, options) {
		    const { id, observer, elements } = createObserver(options);
		    elements.set(element, callback);
		    observer.observe(element);
		    return function unobserve() {
		        elements.delete(element);
		        observer.unobserve(element);
		        // Destroy observer when there's nothing left to watch:
		        if (elements.size === 0) {
		            observer.disconnect();
		            observers.delete(id);
		            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);
		            if (index > -1) {
		                idList.splice(index, 1);
		            }
		        }
		    };
		}
		function useIntersection(param) {
		    let { rootRef, rootMargin, disabled } = param;
		    const isDisabled = disabled || !hasIntersectionObserver;
		    const [visible, setVisible] = (0, _react.useState)(false);
		    const elementRef = (0, _react.useRef)(null);
		    const setElement = (0, _react.useCallback)((element)=>{
		        elementRef.current = element;
		    }, []);
		    (0, _react.useEffect)(()=>{
		        if (hasIntersectionObserver) {
		            if (isDisabled || visible) return;
		            const element = elementRef.current;
		            if (element && element.tagName) {
		                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {
		                    root: rootRef == null ? void 0 : rootRef.current,
		                    rootMargin
		                });
		                return unobserve;
		            }
		        } else {
		            if (!visible) {
		                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));
		                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);
		            }
		        }
		    // eslint-disable-next-line react-hooks/exhaustive-deps
		    }, [
		        isDisabled,
		        rootMargin,
		        rootRef,
		        visible,
		        elementRef.current
		    ]);
		    const resetVisible = (0, _react.useCallback)(()=>{
		        setVisible(false);
		    }, []);
		    return [
		        setElement,
		        visible,
		        resetVisible
		    ];
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (useIntersection, useIntersection.exports));
	return useIntersection.exports;
}

var getDomainLocale = {exports: {}};

var normalizeLocalePath$1 = {exports: {}};

var normalizeLocalePath = {};

var hasRequiredNormalizeLocalePath$1;

function requireNormalizeLocalePath$1 () {
	if (hasRequiredNormalizeLocalePath$1) return normalizeLocalePath;
	hasRequiredNormalizeLocalePath$1 = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "normalizeLocalePath", {
		    enumerable: true,
		    get: function() {
		        return normalizeLocalePath;
		    }
		});
		/**
		 * A cache of lowercased locales for each list of locales. This is stored as a
		 * WeakMap so if the locales are garbage collected, the cache entry will be
		 * removed as well.
		 */ const cache = new WeakMap();
		function normalizeLocalePath(pathname, locales) {
		    // If locales is undefined, return the pathname as is.
		    if (!locales) return {
		        pathname
		    };
		    // Get the cached lowercased locales or create a new cache entry.
		    let lowercasedLocales = cache.get(locales);
		    if (!lowercasedLocales) {
		        lowercasedLocales = locales.map((locale)=>locale.toLowerCase());
		        cache.set(locales, lowercasedLocales);
		    }
		    let detectedLocale;
		    // The first segment will be empty, because it has a leading `/`. If
		    // there is no further segment, there is no locale (or it's the default).
		    const segments = pathname.split('/', 2);
		    // If there's no second segment (ie, the pathname is just `/`), there's no
		    // locale.
		    if (!segments[1]) return {
		        pathname
		    };
		    // The second segment will contain the locale part if any.
		    const segment = segments[1].toLowerCase();
		    // See if the segment matches one of the locales. If it doesn't, there is
		    // no locale (or it's the default).
		    const index = lowercasedLocales.indexOf(segment);
		    if (index < 0) return {
		        pathname
		    };
		    // Return the case-sensitive locale.
		    detectedLocale = locales[index];
		    // Remove the `/${locale}` part of the pathname.
		    pathname = pathname.slice(detectedLocale.length + 1) || '/';
		    return {
		        pathname,
		        detectedLocale
		    };
		}

		
	} (normalizeLocalePath));
	return normalizeLocalePath;
}

var hasRequiredNormalizeLocalePath;

function requireNormalizeLocalePath () {
	if (hasRequiredNormalizeLocalePath) return normalizeLocalePath$1.exports;
	hasRequiredNormalizeLocalePath = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "normalizeLocalePath", {
		    enumerable: true,
		    get: function() {
		        return normalizeLocalePath;
		    }
		});
		const normalizeLocalePath = (pathname, locales)=>{
		    if (process.env.__NEXT_I18N_SUPPORT) {
		        return requireNormalizeLocalePath$1().normalizeLocalePath(pathname, locales);
		    }
		    return {
		        pathname,
		        detectedLocale: undefined
		    };
		};

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (normalizeLocalePath$1, normalizeLocalePath$1.exports));
	return normalizeLocalePath$1.exports;
}

var detectDomainLocale$1 = {exports: {}};

var detectDomainLocale = {};

var hasRequiredDetectDomainLocale$1;

function requireDetectDomainLocale$1 () {
	if (hasRequiredDetectDomainLocale$1) return detectDomainLocale;
	hasRequiredDetectDomainLocale$1 = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "detectDomainLocale", {
		    enumerable: true,
		    get: function() {
		        return detectDomainLocale;
		    }
		});
		function detectDomainLocale(domainItems, hostname, detectedLocale) {
		    if (!domainItems) return;
		    if (detectedLocale) {
		        detectedLocale = detectedLocale.toLowerCase();
		    }
		    for (const item of domainItems){
		        var _item_domain, _item_locales;
		        // remove port if present
		        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(':', 1)[0].toLowerCase();
		        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {
		            return item;
		        }
		    }
		}

		
	} (detectDomainLocale));
	return detectDomainLocale;
}

var hasRequiredDetectDomainLocale;

function requireDetectDomainLocale () {
	if (hasRequiredDetectDomainLocale) return detectDomainLocale$1.exports;
	hasRequiredDetectDomainLocale = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "detectDomainLocale", {
		    enumerable: true,
		    get: function() {
		        return detectDomainLocale;
		    }
		});
		const detectDomainLocale = function() {
		    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
		        args[_key] = arguments[_key];
		    }
		    if (process.env.__NEXT_I18N_SUPPORT) {
		        return requireDetectDomainLocale$1().detectDomainLocale(...args);
		    }
		};

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (detectDomainLocale$1, detectDomainLocale$1.exports));
	return detectDomainLocale$1.exports;
}

var hasRequiredGetDomainLocale;

function requireGetDomainLocale () {
	if (hasRequiredGetDomainLocale) return getDomainLocale.exports;
	hasRequiredGetDomainLocale = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "getDomainLocale", {
		    enumerable: true,
		    get: function() {
		        return getDomainLocale;
		    }
		});
		const _normalizetrailingslash = requireNormalizeTrailingSlash();
		const basePath = process.env.__NEXT_ROUTER_BASEPATH || '';
		function getDomainLocale(path, locale, locales, domainLocales) {
		    if (process.env.__NEXT_I18N_SUPPORT) {
		        const normalizeLocalePath = requireNormalizeLocalePath().normalizeLocalePath;
		        const detectDomainLocale = requireDetectDomainLocale().detectDomainLocale;
		        const target = locale || normalizeLocalePath(path, locales).detectedLocale;
		        const domain = detectDomainLocale(domainLocales, undefined, target);
		        if (domain) {
		            const proto = "http" + (domain.http ? '' : 's') + "://";
		            const finalLocale = target === domain.defaultLocale ? '' : "/" + target;
		            return "" + proto + domain.domain + (0, _normalizetrailingslash.normalizePathTrailingSlash)("" + basePath + finalLocale + path);
		        }
		        return false;
		    } else {
		        return false;
		    }
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (getDomainLocale, getDomainLocale.exports));
	return getDomainLocale.exports;
}

var addBasePath = {exports: {}};

var hasRequiredAddBasePath;

function requireAddBasePath () {
	if (hasRequiredAddBasePath) return addBasePath.exports;
	hasRequiredAddBasePath = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "addBasePath", {
		    enumerable: true,
		    get: function() {
		        return addBasePath;
		    }
		});
		const _addpathprefix = requireAddPathPrefix();
		const _normalizetrailingslash = requireNormalizeTrailingSlash();
		const basePath = process.env.__NEXT_ROUTER_BASEPATH || '';
		function addBasePath(path, required) {
		    return (0, _normalizetrailingslash.normalizePathTrailingSlash)(process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required ? path : (0, _addpathprefix.addPathPrefix)(path, basePath));
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (addBasePath, addBasePath.exports));
	return addBasePath.exports;
}

var useMergedRef = {exports: {}};

var hasRequiredUseMergedRef;

function requireUseMergedRef () {
	if (hasRequiredUseMergedRef) return useMergedRef.exports;
	hasRequiredUseMergedRef = 1;
	(function (module, exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "useMergedRef", {
		    enumerable: true,
		    get: function() {
		        return useMergedRef;
		    }
		});
		const _react = React;
		function useMergedRef(refA, refB) {
		    const cleanupA = (0, _react.useRef)(null);
		    const cleanupB = (0, _react.useRef)(null);
		    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.
		    // (this happens often if the user doesn't pass a ref to Link/Form/Image)
		    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),
		    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs
		    // (because it hasn't been updated for React 19)
		    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.
		    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.
		    return (0, _react.useCallback)((current)=>{
		        if (current === null) {
		            const cleanupFnA = cleanupA.current;
		            if (cleanupFnA) {
		                cleanupA.current = null;
		                cleanupFnA();
		            }
		            const cleanupFnB = cleanupB.current;
		            if (cleanupFnB) {
		                cleanupB.current = null;
		                cleanupFnB();
		            }
		        } else {
		            if (refA) {
		                cleanupA.current = applyRef(refA, current);
		            }
		            if (refB) {
		                cleanupB.current = applyRef(refB, current);
		            }
		        }
		    }, [
		        refA,
		        refB
		    ]);
		}
		function applyRef(refA, current) {
		    if (typeof refA === 'function') {
		        const cleanup = refA(current);
		        if (typeof cleanup === 'function') {
		            return cleanup;
		        } else {
		            return ()=>refA(null);
		        }
		    } else {
		        refA.current = current;
		        return ()=>{
		            refA.current = null;
		        };
		    }
		}

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (useMergedRef, useMergedRef.exports));
	return useMergedRef.exports;
}

var errorOnce = {};

var hasRequiredErrorOnce;

function requireErrorOnce () {
	if (hasRequiredErrorOnce) return errorOnce;
	hasRequiredErrorOnce = 1;
	(function (exports) {
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		Object.defineProperty(exports, "errorOnce", {
		    enumerable: true,
		    get: function() {
		        return errorOnce;
		    }
		});
		let errorOnce = (_)=>{};
		if (process.env.NODE_ENV !== 'production') {
		    const errors = new Set();
		    errorOnce = (msg)=>{
		        if (!errors.has(msg)) {
		            console.error(msg);
		        }
		        errors.add(msg);
		    };
		}

		
	} (errorOnce));
	return errorOnce;
}

var hasRequiredLink$1;

function requireLink$1 () {
	if (hasRequiredLink$1) return link$1.exports;
	hasRequiredLink$1 = 1;
	(function (module, exports) {
		'use client';
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function _export(target, all) {
		    for(var name in all)Object.defineProperty(target, name, {
		        enumerable: true,
		        get: all[name]
		    });
		}
		_export(exports, {
		    default: function() {
		        return _default;
		    },
		    useLinkStatus: function() {
		        return useLinkStatus;
		    }
		});
		const _interop_require_wildcard = /*@__PURE__*/ require_interop_require_wildcard();
		const _jsxruntime = require$$1;
		const _react = /*#__PURE__*/ _interop_require_wildcard._(React);
		const _resolvehref = requireResolveHref();
		const _islocalurl = requireIsLocalUrl();
		const _formaturl = requireFormatUrl();
		const _utils = requireUtils$1();
		const _addlocale = requireAddLocale();
		const _routercontextsharedruntime = requireRouterContext_sharedRuntime();
		const _useintersection = requireUseIntersection();
		const _getdomainlocale = requireGetDomainLocale();
		const _addbasepath = requireAddBasePath();
		const _usemergedref = requireUseMergedRef();
		const _erroronce = requireErrorOnce();
		const prefetched = new Set();
		function prefetch(router, href, as, options) {
		    if (typeof window === 'undefined') {
		        return;
		    }
		    if (!(0, _islocalurl.isLocalURL)(href)) {
		        return;
		    }
		    // We should only dedupe requests when experimental.optimisticClientCache is
		    // disabled.
		    if (!options.bypassPrefetchedCheck) {
		        const locale = // Let the link's locale prop override the default router locale.
		        typeof options.locale !== 'undefined' ? options.locale : 'locale' in router ? router.locale : undefined;
		        const prefetchedKey = href + '%' + as + '%' + locale;
		        // If we've already fetched the key, then don't prefetch it again!
		        if (prefetched.has(prefetchedKey)) {
		            return;
		        }
		        // Mark this URL as prefetched.
		        prefetched.add(prefetchedKey);
		    }
		    // Prefetch the JSON page if asked (only in the client)
		    // We need to handle a prefetch error here since we may be
		    // loading with priority which can reject but we don't
		    // want to force navigation since this is only a prefetch
		    router.prefetch(href, as, options).catch((err)=>{
		        if (process.env.NODE_ENV !== 'production') {
		            // rethrow to show invalid URL errors
		            throw err;
		        }
		    });
		}
		function isModifiedEvent(event) {
		    const eventTarget = event.currentTarget;
		    const target = eventTarget.getAttribute('target');
		    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download
		    event.nativeEvent && event.nativeEvent.which === 2;
		}
		function linkClicked(e, router, href, as, replace, shallow, scroll, locale, onNavigate) {
		    const { nodeName } = e.currentTarget;
		    // anchors inside an svg have a lowercase nodeName
		    const isAnchorNodeName = nodeName.toUpperCase() === 'A';
		    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {
		        // ignore click for browser’s default behavior
		        return;
		    }
		    if (!(0, _islocalurl.isLocalURL)(href)) {
		        if (replace) {
		            // browser default behavior does not replace the history state
		            // so we need to do it manually
		            e.preventDefault();
		            location.replace(href);
		        }
		        // ignore click for browser’s default behavior
		        return;
		    }
		    e.preventDefault();
		    const navigate = ()=>{
		        if (onNavigate) {
		            let isDefaultPrevented = false;
		            onNavigate({
		                preventDefault: ()=>{
		                    isDefaultPrevented = true;
		                }
		            });
		            if (isDefaultPrevented) {
		                return;
		            }
		        }
		        // If the router is an NextRouter instance it will have `beforePopState`
		        const routerScroll = scroll != null ? scroll : true;
		        if ('beforePopState' in router) {
		            router[replace ? 'replace' : 'push'](href, as, {
		                shallow,
		                locale,
		                scroll: routerScroll
		            });
		        } else {
		            router[replace ? 'replace' : 'push'](as || href, {
		                scroll: routerScroll
		            });
		        }
		    };
		    navigate();
		}
		function formatStringOrUrl(urlObjOrString) {
		    if (typeof urlObjOrString === 'string') {
		        return urlObjOrString;
		    }
		    return (0, _formaturl.formatUrl)(urlObjOrString);
		}
		/**
		 * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)
		 * and client-side navigation between routes.
		 *
		 * It is the primary way to navigate between routes in Next.js.
		 *
		 * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)
		 */ const Link = /*#__PURE__*/ _react.default.forwardRef(function LinkComponent(props, forwardedRef) {
		    let children;
		    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, locale, onClick, onNavigate, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, ...restProps } = props;
		    children = childrenProp;
		    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {
		        children = /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
		            children: children
		        });
		    }
		    const router = _react.default.useContext(_routercontextsharedruntime.RouterContext);
		    const prefetchEnabled = prefetchProp !== false;
		    if (process.env.NODE_ENV !== 'production') {
		        function createPropError(args) {
		            return Object.defineProperty(new Error("Failed prop type: The prop `" + args.key + "` expects a " + args.expected + " in `<Link>`, but got `" + args.actual + "` instead." + (typeof window !== 'undefined' ? "\nOpen your browser's console to view the Component stack trace." : '')), "__NEXT_ERROR_CODE", {
		                value: "E319",
		                enumerable: false,
		                configurable: true
		            });
		        }
		        // TypeScript trick for type-guarding:
		        const requiredPropsGuard = {
		            href: true
		        };
		        const requiredProps = Object.keys(requiredPropsGuard);
		        requiredProps.forEach((key)=>{
		            if (key === 'href') {
		                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {
		                    throw createPropError({
		                        key,
		                        expected: '`string` or `object`',
		                        actual: props[key] === null ? 'null' : typeof props[key]
		                    });
		                }
		            }
		        });
		        // TypeScript trick for type-guarding:
		        const optionalPropsGuard = {
		            as: true,
		            replace: true,
		            scroll: true,
		            shallow: true,
		            passHref: true,
		            prefetch: true,
		            locale: true,
		            onClick: true,
		            onMouseEnter: true,
		            onTouchStart: true,
		            legacyBehavior: true,
		            onNavigate: true
		        };
		        const optionalProps = Object.keys(optionalPropsGuard);
		        optionalProps.forEach((key)=>{
		            const valType = typeof props[key];
		            if (key === 'as') {
		                if (props[key] && valType !== 'string' && valType !== 'object') {
		                    throw createPropError({
		                        key,
		                        expected: '`string` or `object`',
		                        actual: valType
		                    });
		                }
		            } else if (key === 'locale') {
		                if (props[key] && valType !== 'string') {
		                    throw createPropError({
		                        key,
		                        expected: '`string`',
		                        actual: valType
		                    });
		                }
		            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {
		                if (props[key] && valType !== 'function') {
		                    throw createPropError({
		                        key,
		                        expected: '`function`',
		                        actual: valType
		                    });
		                }
		            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'legacyBehavior') {
		                if (props[key] != null && valType !== 'boolean') {
		                    throw createPropError({
		                        key,
		                        expected: '`boolean`',
		                        actual: valType
		                    });
		                }
		            } else if (key === 'prefetch') {
		                if (props[key] != null && valType !== 'boolean' && props[key] !== 'auto') {
		                    throw createPropError({
		                        key,
		                        expected: '`boolean | "auto"`',
		                        actual: valType
		                    });
		                }
		            } else ;
		        });
		    }
		    const { href, as } = _react.default.useMemo(()=>{
		        if (!router) {
		            const resolvedHref = formatStringOrUrl(hrefProp);
		            return {
		                href: resolvedHref,
		                as: asProp ? formatStringOrUrl(asProp) : resolvedHref
		            };
		        }
		        const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(router, hrefProp, true);
		        return {
		            href: resolvedHref,
		            as: asProp ? (0, _resolvehref.resolveHref)(router, asProp) : resolvedAs || resolvedHref
		        };
		    }, [
		        router,
		        hrefProp,
		        asProp
		    ]);
		    const previousHref = _react.default.useRef(href);
		    const previousAs = _react.default.useRef(as);
		    // This will return the first child, if multiple are provided it will throw an error
		    let child;
		    if (legacyBehavior) {
		        if (process.env.NODE_ENV === 'development') {
		            if (onClick) {
		                console.warn('"onClick" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onClick be set on the child of next/link');
		            }
		            if (onMouseEnterProp) {
		                console.warn('"onMouseEnter" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');
		            }
		            try {
		                child = _react.default.Children.only(children);
		            } catch (err) {
		                if (!children) {
		                    throw Object.defineProperty(new Error("No children were passed to <Link> with `href` of `" + hrefProp + "` but one child is required https://nextjs.org/docs/messages/link-no-children"), "__NEXT_ERROR_CODE", {
		                        value: "E320",
		                        enumerable: false,
		                        configurable: true
		                    });
		                }
		                throw Object.defineProperty(new Error("Multiple children were passed to <Link> with `href` of `" + hrefProp + "` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children" + (typeof window !== 'undefined' ? " \nOpen your browser's console to view the Component stack trace." : '')), "__NEXT_ERROR_CODE", {
		                    value: "E266",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		        } else {
		            child = _react.default.Children.only(children);
		        }
		    } else {
		        if (process.env.NODE_ENV === 'development') {
		            if ((children == null ? void 0 : children.type) === 'a') {
		                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), "__NEXT_ERROR_CODE", {
		                    value: "E209",
		                    enumerable: false,
		                    configurable: true
		                });
		            }
		        }
		    }
		    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;
		    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({
		        rootMargin: '200px'
		    });
		    const setIntersectionWithResetRef = _react.default.useCallback((el)=>{
		        // Before the link getting observed, check if visible state need to be reset
		        if (previousAs.current !== as || previousHref.current !== href) {
		            resetVisible();
		            previousAs.current = as;
		            previousHref.current = href;
		        }
		        setIntersectionRef(el);
		    }, [
		        as,
		        href,
		        resetVisible,
		        setIntersectionRef
		    ]);
		    const setRef = (0, _usemergedref.useMergedRef)(setIntersectionWithResetRef, childRef);
		    // Prefetch the URL if we haven't already and it's visible.
		    _react.default.useEffect(()=>{
		        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.
		        if (process.env.NODE_ENV !== 'production') {
		            return;
		        }
		        if (!router) {
		            return;
		        }
		        // If we don't need to prefetch the URL, don't do prefetch.
		        if (!isVisible || !prefetchEnabled) {
		            return;
		        }
		        // Prefetch the URL.
		        prefetch(router, href, as, {
		            locale
		        });
		    }, [
		        as,
		        href,
		        isVisible,
		        locale,
		        prefetchEnabled,
		        router == null ? void 0 : router.locale,
		        router
		    ]);
		    const childProps = {
		        ref: setRef,
		        onClick (e) {
		            if (process.env.NODE_ENV !== 'production') {
		                if (!e) {
		                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to "onClick" prop.'), "__NEXT_ERROR_CODE", {
		                        value: "E312",
		                        enumerable: false,
		                        configurable: true
		                    });
		                }
		            }
		            if (!legacyBehavior && typeof onClick === 'function') {
		                onClick(e);
		            }
		            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {
		                child.props.onClick(e);
		            }
		            if (!router) {
		                return;
		            }
		            if (e.defaultPrevented) {
		                return;
		            }
		            linkClicked(e, router, href, as, replace, shallow, scroll, locale, onNavigate);
		        },
		        onMouseEnter (e) {
		            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {
		                onMouseEnterProp(e);
		            }
		            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {
		                child.props.onMouseEnter(e);
		            }
		            if (!router) {
		                return;
		            }
		            prefetch(router, href, as, {
		                locale,
		                priority: true,
		                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}
		                bypassPrefetchedCheck: true
		            });
		        },
		        onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START ? undefined : function onTouchStart(e) {
		            if (!legacyBehavior && typeof onTouchStartProp === 'function') {
		                onTouchStartProp(e);
		            }
		            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {
		                child.props.onTouchStart(e);
		            }
		            if (!router) {
		                return;
		            }
		            prefetch(router, href, as, {
		                locale,
		                priority: true,
		                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}
		                bypassPrefetchedCheck: true
		            });
		        }
		    };
		    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
		    // defined, we specify the current 'href', so that repetition is not needed by the user.
		    // If the url is absolute, we can bypass the logic to prepend the domain and locale.
		    if ((0, _utils.isAbsoluteUrl)(as)) {
		        childProps.href = as;
		    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {
		        const curLocale = typeof locale !== 'undefined' ? locale : router == null ? void 0 : router.locale;
		        // we only render domain locales if we are currently on a domain locale
		        // so that locale links are still visitable in development/preview envs
		        const localeDomain = (router == null ? void 0 : router.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, router == null ? void 0 : router.locales, router == null ? void 0 : router.domainLocales);
		        childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, router == null ? void 0 : router.defaultLocale));
		    }
		    if (legacyBehavior) {
		        if (process.env.NODE_ENV === 'development') {
		            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\n\n' + 'npx @next/codemod@latest new-link .\n\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');
		        }
		        return /*#__PURE__*/ _react.default.cloneElement(child, childProps);
		    }
		    return /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
		        ...restProps,
		        ...childProps,
		        children: children
		    });
		});
		const LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)({
		    // We do not support link status in the Pages Router, so we always return false
		    pending: false
		});
		const useLinkStatus = ()=>{
		    // This behaviour is like React's useFormStatus. When the component is not under
		    // a <form> tag, it will get the default value, instead of throwing an error.
		    return (0, _react.useContext)(LinkStatusContext);
		};
		const _default = Link;

		if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
		  Object.defineProperty(exports.default, '__esModule', { value: true });
		  Object.assign(exports.default, exports);
		  module.exports = exports.default;
		}

		
	} (link$1, link$1.exports));
	return link$1.exports;
}

var link;
var hasRequiredLink;

function requireLink () {
	if (hasRequiredLink) return link;
	hasRequiredLink = 1;
	link = requireLink$1();
	return link;
}

var linkExports = requireLink();
var Link = /*@__PURE__*/getDefaultExportFromCjs(linkExports);

function ThemeToggle() {
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isDark = _useState2[0],
    setIsDark = _useState2[1];
  useEffect(function () {
    // Check if theme is stored in localStorage or system preference
    var stored = localStorage.getItem('theme');
    var isDarkMode = stored === 'dark' || !stored && window.matchMedia('(prefers-color-scheme: dark)').matches;
    setIsDark(isDarkMode);
    updateTheme(isDarkMode);
  }, []);
  var updateTheme = function updateTheme(dark) {
    if (dark) {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    } else {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    }
  };
  var toggleTheme = function toggleTheme() {
    var newTheme = !isDark;
    setIsDark(newTheme);
    updateTheme(newTheme);
  };
  return jsx(Button, {
    variant: "ghost",
    size: "sm",
    onClick: toggleTheme,
    "aria-label": isDark ? 'Switch to light mode' : 'Switch to dark mode',
    className: "w-9 h-9 p-0",
    children: isDark ? jsx(Sun, {
      className: "h-4 w-4"
    }) : jsx(Moon, {
      className: "h-4 w-4"
    })
  });
}

var navigationItems = [{
  name: 'Brand Identity',
  href: '/brand-identity',
  icon: Heart
}, {
  name: 'Design Tokens',
  href: '/new-design-tokens',
  icon: Palette
}, {
  name: 'Components',
  href: '/components',
  icon: Code
}, {
  name: 'Examples',
  href: '/examples',
  icon: PanelsTopLeft
}, {
  name: 'Icons',
  href: '/icons',
  icon: Palette
}, {
  name: 'Patterns',
  href: '/patterns',
  icon: Code
}, {
  name: 'Design Process',
  href: '/design-process',
  icon: BookOpen
}];
function Navigation() {
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isMobileMenuOpen = _useState2[0],
    setIsMobileMenuOpen = _useState2[1];
  return jsxs("nav", {
    className: "bg-white dark:bg-mw-gray-900 border-b border-mw-gray-200 dark:border-mw-gray-700 sticky top-0 z-50",
    children: [jsx("div", {
      className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",
      children: jsxs("div", {
        className: "flex justify-between items-center h-16",
        children: [jsx("div", {
          className: "flex items-center",
          children: jsx(Link, {
            href: "/",
            className: "flex items-center",
            children: jsx("span", {
              className: "font-bold text-xl text-mw-gray-900 dark:text-white",
              children: "MWDesign"
            })
          })
        }), jsx("div", {
          className: "hidden md:flex items-center space-x-8",
          children: navigationItems.map(function (item) {
            return jsxs(Link, {
              href: item.href,
              className: "text-mw-gray-600 dark:text-mw-gray-300 hover:text-mw-primary-600 dark:hover:text-mw-primary-400 px-3 py-2 rounded-md text-sm font-medium transition-all duration-300 hover:-translate-y-0.5 relative group",
              children: [item.name, jsx("span", {
                className: "absolute bottom-0 left-0 w-0 h-0.5 bg-mw-primary-600 transition-all duration-300 group-hover:w-full"
              })]
            }, item.name);
          })
        }), jsxs("div", {
          className: "flex items-center space-x-4",
          children: [jsx(ThemeToggle, {}), jsx(Button, {
            variant: "ghost",
            size: "sm",
            className: "md:hidden",
            onClick: function onClick() {
              return setIsMobileMenuOpen(!isMobileMenuOpen);
            },
            "aria-label": "Toggle mobile menu",
            children: isMobileMenuOpen ? jsx(X, {
              className: "h-5 w-5"
            }) : jsx(Menu$1, {
              className: "h-5 w-5"
            })
          })]
        })]
      })
    }), isMobileMenuOpen && jsx("div", {
      className: "md:hidden bg-white dark:bg-mw-gray-900 border-t border-mw-gray-200 dark:border-mw-gray-700",
      children: jsx("div", {
        className: "px-2 pt-2 pb-3 space-y-1",
        children: navigationItems.map(function (item) {
          var Icon = item.icon;
          return jsxs(Link, {
            href: item.href,
            className: "flex items-center space-x-3 text-mw-gray-600 dark:text-mw-gray-300 hover:text-mw-primary-600 hover:bg-mw-primary-50 dark:hover:text-mw-primary-400 dark:hover:bg-mw-primary-900 px-3 py-2 rounded-md text-base font-medium transition-all duration-300",
            onClick: function onClick() {
              return setIsMobileMenuOpen(false);
            },
            children: [jsx(Icon, {
              className: "h-5 w-5"
            }), jsx("span", {
              children: item.name
            })]
          }, item.name);
        })
      })
    })]
  });
}

var footerSections = [{
  title: 'Design System',
  links: [{
    name: 'Design Tokens',
    href: '/tokens'
  }, {
    name: 'Components',
    href: '/components'
  }, {
    name: 'Patterns',
    href: '/patterns'
  }]
}, {
  title: 'Resources',
  links: [{
    name: 'Icon Library',
    href: '/icons'
  }]
}];
function Footer() {
  return jsx("footer", {
    className: "bg-mw-gray-50 dark:bg-mw-gray-900 border-t border-mw-gray-200 dark:border-mw-gray-800",
    children: jsxs("div", {
      className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8",
      children: [jsx("div", {
        className: "py-16",
        children: jsxs("div", {
          className: "grid grid-cols-1 lg:grid-cols-2 gap-12",
          children: [jsxs("div", {
            className: "space-y-6",
            children: [jsxs("div", {
              className: "flex items-center space-x-2",
              children: [jsx("div", {
                className: "w-10 h-10 bg-mw-blue-600 rounded-lg flex items-center justify-center",
                children: jsx("span", {
                  className: "text-white font-bold text-lg",
                  children: "MW"
                })
              }), jsx("span", {
                className: "font-bold text-2xl text-mw-gray-900 dark:text-white",
                children: "Design System"
              })]
            }), jsx("p", {
              className: "text-lg text-mw-gray-600 dark:text-mw-gray-300 max-w-md",
              children: "A comprehensive design system that empowers teams to build consistent, accessible, and scalable digital experiences."
            })]
          }), jsx("div", {
            className: "grid grid-cols-2 md:grid-cols-3 gap-8",
            children: footerSections.map(function (section) {
              return jsxs("div", {
                children: [jsx("h3", {
                  className: "text-lg font-semibold text-mw-gray-900 dark:text-white mb-4",
                  children: section.title
                }), jsx("ul", {
                  className: "space-y-3",
                  children: section.links.map(function (link) {
                    return jsx("li", {
                      children: jsx(Link, {
                        href: link.href,
                        className: "text-mw-gray-600 dark:text-mw-gray-300 hover:text-mw-blue-600 dark:hover:text-mw-blue-400 transition-colors duration-200",
                        children: link.name
                      })
                    }, link.name);
                  })
                })]
              }, section.title);
            })
          })]
        })
      }), jsx("div", {
        className: "py-6 border-t border-mw-gray-200 dark:border-mw-gray-800",
        children: jsx("div", {
          className: "flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0",
          children: jsx("div", {
            className: "text-mw-gray-600 dark:text-mw-gray-400",
            children: "\xA9 2025 Moving Walls. All rights reserved."
          })
        })
      })]
    })
  });
}

function PageHero(_ref) {
  var title = _ref.title,
    description = _ref.description,
    badge = _ref.badge,
    stats = _ref.stats,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? '' : _ref$className;
  var badgeColors = {
    primary: 'bg-mw-blue-100 text-mw-blue-800 dark:bg-mw-blue-900/20 dark:text-mw-blue-300',
    secondary: 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',
    success: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300',
    warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300',
    info: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300'
  };
  return jsxs("div", {
    className: "relative overflow-hidden bg-gradient-to-br from-mw-blue-50 via-white to-mw-blue-50/30 \n      dark:from-mw-gray-900 dark:via-mw-gray-900 dark:to-mw-blue-950/20 \n      border-b border-mw-gray-200 dark:border-mw-gray-700 ".concat(className),
    children: [jsx("div", {
      className: "absolute inset-0 bg-grid-pattern opacity-3 dark:opacity-5"
    }), jsx("div", {
      className: "absolute inset-0 bg-gradient-to-r from-mw-blue-500/3 to-transparent"
    }), jsx("div", {
      className: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-20 lg:py-24",
      children: jsxs("div", {
        className: "text-center max-w-4xl mx-auto",
        children: [badge && jsx("div", {
          className: "mb-6",
          children: jsx("span", {
            className: "inline-flex items-center px-3 py-1 rounded-full text-sm font-medium\n                ".concat(badgeColors[badge.variant || 'primary']),
            children: badge.text
          })
        }), jsx("h1", {
          className: "text-4xl sm:text-5xl lg:text-6xl font-bold text-mw-blue-700 dark:text-mw-blue-400 mb-6",
          children: jsx("span", {
            className: "bg-gradient-to-r from-mw-blue-600 to-mw-blue-800 bg-clip-text \n              supports-[background-clip:text]:text-transparent",
            children: title
          })
        }), jsx("p", {
          className: "text-xl sm:text-2xl text-mw-gray-600 dark:text-mw-gray-300 mb-8 leading-relaxed",
          children: description
        }), stats && stats.length > 0 && jsx("div", {
          className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mt-12",
          children: stats.map(function (stat, index) {
            return jsxs("div", {
              className: "text-center",
              children: [jsx("div", {
                className: "text-3xl sm:text-4xl font-bold text-mw-blue-600 dark:text-mw-blue-400 mb-2",
                children: stat.value
              }), jsx("div", {
                className: "text-sm font-medium text-mw-gray-600 dark:text-mw-gray-400",
                children: stat.label
              })]
            }, index);
          })
        })]
      })
    })]
  });
}

// Dynamic icon component that can render any Lucide icon by name
var DynamicIcon = function DynamicIcon(_a) {
  var name = _a.name,
    _a$size = _a.size,
    size = _a$size === void 0 ? 24 : _a$size,
    _a$className = _a.className,
    className = _a$className === void 0 ? '' : _a$className,
    props = __rest(_a, ["name", "size", "className"]);
  // Get the icon component from Lucide
  var IconComponent = LucideIcons[name];
  if (!IconComponent) {
    console.warn("Icon \"".concat(name, "\" not found in Lucide icons"));
    return jsx("div", {
      className: "inline-flex items-center justify-center bg-gray-200 text-gray-500 text-xs ".concat(className),
      style: {
        width: size,
        height: size
      },
      children: "?"
    });
  }
  return jsx(IconComponent, Object.assign({
    size: size,
    className: className
  }, props));
};

function CodeSnippet(_ref) {
  var code = _ref.code;
    _ref.language;
    var title = _ref.title,
    _ref$defaultExpanded = _ref.defaultExpanded,
    defaultExpanded = _ref$defaultExpanded === void 0 ? false : _ref$defaultExpanded;
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    copied = _useState2[0],
    setCopied = _useState2[1];
  var _useState3 = useState(defaultExpanded),
    _useState4 = _slicedToArray(_useState3, 2),
    isExpanded = _useState4[0],
    setIsExpanded = _useState4[1];
  var copyToClipboard = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {
      return _regenerator().w(function (_context) {
        while (1) switch (_context.n) {
          case 0:
            _context.n = 1;
            return navigator.clipboard.writeText(code);
          case 1:
            setCopied(true);
            setTimeout(function () {
              return setCopied(false);
            }, 2000);
          case 2:
            return _context.a(2);
        }
      }, _callee);
    }));
    return function copyToClipboard() {
      return _ref2.apply(this, arguments);
    };
  }();
  return jsxs("div", {
    className: "relative",
    children: [title && jsx("div", {
      className: "text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-2",
      children: title
    }), jsx("div", {
      className: "mb-2",
      children: jsxs(Button, {
        variant: "outline",
        size: "sm",
        onClick: function onClick() {
          return setIsExpanded(!isExpanded);
        },
        className: "inline-flex items-center space-x-2",
        children: [isExpanded ? jsx(ChevronDown, {
          className: "h-4 w-4"
        }) : jsx(ChevronRight, {
          className: "h-4 w-4"
        }), jsx(Code, {
          className: "h-4 w-4"
        }), jsx("span", {
          children: isExpanded ? 'Hide Code' : 'Show Code'
        })]
      })
    }), isExpanded && jsxs("div", {
      className: "relative bg-mw-gray-50 dark:bg-mw-gray-900 rounded-lg p-4 pr-12",
      children: [jsx("pre", {
        className: "text-sm text-mw-gray-800 dark:text-mw-gray-200 overflow-x-auto",
        children: jsx("code", {
          children: code
        })
      }), jsx(Button, {
        variant: "ghost",
        size: "sm",
        className: "absolute top-2 right-2 h-8 w-8 p-0",
        onClick: copyToClipboard,
        children: copied ? jsx(Check, {
          className: "h-4 w-4 text-green-600"
        }) : jsx(Copy, {
          className: "h-4 w-4"
        })
      })]
    })]
  });
}

var AnimatedElement = function AnimatedElement(_ref) {
  var children = _ref.children,
    _ref$delay = _ref.delay,
    delay = _ref$delay === void 0 ? 0 : _ref$delay,
    _ref$direction = _ref.direction,
    direction = _ref$direction === void 0 ? 'up' : _ref$direction,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? '' : _ref$className;
  var _React$useState = React.useState(false),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    isVisible = _React$useState2[0],
    setIsVisible = _React$useState2[1];
  var elementRef = React.useRef(null);
  React.useEffect(function () {
    var observer = new IntersectionObserver(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 1),
        entry = _ref3[0];
      if (entry.isIntersecting) {
        setTimeout(function () {
          return setIsVisible(true);
        }, delay);
      }
    }, {
      threshold: 0.1
    });
    if (elementRef.current) {
      observer.observe(elementRef.current);
    }
    return function () {
      return observer.disconnect();
    };
  }, [delay]);
  var getTransformClasses = function getTransformClasses() {
    var baseClasses = 'transition-all duration-700 ease-out';
    if (!isVisible) {
      switch (direction) {
        case 'up':
          return "".concat(baseClasses, " translate-y-8 opacity-0");
        case 'down':
          return "".concat(baseClasses, " -translate-y-8 opacity-0");
        case 'left':
          return "".concat(baseClasses, " translate-x-8 opacity-0");
        case 'right':
          return "".concat(baseClasses, " -translate-x-8 opacity-0");
        case 'fade':
          return "".concat(baseClasses, " opacity-0");
        default:
          return "".concat(baseClasses, " translate-y-8 opacity-0");
      }
    }
    return "".concat(baseClasses, " translate-y-0 translate-x-0 opacity-100");
  };
  return jsx("div", {
    ref: elementRef,
    className: "".concat(getTransformClasses(), " ").concat(className),
    children: children
  });
};
var ProcessFlowAnimation = function ProcessFlowAnimation(_ref4) {
  var steps = _ref4.steps,
    activeStep = _ref4.activeStep,
    onStepClick = _ref4.onStepClick;
  return jsxs("div", {
    className: "relative",
    children: [jsxs("svg", {
      className: "absolute top-8 left-0 w-full h-4 -z-10",
      children: [jsx("defs", {
        children: jsxs("linearGradient", {
          id: "flowGradient",
          x1: "0%",
          y1: "0%",
          x2: "100%",
          y2: "0%",
          children: [jsx("stop", {
            offset: "0%",
            stopColor: "#3B82F6",
            stopOpacity: "0.3"
          }), jsx("stop", {
            offset: "50%",
            stopColor: "#3B82F6",
            stopOpacity: "0.8"
          }), jsx("stop", {
            offset: "100%",
            stopColor: "#3B82F6",
            stopOpacity: "0.3"
          })]
        })
      }), jsx("line", {
        x1: "10%",
        y1: "50%",
        x2: "90%",
        y2: "50%",
        stroke: "url(#flowGradient)",
        strokeWidth: "2",
        className: "animate-pulse"
      })]
    }), jsx("div", {
      className: "flex justify-between items-center",
      children: steps.map(function (step, index) {
        var isActive = index === activeStep;
        var isPast = index < activeStep;
        var IconComponent = step.icon;
        return jsxs("button", {
          onClick: function onClick() {
            return onStepClick(index);
          },
          className: "relative group transition-all duration-300 ".concat(isActive ? 'scale-110' : 'hover:scale-105'),
          children: [jsx("div", {
            className: "w-16 h-16 rounded-full flex items-center justify-center transition-all duration-300 ".concat(isActive ? 'bg-mw-blue-600 text-white shadow-lg ring-4 ring-mw-blue-200' : isPast ? 'bg-green-500 text-white' : 'bg-mw-gray-200 text-mw-gray-600 group-hover:bg-mw-gray-300'),
            children: jsx(IconComponent, {
              className: "w-8 h-8"
            })
          }), jsx("div", {
            className: "absolute top-20 left-1/2 transform -translate-x-1/2 text-center min-w-max",
            children: jsx("div", {
              className: "text-sm font-medium ".concat(isActive ? 'text-mw-blue-600' : 'text-mw-gray-600 dark:text-mw-gray-300'),
              children: step.title
            })
          }), isActive && jsx("div", {
            className: "absolute -bottom-2 left-1/2 transform -translate-x-1/2",
            children: jsx("div", {
              className: "w-2 h-2 bg-mw-blue-600 rounded-full animate-pulse"
            })
          })]
        }, step.id);
      })
    })]
  });
};
var CounterAnimation = function CounterAnimation(_ref5) {
  var end = _ref5.end,
    _ref5$duration = _ref5.duration,
    duration = _ref5$duration === void 0 ? 2000 : _ref5$duration,
    _ref5$suffix = _ref5.suffix,
    suffix = _ref5$suffix === void 0 ? '' : _ref5$suffix,
    _ref5$className = _ref5.className,
    className = _ref5$className === void 0 ? '' : _ref5$className;
  var _React$useState3 = React.useState(0),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    count = _React$useState4[0],
    setCount = _React$useState4[1];
  var _React$useState5 = React.useState(false),
    _React$useState6 = _slicedToArray(_React$useState5, 2),
    hasStarted = _React$useState6[0],
    setHasStarted = _React$useState6[1];
  var elementRef = React.useRef(null);
  React.useEffect(function () {
    var observer = new IntersectionObserver(function (_ref6) {
      var _ref7 = _slicedToArray(_ref6, 1),
        entry = _ref7[0];
      if (entry.isIntersecting && !hasStarted) {
        setHasStarted(true);
        var increment = end / (duration / 50);
        var current = 0;
        var timer = setInterval(function () {
          current += increment;
          if (current >= end) {
            setCount(end);
            clearInterval(timer);
          } else {
            setCount(Math.floor(current));
          }
        }, 50);
        return function () {
          return clearInterval(timer);
        };
      }
    }, {
      threshold: 0.5
    });
    if (elementRef.current) {
      observer.observe(elementRef.current);
    }
    return function () {
      return observer.disconnect();
    };
  }, [end, duration, hasStarted]);
  return jsxs("div", {
    ref: elementRef,
    className: className,
    children: [count, suffix]
  });
};
var FloatingElement = function FloatingElement(_ref8) {
  var children = _ref8.children,
    _ref8$delay = _ref8.delay,
    delay = _ref8$delay === void 0 ? 0 : _ref8$delay,
    _ref8$amplitude = _ref8.amplitude,
    amplitude = _ref8$amplitude === void 0 ? 10 : _ref8$amplitude,
    _ref8$duration = _ref8.duration,
    duration = _ref8$duration === void 0 ? 3000 : _ref8$duration,
    _ref8$className = _ref8.className,
    className = _ref8$className === void 0 ? '' : _ref8$className;
  return jsx("div", {
    className: "animate-pulse ".concat(className),
    style: {
      animationDelay: "".concat(delay, "ms"),
      animationDuration: "".concat(duration, "ms"),
      transform: "translateY(".concat(amplitude, "px)")
    },
    children: children
  });
};

// Design Tokens for MW Design System
var colors = {
  // Primary Colors
  primary: {
    50: '#eff6ff',
    100: '#dbeafe',
    200: '#bfdbfe',
    300: '#93c5fd',
    400: '#60a5fa',
    500: '#3b82f6',
    600: '#2563eb',
    700: '#1d4ed8',
    800: '#1e40af',
    900: '#1e3a8a'
  },
  // Gray Scale
  gray: {
    50: '#f9fafb',
    100: '#f3f4f6',
    200: '#e5e7eb',
    300: '#d1d5db',
    400: '#9ca3af',
    500: '#6b7280',
    600: '#4b5563',
    700: '#374151',
    800: '#1f2937',
    900: '#111827'
  },
  // Semantic Colors
  success: {
    50: '#ecfdf5',
    100: '#d1fae5',
    200: '#a7f3d0',
    300: '#6ee7b7',
    400: '#34d399',
    500: '#10b981',
    600: '#059669',
    700: '#047857',
    800: '#065f46',
    900: '#064e3b'
  },
  warning: {
    50: '#fffbeb',
    100: '#fef3c7',
    200: '#fde68a',
    300: '#fcd34d',
    400: '#fbbf24',
    500: '#f59e0b',
    600: '#d97706',
    700: '#b45309',
    800: '#92400e',
    900: '#78350f'
  },
  error: {
    50: '#fef2f2',
    100: '#fee2e2',
    200: '#fecaca',
    300: '#fca5a5',
    400: '#f87171',
    500: '#ef4444',
    600: '#dc2626',
    700: '#b91c1c',
    800: '#991b1b',
    900: '#7f1d1d'
  }
};
var spacing = {
  0: '0px',
  1: '0.25rem',
  // 4px
  2: '0.5rem',
  // 8px
  3: '0.75rem',
  // 12px
  4: '1rem',
  // 16px
  5: '1.25rem',
  // 20px
  6: '1.5rem',
  // 24px
  8: '2rem',
  // 32px
  10: '2.5rem',
  // 40px
  12: '3rem',
  // 48px
  16: '4rem',
  // 64px
  20: '5rem',
  // 80px
  24: '6rem',
  // 96px
  32: '8rem',
  // 128px
  40: '10rem',
  // 160px
  48: '12rem',
  // 192px
  56: '14rem',
  // 224px
  64: '16rem' // 256px
};
var typography = {
  fontFamily: {
    sans: ['Inter', 'system-ui', 'sans-serif'],
    mono: ['Fira Code', 'monospace']
  },
  fontSize: {
    xs: ['0.75rem', {
      lineHeight: '1rem'
    }],
    // 12px
    sm: ['0.875rem', {
      lineHeight: '1.25rem'
    }],
    // 14px
    base: ['1rem', {
      lineHeight: '1.5rem'
    }],
    // 16px
    lg: ['1.125rem', {
      lineHeight: '1.75rem'
    }],
    // 18px
    xl: ['1.25rem', {
      lineHeight: '1.75rem'
    }],
    // 20px
    '2xl': ['1.5rem', {
      lineHeight: '2rem'
    }],
    // 24px
    '3xl': ['1.875rem', {
      lineHeight: '2.25rem'
    }],
    // 30px
    '4xl': ['2.25rem', {
      lineHeight: '2.5rem'
    }],
    // 36px
    '5xl': ['3rem', {
      lineHeight: '1'
    }],
    // 48px
    '6xl': ['3.75rem', {
      lineHeight: '1'
    }] // 60px
  },
  fontWeight: {
    thin: '100',
    extralight: '200',
    light: '300',
    normal: '400',
    medium: '500',
    semibold: '600',
    bold: '700',
    extrabold: '800',
    black: '900'
  }
};
var shadows = {
  sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',
  base: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',
  md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
  lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',
  xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',
  '2xl': '0 25px 50px -12px rgb(0 0 0 / 0.25)',
  inner: 'inset 0 2px 4px 0 rgb(0 0 0 / 0.05)'
};
var breakpoints = {
  sm: '640px',
  md: '768px',
  lg: '1024px',
  xl: '1280px',
  '2xl': '1536px'
};
var borderRadius = {
  none: '0px',
  sm: '0.125rem',
  // 2px
  base: '0.25rem',
  // 4px
  md: '0.375rem',
  // 6px
  lg: '0.5rem',
  // 8px
  xl: '0.75rem',
  // 12px
  '2xl': '1rem',
  // 16px
  '3xl': '1.5rem',
  // 24px
  full: '9999px'
};
var zIndex = {
  auto: 'auto',
  0: '0',
  10: '10',
  20: '20',
  30: '30',
  40: '40',
  50: '50',
  dropdown: '1000',
  sticky: '1020',
  fixed: '1030',
  modal: '1040',
  popover: '1050',
  tooltip: '1060',
  toast: '1070'
};
// Combined tokens object
var tokens = {
  colors: colors,
  spacing: spacing,
  typography: typography,
  shadows: shadows,
  breakpoints: breakpoints,
  borderRadius: borderRadius,
  zIndex: zIndex
};
// CSS Custom Properties
var cssVariables = {
  ':root': {
    // Colors
    '--mw-primary-50': colors.primary[50],
    '--mw-primary-500': colors.primary[500],
    '--mw-primary-600': colors.primary[600],
    '--mw-gray-50': colors.gray[50],
    '--mw-gray-100': colors.gray[100],
    '--mw-gray-900': colors.gray[900],
    // Spacing
    '--mw-space-1': spacing[1],
    '--mw-space-2': spacing[2],
    '--mw-space-4': spacing[4],
    '--mw-space-8': spacing[8],
    // Typography
    '--mw-font-family-sans': typography.fontFamily.sans.join(', '),
    '--mw-text-sm': typography.fontSize.sm[0],
    '--mw-text-base': typography.fontSize.base[0],
    '--mw-text-lg': typography.fontSize.lg[0],
    // Shadows
    '--mw-shadow-sm': shadows.sm,
    '--mw-shadow-md': shadows.md,
    '--mw-shadow-lg': shadows.lg,
    // Border Radius
    '--mw-radius-sm': borderRadius.sm,
    '--mw-radius-md': borderRadius.md,
    '--mw-radius-lg': borderRadius.lg
  }
};

// MW Design System - Main Entry Point
// Version
var version = '1.0.0';

export { Accordion, AccordionContent, AccordionItem, AccordionTrigger, AdvancedTable, Alert, AlertCircleIcon, AlertTriangleIcon, AnimatedElement, Autocomplete, Avatar, AvatarGroup, Badge, Breadcrumb, BreadcrumbItem, BreadcrumbSeparator, Button, Calendar, Card, CardContent, CardFooter, CardHeader, Carousel, CarouselSlide, CheckIcon, Checkbox, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronUpIcon, Chip, CloseIcon, CodeSnippet, Collapsible, CollapsibleCode, CollapsibleContent, CollapsibleTrigger, Command, CommandGroup, CommandItem, CommandSeparator, Container, CounterAnimation, DataGrid, DatePicker, DateRangePicker, DescriptionList, Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger, DocumentEditor, DragDrop, Dropdown, DropdownContent, DropdownItem, DropdownSeparator, DropdownTrigger, DynamicIcon, EmptyState, Fieldset, FileUpload, Filter, FlexContainer, FloatingElement, Footer, Form, FormActions, FormControl, FormDescription, FormError, FormField, FormGroup, FormLabel, FormSection, GridContainer, HStack, Icon$1 as Icon, ImageCarousel, ImageThumbnail, InfoIcon, Input, List, ListItem, Loading, MWBounceLoader, MWDotsLoader, MWHeartbeatLoader, MWLoader, MWMatrixLoader, MWProgressiveLoader, Menu, MenuCheckboxItem, MenuGroup, MenuItem, MenuRadioGroup, MenuRadioItem, MenuSeparator, MinusIcon, Modal, ModalBody, ModalFooter, ModalHeader, Navigation, NavigationList, NoDataEmptyState, NoResultsEmptyState, Notification, NotificationBadge, NotificationBell, NotificationList, PageHero, Pagination, Panel, PanelGroup, PanelHeader, PanelResizer, PlusIcon, Popover, PopoverContent, PopoverTrigger, ProcessFlowAnimation, Progress, Radio$1 as Radio, Rating, ResponsiveContainer, RichTextEditor, ScrollArea, SearchBar, SearchIcon, SearchResults, Select, Separator, Sheet, SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetTitle, SheetTrigger, Sidebar, SidebarContent, SidebarFooter, SidebarHeader, SidebarPanel, SidebarTrigger, Skeleton, Slider, SnackbarProvider, SortableList, Spinner, SplitPanel, Stack, StackPanel, Stepper, Switch, SwitchGroup, Table, TableBody, TableCell, TableHead, TableHeader, TableRow, Tabs, TabsContent, TabsList, TabsTrigger, Tag, Textarea, ThemeToggle, Thumbnail, ThumbnailGallery, TimePicker, TimeRangePicker, Timeline, TimelineItem, ToastProvider, ToggleGroup, ToggleGroupItem, Tooltip, TreeView, VideoThumbnail, borderRadius, breakpoints, colors, cssVariables, findTreeNode, getAllNodeIds, getParentIds, shadows, spacing, tokens, typography, useDragDrop, useFormContext, useSnackbar, useSnackbarHelpers, useToast, version, zIndex };
//# sourceMappingURL=index.esm.js.map
