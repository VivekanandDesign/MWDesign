{"version":3,"file":"HistoryFavoritesPanel.jsx","sourceRoot":"","sources":["../../src/components/HistoryFavoritesPanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/Button';\nimport { Input } from './ui/Input';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { Separator } from './ui/Separator';\nimport { Tabs } from './ui/Tabs';\nimport { \n  History, \n  Heart, \n  Search, \n  Trash2, \n  Copy, \n  Download,\n  Clock,\n  Star,\n  Filter\n} from 'lucide-react';\nimport { useCopyHistory, CopyHistoryItem, FavoriteIcon } from '../hooks/useCopyHistory';\nimport { useToast } from './Toast';\n\ninterface HistoryFavoritesPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  className?: string;\n}\n\nexport function HistoryFavoritesPanel({ isOpen, onClose, className = '' }: HistoryFavoritesPanelProps) {\n  const {\n    history,\n    favorites,\n    removeFromHistory,\n    clearHistory,\n    recopyChistoryItem,\n    toggleFavorite,\n    isFavorite,\n    getFavoritesByCategory,\n    searchHistory,\n    getRecentIcons,\n    getPopularIcons\n  } = useCopyHistory();\n  \n  const { addToast } = useToast();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeTab, setActiveTab] = useState<'history' | 'favorites' | 'insights'>('history');\n\n  if (!isOpen) return null;\n\n  const filteredHistory = searchQuery ? searchHistory(searchQuery) : history;\n  const categorizedFavorites = getFavoritesByCategory();\n  const recentIcons = getRecentIcons(8);\n  const popularIcons = getPopularIcons(8);\n\n  const handleRecopy = async (item: CopyHistoryItem) => {\n    const success = await recopyChistoryItem(item);\n    if (success) {\n      addToast({\n        type: 'success',\n        message: `${item.iconName} copied as ${item.format.toUpperCase()}`,\n        iconName: item.iconName\n      });\n    } else {\n      addToast({\n        type: 'error',\n        message: 'Could not copy to clipboard'\n      });\n    }\n  };\n\n  const formatTime = (timestamp: number) => {\n    const now = Date.now();\n    const diff = now - timestamp;\n    \n    if (diff < 60000) return 'just now';\n    if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`;\n    if (diff < 86400000) return `${Math.floor(diff / 3600000)}h ago`;\n    return new Date(timestamp).toLocaleDateString();\n  };\n\n  const formatType = (format: string) => {\n    const colors = {\n      svg: 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300',\n      jsx: 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300',\n      import: 'bg-purple-100 text-purple-700 dark:bg-purple-900 dark:text-purple-300',\n      download: 'bg-orange-100 text-orange-700 dark:bg-orange-900 dark:text-orange-300'\n    };\n    \n    return (\n      <Badge className={`text-xs ${colors[format as keyof typeof colors] || 'bg-gray-100 text-gray-700'}`}>\n        {format.toUpperCase()}\n      </Badge>\n    );\n  };\n\n  return (\n    <div className={`fixed inset-y-0 left-0 w-80 bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 shadow-xl overflow-hidden z-50 ${className}`}>\n      <div className=\"h-full flex flex-col\">\n        {/* Header */}\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"flex items-center gap-2\">\n              <History className=\"w-5 h-5\" />\n              <h2 className=\"text-lg font-semibold\">History & Favorites</h2>\n            </div>\n            <Button onClick={onClose} variant=\"ghost\" size=\"sm\">\n              ×\n            </Button>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <Input\n              type=\"text\"\n              placeholder=\"Search history...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"pl-10 text-sm\"\n            />\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n          {[\n            { id: 'history', label: 'History', icon: Clock },\n            { id: 'favorites', label: 'Favorites', icon: Heart },\n            { id: 'insights', label: 'Insights', icon: Star }\n          ].map(tab => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id as any)}\n              className={`flex-1 flex items-center justify-center gap-2 px-3 py-2 text-sm font-medium transition-colors ${\n                activeTab === tab.id\n                  ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50 dark:bg-blue-900/20 dark:text-blue-400'\n                  : 'text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200'\n              }`}\n            >\n              <tab.icon className=\"w-4 h-4\" />\n              {tab.label}\n            </button>\n          ))}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {activeTab === 'history' && (\n            <div className=\"p-4\">\n              {/* Clear All Button */}\n              {history.length > 0 && (\n                <div className=\"mb-4\">\n                  <Button\n                    onClick={clearHistory}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"flex items-center gap-2 text-red-600 hover:text-red-700\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                    Clear All History\n                  </Button>\n                </div>\n              )}\n\n              {/* History Items */}\n              <div className=\"space-y-2\">\n                {filteredHistory.length === 0 ? (\n                  <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                    {searchQuery ? 'No matching items found' : 'No history yet'}\n                  </div>\n                ) : (\n                  filteredHistory.map((item) => (\n                    <Card key={item.id} className=\"p-3 hover:bg-gray-50 dark:hover:bg-gray-800/50\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <span className=\"font-medium text-sm truncate\">\n                              {item.iconName}\n                            </span>\n                            {formatType(item.format)}\n                          </div>\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {formatTime(item.timestamp)}\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center gap-1 ml-2\">\n                          <Button\n                            onClick={() => toggleFavorite(item.iconName)}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"p-1\"\n                          >\n                            <Heart \n                              className={`w-4 h-4 ${\n                                isFavorite(item.iconName) \n                                  ? 'fill-red-500 text-red-500' \n                                  : 'text-gray-400'\n                              }`} \n                            />\n                          </Button>\n                          \n                          <Button\n                            onClick={() => handleRecopy(item)}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"p-1\"\n                          >\n                            <Copy className=\"w-4 h-4\" />\n                          </Button>\n                          \n                          <Button\n                            onClick={() => removeFromHistory(item.id)}\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"p-1 text-red-500 hover:text-red-700\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    </Card>\n                  ))\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'favorites' && (\n            <div className=\"p-4\">\n              {Object.keys(categorizedFavorites).length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                  No favorites yet\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {Object.entries(categorizedFavorites).map(([category, items]) => (\n                    <div key={category}>\n                      <h3 className=\"font-medium text-sm text-gray-700 dark:text-gray-300 mb-2\">\n                        {category}\n                      </h3>\n                      <div className=\"space-y-2\">\n                        {items.map((fav: FavoriteIcon) => (\n                          <Card key={fav.iconName} className=\"p-3 hover:bg-gray-50 dark:hover:bg-gray-800/50\">\n                            <div className=\"flex items-center justify-between\">\n                              <div className=\"flex-1\">\n                                <span className=\"font-medium text-sm\">{fav.iconName}</span>\n                                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                  Added {formatTime(fav.addedAt)}\n                                </div>\n                              </div>\n                              \n                              <Button\n                                onClick={() => toggleFavorite(fav.iconName)}\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"p-1 text-red-500 hover:text-red-700\"\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n                          </Card>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'insights' && (\n            <div className=\"p-4 space-y-6\">\n              {/* Recent Icons */}\n              <div>\n                <h3 className=\"font-medium text-sm text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                  <Clock className=\"w-4 h-4\" />\n                  Recently Used\n                </h3>\n                <div className=\"flex flex-wrap gap-1\">\n                  {recentIcons.length === 0 ? (\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      No recent activity\n                    </div>\n                  ) : (\n                    recentIcons.map(iconName => (\n                      <Badge key={iconName} variant=\"outline\" className=\"text-xs\">\n                        {iconName}\n                      </Badge>\n                    ))\n                  )}\n                </div>\n              </div>\n\n              <Separator />\n\n              {/* Popular Icons */}\n              <div>\n                <h3 className=\"font-medium text-sm text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                  <Star className=\"w-4 h-4\" />\n                  Most Used\n                </h3>\n                <div className=\"flex flex-wrap gap-1\">\n                  {popularIcons.length === 0 ? (\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      No usage data yet\n                    </div>\n                  ) : (\n                    popularIcons.map(iconName => (\n                      <Badge key={iconName} variant=\"secondary\" className=\"text-xs\">\n                        {iconName}\n                      </Badge>\n                    ))\n                  )}\n                </div>\n              </div>\n\n              <Separator />\n\n              {/* Statistics */}\n              <div>\n                <h3 className=\"font-medium text-sm text-gray-700 dark:text-gray-300 mb-3\">\n                  Statistics\n                </h3>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <Card className=\"p-3 text-center\">\n                    <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\n                      {history.length}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      Total Copies\n                    </div>\n                  </Card>\n                  \n                  <Card className=\"p-3 text-center\">\n                    <div className=\"text-lg font-bold text-red-600 dark:text-red-400\">\n                      {favorites.length}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      Favorites\n                    </div>\n                  </Card>\n                  \n                  <Card className=\"p-3 text-center\">\n                    <div className=\"text-lg font-bold text-green-600 dark:text-green-400\">\n                      {new Set(history.map(h => h.iconName)).size}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      Unique Icons\n                    </div>\n                  </Card>\n                  \n                  <Card className=\"p-3 text-center\">\n                    <div className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\n                      {history.filter(h => h.timestamp > Date.now() - 86400000).length}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">\n                      Today\n                    </div>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}