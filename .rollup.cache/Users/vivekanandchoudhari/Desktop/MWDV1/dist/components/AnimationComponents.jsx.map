{"version":3,"file":"AnimationComponents.jsx","sourceRoot":"","sources":["../../src/components/AnimationComponents.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React from 'react'\n\ninterface AnimatedElementProps {\n  children: React.ReactNode\n  delay?: number\n  direction?: 'up' | 'down' | 'left' | 'right' | 'fade'\n  className?: string\n}\n\nexport const AnimatedElement: React.FC<AnimatedElementProps> = ({\n  children,\n  delay = 0,\n  direction = 'up',\n  className = ''\n}) => {\n  const [isVisible, setIsVisible] = React.useState(false)\n  const elementRef = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setTimeout(() => setIsVisible(true), delay)\n        }\n      },\n      { threshold: 0.1 }\n    )\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current)\n    }\n\n    return () => observer.disconnect()\n  }, [delay])\n\n  const getTransformClasses = () => {\n    const baseClasses = 'transition-all duration-700 ease-out'\n    \n    if (!isVisible) {\n      switch (direction) {\n        case 'up':\n          return `${baseClasses} translate-y-8 opacity-0`\n        case 'down':\n          return `${baseClasses} -translate-y-8 opacity-0`\n        case 'left':\n          return `${baseClasses} translate-x-8 opacity-0`\n        case 'right':\n          return `${baseClasses} -translate-x-8 opacity-0`\n        case 'fade':\n          return `${baseClasses} opacity-0`\n        default:\n          return `${baseClasses} translate-y-8 opacity-0`\n      }\n    }\n    \n    return `${baseClasses} translate-y-0 translate-x-0 opacity-100`\n  }\n\n  return (\n    <div ref={elementRef} className={`${getTransformClasses()} ${className}`}>\n      {children}\n    </div>\n  )\n}\n\ninterface ProcessFlowAnimationProps {\n  steps: Array<{\n    id: string\n    title: string\n    icon: React.ComponentType<any>\n    color: string\n  }>\n  activeStep: number\n  onStepClick: (index: number) => void\n}\n\nexport const ProcessFlowAnimation: React.FC<ProcessFlowAnimationProps> = ({\n  steps,\n  activeStep,\n  onStepClick\n}) => {\n  return (\n    <div className=\"relative\">\n      {/* Connection Lines */}\n      <svg className=\"absolute top-8 left-0 w-full h-4 -z-10\">\n        <defs>\n          <linearGradient id=\"flowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" stopColor=\"#3B82F6\" stopOpacity=\"0.3\" />\n            <stop offset=\"50%\" stopColor=\"#3B82F6\" stopOpacity=\"0.8\" />\n            <stop offset=\"100%\" stopColor=\"#3B82F6\" stopOpacity=\"0.3\" />\n          </linearGradient>\n        </defs>\n        <line\n          x1=\"10%\"\n          y1=\"50%\"\n          x2=\"90%\"\n          y2=\"50%\"\n          stroke=\"url(#flowGradient)\"\n          strokeWidth=\"2\"\n          className=\"animate-pulse\"\n        />\n      </svg>\n\n      <div className=\"flex justify-between items-center\">\n        {steps.map((step, index) => {\n          const isActive = index === activeStep\n          const isPast = index < activeStep\n          const IconComponent = step.icon\n\n          return (\n            <button\n              key={step.id}\n              onClick={() => onStepClick(index)}\n              className={`relative group transition-all duration-300 ${\n                isActive ? 'scale-110' : 'hover:scale-105'\n              }`}\n            >\n              {/* Step Circle */}\n              <div\n                className={`w-16 h-16 rounded-full flex items-center justify-center transition-all duration-300 ${\n                  isActive\n                    ? 'bg-mw-blue-600 text-white shadow-lg ring-4 ring-mw-blue-200'\n                    : isPast\n                    ? 'bg-green-500 text-white'\n                    : 'bg-mw-gray-200 text-mw-gray-600 group-hover:bg-mw-gray-300'\n                }`}\n              >\n                <IconComponent className=\"w-8 h-8\" />\n              </div>\n\n              {/* Step Label */}\n              <div className=\"absolute top-20 left-1/2 transform -translate-x-1/2 text-center min-w-max\">\n                <div\n                  className={`text-sm font-medium ${\n                    isActive\n                      ? 'text-mw-blue-600'\n                      : 'text-mw-gray-600 dark:text-mw-gray-300'\n                  }`}\n                >\n                  {step.title}\n                </div>\n              </div>\n\n              {/* Active Indicator */}\n              {isActive && (\n                <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2\">\n                  <div className=\"w-2 h-2 bg-mw-blue-600 rounded-full animate-pulse\"></div>\n                </div>\n              )}\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\ninterface CounterAnimationProps {\n  end: number\n  duration?: number\n  suffix?: string\n  className?: string\n}\n\nexport const CounterAnimation: React.FC<CounterAnimationProps> = ({\n  end,\n  duration = 2000,\n  suffix = '',\n  className = ''\n}) => {\n  const [count, setCount] = React.useState(0)\n  const [hasStarted, setHasStarted] = React.useState(false)\n  const elementRef = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && !hasStarted) {\n          setHasStarted(true)\n          \n          const increment = end / (duration / 50)\n          let current = 0\n          \n          const timer = setInterval(() => {\n            current += increment\n            if (current >= end) {\n              setCount(end)\n              clearInterval(timer)\n            } else {\n              setCount(Math.floor(current))\n            }\n          }, 50)\n\n          return () => clearInterval(timer)\n        }\n      },\n      { threshold: 0.5 }\n    )\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current)\n    }\n\n    return () => observer.disconnect()\n  }, [end, duration, hasStarted])\n\n  return (\n    <div ref={elementRef} className={className}>\n      {count}{suffix}\n    </div>\n  )\n}\n\ninterface FloatingElementProps {\n  children: React.ReactNode\n  delay?: number\n  amplitude?: number\n  duration?: number\n  className?: string\n}\n\nexport const FloatingElement: React.FC<FloatingElementProps> = ({\n  children,\n  delay = 0,\n  amplitude = 10,\n  duration = 3000,\n  className = ''\n}) => {\n  return (\n    <div\n      className={`animate-pulse ${className}`}\n      style={{\n        animationDelay: `${delay}ms`,\n        animationDuration: `${duration}ms`,\n        transform: `translateY(${amplitude}px)`\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n"]}