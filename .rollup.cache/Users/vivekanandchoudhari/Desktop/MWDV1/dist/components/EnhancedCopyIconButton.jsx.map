{"version":3,"file":"EnhancedCopyIconButton.jsx","sourceRoot":"","sources":["../../src/components/EnhancedCopyIconButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/Button';\nimport { Download, Copy, Heart, Settings, ChevronDown } from 'lucide-react';\nimport { useCopyIcon } from '../hooks/useCopyIcon';\nimport { useCopyHistory } from '../hooks/useCopyHistory';\nimport { useIconCustomization } from '../hooks/useIconCustomization';\nimport { CopyType } from '../utils/svgExtractor';\n\ninterface EnhancedCopyIconButtonProps {\n  iconName: string;\n  className?: string;\n  variant?: 'primary' | 'secondary' | 'ghost' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n  showFavorite?: boolean;\n  showCustomize?: boolean;\n  onCustomizeClick?: () => void;\n}\n\nexport function EnhancedCopyIconButton({\n  iconName,\n  className = '',\n  variant = 'primary',\n  size = 'sm',\n  showFavorite = true,\n  showCustomize = true,\n  onCustomizeClick\n}: EnhancedCopyIconButtonProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const { copyState, copyIcon, downloadIcon } = useCopyIcon();\n  const { toggleFavorite, isFavorite, addToHistory } = useCopyHistory();\n  const { \n    customization, \n    preferences,\n    generateCustomizedSVG,\n    generateCustomizedJSX,\n    generateCustomizedImport\n  } = useIconCustomization();\n\n  const copyFormats: Array<{ value: CopyType; label: string; description: string }> = [\n    { value: CopyType.SVG, label: 'SVG', description: 'Copy SVG markup' },\n    { value: CopyType.JSX, label: 'JSX', description: 'Copy JSX component' },\n    { value: CopyType.IMPORT, label: 'Import', description: 'Copy import statement' },\n    { value: CopyType.DOWNLOAD, label: 'Download', description: 'Download SVG file' }\n  ];\n\n  const handleCopy = async (type: CopyType) => {\n    try {\n      const options = {\n        size: customization.size,\n        strokeWidth: customization.strokeWidth,\n        color: customization.color,\n        fillColor: customization.fillColor,\n        className: customization.className\n      };\n\n      if (type === CopyType.DOWNLOAD) {\n        await downloadIcon(iconName, options);\n      } else {\n        await copyIcon(iconName, type, options);\n      }\n      \n      // Add to history\n      let format: 'svg' | 'jsx' | 'import' | 'download' = 'svg';\n      if (type === CopyType.JSX) format = 'jsx';\n      else if (type === CopyType.IMPORT) format = 'import';\n      else if (type === CopyType.DOWNLOAD) format = 'download';\n      \n      addToHistory(iconName, format, '');\n      setIsOpen(false);\n      \n    } catch (error) {\n      console.error('Copy failed:', error);\n    }\n  };\n\n  const handleQuickCopy = () => {\n    const preferredType = preferences.preferredFormat === 'jsx' ? CopyType.JSX :\n                         preferences.preferredFormat === 'import' ? CopyType.IMPORT :\n                         CopyType.SVG;\n    handleCopy(preferredType);\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Main Button */}\n      <div className=\"flex items-center\">\n        {/* Quick Copy Button */}\n        <Button\n          onClick={handleQuickCopy}\n          variant={variant}\n          size={size}\n          disabled={copyState.isLoading}\n          className=\"flex items-center gap-2 rounded-r-none border-r border-white/20\"\n        >\n          <Copy className=\"w-4 h-4\" />\n          {preferences.preferredFormat.toUpperCase()}\n        </Button>\n\n        {/* Dropdown Toggle */}\n        <Button\n          onClick={() => setIsOpen(!isOpen)}\n          variant={variant}\n          size={size}\n          disabled={copyState.isLoading}\n          className=\"px-2 rounded-l-none\"\n        >\n          <ChevronDown className={`w-4 h-4 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\n        </Button>\n\n        {/* Favorite Button */}\n        {showFavorite && (\n          <Button\n            onClick={() => toggleFavorite(iconName)}\n            variant=\"ghost\"\n            size={size}\n            className=\"ml-1 p-1\"\n          >\n            <Heart \n              className={`w-4 h-4 ${\n                isFavorite(iconName) \n                  ? 'fill-red-500 text-red-500' \n                  : 'text-gray-400 hover:text-red-400'\n              }`} \n            />\n          </Button>\n        )}\n\n        {/* Customize Button */}\n        {showCustomize && (\n          <Button\n            onClick={onCustomizeClick}\n            variant=\"ghost\"\n            size={size}\n            className=\"ml-1 p-1\"\n          >\n            <Settings className=\"w-4 h-4 text-gray-400 hover:text-blue-400\" />\n          </Button>\n        )}\n      </div>\n\n      {/* Dropdown Menu */}\n      {isOpen && (\n        <div className=\"absolute top-full left-0 mt-1 w-64 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg z-50\">\n          <div className=\"p-2\">\n            <div className=\"text-xs font-medium text-gray-500 dark:text-gray-400 px-2 py-1 mb-1\">\n              Copy Options for {iconName}\n            </div>\n            \n            {copyFormats.map((format) => (\n              <button\n                key={format.value}\n                onClick={() => handleCopy(format.value)}\n                disabled={copyState.isLoading}\n                className=\"w-full flex items-start justify-between px-3 py-2 text-left text-sm hover:bg-gray-50 dark:hover:bg-gray-700 rounded transition-colors disabled:opacity-50\"\n              >\n                <div className=\"flex-1\">\n                  <div className=\"font-medium\">{format.label}</div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {format.description}\n                  </div>\n                </div>\n                \n                {format.value === CopyType.DOWNLOAD ? (\n                  <Download className=\"w-4 h-4 mt-0.5 text-gray-400\" />\n                ) : (\n                  <Copy className=\"w-4 h-4 mt-0.5 text-gray-400\" />\n                )}\n              </button>\n            ))}\n\n            {/* Customization Preview */}\n            {(customization.size !== 24 || customization.strokeWidth !== 2 || customization.color !== 'currentColor') && (\n              <div className=\"mt-2 pt-2 border-t border-gray-200 dark:border-gray-600\">\n                <div className=\"text-xs font-medium text-blue-600 dark:text-blue-400 px-2 py-1\">\n                  Custom Settings Applied\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 px-2\">\n                  Size: {customization.size}px, Stroke: {customization.strokeWidth}px\n                  {customization.color !== 'currentColor' && `, Color: ${customization.color}`}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Click Outside Handler */}\n      {isOpen && (\n        <div \n          className=\"fixed inset-0 z-40\" \n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n}\n\n// Simplified version for basic use cases\nexport function SimpleCopyButton({\n  iconName,\n  type = CopyType.JSX,\n  className = '',\n  variant = 'outline',\n  size = 'sm'\n}: {\n  iconName: string;\n  type?: CopyType;\n  className?: string;\n  variant?: 'primary' | 'secondary' | 'ghost' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n}) {\n  const { copyState, copyIcon, downloadIcon } = useCopyIcon();\n  const { addToHistory } = useCopyHistory();\n\n  const handleCopy = async () => {\n    try {\n      if (type === CopyType.DOWNLOAD) {\n        await downloadIcon(iconName);\n      } else {\n        await copyIcon(iconName, type);\n      }\n      \n      // Add to history\n      let format: 'svg' | 'jsx' | 'import' | 'download' = 'svg';\n      if (type === CopyType.JSX) format = 'jsx';\n      else if (type === CopyType.IMPORT) format = 'import';\n      else if (type === CopyType.DOWNLOAD) format = 'download';\n      \n      addToHistory(iconName, format, '');\n    } catch (error) {\n      console.error('Copy failed:', error);\n    }\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case CopyType.DOWNLOAD:\n        return <Download className=\"w-4 h-4\" />;\n      default:\n        return <Copy className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getLabel = () => {\n    switch (type) {\n      case CopyType.SVG:\n        return 'SVG';\n      case CopyType.JSX:\n        return 'JSX';\n      case CopyType.IMPORT:\n        return 'IMPORT';\n      case CopyType.DOWNLOAD:\n        return 'DOWNLOAD';\n      default:\n        return 'COPY';\n    }\n  };\n\n  return (\n    <Button\n      onClick={handleCopy}\n      variant={variant}\n      size={size}\n      disabled={copyState.isLoading}\n      className={`flex items-center gap-2 ${className}`}\n    >\n      {getIcon()}\n      {getLabel()}\n    </Button>\n  );\n}\n"]}