{"version":3,"file":"IconCodeSnippets.jsx","sourceRoot":"","sources":["../../src/components/IconCodeSnippets.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/Button';\nimport { Badge } from './ui/Badge';\nimport { Tabs } from './ui/Tabs';\nimport { CodeSnippet } from './CodeSnippet';\nimport { Copy, Check, Download } from 'lucide-react';\nimport { useIconCustomization } from '../hooks/useIconCustomization';\nimport { useCopyHistory } from '../hooks/useCopyHistory';\nimport { generateCodeSnippets } from '../utils/iconCodeGenerator';\n\ninterface IconCodeSnippetsProps {\n  iconName: string;\n  className?: string;\n}\n\nexport function IconCodeSnippets({ iconName, className = '' }: IconCodeSnippetsProps) {\n  const [copiedState, setCopiedState] = useState<{[key: string]: boolean}>({});\n  const { customization } = useIconCustomization();\n  const { addToHistory } = useCopyHistory();\n\n  const codeSnippets = generateCodeSnippets(iconName, {\n    size: customization.size,\n    color: customization.color,\n    strokeWidth: customization.strokeWidth,\n    fillColor: customization.fillColor\n  });\n\n  const handleCopy = async (type: string, content: string) => {\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopiedState(prev => ({ ...prev, [type]: true }));\n      \n      // Add to history\n      addToHistory(iconName, type as any, content);\n\n      // Reset copied state after 2 seconds\n      setTimeout(() => {\n        setCopiedState(prev => ({ ...prev, [type]: false }));\n      }, 2000);\n    } catch (error) {\n      console.error('Failed to copy:', error);\n    }\n  };\n\n  const handleDownload = (filename: string, content: string) => {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const codeBlocks = [\n    {\n      id: 'svg',\n      title: 'SVG',\n      description: 'Raw SVG markup',\n      content: codeSnippets.svg,\n      language: 'xml',\n      filename: `${iconName}.svg`\n    },\n    {\n      id: 'jsx',\n      title: 'React/JSX',\n      description: 'React component',\n      content: codeSnippets.jsx,\n      language: 'jsx',\n      filename: `${iconName}.jsx`\n    },\n    {\n      id: 'html',\n      title: 'HTML',\n      description: 'HTML with inline styles',\n      content: codeSnippets.html,\n      language: 'html',\n      filename: `${iconName}.html`\n    },\n    {\n      id: 'css',\n      title: 'CSS',\n      description: 'CSS styles',\n      content: codeSnippets.css,\n      language: 'css',\n      filename: `${iconName}.css`\n    },\n    {\n      id: 'tailwind',\n      title: 'Tailwind',\n      description: 'Tailwind CSS classes',\n      content: codeSnippets.tailwind,\n      language: 'html',\n      filename: `${iconName}-tailwind.html`\n    }\n  ];\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          Code Snippets\n        </h3>\n        <Badge variant=\"outline\" className=\"text-xs\">\n          {codeBlocks.length} formats\n        </Badge>\n      </div>\n\n      <div className=\"space-y-4\">\n        {codeBlocks.map((block) => (\n          <div key={block.id} className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {block.title}\n                </h4>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {block.description}\n                </p>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Button\n                  onClick={() => handleDownload(block.filename, block.content)}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"text-xs\"\n                >\n                  <Download className=\"w-3 h-3 mr-1\" />\n                  Download\n                </Button>\n                \n                <Button\n                  onClick={() => handleCopy(block.id, block.content)}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"text-xs\"\n                  disabled={copiedState[block.id]}\n                >\n                  {copiedState[block.id] ? (\n                    <>\n                      <Check className=\"w-3 h-3 mr-1 text-green-500\" />\n                      Copied!\n                    </>\n                  ) : (\n                    <>\n                      <Copy className=\"w-3 h-3 mr-1\" />\n                      Copy\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n\n            {/* Code Content */}\n            <div className=\"p-0 max-h-96 overflow-hidden\">\n              <CodeSnippet\n                code={block.content}\n                language={block.language}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Usage Instructions */}\n      <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n        <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-300 mb-2\">\n          Usage Instructions\n        </h4>\n        <div className=\"text-sm text-blue-800 dark:text-blue-200 space-y-2\">\n          <p>\n            • <strong>SVG:</strong> Use directly in HTML or save as .svg file\n          </p>\n          <p>\n            • <strong>React/JSX:</strong> Copy component into your React project\n          </p>\n          <p>\n            • <strong>HTML/CSS:</strong> Traditional web development approach\n          </p>\n          <p>\n            • <strong>Tailwind:</strong> Use with Tailwind CSS framework\n          </p>\n        </div>\n      </div>\n\n      {/* Customization Note */}\n      <div className=\"text-xs text-gray-500 dark:text-gray-400 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n        <strong>Note:</strong> All code snippets are generated with your current customization settings:\n        Size {customization.size}px, Stroke {customization.strokeWidth}px, Color {customization.color}\n        {customization.fillColor && customization.fillColor !== 'none' && `, Fill ${customization.fillColor}`}\n        {customization.className && `, Class \"${customization.className}\"`}.\n      </div>\n    </div>\n  );\n}\n"]}