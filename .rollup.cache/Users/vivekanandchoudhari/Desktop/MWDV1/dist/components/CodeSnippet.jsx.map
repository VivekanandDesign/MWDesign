{"version":3,"file":"CodeSnippet.jsx","sourceRoot":"","sources":["../../src/components/CodeSnippet.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAChC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE,MAAM,cAAc,CAAA;AAC3E,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAA;AAS/C,MAAM,UAAU,WAAW,CAAC,EAAE,IAAI,EAAE,QAAQ,GAAG,KAAK,EAAE,KAAK,EAAE,eAAe,GAAG,KAAK,EAAoB;IACtG,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IAC3C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAA;IAE7D,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE;QACjC,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;QACzC,SAAS,CAAC,IAAI,CAAC,CAAA;QACf,UAAU,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAA;IAC1C,CAAC,CAAA;IAED,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CACvB;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,GAAG,CAAC,SAAS,CAAC,iEAAiE,CAC9E;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,GAAG,CAAC,CACP,CAED;;MAAA,CAAC,mBAAmB,CACpB;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CACnB;QAAA,CAAC,MAAM,CACL,OAAO,CAAC,SAAS,CACjB,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC,CAC1C,SAAS,CAAC,oCAAoC,CAE9C;UAAA,CAAC,UAAU,CAAC,CAAC,CAAC,CACZ,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,EAAG,CACpC,CAAC,CAAC,CAAC,CACF,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAG,CACrC,CACD;UAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EACzB;UAAA,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,IAAI,CACtD;QAAA,EAAE,MAAM,CACV;MAAA,EAAE,GAAG,CAEL;;MAAA,CAAC,gBAAgB,CACjB;MAAA,CAAC,UAAU,IAAI,CACb,CAAC,GAAG,CAAC,SAAS,CAAC,iEAAiE,CAC9E;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,gEAAgE,CAC7E;YAAA,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CACpB;UAAA,EAAE,GAAG,CACL;UAAA,CAAC,MAAM,CACL,OAAO,CAAC,OAAO,CACf,IAAI,CAAC,IAAI,CACT,SAAS,CAAC,oCAAoC,CAC9C,OAAO,CAAC,CAAC,eAAe,CAAC,CAEzB;YAAA,CAAC,MAAM,CAAC,CAAC,CAAC,CACR,CAAC,KAAK,CAAC,SAAS,CAAC,wBAAwB,EAAG,CAC7C,CAAC,CAAC,CAAC,CACF,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAG,CAC7B,CACH;UAAA,EAAE,MAAM,CACV;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Copy, Check, ChevronDown, ChevronRight, Code } from 'lucide-react'\nimport { Button } from '@/components/ui/Button'\n\ninterface CodeSnippetProps {\n  code: string\n  language?: string\n  title?: string\n  defaultExpanded?: boolean\n}\n\nexport function CodeSnippet({ code, language = 'tsx', title, defaultExpanded = false }: CodeSnippetProps) {\n  const [copied, setCopied] = useState(false)\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded)\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(code)\n    setCopied(true)\n    setTimeout(() => setCopied(false), 2000)\n  }\n\n  return (\n    <div className=\"relative\">\n      {title && (\n        <div className=\"text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300 mb-2\">\n          {title}\n        </div>\n      )}\n      \n      {/* Toggle Button */}\n      <div className=\"mb-2\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"inline-flex items-center space-x-2\"\n        >\n          {isExpanded ? (\n            <ChevronDown className=\"h-4 w-4\" />\n          ) : (\n            <ChevronRight className=\"h-4 w-4\" />\n          )}\n          <Code className=\"h-4 w-4\" />\n          <span>{isExpanded ? 'Hide Code' : 'Show Code'}</span>\n        </Button>\n      </div>\n\n      {/* Code Block */}\n      {isExpanded && (\n        <div className=\"relative bg-mw-gray-50 dark:bg-mw-gray-900 rounded-lg p-4 pr-12\">\n          <pre className=\"text-sm text-mw-gray-800 dark:text-mw-gray-200 overflow-x-auto\">\n            <code>{code}</code>\n          </pre>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"absolute top-2 right-2 h-8 w-8 p-0\"\n            onClick={copyToClipboard}\n          >\n            {copied ? (\n              <Check className=\"h-4 w-4 text-green-600\" />\n            ) : (\n              <Copy className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n"]}