{"version":3,"file":"Toast.jsx","sourceRoot":"","sources":["../../src/components/Toast.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Check, X, AlertCircle, Download, Copy, FileText, Code } from 'lucide-react'\nimport { CopyType } from '@/utils/svgExtractor'\n\ninterface ToastProps {\n  message: string\n  type?: 'success' | 'error' | 'info'\n  copyType?: CopyType\n  iconName?: string\n  duration?: number\n  onClose?: () => void\n}\n\nexport const Toast: React.FC<ToastProps> = ({\n  message,\n  type = 'success',\n  copyType,\n  iconName,\n  duration = 3000,\n  onClose\n}) => {\n  const [isVisible, setIsVisible] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false)\n      setTimeout(() => onClose?.(), 300)\n    }, duration)\n\n    return () => clearTimeout(timer)\n  }, [duration, onClose])\n\n  const getIcon = () => {\n    if (type === 'error') return <AlertCircle className=\"w-4 h-4\" />\n    if (type === 'success' && copyType) {\n      switch (copyType) {\n        case CopyType.SVG: return <FileText className=\"w-4 h-4\" />\n        case CopyType.JSX: return <Code className=\"w-4 h-4\" />\n        case CopyType.IMPORT: return <Copy className=\"w-4 h-4\" />\n        case CopyType.DOWNLOAD: return <Download className=\"w-4 h-4\" />\n        default: return <Check className=\"w-4 h-4\" />\n      }\n    }\n    return <Check className=\"w-4 h-4\" />\n  }\n\n  const getTypeStyles = () => {\n    switch (type) {\n      case 'error':\n        return 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-800 dark:text-red-200'\n      case 'info':\n        return 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200'\n      case 'success':\n      default:\n        return 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800 text-green-800 dark:text-green-200'\n    }\n  }\n\n  const getIconStyles = () => {\n    switch (type) {\n      case 'error':\n        return 'text-red-600 dark:text-red-400'\n      case 'info':\n        return 'text-blue-600 dark:text-blue-400'\n      case 'success':\n      default:\n        return 'text-green-600 dark:text-green-400'\n    }\n  }\n\n  return (\n    <div className={`\n      fixed top-4 right-4 z-50 min-w-72 max-w-96 border rounded-lg p-4 shadow-lg \n      transition-all duration-300 ease-in-out\n      ${isVisible ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0'}\n      ${getTypeStyles()}\n    `}>\n      <div className=\"flex items-start gap-3\">\n        <div className={`${getIconStyles()} mt-0.5 flex-shrink-0`}>\n          {getIcon()}\n        </div>\n        \n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-medium text-sm\">\n            {message}\n          </div>\n          \n          {iconName && copyType && (\n            <div className=\"text-xs opacity-80 mt-1\">\n              {copyType === CopyType.SVG && 'SVG markup copied to clipboard'}\n              {copyType === CopyType.JSX && 'JSX component copied to clipboard'}\n              {copyType === CopyType.IMPORT && 'Import statement copied to clipboard'}\n              {copyType === CopyType.DOWNLOAD && 'SVG file downloaded'}\n            </div>\n          )}\n        </div>\n\n        <button\n          onClick={() => {\n            setIsVisible(false)\n            setTimeout(() => onClose?.(), 300)\n          }}\n          className=\"text-current opacity-60 hover:opacity-100 transition-opacity\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Toast Container for managing multiple toasts\n */\ninterface ToastContainerProps {\n  toasts: Array<ToastProps & { id: string }>\n  onRemove: (id: string) => void\n}\n\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\n  toasts,\n  onRemove\n}) => {\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {toasts.map((toast, index) => (\n        <div\n          key={toast.id}\n          style={{ \n            transform: `translateY(${index * -8}px)`,\n            zIndex: 50 - index\n          }}\n        >\n          <Toast\n            {...toast}\n            onClose={() => onRemove(toast.id)}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n\n/**\n * Hook for managing toasts\n */\nexport const useToast = () => {\n  const [toasts, setToasts] = useState<Array<ToastProps & { id: string }>>([])\n\n  const addToast = (toast: ToastProps) => {\n    const id = Math.random().toString(36).substr(2, 9)\n    setToasts(prev => [...prev, { ...toast, id }])\n    return id\n  }\n\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id))\n  }\n\n  const clearToasts = () => {\n    setToasts([])\n  }\n\n  return {\n    toasts,\n    addToast,\n    removeToast,\n    clearToasts\n  }\n}\n"]}