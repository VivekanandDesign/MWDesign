{"version":3,"file":"IconCustomizationControls.jsx","sourceRoot":"","sources":["../../src/components/IconCustomizationControls.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from './ui/Button';\nimport { useIconCustomization } from '../hooks/useIconCustomization';\nimport { Palette, RotateCcw } from 'lucide-react';\n\ninterface IconCustomizationControlsProps {\n  iconName: string;\n  className?: string;\n}\n\nexport function IconCustomizationControls({ iconName, className = '' }: IconCustomizationControlsProps) {\n  const { \n    customization, \n    updateCustomization, \n    resetCustomization\n  } = useIconCustomization();\n\n  const colorOptions = [\n    { name: 'Current', value: 'currentColor', class: 'border-2 border-gray-300' },\n    { name: 'Black', value: '#000000', class: 'bg-black' },\n    { name: 'Gray', value: '#6b7280', class: 'bg-gray-500' },\n    { name: 'Blue', value: '#3b82f6', class: 'bg-blue-600' },\n    { name: 'Green', value: '#10b981', class: 'bg-green-600' },\n    { name: 'Red', value: '#ef4444', class: 'bg-red-600' },\n    { name: 'Purple', value: '#8b5cf6', class: 'bg-purple-600' },\n    { name: 'Orange', value: '#f97316', class: 'bg-orange-600' },\n    { name: 'Pink', value: '#ec4899', class: 'bg-pink-600' },\n    { name: 'Indigo', value: '#6366f1', class: 'bg-indigo-600' }\n  ];\n\n  const fillOptions = [\n    { name: 'None', value: 'none', class: 'border-2 border-gray-300' },\n    { name: 'Current', value: 'currentColor', class: 'border-2 border-blue-300 bg-blue-50' },\n    { name: 'Black', value: '#000000', class: 'bg-black' },\n    { name: 'White', value: '#ffffff', class: 'bg-white border-2 border-gray-300' },\n    { name: 'Gray', value: '#f3f4f6', class: 'bg-gray-100' }\n  ];\n\n  const sizePresets = [16, 20, 24, 28, 32, 40, 48, 64, 80, 96];\n  const strokePresets = [0.5, 1, 1.5, 2, 2.5, 3];\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Reset Button */}\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n          Customize Icon\n        </h3>\n        <Button\n          onClick={resetCustomization}\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"text-xs\"\n        >\n          <RotateCcw className=\"w-3 h-3 mr-1\" />\n          Reset\n        </Button>\n      </div>\n\n      {/* Size Control */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          Size: {customization.size}px\n        </label>\n        \n        {/* Size Slider */}\n        <div className=\"mb-3\">\n          <input\n            type=\"range\"\n            min={12}\n            max={128}\n            value={customization.size}\n            onChange={(e) => updateCustomization({ size: parseInt(e.target.value) })}\n            className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n          />\n        </div>\n\n        {/* Size Presets */}\n        <div className=\"flex flex-wrap gap-2\">\n          {sizePresets.map((size) => (\n            <button\n              key={size}\n              onClick={() => updateCustomization({ size })}\n              className={`\n                px-2 py-1 text-xs rounded border transition-colors\n                ${customization.size === size\n                  ? 'border-blue-600 bg-blue-50 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300'\n                  : 'border-gray-200 hover:border-gray-300 text-gray-600 dark:border-gray-600 dark:text-gray-400'\n                }\n              `}\n            >\n              {size}px\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Stroke Width Control */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          Stroke Width: {customization.strokeWidth}px\n        </label>\n        \n        {/* Stroke Slider */}\n        <div className=\"mb-3\">\n          <input\n            type=\"range\"\n            min={0.5}\n            max={4}\n            step={0.25}\n            value={customization.strokeWidth}\n            onChange={(e) => updateCustomization({ strokeWidth: parseFloat(e.target.value) })}\n            className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n          />\n        </div>\n\n        {/* Stroke Presets */}\n        <div className=\"flex flex-wrap gap-2\">\n          {strokePresets.map((width) => (\n            <button\n              key={width}\n              onClick={() => updateCustomization({ strokeWidth: width })}\n              className={`\n                px-2 py-1 text-xs rounded border transition-colors\n                ${customization.strokeWidth === width\n                  ? 'border-blue-600 bg-blue-50 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300'\n                  : 'border-gray-200 hover:border-gray-300 text-gray-600 dark:border-gray-600 dark:text-gray-400'\n                }\n              `}\n            >\n              {width}px\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Color Control */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          <Palette className=\"w-4 h-4 inline mr-2\" />\n          Stroke Color\n        </label>\n        \n        {/* Color Input */}\n        <div className=\"flex gap-2 mb-3\">\n          <input\n            type=\"color\"\n            value={customization.color === 'currentColor' ? '#000000' : customization.color}\n            onChange={(e) => updateCustomization({ color: e.target.value })}\n            className=\"w-12 h-8 border border-gray-300 rounded cursor-pointer\"\n          />\n          <input\n            type=\"text\"\n            value={customization.color}\n            onChange={(e) => updateCustomization({ color: e.target.value })}\n            placeholder=\"Color value\"\n            className=\"flex-1 px-3 py-1.5 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600\"\n          />\n        </div>\n\n        {/* Color Presets */}\n        <div className=\"grid grid-cols-5 gap-2\">\n          {colorOptions.map((color) => (\n            <button\n              key={color.value}\n              onClick={() => updateCustomization({ color: color.value })}\n              className={`\n                w-full h-8 rounded-md border-2 transition-all relative\n                ${customization.color === color.value\n                  ? 'ring-2 ring-blue-500 ring-offset-2'\n                  : 'hover:scale-105'\n                }\n                ${color.class}\n              `}\n              title={`${color.name}: ${color.value}`}\n            >\n              {color.value === 'currentColor' && (\n                <span className=\"absolute inset-0 flex items-center justify-center text-xs font-medium text-gray-600\">\n                  Auto\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Fill Control */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          Fill Color\n        </label>\n        \n        {/* Fill Input */}\n        <div className=\"flex gap-2 mb-3\">\n          <input\n            type=\"color\"\n            value={!customization.fillColor || customization.fillColor === 'none' || customization.fillColor === 'currentColor' ? '#000000' : customization.fillColor}\n            onChange={(e) => updateCustomization({ fillColor: e.target.value })}\n            className=\"w-12 h-8 border border-gray-300 rounded cursor-pointer\"\n            disabled={!customization.fillColor || customization.fillColor === 'none'}\n          />\n          <input\n            type=\"text\"\n            value={customization.fillColor || 'none'}\n            onChange={(e) => updateCustomization({ fillColor: e.target.value })}\n            placeholder=\"Fill value\"\n            className=\"flex-1 px-3 py-1.5 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600\"\n          />\n        </div>\n\n        {/* Fill Presets */}\n        <div className=\"grid grid-cols-5 gap-2\">\n          {fillOptions.map((fill) => (\n            <button\n              key={fill.value}\n              onClick={() => updateCustomization({ fillColor: fill.value })}\n              className={`\n                w-full h-8 rounded-md border-2 transition-all relative\n                ${customization.fillColor === fill.value\n                  ? 'ring-2 ring-blue-500 ring-offset-2'\n                  : 'hover:scale-105'\n                }\n                ${fill.class}\n              `}\n              title={`${fill.name}: ${fill.value}`}\n            >\n              {(fill.value === 'none' || fill.value === 'currentColor') && (\n                <span className=\"absolute inset-0 flex items-center justify-center text-xs font-medium text-gray-600\">\n                  {fill.name}\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Class Name */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-900 dark:text-white mb-2\">\n          CSS Class Name\n        </label>\n        <input\n          type=\"text\"\n          value={customization.className || ''}\n          onChange={(e) => updateCustomization({ className: e.target.value })}\n          placeholder=\"e.g. icon-custom my-icon\"\n          className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600\"\n        />\n      </div>\n\n      {/* Current Configuration */}\n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n          Current Configuration\n        </h4>\n        <div className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n          <div>Size: {customization.size}px</div>\n          <div>Stroke: {customization.strokeWidth}px</div>\n          <div>Color: {customization.color}</div>\n          {customization.fillColor && <div>Fill: {customization.fillColor}</div>}\n          {customization.className && <div>Class: {customization.className}</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}