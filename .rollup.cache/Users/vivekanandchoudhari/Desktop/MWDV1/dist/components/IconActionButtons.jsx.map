{"version":3,"file":"IconActionButtons.jsx","sourceRoot":"","sources":["../../src/components/IconActionButtons.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/Button';\nimport { Badge } from './ui/Badge';\nimport { Tooltip } from './ui/Tooltip';\nimport { Copy, Code, Download, Check, ExternalLink } from 'lucide-react';\nimport { useCopyHistory } from '../hooks/useCopyHistory';\nimport { useIconCustomization } from '../hooks/useIconCustomization';\nimport { generateIconCode } from '../utils/iconCodeGenerator';\n\ninterface IconActionButtonsProps {\n  iconName: string;\n  className?: string;\n}\n\nexport function IconActionButtons({ iconName, className = '' }: IconActionButtonsProps) {\n  const [copiedState, setCopiedState] = useState<{[key: string]: boolean}>({});\n  const { addToHistory } = useCopyHistory();\n  const { customization } = useIconCustomization();\n\n  const handleCopy = async (type: 'svg' | 'jsx' | 'url', content: string) => {\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopiedState(prev => ({ ...prev, [type]: true }));\n      \n      // Add to history - map URL type to a valid CopyFormat\n      const historyType = type === 'url' ? 'svg' : type;\n      addToHistory(iconName, historyType as any, content);\n\n      // Reset copied state after 2 seconds\n      setTimeout(() => {\n        setCopiedState(prev => ({ ...prev, [type]: false }));\n      }, 2000);\n    } catch (error) {\n      console.error('Failed to copy:', error);\n    }\n  };\n\n  const handleDownload = (type: 'svg' | 'png' | 'pdf') => {\n    const code = generateIconCode(iconName, 'svg', customization);\n    let blob: Blob;\n    let filename: string;\n\n    switch (type) {\n      case 'svg':\n        blob = new Blob([code], { type: 'image/svg+xml' });\n        filename = `${iconName}.svg`;\n        break;\n      case 'png':\n        // For PNG, we'd need to convert SVG to canvas then to PNG\n        // This is a simplified implementation\n        blob = new Blob([code], { type: 'image/svg+xml' });\n        filename = `${iconName}.png`;\n        break;\n      case 'pdf':\n        // For PDF, we'd need a PDF library\n        blob = new Blob([code], { type: 'application/pdf' });\n        filename = `${iconName}.pdf`;\n        break;\n      default:\n        return;\n    }\n\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    // Add to history - use 'download' format for all download types\n    addToHistory(iconName, 'download', code);\n  };\n\n  const svgCode = generateIconCode(iconName, 'svg', customization);\n  const jsxCode = generateIconCode(iconName, 'jsx', customization);\n  const iconUrl = `${window.location.origin}/icons/${iconName}.svg`;\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Primary Actions */}\n      <div className=\"grid grid-cols-3 gap-3\">\n        <Tooltip content=\"Copy SVG code\">\n          <Button\n            onClick={() => handleCopy('svg', svgCode)}\n            variant=\"outline\"\n            className=\"flex-1 h-12\"\n            disabled={copiedState.svg}\n          >\n            {copiedState.svg ? (\n              <Check className=\"w-4 h-4 mr-2 text-green-500\" />\n            ) : (\n              <Copy className=\"w-4 h-4 mr-2\" />\n            )}\n            {copiedState.svg ? 'Copied!' : 'SVG'}\n          </Button>\n        </Tooltip>\n\n        <Tooltip content=\"Copy JSX/React code\">\n          <Button\n            onClick={() => handleCopy('jsx', jsxCode)}\n            variant=\"outline\"\n            className=\"flex-1 h-12\"\n            disabled={copiedState.jsx}\n          >\n            {copiedState.jsx ? (\n              <Check className=\"w-4 h-4 mr-2 text-green-500\" />\n            ) : (\n              <Code className=\"w-4 h-4 mr-2\" />\n            )}\n            {copiedState.jsx ? 'Copied!' : 'JSX'}\n          </Button>\n        </Tooltip>\n\n        <Tooltip content=\"Download SVG file\">\n          <Button\n            onClick={() => handleDownload('svg')}\n            variant=\"outline\"\n            className=\"flex-1 h-12\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            Download\n          </Button>\n        </Tooltip>\n      </div>\n\n      {/* Secondary Actions */}\n      <div className=\"space-y-3\">\n        {/* URL Copy */}\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-600 dark:text-gray-400 min-w-0 flex-1 truncate\">\n            {iconUrl}\n          </span>\n          <Button\n            onClick={() => handleCopy('url', iconUrl)}\n            variant=\"ghost\"\n            size=\"sm\"\n            disabled={copiedState.url}\n          >\n            {copiedState.url ? (\n              <Check className=\"w-3 h-3 text-green-500\" />\n            ) : (\n              <ExternalLink className=\"w-3 h-3\" />\n            )}\n          </Button>\n        </div>\n\n        {/* Download Options */}\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Download as:\n          </span>\n          <div className=\"flex gap-2\">\n            <Button\n              onClick={() => handleDownload('svg')}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-xs px-2 py-1\"\n            >\n              SVG\n            </Button>\n            <Button\n              onClick={() => handleDownload('png')}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-xs px-2 py-1\"\n            >\n              PNG\n            </Button>\n            <Button\n              onClick={() => handleDownload('pdf')}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-xs px-2 py-1\"\n            >\n              PDF\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Usage Stats */}\n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">Format</span>\n            <div className=\"flex gap-1 mt-1\">\n              <Badge variant=\"outline\" className=\"text-xs\">SVG</Badge>\n              <Badge variant=\"outline\" className=\"text-xs\">Vector</Badge>\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">License</span>\n            <div className=\"font-medium\">MIT</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Keyboard Shortcuts Hint */}\n      <div className=\"pt-2 text-xs text-gray-500 dark:text-gray-400\">\n        <div className=\"flex flex-wrap gap-4\">\n          <span><kbd className=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 rounded\">⌘C</kbd> Copy SVG</span>\n          <span><kbd className=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 rounded\">⌘J</kbd> Copy JSX</span>\n          <span><kbd className=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 rounded\">⌘D</kbd> Download</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}