{"version":3,"file":"IconRelatedSuggestions.jsx","sourceRoot":"","sources":["../../src/components/IconRelatedSuggestions.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Button } from './ui/Button';\nimport { Badge } from './ui/Badge';\nimport { Icon } from './ui/Icon';\nimport { useCopyHistory } from '../hooks/useCopyHistory';\nimport { getIconsData } from '../data/icons';\nimport { formatIconName } from '../utils/iconNameFormatter';\nimport { Search, Heart, Clock, TrendingUp, Grid3X3, Filter, Star } from 'lucide-react';\n\ninterface IconRelatedSuggestionsProps {\n  iconName: string;\n  relatedIcons: string[];\n  onIconSelect?: (iconName: string) => void;\n  className?: string;\n}\n\nexport function IconRelatedSuggestions({ \n  iconName, \n  relatedIcons, \n  onIconSelect, \n  className = '' \n}: IconRelatedSuggestionsProps) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState<'all' | 'category' | 'recent' | 'popular' | 'favorites'>('all');\n  \n  const { \n    favorites, \n    isFavorite, \n    toggleFavorite, \n    getRecentIcons, \n    getPopularIcons \n  } = useCopyHistory();\n\n  const iconData = getIconsData();\n\n  // Get current icon's category\n  const currentCategory = useMemo(() => {\n    return Object.entries(iconData.categories).find(([_, cat]) => \n      cat.icons.includes(iconName)\n    )?.[1];\n  }, [iconName, iconData.categories]);\n\n  // Get filtered suggestions\n  const filteredSuggestions = useMemo(() => {\n    let suggestions: string[] = [];\n\n    switch (selectedFilter) {\n      case 'category':\n        suggestions = currentCategory?.icons.filter(icon => icon !== iconName) || [];\n        break;\n      case 'recent':\n        suggestions = getRecentIcons(20).filter(icon => icon !== iconName);\n        break;\n      case 'popular':\n        suggestions = getPopularIcons(20).filter(icon => icon !== iconName);\n        break;\n      case 'favorites':\n        suggestions = favorites.map(fav => fav.iconName).filter(icon => icon !== iconName);\n        break;\n      case 'all':\n      default:\n        // Combine category icons with some popular ones\n        const categoryIcons = currentCategory?.icons.filter(icon => icon !== iconName) || [];\n        const popularIcons = getPopularIcons(10).filter(icon => icon !== iconName && !categoryIcons.includes(icon));\n        suggestions = [...categoryIcons.slice(0, 12), ...popularIcons.slice(0, 8)];\n        break;\n    }\n\n    // Apply search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      suggestions = suggestions.filter(icon => \n        icon.toLowerCase().includes(query)\n      );\n    }\n\n    return suggestions.slice(0, 24); // Limit to 24 suggestions\n  }, [selectedFilter, currentCategory, iconName, searchQuery, favorites, getRecentIcons, getPopularIcons]);\n\n  const filterOptions = [\n    { id: 'all', label: 'All', icon: Grid3X3, count: relatedIcons.length },\n    { id: 'category', label: currentCategory?.name || 'Category', icon: Filter, count: currentCategory?.icons.length || 0 },\n    { id: 'recent', label: 'Recent', icon: Clock, count: getRecentIcons().length },\n    { id: 'popular', label: 'Popular', icon: TrendingUp, count: getPopularIcons().length },\n    { id: 'favorites', label: 'Favorites', icon: Heart, count: favorites.length }\n  ];\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          Related Icons\n        </h3>\n        <Badge variant=\"outline\" className=\"text-xs\">\n          {filteredSuggestions.length} icons\n        </Badge>\n      </div>\n\n      {/* Search */}\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search related icons...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600\"\n        />\n      </div>\n\n      {/* Filters */}\n      <div className=\"flex flex-wrap gap-2\">\n        {filterOptions.map((filter) => {\n          const IconComponent = filter.icon;\n          return (\n            <button\n              key={filter.id}\n              onClick={() => setSelectedFilter(filter.id as any)}\n              className={`\n                flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-medium transition-colors\n                ${selectedFilter === filter.id\n                  ? 'bg-blue-100 text-blue-700 border-blue-200 dark:bg-blue-900/30 dark:text-blue-300'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-400 dark:hover:bg-gray-600'\n                }\n              `}\n            >\n              <IconComponent className=\"w-4 h-4\" />\n              {filter.label}\n              <Badge variant=\"outline\" className=\"text-xs ml-1\">\n                {filter.count}\n              </Badge>\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Current Category Info */}\n      {currentCategory && selectedFilter === 'category' && (\n        <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-300\">\n              {currentCategory.name} Category\n            </h4>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {currentCategory.icons.length} icons\n            </Badge>\n          </div>\n          <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n            {currentCategory.description}\n          </p>\n        </div>\n      )}\n\n      {/* Icon Grid */}\n      {filteredSuggestions.length > 0 ? (\n        <div className=\"grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-3\">\n          {filteredSuggestions.map((suggestionIcon) => (\n            <div\n              key={suggestionIcon}\n              className=\"group relative aspect-square border border-gray-200 dark:border-gray-700 rounded-lg p-3 hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer transition-all duration-200 hover:scale-105\"\n              onClick={() => onIconSelect?.(suggestionIcon)}\n            >\n              {/* Icon */}\n              <div className=\"flex items-center justify-center h-full\">\n                <Icon\n                  icon={Star}\n                  size=\"md\"\n                  className=\"text-gray-600 dark:text-gray-400 group-hover:text-gray-900 dark:group-hover:text-gray-200\"\n                />\n              </div>\n\n              {/* Favorite Toggle */}\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  toggleFavorite(suggestionIcon);\n                }}\n                className=\"absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity\"\n              >\n                <Heart \n                  className={`w-3 h-3 ${\n                    isFavorite(suggestionIcon) \n                      ? 'fill-red-500 text-red-500' \n                      : 'text-gray-400 hover:text-red-400'\n                  }`} \n                />\n              </button>\n\n              {/* Icon Name Tooltip */}\n              <div className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none\">\n                <div className=\"bg-gray-900 text-white text-xs rounded px-2 py-1 whitespace-nowrap\">\n                  {formatIconName(suggestionIcon)}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 dark:text-gray-600 mb-2\">\n            <Search className=\"w-12 h-12 mx-auto mb-4\" />\n          </div>\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            No related icons found\n          </h4>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {searchQuery \n              ? `No icons match \"${searchQuery}\" in the ${selectedFilter} filter.`\n              : `No icons available for the ${selectedFilter} filter.`\n            }\n          </p>\n          {searchQuery && (\n            <Button\n              onClick={() => setSearchQuery('')}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"mt-3\"\n            >\n              Clear search\n            </Button>\n          )}\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex flex-wrap gap-2\">\n          <Button\n            onClick={() => setSelectedFilter('category')}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-xs\"\n          >\n            More from {currentCategory?.name || 'this category'}\n          </Button>\n          <Button\n            onClick={() => setSelectedFilter('popular')}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-xs\"\n          >\n            Popular icons\n          </Button>\n          <Button\n            onClick={() => setSelectedFilter('recent')}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"text-xs\"\n          >\n            Recently used\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}