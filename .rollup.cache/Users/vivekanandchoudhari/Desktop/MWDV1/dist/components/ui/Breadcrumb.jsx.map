{"version":3,"file":"Breadcrumb.jsx","sourceRoot":"","sources":["../../../src/components/ui/Breadcrumb.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAQ3B,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,EACzB,QAAQ,EACR,SAAS,EACT,SAAS,GAAG,CACV,CAAC,GAAG,CAAC,SAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAC/E;MAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,oHAAoH,CAAC,QAAQ,CAAC,SAAS,EACpK;IAAA,EAAE,GAAG,CAAC,CACP,EACe,EAAE,EAAE;IACpB,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAC9D;MAAA,CAAC,EAAE,CAAC,SAAS,CAAC,iDAAiD,CAC7D;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,EAAE,CACN;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC,CAAA;AASD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,QAAQ,EACR,IAAI,EACJ,MAAM,GAAG,KAAK,EACd,SAAS,EACW,EAAE,EAAE;IACxB,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CACrB,CAAC,CAAC,CACA,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,SAAS,CAAC,CAAC,IAAI,CACb,6DAA6D,EAC7D,mDAAmD,EACnD,gCAAgC,EAChC,SAAS,CACV,CAAC,CAEF;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,CAAC,CAAC,CACL,CAAC,CAAC,CAAC,CACF,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,IAAI,CACb,qBAAqB,EACrB,MAAM;YACJ,CAAC,CAAC,wCAAwC;YAC1C,CAAC,CAAC,wCAAwC,EAC5C,SAAS,CACV,CAAC,CACF,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAE1C;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,IAAI,CAAC,CACR,CAAA;IAED,OAAO,CACL,CAAC,EAAE,CAAC,SAAS,CAAC,0BAA0B,CACtC;MAAA,CAAC,OAAO,CACV;IAAA,EAAE,EAAE,CAAC,CACN,CAAA;AACH,CAAC,CAAA;AAOD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,EAClC,SAAS,EACT,QAAQ,GAAG,CACT,CAAC,GAAG,CAAC,SAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAC/E;MAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,oHAAoH,CAAC,QAAQ,CAAC,SAAS,EACpK;IAAA,EAAE,GAAG,CAAC,CACP,EACwB,EAAE,EAAE;IAC7B,OAAO,CACL,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC,CACzD;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,EAAE,CAAC,CACN,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { ReactNode } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface BreadcrumbProps {\n  children: ReactNode\n  className?: string\n  separator?: ReactNode\n}\n\nexport const Breadcrumb = ({ \n  children, \n  className, \n  separator = (\n    <svg className=\"w-4 h-4 text-mw-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n    </svg>\n  )\n}: BreadcrumbProps) => {\n  return (\n    <nav className={clsx('flex', className)} aria-label=\"Breadcrumb\">\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n        {children}\n      </ol>\n    </nav>\n  )\n}\n\nexport interface BreadcrumbItemProps {\n  children: ReactNode\n  href?: string\n  isLast?: boolean\n  className?: string\n}\n\nexport const BreadcrumbItem = ({ \n  children, \n  href, \n  isLast = false, \n  className \n}: BreadcrumbItemProps) => {\n  const content = href ? (\n    <a\n      href={href}\n      className={clsx(\n        'text-sm font-medium text-mw-gray-500 hover:text-mw-gray-700',\n        'dark:text-mw-gray-400 dark:hover:text-mw-gray-200',\n        'transition-colors duration-200',\n        className\n      )}\n    >\n      {children}\n    </a>\n  ) : (\n    <span\n      className={clsx(\n        'text-sm font-medium',\n        isLast \n          ? 'text-mw-gray-900 dark:text-mw-gray-100' \n          : 'text-mw-gray-500 dark:text-mw-gray-400',\n        className\n      )}\n      aria-current={isLast ? 'page' : undefined}\n    >\n      {children}\n    </span>\n  )\n\n  return (\n    <li className=\"inline-flex items-center\">\n      {content}\n    </li>\n  )\n}\n\nexport interface BreadcrumbSeparatorProps {\n  className?: string\n  children?: ReactNode\n}\n\nexport const BreadcrumbSeparator = ({ \n  className, \n  children = (\n    <svg className=\"w-4 h-4 text-mw-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n    </svg>\n  )\n}: BreadcrumbSeparatorProps) => {\n  return (\n    <li className={clsx('inline-flex items-center', className)}>\n      {children}\n    </li>\n  )\n}\n"]}