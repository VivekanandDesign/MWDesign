{"version":3,"file":"Dropdown.jsx","sourceRoot":"","sources":["../../../src/components/ui/Dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["import { createContext, useContext, useState, useRef, useEffect, ReactNode } from 'react'\nimport { clsx } from 'clsx'\n\ninterface DropdownContextType {\n  isOpen: boolean\n  setIsOpen: (open: boolean) => void\n  toggle: () => void\n}\n\nconst DropdownContext = createContext<DropdownContextType | undefined>(undefined)\n\nexport interface DropdownProps {\n  children: ReactNode\n  className?: string\n}\n\nexport const Dropdown = ({ children, className }: DropdownProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const dropdownRef = useRef<HTMLDivElement>(null)\n\n  const toggle = () => setIsOpen(!isOpen)\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false)\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [isOpen])\n\n  // Close dropdown on escape\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false)\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n    }\n  }, [isOpen])\n\n  return (\n    <DropdownContext.Provider value={{ isOpen, setIsOpen, toggle }}>\n      <div ref={dropdownRef} className={clsx('relative inline-block', className)}>\n        {children}\n      </div>\n    </DropdownContext.Provider>\n  )\n}\n\nexport interface DropdownTriggerProps {\n  children: ReactNode\n  asChild?: boolean\n  className?: string\n}\n\nexport const DropdownTrigger = ({ children, asChild, className }: DropdownTriggerProps) => {\n  const context = useContext(DropdownContext)\n  \n  if (!context) {\n    throw new Error('DropdownTrigger must be used within a Dropdown')\n  }\n\n  if (asChild) {\n    // Clone the child element and add click handler\n    return (\n      <div onClick={context.toggle} className={className}>\n        {children}\n      </div>\n    )\n  }\n\n  return (\n    <button\n      onClick={context.toggle}\n      className={clsx(\n        'inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium',\n        'bg-white dark:bg-mw-gray-800 border border-mw-gray-300 dark:border-mw-gray-600',\n        'text-mw-gray-700 dark:text-mw-gray-300',\n        'hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700',\n        'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2',\n        className\n      )}\n      aria-expanded={context.isOpen}\n      aria-haspopup=\"true\"\n    >\n      {children}\n      <svg\n        className={clsx(\n          'ml-2 h-4 w-4 transition-transform',\n          context.isOpen && 'rotate-180'\n        )}\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n      </svg>\n    </button>\n  )\n}\n\nexport interface DropdownContentProps {\n  children: ReactNode\n  className?: string\n  align?: 'left' | 'right' | 'center'\n}\n\nexport const DropdownContent = ({ children, className, align = 'left' }: DropdownContentProps) => {\n  const context = useContext(DropdownContext)\n  \n  if (!context) {\n    throw new Error('DropdownContent must be used within a Dropdown')\n  }\n\n  const alignmentClasses = {\n    left: 'left-0',\n    right: 'right-0',\n    center: 'left-1/2 transform -translate-x-1/2'\n  }\n\n  if (!context.isOpen) return null\n\n  return (\n    <div\n      className={clsx(\n        'absolute z-50 mt-2 min-w-[200px] rounded-md shadow-lg',\n        'bg-white dark:bg-mw-gray-800 border border-mw-gray-200 dark:border-mw-gray-700',\n        'ring-1 ring-black ring-opacity-5',\n        alignmentClasses[align],\n        className\n      )}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n    >\n      <div className=\"py-1\">{children}</div>\n    </div>\n  )\n}\n\nexport interface DropdownItemProps {\n  children: ReactNode\n  onClick?: () => void\n  disabled?: boolean\n  className?: string\n}\n\nexport const DropdownItem = ({ children, onClick, disabled, className }: DropdownItemProps) => {\n  const context = useContext(DropdownContext)\n\n  const handleClick = () => {\n    if (!disabled && onClick) {\n      onClick()\n      context?.setIsOpen(false)\n    }\n  }\n\n  return (\n    <button\n      onClick={handleClick}\n      disabled={disabled}\n      className={clsx(\n        'w-full text-left px-4 py-2 text-sm',\n        'text-mw-gray-700 dark:text-mw-gray-300',\n        'hover:bg-mw-gray-100 dark:hover:bg-mw-gray-700',\n        'focus:bg-mw-gray-100 dark:focus:bg-mw-gray-700 focus:outline-none',\n        disabled && 'opacity-50 cursor-not-allowed',\n        className\n      )}\n      role=\"menuitem\"\n    >\n      {children}\n    </button>\n  )\n}\n\nexport interface DropdownSeparatorProps {\n  className?: string\n}\n\nexport const DropdownSeparator = ({ className }: DropdownSeparatorProps) => {\n  return (\n    <div\n      className={clsx(\n        'my-1 h-px bg-mw-gray-200 dark:bg-mw-gray-700',\n        className\n      )}\n      role=\"separator\"\n    />\n  )\n}\n"]}