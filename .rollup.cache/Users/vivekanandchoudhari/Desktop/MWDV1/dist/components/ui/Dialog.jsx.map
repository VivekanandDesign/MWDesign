{"version":3,"file":"Dialog.jsx","sourceRoot":"","sources":["../../../src/components/ui/Dialog.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { useState, useEffect, createContext, useContext, isValidElement, cloneElement } from 'react'\nimport { clsx } from 'clsx'\nimport { X } from 'lucide-react'\nimport { Button } from './Button'\n\nexport interface DialogProps {\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  children: React.ReactNode\n}\n\nexport interface DialogContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n  showCloseButton?: boolean\n}\n\nexport interface DialogHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n}\n\nexport interface DialogFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n}\n\nexport interface DialogTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  children: React.ReactNode\n}\n\nexport interface DialogDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  children: React.ReactNode\n}\n\nexport interface DialogTriggerProps extends React.HTMLAttributes<HTMLElement> {\n  children: React.ReactNode\n  asChild?: boolean\n}\n\nconst DialogContext = createContext<{\n  open: boolean\n  onOpenChange: (open: boolean) => void\n} | null>(null)\n\nexport function Dialog({ open = false, onOpenChange, children }: DialogProps) {\n  return (\n    <DialogContext.Provider value={{ open, onOpenChange: onOpenChange || (() => {}) }}>\n      {children}\n    </DialogContext.Provider>\n  )\n}\n\nexport function DialogTrigger({ children, asChild, onClick, ...props }: DialogTriggerProps) {\n  const context = useContext(DialogContext)\n  \n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    onClick?.(e)\n    context?.onOpenChange(true)\n  }\n\n  if (asChild && isValidElement(children)) {\n    return cloneElement(children, {\n      ...props,\n      onClick: handleClick\n    })\n  }\n\n  return (\n    <button onClick={handleClick} {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport function DialogContent({ \n  children, \n  className, \n  showCloseButton = true,\n  ...props \n}: DialogContentProps) {\n  const context = useContext(DialogContext)\n  \n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        context?.onOpenChange(false)\n      }\n    }\n\n    if (context?.open) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = ''\n    }\n  }, [context?.open])\n\n  if (!context?.open) return null\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black/50 backdrop-blur-sm\"\n        onClick={() => context.onOpenChange(false)}\n      />\n      \n      {/* Content */}\n      <div\n        className={clsx(\n          'relative z-50 w-full max-w-lg mx-4 max-h-[90vh] overflow-y-auto',\n          'bg-white dark:bg-mw-gray-800 rounded-lg shadow-lg border border-mw-gray-200 dark:border-mw-gray-700',\n          'animate-in fade-in-0 zoom-in-95 duration-200',\n          className\n        )}\n        {...props}\n      >\n        {showCloseButton && (\n          <button\n            onClick={() => context.onOpenChange(false)}\n            className=\"absolute top-4 right-4 p-1 rounded-sm opacity-70 hover:opacity-100 transition-opacity\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport function DialogHeader({ children, className, ...props }: DialogHeaderProps) {\n  return (\n    <div className={clsx('flex flex-col space-y-1.5 p-6 pb-2', className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport function DialogFooter({ children, className, ...props }: DialogFooterProps) {\n  return (\n    <div \n      className={clsx('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2 p-6 pt-2', className)} \n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport function DialogTitle({ children, className, ...props }: DialogTitleProps) {\n  return (\n    <h2 \n      className={clsx('text-lg font-semibold text-mw-gray-900 dark:text-white', className)} \n      {...props}\n    >\n      {children}\n    </h2>\n  )\n}\n\nexport function DialogDescription({ children, className, ...props }: DialogDescriptionProps) {\n  return (\n    <p \n      className={clsx('text-sm text-mw-gray-600 dark:text-mw-gray-300', className)} \n      {...props}\n    >\n      {children}\n    </p>\n  )\n}\n\n// Utility hook for controlled dialogs\nexport function useDialog() {\n  const [open, setOpen] = useState(false)\n  \n  return {\n    open,\n    setOpen,\n    onOpenChange: setOpen,\n    close: () => setOpen(false),\n    toggle: () => setOpen(prev => !prev)\n  }\n}\n"]}