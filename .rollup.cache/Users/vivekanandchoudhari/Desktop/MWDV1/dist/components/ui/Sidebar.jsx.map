{"version":3,"file":"Sidebar.jsx","sourceRoot":"","sources":["../../../src/components/ui/Sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\nimport { X, Menu, ChevronLeft, ChevronRight } from 'lucide-react'\n\nfunction cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n\ninterface SidebarProps {\n  children: React.ReactNode\n  isOpen?: boolean\n  onOpenChange?: (open: boolean) => void\n  position?: 'left' | 'right'\n  variant?: 'overlay' | 'push' | 'persistent'\n  width?: 'sm' | 'md' | 'lg' | 'xl'\n  className?: string\n  collapsible?: boolean\n  collapsed?: boolean\n  onCollapsedChange?: (collapsed: boolean) => void\n}\n\ninterface SidebarHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\ninterface SidebarContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\ninterface SidebarFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst sidebarWidths = {\n  sm: 'w-64',\n  md: 'w-72',\n  lg: 'w-80',\n  xl: 'w-96'\n}\n\nconst collapsedWidth = 'w-16'\n\nexport function Sidebar({\n  children,\n  isOpen = true,\n  onOpenChange,\n  position = 'left',\n  variant = 'persistent',\n  width = 'md',\n  className,\n  collapsible = false,\n  collapsed = false,\n  onCollapsedChange\n}: SidebarProps) {\n  const [internalOpen, setInternalOpen] = useState(isOpen)\n  const [internalCollapsed, setInternalCollapsed] = useState(collapsed)\n  \n  const open = onOpenChange ? isOpen : internalOpen\n  const isCollapsed = onCollapsedChange ? collapsed : internalCollapsed\n  \n  const handleOpenChange = (newOpen: boolean) => {\n    if (onOpenChange) {\n      onOpenChange(newOpen)\n    } else {\n      setInternalOpen(newOpen)\n    }\n  }\n  \n  const handleCollapsedChange = (newCollapsed: boolean) => {\n    if (onCollapsedChange) {\n      onCollapsedChange(newCollapsed)\n    } else {\n      setInternalCollapsed(newCollapsed)\n    }\n  }\n\n  if (variant === 'overlay') {\n    return (\n      <>\n        {/* Backdrop */}\n        {open && (\n          <div\n            className=\"fixed inset-0 bg-black/50 z-40 lg:hidden\"\n            onClick={() => handleOpenChange(false)}\n          />\n        )}\n        \n        {/* Sidebar */}\n        <div\n          className={cn(\n            'fixed top-0 h-full bg-white dark:bg-mw-gray-900 border-r border-mw-gray-200 dark:border-mw-gray-700 z-50 transition-transform duration-300 ease-in-out',\n            position === 'left' ? 'left-0' : 'right-0',\n            sidebarWidths[width],\n            open \n              ? 'translate-x-0' \n              : position === 'left' \n                ? '-translate-x-full' \n                : 'translate-x-full',\n            className\n          )}\n        >\n          {children}\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex flex-col bg-white dark:bg-mw-gray-900 border-r border-mw-gray-200 dark:border-mw-gray-700 transition-all duration-300 ease-in-out',\n        collapsible && isCollapsed ? collapsedWidth : sidebarWidths[width],\n        !open && variant === 'push' && 'hidden',\n        className\n      )}\n    >\n      {collapsible && (\n        <div className=\"flex justify-end p-2 border-b border-mw-gray-200 dark:border-mw-gray-700\">\n          <button\n            onClick={() => handleCollapsedChange(!isCollapsed)}\n            className=\"p-1 rounded-md hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300\"\n          >\n            {isCollapsed ? (\n              <ChevronRight className=\"w-4 h-4\" />\n            ) : (\n              <ChevronLeft className=\"w-4 h-4\" />\n            )}\n          </button>\n        </div>\n      )}\n      \n      <div className={cn('flex-1 overflow-hidden', isCollapsed && 'px-2')}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport function SidebarHeader({ children, className }: SidebarHeaderProps) {\n  return (\n    <div className={cn(\n      'px-4 py-4 border-b border-mw-gray-200 dark:border-mw-gray-700',\n      className\n    )}>\n      {children}\n    </div>\n  )\n}\n\nexport function SidebarContent({ children, className }: SidebarContentProps) {\n  return (\n    <div className={cn(\n      'flex-1 overflow-y-auto px-4 py-4',\n      className\n    )}>\n      {children}\n    </div>\n  )\n}\n\nexport function SidebarFooter({ children, className }: SidebarFooterProps) {\n  return (\n    <div className={cn(\n      'px-4 py-4 border-t border-mw-gray-200 dark:border-mw-gray-700',\n      className\n    )}>\n      {children}\n    </div>\n  )\n}\n\n// Mobile sidebar trigger\ninterface SidebarTriggerProps {\n  onClick: () => void\n  className?: string\n}\n\nexport function SidebarTrigger({ onClick, className }: SidebarTriggerProps) {\n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        'p-2 rounded-md text-mw-gray-500 hover:text-mw-gray-700 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 dark:hover:text-mw-gray-300 lg:hidden',\n        className\n      )}\n    >\n      <Menu className=\"w-5 h-5\" />\n    </button>\n  )\n}\n"]}