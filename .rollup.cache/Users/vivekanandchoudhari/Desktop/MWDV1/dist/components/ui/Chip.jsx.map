{"version":3,"file":"Chip.jsx","sourceRoot":"","sources":["../../../src/components/ui/Chip.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,EAAE,CAAC,EAAE,MAAM,cAAc,CAAA;AAChC,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAa3B,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,2EAA2E;IACpF,OAAO,EAAE,8EAA8E;IACvF,SAAS,EAAE,2EAA2E;IACtF,OAAO,EAAE,sEAAsE;IAC/E,OAAO,EAAE,0EAA0E;IACnF,KAAK,EAAE,8DAA8D;IACrE,OAAO,EAAE,0FAA0F;CACpG,CAAA;AAED,MAAM,SAAS,GAAG;IAChB,EAAE,EAAE,mBAAmB;IACvB,EAAE,EAAE,qBAAqB;IACzB,EAAE,EAAE,qBAAqB;CAC1B,CAAA;AAED,MAAM,UAAU,IAAI,CAAC,EACnB,QAAQ,EACR,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,IAAI,EACX,QAAQ,EACR,QAAQ,GAAG,KAAK,EAChB,SAAS,GAAG,KAAK,EACjB,SAAS,EACT,OAAO,EACG;IACV,MAAM,aAAa,GAAG,SAAS,IAAI,OAAO,CAAA;IAE1C,OAAO,CACL,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,IAAI,CACb,wFAAwF,EACxF,YAAY,CAAC,OAAO,CAAC,EACrB,SAAS,CAAC,IAAI,CAAC,EACf,aAAa,IAAI,CAAC,QAAQ,IAAI,iCAAiC,EAC/D,QAAQ,IAAI,+BAA+B,EAC3C,SAAS,CACV,CAAC,CACF,OAAO,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAEpD;MAAA,CAAC,QAAQ,CACT;MAAA,CAAC,QAAQ,IAAI,CACX,CAAC,MAAM,CACL,IAAI,CAAC,QAAQ,CACb,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;gBACb,CAAC,CAAC,eAAe,EAAE,CAAA;gBACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACd,QAAQ,EAAE,CAAA;gBACZ,CAAC;YACH,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,SAAS,CAAC,CAAC,IAAI,CACb,iGAAiG,EACjG,QAAQ,IAAI,mEAAmE,CAChF,CAAC,CACF,UAAU,CAAC,QAAQ,CAEnB;UAAA,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAChB,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC3B,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;oBAC/B,SAAS,CACV,CAAC,EACJ;QAAA,EAAE,MAAM,CAAC,CACV,CACH;IAAA,EAAE,IAAI,CAAC,CACR,CAAA;AACH,CAAC;AAED,4DAA4D;AAC5D,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CAAA","sourcesContent":["'use client'\n\nimport React from 'react'\nimport { X } from 'lucide-react'\nimport { clsx } from 'clsx'\n\ninterface ChipProps {\n  children: React.ReactNode\n  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  onRemove?: () => void\n  disabled?: boolean\n  clickable?: boolean\n  className?: string\n  onClick?: () => void\n}\n\nconst chipVariants = {\n  default: 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',\n  primary: 'bg-mw-blue-100 text-mw-blue-800 dark:bg-mw-blue-900/30 dark:text-mw-blue-300',\n  secondary: 'bg-mw-gray-100 text-mw-gray-700 dark:bg-mw-gray-700 dark:text-mw-gray-300',\n  success: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',\n  warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',\n  error: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',\n  outline: 'border border-mw-gray-300 text-mw-gray-700 dark:border-mw-gray-600 dark:text-mw-gray-300'\n}\n\nconst chipSizes = {\n  sm: 'px-2 py-1 text-xs',\n  md: 'px-3 py-1.5 text-sm',\n  lg: 'px-4 py-2 text-base'\n}\n\nexport function Chip({ \n  children, \n  variant = 'default', \n  size = 'md', \n  onRemove, \n  disabled = false,\n  clickable = false,\n  className,\n  onClick\n}: ChipProps) {\n  const isInteractive = clickable || onClick\n\n  return (\n    <span\n      className={clsx(\n        'inline-flex items-center gap-1 rounded-full font-medium transition-colors duration-200',\n        chipVariants[variant],\n        chipSizes[size],\n        isInteractive && !disabled && 'cursor-pointer hover:opacity-80',\n        disabled && 'opacity-50 cursor-not-allowed',\n        className\n      )}\n      onClick={!disabled && onClick ? onClick : undefined}\n    >\n      {children}\n      {onRemove && (\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.stopPropagation()\n            if (!disabled) {\n              onRemove()\n            }\n          }}\n          disabled={disabled}\n          className={clsx(\n            'ml-1 rounded-full p-0.5 hover:bg-black/10 dark:hover:bg-white/10 transition-colors duration-200',\n            disabled && 'cursor-not-allowed hover:bg-transparent dark:hover:bg-transparent'\n          )}\n          aria-label=\"Remove\"\n        >\n          <X className={clsx(\n            size === 'sm' ? 'w-3 h-3' : \n            size === 'md' ? 'w-3.5 h-3.5' : \n            'w-4 h-4'\n          )} />\n        </button>\n      )}\n    </span>\n  )\n}\n\n// Alternative name for consistency with some design systems\nexport const Tag = Chip\n"]}