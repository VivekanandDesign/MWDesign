{"version":3,"file":"Badge.jsx","sourceRoot":"","sources":["../../../src/components/ui/Badge.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAClC,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAQ3B,MAAM,aAAa,GAAG;IACpB,OAAO,EAAE,2EAA2E;IACpF,OAAO,EAAE,8EAA8E;IACvF,SAAS,EAAE,2EAA2E;IACtF,OAAO,EAAE,sEAAsE;IAC/E,OAAO,EAAE,0EAA0E;IACnF,KAAK,EAAE,8DAA8D;IACrE,OAAO,EAAE,0FAA0F;CACpG,CAAA;AAED,MAAM,UAAU,GAAG;IACjB,EAAE,EAAE,qBAAqB;IACzB,EAAE,EAAE,uBAAuB;IAC3B,EAAE,EAAE,mBAAmB;CACxB,CAAA;AAED,MAAM,CAAC,MAAM,KAAK,GAAG,UAAU,CAC7B,CAAC,EAAmE,EAAE,GAAG,EAAE,EAAE;QAA5E,EAAE,SAAS,EAAE,OAAO,GAAG,SAAS,EAAE,IAAI,GAAG,IAAI,EAAE,QAAQ,OAAY,EAAP,KAAK,cAAjE,4CAAmE,CAAF;IAChE,OAAO,CACL,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,IAAI,CACb,mDAAmD,EACnD,aAAa,CAAC,OAAO,CAAC,EACtB,UAAU,CAAC,IAAI,CAAC,EAChB,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,IAAI,CAAC,CACR,CAAA;AACH,CAAC,CACF,CAAA;AAED,KAAK,CAAC,WAAW,GAAG,OAAO,CAAA","sourcesContent":["import { forwardRef } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'outline'\n  size?: 'sm' | 'md' | 'lg'\n  children: React.ReactNode\n}\n\nconst badgeVariants = {\n  default: 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',\n  primary: 'bg-mw-blue-100 text-mw-blue-800 dark:bg-mw-blue-900/20 dark:text-mw-blue-300',\n  secondary: 'bg-mw-gray-100 text-mw-gray-800 dark:bg-mw-gray-800 dark:text-mw-gray-200',\n  success: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300',\n  warning: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300',\n  error: 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300',\n  outline: 'border border-mw-gray-300 dark:border-mw-gray-600 text-mw-gray-700 dark:text-mw-gray-300'\n}\n\nconst badgeSizes = {\n  sm: 'px-2 py-0.5 text-xs',\n  md: 'px-2.5 py-0.5 text-sm',\n  lg: 'px-3 py-1 text-sm'\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ className, variant = 'default', size = 'md', children, ...props }, ref) => {\n    return (\n      <span\n        ref={ref}\n        className={clsx(\n          'inline-flex items-center rounded-full font-medium',\n          badgeVariants[variant],\n          badgeSizes[size],\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </span>\n    )\n  }\n)\n\nBadge.displayName = 'Badge'\n"]}