{"version":3,"file":"Pagination.jsx","sourceRoot":"","sources":["../../../src/components/ui/Pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ReactNode } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface PaginationProps {\n  currentPage: number\n  totalPages: number\n  onPageChange: (page: number) => void\n  showFirstLast?: boolean\n  showPrevNext?: boolean\n  siblingCount?: number\n  className?: string\n}\n\nexport const Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  showFirstLast = true,\n  showPrevNext = true,\n  siblingCount = 1,\n  className\n}: PaginationProps) => {\n  const generatePageNumbers = () => {\n    const pages: (number | string)[] = []\n    \n    // Always show first page\n    pages.push(1)\n    \n    // Calculate start and end for middle pages\n    const start = Math.max(2, currentPage - siblingCount)\n    const end = Math.min(totalPages - 1, currentPage + siblingCount)\n    \n    // Add ellipsis after first page if needed\n    if (start > 2) {\n      pages.push('...')\n    }\n    \n    // Add middle pages\n    for (let i = start; i <= end; i++) {\n      pages.push(i)\n    }\n    \n    // Add ellipsis before last page if needed\n    if (end < totalPages - 1) {\n      pages.push('...')\n    }\n    \n    // Always show last page (if more than 1 page)\n    if (totalPages > 1) {\n      pages.push(totalPages)\n    }\n    \n    return pages\n  }\n\n  const pages = generatePageNumbers()\n\n  return (\n    <nav className={clsx('flex items-center justify-center space-x-1', className)} aria-label=\"Pagination\">\n      {/* First page button */}\n      {showFirstLast && (\n        <PaginationButton\n          onClick={() => onPageChange(1)}\n          disabled={currentPage === 1}\n          aria-label=\"Go to first page\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n          </svg>\n        </PaginationButton>\n      )}\n\n      {/* Previous page button */}\n      {showPrevNext && (\n        <PaginationButton\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          aria-label=\"Go to previous page\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </PaginationButton>\n      )}\n\n      {/* Page numbers */}\n      {pages.map((page, index) => (\n        <div key={index}>\n          {typeof page === 'number' ? (\n            <PaginationButton\n              onClick={() => onPageChange(page)}\n              isActive={page === currentPage}\n              aria-label={`Go to page ${page}`}\n              aria-current={page === currentPage ? 'page' : undefined}\n            >\n              {page}\n            </PaginationButton>\n          ) : (\n            <span className=\"px-3 py-2 text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n              {page}\n            </span>\n          )}\n        </div>\n      ))}\n\n      {/* Next page button */}\n      {showPrevNext && (\n        <PaginationButton\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          aria-label=\"Go to next page\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </PaginationButton>\n      )}\n\n      {/* Last page button */}\n      {showFirstLast && (\n        <PaginationButton\n          onClick={() => onPageChange(totalPages)}\n          disabled={currentPage === totalPages}\n          aria-label=\"Go to last page\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n          </svg>\n        </PaginationButton>\n      )}\n    </nav>\n  )\n}\n\ninterface PaginationButtonProps {\n  children: ReactNode\n  onClick: () => void\n  disabled?: boolean\n  isActive?: boolean\n  className?: string\n  'aria-label'?: string\n  'aria-current'?: 'page' | 'step' | 'location' | 'date' | 'time' | 'true' | 'false' | boolean\n}\n\nconst PaginationButton = ({\n  children,\n  onClick,\n  disabled = false,\n  isActive = false,\n  className,\n  ...props\n}: PaginationButtonProps) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={clsx(\n        'px-3 py-2 text-sm font-medium rounded-md',\n        'border border-mw-gray-300 dark:border-mw-gray-600',\n        'focus:outline-none focus:ring-2 focus:ring-mw-blue-500 focus:ring-offset-2',\n        'transition-colors duration-200',\n        {\n          // Active state\n          'bg-mw-blue-600 text-white border-mw-blue-600': isActive,\n          // Default state\n          'bg-white dark:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-mw-gray-50 dark:hover:bg-mw-gray-700': !isActive && !disabled,\n          // Disabled state\n          'bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-400 dark:text-mw-gray-500 cursor-not-allowed': disabled,\n        },\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport { PaginationButton }\n"]}