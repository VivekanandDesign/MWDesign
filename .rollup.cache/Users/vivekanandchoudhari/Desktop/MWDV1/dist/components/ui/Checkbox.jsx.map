{"version":3,"file":"Checkbox.jsx","sourceRoot":"","sources":["../../../src/components/ui/Checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { forwardRef } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface CheckboxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  label?: string\n  description?: string\n  error?: string\n}\n\nexport const Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ className, label, description, error, ...props }, ref) => {\n    return (\n      <div className=\"space-y-2\">\n        <div className=\"flex items-start space-x-3\">\n          <input\n            type=\"checkbox\"\n            ref={ref}\n            className={clsx(\n              'mt-0.5 h-4 w-4 rounded border-mw-gray-300 dark:border-mw-gray-600',\n              'text-mw-blue-600 focus:ring-mw-blue-500 focus:ring-offset-2',\n              'disabled:opacity-50 disabled:cursor-not-allowed',\n              error && 'border-red-300 text-red-600 focus:ring-red-500',\n              className\n            )}\n            {...props}\n          />\n          {(label || description) && (\n            <div className=\"flex-1 min-w-0\">\n              {label && (\n                <label className=\"text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300\">\n                  {label}\n                </label>\n              )}\n              {description && (\n                <p className=\"text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n                  {description}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n        {error && (\n          <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n        )}\n      </div>\n    )\n  }\n)\n\nCheckbox.displayName = 'Checkbox'\n\nexport interface RadioProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  label?: string\n  description?: string\n  error?: string\n}\n\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(\n  ({ className, label, description, error, ...props }, ref) => {\n    return (\n      <div className=\"space-y-2\">\n        <div className=\"flex items-start space-x-3\">\n          <input\n            type=\"radio\"\n            ref={ref}\n            className={clsx(\n              'mt-0.5 h-4 w-4 border-mw-gray-300 dark:border-mw-gray-600',\n              'text-mw-blue-600 focus:ring-mw-blue-500 focus:ring-offset-2',\n              'disabled:opacity-50 disabled:cursor-not-allowed',\n              error && 'border-red-300 text-red-600 focus:ring-red-500',\n              className\n            )}\n            {...props}\n          />\n          {(label || description) && (\n            <div className=\"flex-1 min-w-0\">\n              {label && (\n                <label className=\"text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300\">\n                  {label}\n                </label>\n              )}\n              {description && (\n                <p className=\"text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n                  {description}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n        {error && (\n          <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n        )}\n      </div>\n    )\n  }\n)\n\nRadio.displayName = 'Radio'\n"]}