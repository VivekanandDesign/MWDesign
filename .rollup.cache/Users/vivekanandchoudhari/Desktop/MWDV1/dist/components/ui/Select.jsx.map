{"version":3,"file":"Select.jsx","sourceRoot":"","sources":["../../../src/components/ui/Select.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAClC,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAU3B,MAAM,CAAC,MAAM,MAAM,GAAG,UAAU,CAC9B,CAAC,EAAwE,EAAE,GAAG,EAAE,EAAE;QAAjF,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,OAAY,EAAP,KAAK,cAAtE,wEAAwE,CAAF;IACrE,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;QAAA,CAAC,KAAK,IAAI,CACR,CAAC,KAAK,CAAC,SAAS,CAAC,kEAAkE,CACjF;YAAA,CAAC,KAAK,CACR;UAAA,EAAE,KAAK,CAAC,CACT,CACD;QAAA,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,IAAI,CACb,kDAAkD,EAClD,4CAA4C,EAC5C,8BAA8B,EAC9B,wCAAwC,EACxC,8DAA8D,EAC9D,iDAAiD,EACjD,KAAK,IAAI,wDAAwD,EACjE,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;UAAA,CAAC,WAAW,IAAI,CACd,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CACvB;cAAA,CAAC,WAAW,CACd;YAAA,EAAE,MAAM,CAAC,CACV,CACD;UAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACvB,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAClB,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACpB,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAE1B;cAAA,CAAC,MAAM,CAAC,KAAK,CACf;YAAA,EAAE,MAAM,CAAC,CACV,CAAC,CACJ;QAAA,EAAE,MAAM,CACR;QAAA,CAAC,WAAW,IAAI,CAAC,KAAK,IAAI,CACxB,CAAC,CAAC,CAAC,SAAS,CAAC,gDAAgD,CAC3D;YAAA,CAAC,WAAW,CACd;UAAA,EAAE,CAAC,CAAC,CACL,CACD;QAAA,CAAC,KAAK,IAAI,CACR,CAAC,CAAC,CAAC,SAAS,CAAC,wCAAwC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAClE,CACH;MAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC,CACF,CAAA;AAED,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAA","sourcesContent":["import { forwardRef } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string\n  description?: string\n  error?: string\n  options: Array<{ value: string; label: string; disabled?: boolean }>\n  placeholder?: string\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n  ({ className, label, description, error, options, placeholder, ...props }, ref) => {\n    return (\n      <div className=\"space-y-2\">\n        {label && (\n          <label className=\"block text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300\">\n            {label}\n          </label>\n        )}\n        <select\n          ref={ref}\n          className={clsx(\n            'block w-full rounded-md border px-3 py-2 text-sm',\n            'border-mw-gray-300 dark:border-mw-gray-600',\n            'bg-white dark:bg-mw-gray-800',\n            'text-mw-gray-900 dark:text-mw-gray-100',\n            'focus:border-mw-blue-500 focus:ring-1 focus:ring-mw-blue-500',\n            'disabled:opacity-50 disabled:cursor-not-allowed',\n            error && 'border-red-500 focus:border-red-500 focus:ring-red-500',\n            className\n          )}\n          {...props}\n        >\n          {placeholder && (\n            <option value=\"\" disabled>\n              {placeholder}\n            </option>\n          )}\n          {options.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n              disabled={option.disabled}\n            >\n              {option.label}\n            </option>\n          ))}\n        </select>\n        {description && !error && (\n          <p className=\"text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n            {description}\n          </p>\n        )}\n        {error && (\n          <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n        )}\n      </div>\n    )\n  }\n)\n\nSelect.displayName = 'Select'\n"]}