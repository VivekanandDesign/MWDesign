{"version":3,"file":"Notification.jsx","sourceRoot":"","sources":["../../../src/components/ui/Notification.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { X, Bell, BellRing, MessageSquare, AlertTriangle, CheckCircle, Info } from 'lucide-react'\n\nfunction cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport type NotificationType = 'info' | 'success' | 'warning' | 'error' | 'message'\nexport type NotificationStatus = 'unread' | 'read'\n\nexport interface NotificationData {\n  id: string\n  type: NotificationType\n  title: string\n  message: string\n  timestamp: Date\n  status?: NotificationStatus\n  avatar?: string\n  actions?: NotificationAction[]\n  metadata?: Record<string, any>\n}\n\nexport interface NotificationAction {\n  label: string\n  onClick: (notification: NotificationData) => void\n  variant?: 'primary' | 'secondary'\n}\n\ninterface NotificationProps {\n  notification: NotificationData\n  onClose?: (id: string) => void\n  onMarkAsRead?: (id: string) => void\n  onActionClick?: (action: NotificationAction, notification: NotificationData) => void\n  compact?: boolean\n  className?: string\n}\n\ninterface NotificationListProps {\n  notifications: NotificationData[]\n  onClose?: (id: string) => void\n  onMarkAsRead?: (id: string) => void\n  onMarkAllAsRead?: () => void\n  onClearAll?: () => void\n  maxHeight?: string\n  emptyMessage?: string\n  className?: string\n}\n\ninterface NotificationBadgeProps {\n  count: number\n  showDot?: boolean\n  max?: number\n  className?: string\n  children?: React.ReactNode\n}\n\nexport function Notification({\n  notification,\n  onClose,\n  onMarkAsRead,\n  onActionClick,\n  compact = false,\n  className\n}: NotificationProps) {\n  const [isVisible, setIsVisible] = useState(true)\n\n  const handleClose = () => {\n    setIsVisible(false)\n    setTimeout(() => {\n      onClose?.(notification.id)\n    }, 200)\n  }\n\n  const handleMarkAsRead = () => {\n    if (notification.status === 'unread') {\n      onMarkAsRead?.(notification.id)\n    }\n  }\n\n  const handleActionClick = (action: NotificationAction) => {\n    onActionClick?.(action, notification)\n    action.onClick(notification)\n  }\n\n  const getIcon = () => {\n    switch (notification.type) {\n      case 'success':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />\n      case 'error':\n        return <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n      case 'message':\n        return <MessageSquare className=\"w-5 h-5 text-blue-500\" />\n      case 'info':\n      default:\n        return <Info className=\"w-5 h-5 text-blue-500\" />\n    }\n  }\n\n  const getTypeClasses = () => {\n    switch (notification.type) {\n      case 'success':\n        return 'border-l-green-500'\n      case 'warning':\n        return 'border-l-yellow-500'\n      case 'error':\n        return 'border-l-red-500'\n      case 'message':\n        return 'border-l-blue-500'\n      case 'info':\n      default:\n        return 'border-l-mw-gray-300 dark:border-l-mw-gray-600'\n    }\n  }\n\n  const formatTimestamp = (date: Date) => {\n    const now = new Date()\n    const diff = now.getTime() - date.getTime()\n    const minutes = Math.floor(diff / 60000)\n    const hours = Math.floor(diff / 3600000)\n    const days = Math.floor(diff / 86400000)\n\n    if (minutes < 1) return 'just now'\n    if (minutes < 60) return `${minutes}m ago`\n    if (hours < 24) return `${hours}h ago`\n    if (days < 7) return `${days}d ago`\n    return date.toLocaleDateString()\n  }\n\n  if (!isVisible) return null\n\n  return (\n    <div\n      className={cn(\n        'relative bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 border-l-4 rounded-lg p-4 shadow-sm transition-all duration-200',\n        notification.status === 'unread' && 'bg-mw-blue-50 dark:bg-mw-blue-950/20',\n        getTypeClasses(),\n        compact && 'p-3',\n        className\n      )}\n      onClick={handleMarkAsRead}\n    >\n      <div className=\"flex items-start space-x-3\">\n        {/* Avatar or Icon */}\n        <div className=\"flex-shrink-0\">\n          {notification.avatar ? (\n            <img\n              src={notification.avatar}\n              alt=\"\"\n              className=\"w-8 h-8 rounded-full object-cover\"\n            />\n          ) : (\n            <div className=\"p-1\">\n              {getIcon()}\n            </div>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <h4 className={cn(\n                'text-sm font-medium text-mw-gray-900 dark:text-white',\n                notification.status === 'unread' && 'font-semibold'\n              )}>\n                {notification.title}\n              </h4>\n              \n              {!compact && (\n                <p className=\"mt-1 text-sm text-mw-gray-600 dark:text-mw-gray-400\">\n                  {notification.message}\n                </p>\n              )}\n              \n              <div className=\"mt-1 flex items-center space-x-2\">\n                <span className=\"text-xs text-mw-gray-500 dark:text-mw-gray-500\">\n                  {formatTimestamp(notification.timestamp)}\n                </span>\n                {notification.status === 'unread' && (\n                  <span className=\"w-2 h-2 bg-mw-blue-500 rounded-full\"></span>\n                )}\n              </div>\n            </div>\n\n            {/* Close button */}\n            <button\n              onClick={(e) => {\n                e.stopPropagation()\n                handleClose()\n              }}\n              className=\"flex-shrink-0 p-1 rounded-full hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n\n          {/* Actions */}\n          {notification.actions && notification.actions.length > 0 && (\n            <div className=\"mt-3 flex space-x-2\">\n              {notification.actions.map((action, index) => (\n                <button\n                  key={index}\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    handleActionClick(action)\n                  }}\n                  className={cn(\n                    'px-3 py-1 text-xs font-medium rounded transition-colors',\n                    action.variant === 'primary'\n                      ? 'bg-mw-blue-600 text-white hover:bg-mw-blue-700'\n                      : 'bg-mw-gray-100 dark:bg-mw-gray-800 text-mw-gray-700 dark:text-mw-gray-300 hover:bg-mw-gray-200 dark:hover:bg-mw-gray-700'\n                  )}\n                >\n                  {action.label}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function NotificationList({\n  notifications,\n  onClose,\n  onMarkAsRead,\n  onMarkAllAsRead,\n  onClearAll,\n  maxHeight = '400px',\n  emptyMessage = 'No notifications',\n  className\n}: NotificationListProps) {\n  const unreadCount = notifications.filter(n => n.status === 'unread').length\n\n  if (notifications.length === 0) {\n    return (\n      <div className={cn(\n        'flex flex-col items-center justify-center py-8 text-center',\n        className\n      )}>\n        <Bell className=\"w-12 h-12 text-mw-gray-300 dark:text-mw-gray-600 mb-3\" />\n        <p className=\"text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n          {emptyMessage}\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className={cn('bg-white dark:bg-mw-gray-900 border border-mw-gray-200 dark:border-mw-gray-700 rounded-lg', className)}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-mw-gray-200 dark:border-mw-gray-700\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"text-sm font-medium text-mw-gray-900 dark:text-white\">\n            Notifications\n          </h3>\n          {unreadCount > 0 && (\n            <span className=\"px-2 py-1 text-xs font-medium bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300 rounded-full\">\n              {unreadCount}\n            </span>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {unreadCount > 0 && (\n            <button\n              onClick={onMarkAllAsRead}\n              className=\"text-xs text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-700 dark:hover:text-mw-blue-300\"\n            >\n              Mark all read\n            </button>\n          )}\n          <button\n            onClick={onClearAll}\n            className=\"text-xs text-mw-gray-500 dark:text-mw-gray-400 hover:text-mw-gray-700 dark:hover:text-mw-gray-300\"\n          >\n            Clear all\n          </button>\n        </div>\n      </div>\n\n      {/* Notification list */}\n      <div \n        className=\"overflow-y-auto\"\n        style={{ maxHeight }}\n      >\n        <div className=\"divide-y divide-mw-gray-200 dark:divide-mw-gray-700\">\n          {notifications.map((notification) => (\n            <div key={notification.id} className=\"p-4\">\n              <Notification\n                notification={notification}\n                onClose={onClose}\n                onMarkAsRead={onMarkAsRead}\n                compact\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport function NotificationBadge({\n  count,\n  showDot = false,\n  max = 99,\n  className,\n  children\n}: NotificationBadgeProps) {\n  const displayCount = count > max ? `${max}+` : count.toString()\n  const hasNotifications = count > 0\n\n  return (\n    <div className={cn('relative inline-block', className)}>\n      {children}\n      \n      {hasNotifications && (\n        <>\n          {showDot ? (\n            <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full border-2 border-white dark:border-mw-gray-900\"></span>\n          ) : (\n            <span className=\"absolute -top-2 -right-2 min-w-[1.25rem] h-5 px-1 bg-red-500 text-white text-xs font-medium rounded-full flex items-center justify-center border-2 border-white dark:border-mw-gray-900\">\n              {displayCount}\n            </span>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\n// Notification Bell Component\ninterface NotificationBellProps {\n  notifications: NotificationData[]\n  onNotificationClick?: (notification: NotificationData) => void\n  onMarkAsRead?: (id: string) => void\n  onMarkAllAsRead?: () => void\n  onClearAll?: () => void\n  className?: string\n}\n\nexport function NotificationBell({\n  notifications,\n  onNotificationClick,\n  onMarkAsRead,\n  onMarkAllAsRead,\n  onClearAll,\n  className\n}: NotificationBellProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const unreadCount = notifications.filter(n => n.status === 'unread').length\n\n  return (\n    <div className={cn('relative', className)}>\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative p-2 rounded-lg hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-600 dark:text-mw-gray-400\"\n      >\n        <NotificationBadge count={unreadCount}>\n          {unreadCount > 0 ? (\n            <BellRing className=\"w-5 h-5\" />\n          ) : (\n            <Bell className=\"w-5 h-5\" />\n          )}\n        </NotificationBadge>\n      </button>\n\n      {isOpen && (\n        <>\n          <div\n            className=\"fixed inset-0 z-40\"\n            onClick={() => setIsOpen(false)}\n          />\n          <div className=\"absolute right-0 top-full mt-2 w-80 z-50\">\n            <NotificationList\n              notifications={notifications}\n              onClose={(id) => {\n                onNotificationClick?.(notifications.find(n => n.id === id)!)\n              }}\n              onMarkAsRead={onMarkAsRead}\n              onMarkAllAsRead={onMarkAllAsRead}\n              onClearAll={onClearAll}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n"]}