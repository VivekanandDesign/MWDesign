{"version":3,"file":"Progress.jsx","sourceRoot":"","sources":["../../../src/components/ui/Progress.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;;AAEZ,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAClC,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAW3B,MAAM,aAAa,GAAG;IACpB,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;IACT,EAAE,EAAE,KAAK;CACV,CAAA;AAED,MAAM,gBAAgB,GAAG;IACvB,OAAO,EAAE,gBAAgB;IACzB,OAAO,EAAE,cAAc;IACvB,OAAO,EAAE,eAAe;IACxB,KAAK,EAAE,YAAY;CACpB,CAAA;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAU,CAChC,CAAC,EASA,EAAE,GAAG,EAAE,EAAE;QATT,EACC,SAAS,EACT,KAAK,GAAG,CAAC,EACT,GAAG,GAAG,GAAG,EACT,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,SAAS,EACnB,SAAS,GAAG,KAAK,EACjB,KAAK,OAEN,EADI,KAAK,cART,sEASA,CADS;IAER,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;IAElE,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;QAAA,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,CACvB,CAAC,GAAG,CAAC,SAAS,CAAC,mCAAmC,CAChD;YAAA,CAAC,IAAI,CAAC,SAAS,CAAC,4DAA4D,CAC1E;cAAA,CAAC,KAAK,IAAI,UAAU,CACtB;YAAA,EAAE,IAAI,CACN;YAAA,CAAC,SAAS,IAAI,CACZ,CAAC,IAAI,CAAC,SAAS,CAAC,gDAAgD,CAC9D;gBAAA,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;cAC1B,EAAE,IAAI,CAAC,CACR,CACH;UAAA,EAAE,GAAG,CAAC,CACP,CACD;QAAA,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,IAAI,CACb,wEAAwE,EACxE,aAAa,CAAC,IAAI,CAAC,EACnB,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;UAAA,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,IAAI,CACb,6DAA6D,EAC7D,gBAAgB,CAAC,OAAO,CAAC,CAC1B,CAAC,CACF,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC,CACnC,IAAI,CAAC,aAAa,CAClB,aAAa,CAAC,CAAC,KAAK,CAAC,CACrB,aAAa,CAAC,CAAC,GAAG,CAAC,CACnB,aAAa,CAAC,CAAC,CAAC,CAAC,EAErB;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC,CACF,CAAA;AAED,QAAQ,CAAC,WAAW,GAAG,UAAU,CAAA","sourcesContent":["'use client'\n\nimport { forwardRef } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n  max?: number\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'success' | 'warning' | 'error'\n  showLabel?: boolean\n  label?: string\n}\n\nconst progressSizes = {\n  sm: 'h-1',\n  md: 'h-2',\n  lg: 'h-3'\n}\n\nconst progressVariants = {\n  default: 'bg-mw-blue-600',\n  success: 'bg-green-600',\n  warning: 'bg-yellow-600',\n  error: 'bg-red-600'\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  ({ \n    className, \n    value = 0, \n    max = 100, \n    size = 'md', \n    variant = 'default', \n    showLabel = false,\n    label,\n    ...props \n  }, ref) => {\n    const percentage = Math.min(Math.max((value / max) * 100, 0), 100)\n\n    return (\n      <div className=\"space-y-2\">\n        {(showLabel || label) && (\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-sm font-medium text-mw-gray-700 dark:text-mw-gray-300\">\n              {label || 'Progress'}\n            </span>\n            {showLabel && (\n              <span className=\"text-sm text-mw-gray-500 dark:text-mw-gray-400\">\n                {Math.round(percentage)}%\n              </span>\n            )}\n          </div>\n        )}\n        <div\n          ref={ref}\n          className={clsx(\n            'w-full bg-mw-gray-200 dark:bg-mw-gray-700 rounded-full overflow-hidden',\n            progressSizes[size],\n            className\n          )}\n          {...props}\n        >\n          <div\n            className={clsx(\n              'h-full transition-all duration-300 ease-in-out rounded-full',\n              progressVariants[variant]\n            )}\n            style={{ width: `${percentage}%` }}\n            role=\"progressbar\"\n            aria-valuenow={value}\n            aria-valuemax={max}\n            aria-valuemin={0}\n          />\n        </div>\n      </div>\n    )\n  }\n)\n\nProgress.displayName = 'Progress'\n"]}