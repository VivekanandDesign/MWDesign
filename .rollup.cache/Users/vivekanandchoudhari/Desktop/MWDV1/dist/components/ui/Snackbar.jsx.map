{"version":3,"file":"Snackbar.jsx","sourceRoot":"","sources":["../../../src/components/ui/Snackbar.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useCallback, useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react'\n\nfunction cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport type SnackbarType = 'success' | 'error' | 'warning' | 'info'\nexport type SnackbarPosition = 'top' | 'top-right' | 'top-left' | 'bottom' | 'bottom-right' | 'bottom-left'\n\nexport interface SnackbarOptions {\n  id?: string\n  type?: SnackbarType\n  title?: string\n  message: string\n  duration?: number\n  persistent?: boolean\n  action?: {\n    label: string\n    onClick: () => void\n  }\n  onClose?: () => void\n}\n\ninterface SnackbarState extends Required<Omit<SnackbarOptions, 'action' | 'onClose'>> {\n  action?: SnackbarOptions['action']\n  onClose?: SnackbarOptions['onClose']\n  timestamp: number\n}\n\ninterface SnackbarContextValue {\n  snackbars: SnackbarState[]\n  show: (options: SnackbarOptions) => string\n  dismiss: (id: string) => void\n  dismissAll: () => void\n}\n\nconst SnackbarContext = createContext<SnackbarContextValue | null>(null)\n\ninterface SnackbarProviderProps {\n  children: React.ReactNode\n  position?: SnackbarPosition\n  maxSnackbars?: number\n  defaultDuration?: number\n}\n\nexport function SnackbarProvider({\n  children,\n  position = 'bottom-right',\n  maxSnackbars = 5,\n  defaultDuration = 5000\n}: SnackbarProviderProps) {\n  const [snackbars, setSnackbars] = useState<SnackbarState[]>([])\n\n  const show = useCallback((options: SnackbarOptions): string => {\n    const id = options.id || `snackbar-${Date.now()}-${Math.random()}`\n    \n    const snackbar: SnackbarState = {\n      id,\n      type: options.type || 'info',\n      title: options.title || '',\n      message: options.message,\n      duration: options.duration !== undefined ? options.duration : defaultDuration,\n      persistent: options.persistent || false,\n      action: options.action,\n      onClose: options.onClose,\n      timestamp: Date.now()\n    }\n\n    setSnackbars(prev => {\n      const newSnackbars = [snackbar, ...prev]\n      \n      // Remove oldest if exceeding max\n      if (newSnackbars.length > maxSnackbars) {\n        return newSnackbars.slice(0, maxSnackbars)\n      }\n      \n      return newSnackbars\n    })\n\n    return id\n  }, [defaultDuration, maxSnackbars])\n\n  const dismiss = useCallback((id: string) => {\n    setSnackbars(prev => prev.filter(snackbar => snackbar.id !== id))\n  }, [])\n\n  const dismissAll = useCallback(() => {\n    setSnackbars([])\n  }, [])\n\n  const contextValue: SnackbarContextValue = {\n    snackbars,\n    show,\n    dismiss,\n    dismissAll\n  }\n\n  return (\n    <SnackbarContext.Provider value={contextValue}>\n      {children}\n      <SnackbarContainer position={position} />\n    </SnackbarContext.Provider>\n  )\n}\n\nexport function useSnackbar() {\n  const context = useContext(SnackbarContext)\n  if (!context) {\n    throw new Error('useSnackbar must be used within a SnackbarProvider')\n  }\n  return context\n}\n\ninterface SnackbarContainerProps {\n  position: SnackbarPosition\n}\n\nfunction SnackbarContainer({ position }: SnackbarContainerProps) {\n  const { snackbars } = useSnackbar()\n\n  const getPositionClasses = () => {\n    switch (position) {\n      case 'top':\n        return 'top-4 left-1/2 transform -translate-x-1/2'\n      case 'top-right':\n        return 'top-4 right-4'\n      case 'top-left':\n        return 'top-4 left-4'\n      case 'bottom':\n        return 'bottom-4 left-1/2 transform -translate-x-1/2'\n      case 'bottom-right':\n        return 'bottom-4 right-4'\n      case 'bottom-left':\n        return 'bottom-4 left-4'\n      default:\n        return 'bottom-4 right-4'\n    }\n  }\n\n  if (typeof document === 'undefined') return null\n\n  return createPortal(\n    <div\n      className={cn(\n        'fixed z-50 flex flex-col space-y-2 max-w-sm',\n        getPositionClasses()\n      )}\n    >\n      {snackbars.map((snackbar) => (\n        <SnackbarItem key={snackbar.id} snackbar={snackbar} />\n      ))}\n    </div>,\n    document.body\n  )\n}\n\ninterface SnackbarItemProps {\n  snackbar: SnackbarState\n}\n\nfunction SnackbarItem({ snackbar }: SnackbarItemProps) {\n  const { dismiss } = useSnackbar()\n  const [isVisible, setIsVisible] = useState(false)\n  const [isExiting, setIsExiting] = useState(false)\n\n  useEffect(() => {\n    // Show animation\n    const showTimer = setTimeout(() => {\n      setIsVisible(true)\n    }, 10)\n\n    // Auto dismiss\n    let dismissTimer: NodeJS.Timeout\n    if (!snackbar.persistent && snackbar.duration > 0) {\n      dismissTimer = setTimeout(() => {\n        handleDismiss()\n      }, snackbar.duration)\n    }\n\n    return () => {\n      clearTimeout(showTimer)\n      if (dismissTimer) clearTimeout(dismissTimer)\n    }\n  }, [snackbar.duration, snackbar.persistent])\n\n  const handleDismiss = () => {\n    setIsExiting(true)\n    setTimeout(() => {\n      dismiss(snackbar.id)\n      snackbar.onClose?.()\n    }, 200) // Match exit animation duration\n  }\n\n  const handleActionClick = () => {\n    snackbar.action?.onClick()\n    handleDismiss()\n  }\n\n  const getIcon = () => {\n    switch (snackbar.type) {\n      case 'success':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />\n      case 'error':\n        return <AlertCircle className=\"w-5 h-5 text-red-500\" />\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />\n      case 'info':\n        return <Info className=\"w-5 h-5 text-blue-500\" />\n      default:\n        return <Info className=\"w-5 h-5 text-blue-500\" />\n    }\n  }\n\n  const getTypeClasses = () => {\n    switch (snackbar.type) {\n      case 'success':\n        return 'border-green-200 dark:border-green-800'\n      case 'error':\n        return 'border-red-200 dark:border-red-800'\n      case 'warning':\n        return 'border-yellow-200 dark:border-yellow-800'\n      case 'info':\n        return 'border-blue-200 dark:border-blue-800'\n      default:\n        return 'border-mw-gray-200 dark:border-mw-gray-700'\n    }\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-start p-4 bg-white dark:bg-mw-gray-900 border rounded-lg shadow-lg transition-all duration-200 ease-in-out transform',\n        'max-w-sm w-full',\n        getTypeClasses(),\n        isVisible && !isExiting ? 'translate-x-0 opacity-100' : 'translate-x-full opacity-0',\n        isExiting && '-translate-x-full opacity-0'\n      )}\n    >\n      {/* Icon */}\n      <div className=\"flex-shrink-0 mr-3\">\n        {getIcon()}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 min-w-0\">\n        {snackbar.title && (\n          <div className=\"text-sm font-medium text-mw-gray-900 dark:text-white mb-1\">\n            {snackbar.title}\n          </div>\n        )}\n        <div className=\"text-sm text-mw-gray-700 dark:text-mw-gray-300\">\n          {snackbar.message}\n        </div>\n        \n        {/* Action */}\n        {snackbar.action && (\n          <div className=\"mt-2\">\n            <button\n              onClick={handleActionClick}\n              className=\"text-sm font-medium text-mw-blue-600 dark:text-mw-blue-400 hover:text-mw-blue-700 dark:hover:text-mw-blue-300\"\n            >\n              {snackbar.action.label}\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Close button */}\n      <button\n        onClick={handleDismiss}\n        className=\"flex-shrink-0 ml-2 p-1 rounded-full hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-300\"\n      >\n        <X className=\"w-4 h-4\" />\n      </button>\n    </div>\n  )\n}\n\n// Convenience hooks for different types\nexport function useSnackbarHelpers() {\n  const { show } = useSnackbar()\n  \n  return {\n    success: (message: string, options?: Omit<SnackbarOptions, 'message' | 'type'>) =>\n      show({ ...options, message, type: 'success' }),\n    error: (message: string, options?: Omit<SnackbarOptions, 'message' | 'type'>) =>\n      show({ ...options, message, type: 'error' }),\n    warning: (message: string, options?: Omit<SnackbarOptions, 'message' | 'type'>) =>\n      show({ ...options, message, type: 'warning' }),\n    info: (message: string, options?: Omit<SnackbarOptions, 'message' | 'type'>) =>\n      show({ ...options, message, type: 'info' })\n  }\n}\n"]}