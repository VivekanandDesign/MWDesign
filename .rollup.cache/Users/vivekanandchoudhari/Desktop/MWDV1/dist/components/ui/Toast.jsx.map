{"version":3,"file":"Toast.jsx","sourceRoot":"","sources":["../../../src/components/ui/Toast.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport { createContext, useContext, useState, useCallback } from 'react'\nimport { clsx } from 'clsx'\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react'\n\nexport interface Toast {\n  id: string\n  title?: string\n  description?: string\n  variant?: 'default' | 'success' | 'error' | 'warning' | 'info'\n  duration?: number\n  action?: {\n    label: string\n    onClick: () => void\n  }\n}\n\ninterface ToastContextType {\n  toasts: Toast[]\n  addToast: (toast: Omit<Toast, 'id'>) => void\n  removeToast: (id: string) => void\n}\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined)\n\nexport function useToast() {\n  const context = useContext(ToastContext)\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider')\n  }\n  return context\n}\n\nexport function ToastProvider({ children }: { children: React.ReactNode }) {\n  const [toasts, setToasts] = useState<Toast[]>([])\n\n  const addToast = useCallback((toast: Omit<Toast, 'id'>) => {\n    const id = Math.random().toString(36).substr(2, 9)\n    const newToast = { ...toast, id }\n    \n    setToasts(prev => [...prev, newToast])\n\n    // Auto remove after duration\n    const duration = toast.duration ?? 5000\n    if (duration > 0) {\n      setTimeout(() => {\n        removeToast(id)\n      }, duration)\n    }\n  }, [])\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id))\n  }, [])\n\n  return (\n    <ToastContext.Provider value={{ toasts, addToast, removeToast }}>\n      {children}\n      <ToastContainer />\n    </ToastContext.Provider>\n  )\n}\n\nfunction ToastContainer() {\n  const { toasts } = useToast()\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 flex flex-col space-y-2 max-w-sm\">\n      {toasts.map(toast => (\n        <ToastComponent key={toast.id} toast={toast} />\n      ))}\n    </div>\n  )\n}\n\nconst toastVariants = {\n  default: {\n    container: 'bg-white dark:bg-mw-gray-800 border-mw-gray-200 dark:border-mw-gray-700',\n    icon: Info,\n    iconColor: 'text-mw-blue-600'\n  },\n  success: {\n    container: 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800',\n    icon: CheckCircle,\n    iconColor: 'text-green-600'\n  },\n  error: {\n    container: 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800',\n    icon: AlertCircle,\n    iconColor: 'text-red-600'\n  },\n  warning: {\n    container: 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800',\n    icon: AlertTriangle,\n    iconColor: 'text-yellow-600'\n  },\n  info: {\n    container: 'bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800',\n    icon: Info,\n    iconColor: 'text-blue-600'\n  }\n}\n\nfunction ToastComponent({ toast }: { toast: Toast }) {\n  const { removeToast } = useToast()\n  const variant = toastVariants[toast.variant || 'default']\n  const Icon = variant.icon\n\n  return (\n    <div\n      className={clsx(\n        'flex items-start p-4 border rounded-lg shadow-lg animate-in slide-in-from-right-full',\n        variant.container\n      )}\n    >\n      <Icon className={clsx('w-5 h-5 mt-0.5 mr-3 flex-shrink-0', variant.iconColor)} />\n      \n      <div className=\"flex-1 min-w-0\">\n        {toast.title && (\n          <p className=\"text-sm font-semibold text-mw-gray-900 dark:text-white\">\n            {toast.title}\n          </p>\n        )}\n        {toast.description && (\n          <p className={clsx(\n            'text-sm text-mw-gray-600 dark:text-mw-gray-300',\n            toast.title && 'mt-1'\n          )}>\n            {toast.description}\n          </p>\n        )}\n        {toast.action && (\n          <button\n            onClick={toast.action.onClick}\n            className=\"mt-2 text-sm font-medium text-mw-blue-600 hover:text-mw-blue-700 dark:text-mw-blue-400 dark:hover:text-mw-blue-300\"\n          >\n            {toast.action.label}\n          </button>\n        )}\n      </div>\n      \n      <button\n        onClick={() => removeToast(toast.id)}\n        className=\"ml-3 flex-shrink-0 text-mw-gray-400 hover:text-mw-gray-600 dark:hover:text-mw-gray-200\"\n      >\n        <X className=\"w-4 h-4\" />\n      </button>\n    </div>\n  )\n}\n"]}