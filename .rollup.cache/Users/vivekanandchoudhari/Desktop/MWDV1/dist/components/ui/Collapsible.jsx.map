{"version":3,"file":"Collapsible.jsx","sourceRoot":"","sources":["../../../src/components/ui/Collapsible.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { useState, createContext, useContext } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface CollapsibleProps {\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  disabled?: boolean\n  children: React.ReactNode\n}\n\nexport interface CollapsibleTriggerProps extends React.HTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean\n  children: React.ReactNode\n}\n\nexport interface CollapsibleContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n}\n\nconst CollapsibleContext = createContext<{\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  disabled: boolean\n} | null>(null)\n\nexport function Collapsible({ \n  open = false, \n  onOpenChange, \n  disabled = false, \n  children \n}: CollapsibleProps) {\n  return (\n    <CollapsibleContext.Provider value={{ \n      open, \n      onOpenChange: onOpenChange || (() => {}), \n      disabled \n    }}>\n      {children}\n    </CollapsibleContext.Provider>\n  )\n}\n\nexport function CollapsibleTrigger({ \n  asChild, \n  children, \n  onClick, \n  className,\n  ...props \n}: CollapsibleTriggerProps) {\n  const context = useContext(CollapsibleContext)\n  \n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    onClick?.(e)\n    if (!context?.disabled) {\n      context?.onOpenChange(!context.open)\n    }\n  }\n\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      onClick: handleClick,\n      disabled: context?.disabled,\n      'aria-expanded': context?.open,\n      'data-state': context?.open ? 'open' : 'closed',\n      ...props\n    })\n  }\n\n  return (\n    <button\n      onClick={handleClick}\n      disabled={context?.disabled}\n      aria-expanded={context?.open}\n      data-state={context?.open ? 'open' : 'closed'}\n      className={clsx(\n        'flex items-center justify-between w-full text-left',\n        'disabled:opacity-50 disabled:cursor-not-allowed',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport function CollapsibleContent({ \n  children, \n  className, \n  ...props \n}: CollapsibleContentProps) {\n  const context = useContext(CollapsibleContext)\n\n  return (\n    <div\n      data-state={context?.open ? 'open' : 'closed'}\n      className={clsx(\n        'overflow-hidden transition-all duration-300 ease-in-out',\n        context?.open \n          ? 'animate-in slide-in-from-top-1 fade-in-0' \n          : 'animate-out slide-out-to-top-1 fade-out-0 hidden',\n        className\n      )}\n      {...props}\n    >\n      {context?.open && (\n        <div className=\"pt-1\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}\n\n// Utility hook for controlled collapsibles\nexport function useCollapsible() {\n  const [open, setOpen] = useState(false)\n  \n  return {\n    open,\n    setOpen,\n    onOpenChange: setOpen,\n    toggle: () => setOpen(prev => !prev)\n  }\n}\n"]}