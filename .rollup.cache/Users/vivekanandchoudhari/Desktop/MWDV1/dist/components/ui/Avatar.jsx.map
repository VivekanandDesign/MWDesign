{"version":3,"file":"Avatar.jsx","sourceRoot":"","sources":["../../../src/components/ui/Avatar.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react'\nimport { clsx } from 'clsx'\n\nexport interface AvatarProps extends React.HTMLAttributes<HTMLDivElement> {\n  src?: string\n  alt?: string\n  fallback?: string\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n  variant?: 'circle' | 'square'\n}\n\nconst avatarSizes = {\n  sm: 'w-8 h-8 text-xs',\n  md: 'w-10 h-10 text-sm',\n  lg: 'w-12 h-12 text-base',\n  xl: 'w-16 h-16 text-lg',\n  '2xl': 'w-20 h-20 text-xl'\n}\n\nconst avatarVariants = {\n  circle: 'rounded-full',\n  square: 'rounded-md'\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  ({ className, src, alt, fallback, size = 'md', variant = 'circle', ...props }, ref) => {\n    const initials = fallback || alt?.charAt(0)?.toUpperCase() || '?'\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          'relative inline-flex items-center justify-center font-medium bg-mw-gray-100 dark:bg-mw-gray-700 text-mw-gray-600 dark:text-mw-gray-300 overflow-hidden',\n          avatarSizes[size],\n          avatarVariants[variant],\n          className\n        )}\n        {...props}\n      >\n        {src ? (\n          <img\n            src={src}\n            alt={alt}\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <span className=\"select-none\">\n            {initials}\n          </span>\n        )}\n      </div>\n    )\n  }\n)\n\nAvatar.displayName = 'Avatar'\n\nexport interface AvatarGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode\n  max?: number\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n  spacing?: 'tight' | 'normal' | 'loose'\n}\n\nconst spacingClasses = {\n  tight: '-space-x-1',\n  normal: '-space-x-2',\n  loose: '-space-x-3'\n}\n\nexport const AvatarGroup = forwardRef<HTMLDivElement, AvatarGroupProps>(\n  ({ className, children, max, size = 'md', spacing = 'normal', ...props }, ref) => {\n    const childrenArray = React.Children.toArray(children)\n    const displayChildren = max ? childrenArray.slice(0, max) : childrenArray\n    const remainingCount = max ? Math.max(0, childrenArray.length - max) : 0\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          'flex items-center',\n          spacingClasses[spacing],\n          className\n        )}\n        {...props}\n      >\n        {displayChildren.map((child, index) => (\n          <div key={index} className=\"ring-2 ring-white dark:ring-mw-gray-900\">\n            {React.isValidElement(child) && child.type === Avatar\n              ? React.cloneElement(child, { size } as any)\n              : child}\n          </div>\n        ))}\n        {remainingCount > 0 && (\n          <div className=\"ring-2 ring-white dark:ring-mw-gray-900\">\n            <Avatar\n              size={size}\n              fallback={`+${remainingCount}`}\n              className=\"bg-mw-gray-200 dark:bg-mw-gray-600 text-mw-gray-700 dark:text-mw-gray-200\"\n            />\n          </div>\n        )}\n      </div>\n    )\n  }\n)\n\nAvatarGroup.displayName = 'AvatarGroup'\n"]}