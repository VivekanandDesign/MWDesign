{"version":3,"file":"Spinner.jsx","sourceRoot":"","sources":["../../../src/components/ui/Spinner.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAO3B,MAAM,YAAY,GAAG;IACnB,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,WAAW;CAChB,CAAA;AAED,MAAM,eAAe,GAAG;IACtB,OAAO,EAAE,wCAAwC;IACjD,OAAO,EAAE,wCAAwC;IACjD,KAAK,EAAE,YAAY;CACpB,CAAA;AAED,MAAM,UAAU,OAAO,CAAC,EAAuE;QAAvE,EAAE,SAAS,EAAE,IAAI,GAAG,IAAI,EAAE,OAAO,GAAG,SAAS,OAA0B,EAArB,KAAK,cAAvD,gCAAyD,CAAF;IAC7E,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,IAAI,CACb,qKAAqK,EACrK,YAAY,CAAC,IAAI,CAAC,EAClB,eAAe,CAAC,OAAO,CAAC,EACxB,SAAS,CACV,CAAC,CACF,IAAI,CAAC,QAAQ,CACb,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAC5C;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC;AASD,MAAM,UAAU,OAAO,CAAC,EAOT;QAPS,EACtB,SAAS,EACT,IAAI,GAAG,IAAI,EACX,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,YAAY,EACnB,OAAO,GAAG,KAAK,OAEF,EADV,KAAK,cANc,mDAOvB,CADS;IAER,MAAM,OAAO,GAAG,CACd,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAClB,qDAAqD,EACrD,OAAO,IAAI,qDAAqD,CACjE,CAAC,CACA;MAAA,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EACtC;MAAA,CAAC,IAAI,IAAI,CACP,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAChB,qBAAqB,EACrB,eAAe,CAAC,OAAO,CAAC,CACzB,CAAC,CACA;UAAA,CAAC,IAAI,CACP;QAAA,EAAE,CAAC,CAAC,CACL,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;IAED,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,IAAI,CACb,wDAAwD,EACxD,SAAS,CACV,CAAC,CACF,IAAI,KAAK,CAAC,CAEV;QAAA,CAAC,OAAO,CACV;MAAA,EAAE,GAAG,CAAC,CACP,CAAA;IACH,CAAC;IAED,OAAO,CACL,CAAC,GAAG,CACF,SAAS,CAAC,CAAC,IAAI,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC,CACnE,IAAI,KAAK,CAAC,CAEV;MAAA,CAAC,OAAO,CACV;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC","sourcesContent":["import { clsx } from 'clsx'\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  variant?: 'default' | 'primary' | 'white'\n}\n\nconst spinnerSizes = {\n  sm: 'w-4 h-4',\n  md: 'w-6 h-6',\n  lg: 'w-8 h-8',\n  xl: 'w-12 h-12'\n}\n\nconst spinnerVariants = {\n  default: 'text-mw-gray-600 dark:text-mw-gray-400',\n  primary: 'text-mw-blue-600 dark:text-mw-blue-400',\n  white: 'text-white'\n}\n\nexport function Spinner({ className, size = 'md', variant = 'default', ...props }: SpinnerProps) {\n  return (\n    <div\n      className={clsx(\n        'inline-block animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]',\n        spinnerSizes[size],\n        spinnerVariants[variant],\n        className\n      )}\n      role=\"status\"\n      {...props}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  )\n}\n\nexport interface LoadingProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  variant?: 'default' | 'primary' | 'white'\n  text?: string\n  overlay?: boolean\n}\n\nexport function Loading({ \n  className, \n  size = 'md', \n  variant = 'default', \n  text = 'Loading...', \n  overlay = false,\n  ...props \n}: LoadingProps) {\n  const content = (\n    <div className={clsx(\n      'flex flex-col items-center justify-center space-y-2',\n      overlay && 'bg-white/80 dark:bg-mw-gray-900/80 backdrop-blur-sm'\n    )}>\n      <Spinner size={size} variant={variant} />\n      {text && (\n        <p className={clsx(\n          'text-sm font-medium',\n          spinnerVariants[variant]\n        )}>\n          {text}\n        </p>\n      )}\n    </div>\n  )\n\n  if (overlay) {\n    return (\n      <div\n        className={clsx(\n          'absolute inset-0 z-50 flex items-center justify-center',\n          className\n        )}\n        {...props}\n      >\n        {content}\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className={clsx('flex items-center justify-center p-4', className)}\n      {...props}\n    >\n      {content}\n    </div>\n  )\n}\n"]}