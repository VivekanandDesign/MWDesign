{"version":3,"file":"TreeView.jsx","sourceRoot":"","sources":["../../../src/components/ui/TreeView.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client'\n\nimport React, { useState, useCallback } from 'react'\nimport { ChevronRight, ChevronDown, Folder, FolderOpen, File } from 'lucide-react'\n\nfunction cn(...classes: (string | undefined | null | false)[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n\ninterface TreeNode {\n  id: string\n  label: string\n  children?: TreeNode[]\n  icon?: React.ReactNode\n  disabled?: boolean\n  selectable?: boolean\n  data?: any\n}\n\ninterface TreeViewProps {\n  data: TreeNode[]\n  selectedIds?: string[]\n  expandedIds?: string[]\n  onSelect?: (selectedIds: string[], node: TreeNode) => void\n  onExpand?: (expandedIds: string[]) => void\n  multiple?: boolean\n  defaultExpanded?: string[]\n  defaultSelected?: string[]\n  showIcons?: boolean\n  showLines?: boolean\n  className?: string\n}\n\ninterface TreeItemProps {\n  node: TreeNode\n  level: number\n  isExpanded: boolean\n  isSelected: boolean\n  hasChildren: boolean\n  onToggle: (nodeId: string) => void\n  onSelect: (nodeId: string, node: TreeNode) => void\n  showIcons: boolean\n  showLines: boolean\n  isLast?: boolean\n  parentLines?: boolean[]\n}\n\nfunction TreeItem({\n  node,\n  level,\n  isExpanded,\n  isSelected,\n  hasChildren,\n  onToggle,\n  onSelect,\n  showIcons,\n  showLines,\n  isLast = false,\n  parentLines = []\n}: TreeItemProps) {\n  const handleToggle = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    if (hasChildren) {\n      onToggle(node.id)\n    }\n  }\n\n  const handleSelect = () => {\n    if (!node.disabled && node.selectable !== false) {\n      onSelect(node.id, node)\n    }\n  }\n\n  const getDefaultIcon = () => {\n    if (hasChildren) {\n      return isExpanded ? <FolderOpen className=\"w-4 h-4\" /> : <Folder className=\"w-4 h-4\" />\n    }\n    return <File className=\"w-4 h-4\" />\n  }\n\n  const currentLines = [...parentLines, !isLast]\n\n  return (\n    <>\n      <div\n        className={cn(\n          'group flex items-center py-1 px-2 hover:bg-mw-gray-100 dark:hover:bg-mw-gray-800 cursor-pointer transition-colors relative',\n          isSelected && 'bg-mw-blue-100 dark:bg-mw-blue-900/20 text-mw-blue-700 dark:text-mw-blue-300',\n          node.disabled && 'opacity-50 cursor-not-allowed',\n          level > 0 && 'ml-4'\n        )}\n        onClick={handleSelect}\n        style={{ paddingLeft: `${level * 20 + 8}px` }}\n      >\n        {/* Tree lines */}\n        {showLines && level > 0 && (\n          <div className=\"absolute left-0 top-0 h-full pointer-events-none\">\n            {parentLines.map((hasLine, index) => (\n              <div\n                key={index}\n                className=\"absolute top-0 h-full w-px bg-mw-gray-300 dark:bg-mw-gray-600\"\n                style={{ left: `${index * 20 + 10}px` }}\n              >\n                {hasLine && <div className=\"w-full h-full bg-mw-gray-300 dark:bg-mw-gray-600\" />}\n              </div>\n            ))}\n            <div\n              className=\"absolute top-0 h-1/2 w-px bg-mw-gray-300 dark:bg-mw-gray-600\"\n              style={{ left: `${level * 20}px` }}\n            />\n            <div\n              className=\"absolute top-1/2 w-2 h-px bg-mw-gray-300 dark:bg-mw-gray-600\"\n              style={{ left: `${level * 20}px` }}\n            />\n            {!isLast && (\n              <div\n                className=\"absolute top-1/2 bottom-0 w-px bg-mw-gray-300 dark:bg-mw-gray-600\"\n                style={{ left: `${level * 20}px` }}\n              />\n            )}\n          </div>\n        )}\n\n        {/* Expand/collapse button */}\n        <div className=\"flex items-center justify-center w-4 h-4 mr-2\">\n          {hasChildren ? (\n            <button\n              onClick={handleToggle}\n              className=\"text-mw-gray-500 hover:text-mw-gray-700 dark:hover:text-mw-gray-300\"\n            >\n              {isExpanded ? (\n                <ChevronDown className=\"w-3 h-3\" />\n              ) : (\n                <ChevronRight className=\"w-3 h-3\" />\n              )}\n            </button>\n          ) : (\n            showLines && <div className=\"w-3 h-3\" />\n          )}\n        </div>\n\n        {/* Icon */}\n        {showIcons && (\n          <div className=\"flex items-center justify-center w-4 h-4 mr-2 text-mw-gray-500\">\n            {node.icon || getDefaultIcon()}\n          </div>\n        )}\n\n        {/* Label */}\n        <span className=\"text-sm font-medium text-mw-gray-900 dark:text-white select-none\">\n          {node.label}\n        </span>\n      </div>\n\n      {/* Children */}\n      {hasChildren && isExpanded && node.children && (\n        <div>\n          {node.children.map((child, index) => (\n            <TreeItemContainer\n              key={child.id}\n              node={child}\n              level={level + 1}\n              onToggle={onToggle}\n              onSelect={onSelect}\n              showIcons={showIcons}\n              showLines={showLines}\n              isLast={index === node.children!.length - 1}\n              parentLines={currentLines}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n\ninterface TreeItemContainerProps extends Omit<TreeItemProps, 'isExpanded' | 'isSelected' | 'hasChildren'> {\n  node: TreeNode\n}\n\nfunction TreeItemContainer({ node, ...props }: TreeItemContainerProps) {\n  // This would need to be connected to the parent component's state\n  // For now, using internal state as an example\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [isSelected, setIsSelected] = useState(false)\n  \n  const hasChildren = Boolean(node.children && node.children.length > 0)\n\n  const handleToggle = (nodeId: string) => {\n    if (nodeId === node.id) {\n      setIsExpanded(!isExpanded)\n    }\n    props.onToggle(nodeId)\n  }\n\n  const handleSelect = (nodeId: string, selectedNode: TreeNode) => {\n    if (nodeId === node.id) {\n      setIsSelected(!isSelected)\n    }\n    props.onSelect(nodeId, selectedNode)\n  }\n\n  return (\n    <TreeItem\n      {...props}\n      node={node}\n      isExpanded={isExpanded}\n      isSelected={isSelected}\n      hasChildren={hasChildren}\n      onToggle={handleToggle}\n      onSelect={handleSelect}\n    />\n  )\n}\n\nexport function TreeView({\n  data,\n  selectedIds: controlledSelectedIds,\n  expandedIds: controlledExpandedIds,\n  onSelect,\n  onExpand,\n  multiple = false,\n  defaultExpanded = [],\n  defaultSelected = [],\n  showIcons = true,\n  showLines = false,\n  className\n}: TreeViewProps) {\n  const [internalSelectedIds, setInternalSelectedIds] = useState<string[]>(defaultSelected)\n  const [internalExpandedIds, setInternalExpandedIds] = useState<string[]>(defaultExpanded)\n\n  const selectedIds = controlledSelectedIds !== undefined ? controlledSelectedIds : internalSelectedIds\n  const expandedIds = controlledExpandedIds !== undefined ? controlledExpandedIds : internalExpandedIds\n\n  const handleToggle = useCallback((nodeId: string) => {\n    const newExpandedIds = expandedIds.includes(nodeId)\n      ? expandedIds.filter(id => id !== nodeId)\n      : [...expandedIds, nodeId]\n\n    if (controlledExpandedIds === undefined) {\n      setInternalExpandedIds(newExpandedIds)\n    }\n    onExpand?.(newExpandedIds)\n  }, [expandedIds, controlledExpandedIds, onExpand])\n\n  const handleSelect = useCallback((nodeId: string, node: TreeNode) => {\n    let newSelectedIds: string[]\n\n    if (multiple) {\n      newSelectedIds = selectedIds.includes(nodeId)\n        ? selectedIds.filter(id => id !== nodeId)\n        : [...selectedIds, nodeId]\n    } else {\n      newSelectedIds = selectedIds.includes(nodeId) ? [] : [nodeId]\n    }\n\n    if (controlledSelectedIds === undefined) {\n      setInternalSelectedIds(newSelectedIds)\n    }\n    onSelect?.(newSelectedIds, node)\n  }, [selectedIds, multiple, controlledSelectedIds, onSelect])\n\n  const renderTreeItem = (node: TreeNode, level: number, isLast: boolean, parentLines: boolean[] = []) => {\n    const isExpanded = expandedIds.includes(node.id)\n    const isSelected = selectedIds.includes(node.id)\n    const hasChildren = Boolean(node.children && node.children.length > 0)\n    const currentLines = [...parentLines, !isLast]\n\n    return (\n      <React.Fragment key={node.id}>\n        <TreeItem\n          node={node}\n          level={level}\n          isExpanded={isExpanded}\n          isSelected={isSelected}\n          hasChildren={hasChildren}\n          onToggle={handleToggle}\n          onSelect={handleSelect}\n          showIcons={showIcons}\n          showLines={showLines}\n          isLast={isLast}\n          parentLines={parentLines}\n        />\n        \n        {hasChildren && isExpanded && node.children && (\n          <div>\n            {node.children.map((child, index) => \n              renderTreeItem(\n                child, \n                level + 1, \n                index === node.children!.length - 1,\n                currentLines\n              )\n            )}\n          </div>\n        )}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <div className={cn('py-2', className)}>\n      {data.map((node, index) => \n        renderTreeItem(node, 0, index === data.length - 1)\n      )}\n    </div>\n  )\n}\n\n// Utility function to find a node by ID\nexport function findTreeNode(data: TreeNode[], nodeId: string): TreeNode | null {\n  for (const node of data) {\n    if (node.id === nodeId) {\n      return node\n    }\n    if (node.children) {\n      const found = findTreeNode(node.children, nodeId)\n      if (found) return found\n    }\n  }\n  return null\n}\n\n// Utility function to get all node IDs\nexport function getAllNodeIds(data: TreeNode[]): string[] {\n  const ids: string[] = []\n  \n  function traverse(nodes: TreeNode[]) {\n    for (const node of nodes) {\n      ids.push(node.id)\n      if (node.children) {\n        traverse(node.children)\n      }\n    }\n  }\n  \n  traverse(data)\n  return ids\n}\n\n// Utility function to get parent node IDs for expansion\nexport function getParentIds(data: TreeNode[], targetId: string): string[] {\n  const parentIds: string[] = []\n  \n  function findParents(nodes: TreeNode[], parents: string[] = []): boolean {\n    for (const node of nodes) {\n      if (node.id === targetId) {\n        parentIds.push(...parents)\n        return true\n      }\n      if (node.children) {\n        if (findParents(node.children, [...parents, node.id])) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n  \n  findParents(data)\n  return parentIds\n}\n"]}