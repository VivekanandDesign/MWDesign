{"version":3,"file":"CustomizationPanel.jsx","sourceRoot":"","sources":["../../src/components/CustomizationPanel.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from './ui/Button';\nimport { Input } from './ui/Input';\nimport { Select } from './ui/Select';\nimport { Slider } from './ui/Slider';\nimport { Switch } from './ui/Switch';\nimport { Card } from './ui/Card';\nimport { Separator } from './ui/Separator';\nimport { Badge } from './ui/Badge';\nimport { Settings, RotateCcw, Save, Palette } from 'lucide-react';\nimport { useIconCustomization, IconCustomization, CustomizationPreferences } from '../hooks/useIconCustomization';\n\ninterface CustomizationPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n  iconName?: string;\n  className?: string;\n}\n\nexport function CustomizationPanel({ isOpen, onClose, iconName, className = '' }: CustomizationPanelProps) {\n  const {\n    customization,\n    preferences,\n    updateCustomization,\n    updatePreferences,\n    resetCustomization,\n    applyPreferencesToCustomization,\n    generateCustomizedSVG,\n    generateCustomizedJSX,\n    generateCustomizedImport\n  } = useIconCustomization();\n\n  if (!isOpen) return null;\n\n  const colorPresets = [\n    { name: 'Current Color', value: 'currentColor' },\n    { name: 'MW Energy Blue', value: '#1d65af' },\n    { name: 'MW Orange', value: '#4cb0e4' },\n    { name: 'MW Flow Teal', value: '#00bcd4' },\n    { name: 'Success Green', value: '#10b981' },\n    { name: 'Warning Yellow', value: '#f59e0b' },\n    { name: 'Danger Red', value: '#ef4444' },\n    { name: 'Black', value: '#000000' },\n    { name: 'White', value: '#ffffff' }\n  ];\n\n  const sizePresets = [16, 20, 24, 28, 32, 40, 48, 64];\n  const strokeWidthPresets = [1, 1.5, 2, 2.5, 3, 4];\n\n  return (\n    <div className={`fixed inset-y-0 right-0 w-80 bg-white dark:bg-gray-900 border-l border-gray-200 dark:border-gray-700 shadow-xl overflow-y-auto z-50 ${className}`}>\n      <div className=\"p-4\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"w-5 h-5\" />\n            <h2 className=\"text-lg font-semibold\">Icon Customization</h2>\n          </div>\n          <Button onClick={onClose} variant=\"ghost\" size=\"sm\">\n            ×\n          </Button>\n        </div>\n\n        {iconName && (\n          <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n            <Badge variant=\"outline\" className=\"mb-2\">{iconName}</Badge>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Customizing this icon\n            </div>\n          </div>\n        )}\n\n        {/* Size Controls */}\n        <Card className=\"p-4 mb-4\">\n          <h3 className=\"font-medium mb-3 flex items-center gap-2\">\n            Size & Stroke\n          </h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Size (px)</label>\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Slider\n                  value={customization.size}\n                  onChange={(value) => updateCustomization({ size: value })}\n                  min={12}\n                  max={128}\n                  step={4}\n                  className=\"flex-1\"\n                />\n                <Input\n                  type=\"number\"\n                  value={customization.size}\n                  onChange={(e) => updateCustomization({ size: parseInt(e.target.value) || 24 })}\n                  className=\"w-16 text-sm\"\n                  min={12}\n                  max={128}\n                />\n              </div>\n              <div className=\"flex gap-1\">\n                {sizePresets.map(size => (\n                  <Button\n                    key={size}\n                    onClick={() => updateCustomization({ size })}\n                    variant={customization.size === size ? 'primary' : 'ghost'}\n                    size=\"sm\"\n                    className=\"text-xs\"\n                  >\n                    {size}\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Stroke Width</label>\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Slider\n                  value={customization.strokeWidth}\n                  onChange={(value) => updateCustomization({ strokeWidth: value })}\n                  min={0.5}\n                  max={5}\n                  step={0.5}\n                  className=\"flex-1\"\n                />\n                <Input\n                  type=\"number\"\n                  value={customization.strokeWidth}\n                  onChange={(e) => updateCustomization({ strokeWidth: parseFloat(e.target.value) || 2 })}\n                  className=\"w-16 text-sm\"\n                  min={0.5}\n                  max={5}\n                  step={0.5}\n                />\n              </div>\n              <div className=\"flex gap-1\">\n                {strokeWidthPresets.map(width => (\n                  <Button\n                    key={width}\n                    onClick={() => updateCustomization({ strokeWidth: width })}\n                    variant={customization.strokeWidth === width ? 'primary' : 'ghost'}\n                    size=\"sm\"\n                    className=\"text-xs\"\n                  >\n                    {width}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Color Controls */}\n        <Card className=\"p-4 mb-4\">\n          <h3 className=\"font-medium mb-3 flex items-center gap-2\">\n            <Palette className=\"w-4 h-4\" />\n            Colors\n          </h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Stroke Color</label>\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Input\n                  type=\"color\"\n                  value={customization.color === 'currentColor' ? '#000000' : customization.color}\n                  onChange={(e) => updateCustomization({ color: e.target.value })}\n                  className=\"w-12 h-8 p-1\"\n                />\n                <Input\n                  type=\"text\"\n                  value={customization.color}\n                  onChange={(e) => updateCustomization({ color: e.target.value })}\n                  className=\"flex-1 text-sm\"\n                  placeholder=\"currentColor\"\n                />\n              </div>\n              <div className=\"grid grid-cols-3 gap-1\">\n                {colorPresets.map(preset => (\n                  <Button\n                    key={preset.value}\n                    onClick={() => updateCustomization({ color: preset.value })}\n                    variant={customization.color === preset.value ? 'primary' : 'ghost'}\n                    size=\"sm\"\n                    className=\"text-xs justify-start\"\n                  >\n                    <div \n                      className=\"w-3 h-3 rounded mr-1 border border-gray-300\"\n                      style={{ \n                        backgroundColor: preset.value === 'currentColor' ? '#6b7280' : preset.value \n                      }}\n                    />\n                    {preset.name}\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Fill Color (Optional)</label>\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  type=\"color\"\n                  value={customization.fillColor || '#000000'}\n                  onChange={(e) => updateCustomization({ fillColor: e.target.value })}\n                  className=\"w-12 h-8 p-1\"\n                />\n                <Input\n                  type=\"text\"\n                  value={customization.fillColor || ''}\n                  onChange={(e) => updateCustomization({ fillColor: e.target.value || undefined })}\n                  className=\"flex-1 text-sm\"\n                  placeholder=\"none\"\n                />\n                <Button\n                  onClick={() => updateCustomization({ fillColor: undefined })}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"text-xs\"\n                >\n                  Clear\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Class Name */}\n        <Card className=\"p-4 mb-4\">\n          <h3 className=\"font-medium mb-3\">CSS Class</h3>\n          <Input\n            type=\"text\"\n            value={customization.className || ''}\n            onChange={(e) => updateCustomization({ className: e.target.value || undefined })}\n            placeholder=\"icon-class\"\n            className=\"text-sm\"\n          />\n        </Card>\n\n        <Separator className=\"my-4\" />\n\n        {/* Preferences */}\n        <Card className=\"p-4 mb-4\">\n          <h3 className=\"font-medium mb-3\">Preferences</h3>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm\">Include className prop</label>\n              <Switch\n                checked={preferences.includeClassName}\n                onChange={(e) => updatePreferences({ includeClassName: e.target.checked })}\n              />\n            </div>\n            \n            <div>\n              <label className=\"text-sm font-medium mb-1 block\">Naming Convention</label>\n              <Select\n                value={preferences.namingConvention}\n                onChange={(e) => updatePreferences({ \n                  namingConvention: e.target.value as CustomizationPreferences['namingConvention']\n                })}\n                options={[\n                  { value: 'camelCase', label: 'camelCase' },\n                  { value: 'PascalCase', label: 'PascalCase' },\n                  { value: 'kebab-case', label: 'kebab-case' }\n                ]}\n              />\n            </div>\n            \n            <div>\n              <label className=\"text-sm font-medium mb-1 block\">Preferred Format</label>\n              <Select\n                value={preferences.preferredFormat}\n                onChange={(e) => updatePreferences({ \n                  preferredFormat: e.target.value as CustomizationPreferences['preferredFormat']\n                })}\n                options={[\n                  { value: 'svg', label: 'SVG' },\n                  { value: 'jsx', label: 'JSX' },\n                  { value: 'import', label: 'Import' }\n                ]}\n              />\n            </div>\n          </div>\n        </Card>\n\n        {/* Actions */}\n        <div className=\"flex gap-2\">\n          <Button\n            onClick={resetCustomization}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n            Reset\n          </Button>\n          \n          <Button\n            onClick={applyPreferencesToCustomization}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <Save className=\"w-4 h-4\" />\n            Apply Defaults\n          </Button>\n        </div>\n\n        {/* Preview */}\n        {iconName && (\n          <Card className=\"p-4 mt-4\">\n            <h3 className=\"font-medium mb-3\">Preview</h3>\n            <div className=\"space-y-2 text-xs\">\n              <div>\n                <strong>JSX:</strong>\n                <code className=\"block mt-1 p-2 bg-gray-100 dark:bg-gray-800 rounded text-xs\">\n                  {generateCustomizedJSX(iconName)}\n                </code>\n              </div>\n              <div>\n                <strong>Import:</strong>\n                <code className=\"block mt-1 p-2 bg-gray-100 dark:bg-gray-800 rounded text-xs\">\n                  {generateCustomizedImport(iconName)}\n                </code>\n              </div>\n            </div>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n"]}