{"version":3,"file":"IconPreview.jsx","sourceRoot":"","sources":["../../src/components/IconPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from './ui/Button';\nimport { Badge } from './ui/Badge';\nimport { Eye, EyeOff, Maximize2, Minimize2, Star } from 'lucide-react';\nimport { IconCustomization } from '@/hooks/useIconCustomization';\nimport { DynamicIcon } from './DynamicIcon';\n\ninterface IconPreviewProps {\n  iconName: string;\n  customization: IconCustomization;\n  className?: string;\n}\n\n\n\nexport function IconPreview({ iconName, customization, className = '' }: IconPreviewProps) {\n  const [showGrid, setShowGrid] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // Add checkerboard CSS styles on client side only\n  React.useEffect(() => {\n    if (typeof window !== 'undefined' && !document.head.querySelector('style[data-icon-preview]')) {\n      const style = document.createElement('style');\n      style.setAttribute('data-icon-preview', '');\n      style.textContent = `\n        .bg-checkerboard {\n          background-image: \n            linear-gradient(45deg, #f0f0f0 25%, transparent 25%), \n            linear-gradient(-45deg, #f0f0f0 25%, transparent 25%), \n            linear-gradient(45deg, transparent 75%, #f0f0f0 75%), \n            linear-gradient(-45deg, transparent 75%, #f0f0f0 75%);\n          background-size: 20px 20px;\n          background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n        }\n        \n        .dark .bg-checkerboard {\n          background-image: \n            linear-gradient(45deg, #374151 25%, transparent 25%), \n            linear-gradient(-45deg, #374151 25%, transparent 25%), \n            linear-gradient(45deg, transparent 75%, #374151 75%), \n            linear-gradient(-45deg, transparent 75%, #374151 75%);\n        }\n      `;\n      document.head.appendChild(style);\n    }\n  }, []);\n  \n  const previewSizes = [16, 20, 24, 32, 48, 64];\n  const backgroundOptions = [\n    { name: 'None', value: 'transparent', class: '' },\n    { name: 'Light', value: '#f8f9fa', class: 'bg-gray-50' },\n    { name: 'Dark', value: '#1f2937', class: 'bg-gray-800' },\n    { name: 'Primary', value: '#3b82f6', class: 'bg-blue-600' },\n    { name: 'Grid', value: 'grid', class: 'bg-checkerboard' }\n  ];\n  \n  const [selectedBackground, setSelectedBackground] = useState(backgroundOptions[0]);\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Main Preview */}\n      <div className=\"relative\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Preview\n          </h3>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              onClick={() => setShowGrid(!showGrid)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-xs\"\n            >\n              {showGrid ? <EyeOff className=\"w-3 h-3 mr-1\" /> : <Eye className=\"w-3 h-3 mr-1\" />}\n              Grid\n            </Button>\n            <Button\n              onClick={() => setIsExpanded(!isExpanded)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-xs\"\n            >\n              {isExpanded ? <Minimize2 className=\"w-3 h-3\" /> : <Maximize2 className=\"w-3 h-3\" />}\n            </Button>\n          </div>\n        </div>\n\n        {/* Main Preview Area */}\n        <div \n          className={`\n            relative min-h-48 rounded-lg border-2 border-dashed border-gray-200 dark:border-gray-700 \n            flex items-center justify-center transition-all duration-200\n            ${selectedBackground.class}\n            ${isExpanded ? 'min-h-64' : 'min-h-48'}\n            ${showGrid ? 'bg-checkerboard' : ''}\n          `}\n          style={{\n            backgroundColor: selectedBackground.value === 'grid' ? undefined : selectedBackground.value\n          }}\n        >\n          <div className=\"text-center\">\n            <div className=\"mb-4\">\n              <DynamicIcon \n                name={iconName}\n                size={customization.size}\n                style={{ \n                  color: customization.color,\n                  fill: customization.fillColor && customization.fillColor !== 'none' ? customization.fillColor : 'none'\n                }}\n                strokeWidth={customization.strokeWidth}\n              />\n            </div>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {customization.size}×{customization.size}px\n            </Badge>\n          </div>\n\n          {/* Grid overlay */}\n          {showGrid && (\n            <div \n              className=\"absolute inset-0 pointer-events-none opacity-20\"\n              style={{\n                backgroundImage: `\n                  linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px),\n                  linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px)\n                `,\n                backgroundSize: '20px 20px'\n              }}\n            />\n          )}\n        </div>\n\n        {/* Background Options */}\n        <div className=\"mt-4\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Background\n          </label>\n          <div className=\"flex flex-wrap gap-2\">\n            {backgroundOptions.map((bg) => (\n              <button\n                key={bg.name}\n                onClick={() => setSelectedBackground(bg)}\n                className={`\n                  px-3 py-1.5 rounded-md text-xs font-medium border transition-all\n                  ${selectedBackground.name === bg.name\n                    ? 'border-blue-600 bg-blue-50 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300'\n                    : 'border-gray-200 hover:border-gray-300 text-gray-600 hover:text-gray-700 dark:border-gray-600 dark:text-gray-400'\n                  }\n                `}\n              >\n                {bg.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Size Variations */}\n      <div>\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          Size Variations\n        </h4>\n        <div className=\"grid grid-cols-3 gap-4\">\n          {previewSizes.map((size) => (\n            <div\n              key={size}\n              className=\"flex flex-col items-center p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n            >\n              <DynamicIcon \n                name={iconName}\n                size={size}\n                style={{ \n                  color: customization.color,\n                  fill: customization.fillColor && customization.fillColor !== 'none' ? customization.fillColor : 'none'\n                }}\n                strokeWidth={customization.strokeWidth}\n              />\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {size}px\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Color Variations */}\n      <div>\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">\n          Color Variations\n        </h4>\n        <div className=\"grid grid-cols-4 gap-3\">\n          {[\n            { name: 'Current', color: 'currentColor' },\n            { name: 'Black', color: '#000000' },\n            { name: 'Gray', color: '#6b7280' },\n            { name: 'Blue', color: '#3b82f6' },\n            { name: 'Green', color: '#10b981' },\n            { name: 'Red', color: '#ef4444' },\n            { name: 'Purple', color: '#8b5cf6' },\n            { name: 'Orange', color: '#f97316' }\n          ].map((colorOption) => (\n            <div\n              key={colorOption.name}\n              className=\"flex flex-col items-center p-3 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n            >\n              <DynamicIcon \n                name={iconName}\n                size={24}\n                style={{ \n                  color: colorOption.color,\n                  fill: customization.fillColor && customization.fillColor !== 'none' ? customization.fillColor : 'none'\n                }}\n                strokeWidth={customization.strokeWidth}\n              />\n              <span className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                {colorOption.name}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]}