{"version":3,"file":"ThemeToggle.jsx","sourceRoot":"","sources":["../../src/components/ThemeToggle.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAA;AAEZ,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAC3C,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,cAAc,CAAA;AACxC,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AAEpC,MAAM,UAAU,WAAW;IACzB,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;IAE3C,SAAS,CAAC,GAAG,EAAE;QACb,gEAAgE;QAChE,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QAC5C,MAAM,UAAU,GAAG,MAAM,KAAK,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC,OAAO,CAAC,CAAA;QAC9G,SAAS,CAAC,UAAU,CAAC,CAAA;QACrB,WAAW,CAAC,UAAU,CAAC,CAAA;IACzB,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,MAAM,WAAW,GAAG,CAAC,IAAa,EAAE,EAAE;QACpC,IAAI,IAAI,EAAE,CAAC;YACT,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAC9C,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;QACvC,CAAC;aAAM,CAAC;YACN,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YACjD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;QACxC,CAAC;IACH,CAAC,CAAA;IAED,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAA;QACxB,SAAS,CAAC,QAAQ,CAAC,CAAA;QACnB,WAAW,CAAC,QAAQ,CAAC,CAAA;IACvB,CAAC,CAAA;IAED,OAAO,CACL,CAAC,MAAM,CACL,OAAO,CAAC,OAAO,CACf,IAAI,CAAC,IAAI,CACT,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CACpE,SAAS,CAAC,aAAa,CAEvB;MAAA,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAG,CACtE;IAAA,EAAE,MAAM,CAAC,CACV,CAAA;AACH,CAAC","sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Moon, Sun } from 'lucide-react'\nimport { Button } from './ui/Button'\n\nexport function ThemeToggle() {\n  const [isDark, setIsDark] = useState(false)\n\n  useEffect(() => {\n    // Check if theme is stored in localStorage or system preference\n    const stored = localStorage.getItem('theme')\n    const isDarkMode = stored === 'dark' || (!stored && window.matchMedia('(prefers-color-scheme: dark)').matches)\n    setIsDark(isDarkMode)\n    updateTheme(isDarkMode)\n  }, [])\n\n  const updateTheme = (dark: boolean) => {\n    if (dark) {\n      document.documentElement.classList.add('dark')\n      localStorage.setItem('theme', 'dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n      localStorage.setItem('theme', 'light')\n    }\n  }\n\n  const toggleTheme = () => {\n    const newTheme = !isDark\n    setIsDark(newTheme)\n    updateTheme(newTheme)\n  }\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"sm\"\n      onClick={toggleTheme}\n      aria-label={isDark ? 'Switch to light mode' : 'Switch to dark mode'}\n      className=\"w-9 h-9 p-0\"\n    >\n      {isDark ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n    </Button>\n  )\n}\n"]}